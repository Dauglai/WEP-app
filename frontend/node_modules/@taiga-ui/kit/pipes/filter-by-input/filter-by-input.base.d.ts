import { TuiFocusableElementAccessor, TuiStringHandler, TuiStringMatcher } from '@taiga-ui/cdk';
export declare type ArrayElement<A> = A extends ReadonlyArray<infer T> ? A extends ReadonlyArray<ReadonlyArray<infer G>> ? G : T : never;
export declare abstract class AbstractTuiFilterByInput {
    protected abstract readonly accessor: TuiFocusableElementAccessor;
    protected get query(): string;
    protected filter<T>(items: ReadonlyArray<readonly T[]> | readonly T[] | null, matcher: TuiStringMatcher<T>, stringify: TuiStringHandler<T>, query: string): ReadonlyArray<readonly T[]> | readonly T[] | null;
    private filterFlat;
    private filter2d;
    private getMatch;
}
