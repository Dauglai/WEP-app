import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiBooleanHandler, TuiFocusableElementAccessor, TuiYear } from '@taiga-ui/cdk';
import { TuiWithOptionalMinMax } from '@taiga-ui/core';
import { TuiInputDateOptions } from '@taiga-ui/kit/tokens';
import * as i0 from "@angular/core";
export declare class TuiInputYearComponent extends AbstractTuiNullableControl<number> implements TuiWithOptionalMinMax<number>, TuiFocusableElementAccessor {
    private readonly options;
    private readonly textfield?;
    min: number;
    max: number;
    disabledItemHandler: TuiBooleanHandler<number>;
    open: boolean;
    readonly initialItem: number;
    readonly textMaskOptions: {
        mask: any[];
        guide: boolean;
    };
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, options: TuiInputDateOptions);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get calendarIcon(): TuiInputDateOptions['icon'];
    onValueChange(value: string): void;
    onYearClick({ year }: TuiYear): void;
    onFocused(focused: boolean): void;
    onOpenChange(open: boolean): void;
    toggle(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputYearComponent, [{ optional: true; self: true; }, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputYearComponent, "tui-input-year", never, { "min": "min"; "max": "max"; "disabledItemHandler": "disabledItemHandler"; }, {}, never, ["*", "input"]>;
}
