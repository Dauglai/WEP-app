import { ChangeDetectorRef, EventEmitter, TemplateRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiActiveZoneDirective, TuiContextWithImplicit, TuiFocusableElementAccessor, TuiInputMode } from '@taiga-ui/cdk';
import { TuiDataListHost, TuiTextfieldCleanerDirective, TuiTextMaskOptions } from '@taiga-ui/core';
import { Observable } from 'rxjs';
import { TuiInputPhoneOptions } from './input-phone.options';
import * as i0 from "@angular/core";
export declare class TuiInputPhoneComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor, TuiDataListHost<string> {
    private readonly textfieldCleaner;
    private readonly options;
    private readonly dropdown?;
    private readonly textfield?;
    set countryCodeSetter(countryCode: string);
    phoneMaskAfterCountryCode: string;
    allowText: boolean;
    search: string;
    readonly searchChange: EventEmitter<string>;
    readonly datalist?: TemplateRef<TuiContextWithImplicit<TuiActiveZoneDirective>>;
    readonly textMaskOptions: TuiTextMaskOptions;
    countryCode: string;
    open: boolean;
    constructor(control: NgControl | null, destroy$: Observable<unknown>, cdr: ChangeDetectorRef, selection$: Observable<unknown>, textfieldCleaner: TuiTextfieldCleanerDirective, options: TuiInputPhoneOptions);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get computedValue(): string;
    get inputMode(): TuiInputMode;
    get canOpen(): boolean;
    get canClean(): boolean;
    onDrop(event: DragEvent): void;
    onPaste(event: Event): void;
    onActiveZone(active: boolean): void;
    onBackspace(event: Event): void;
    onValueChange(value: string): void;
    handleOption(item: string): void;
    setDisabledState(): void;
    writeValue(value: string | null): void;
    protected getFallbackValue(): string;
    private get caretIsInForbiddenArea();
    private get nonRemovableLength();
    private get maxPhoneLength();
    private get isTextValue();
    private setCaretPosition;
    private setValueWithoutPrefix;
    private cleanValue;
    private focusInput;
    private updateSearch;
    private updateValueWithNewCountryCode;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputPhoneComponent, [{ optional: true; self: true; }, { self: true; }, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputPhoneComponent, "tui-input-phone", never, { "countryCodeSetter": "countryCode"; "phoneMaskAfterCountryCode": "phoneMaskAfterCountryCode"; "allowText": "allowText"; "search": "search"; }, { "searchChange": "searchChange"; }, ["datalist"], ["*", "input"]>;
}
