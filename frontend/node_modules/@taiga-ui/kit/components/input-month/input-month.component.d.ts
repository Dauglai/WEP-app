import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiBooleanHandler, TuiFocusableElementAccessor, TuiHandler, TuiMonth, TuiYear } from '@taiga-ui/cdk';
import { TuiWithOptionalMinMax } from '@taiga-ui/core';
import { TuiInputDateOptions } from '@taiga-ui/kit/tokens';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiInputMonthComponent extends AbstractTuiNullableControl<TuiMonth> implements TuiWithOptionalMinMax<TuiMonth>, TuiFocusableElementAccessor {
    readonly formatter: TuiHandler<TuiMonth | null, Observable<string>>;
    private readonly options;
    private readonly textfield?;
    min: TuiMonth;
    max: TuiMonth;
    disabledItemHandler: TuiBooleanHandler<TuiMonth>;
    defaultActiveYear: TuiYear;
    activeYear?: TuiYear;
    open: boolean;
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, formatter: TuiHandler<TuiMonth | null, Observable<string>>, options: TuiInputDateOptions);
    get nativeFocusableElement(): HTMLInputElement | null;
    get computedDefaultActiveYear(): TuiYear;
    get focused(): boolean;
    get calendarIcon(): TuiInputDateOptions['icon'];
    onValueChange(value: string): void;
    onMonthClick(month: TuiMonth): void;
    onFocused(focused: boolean): void;
    onOpenChange(open: boolean): void;
    setDisabledState(): void;
    private close;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputMonthComponent, [{ optional: true; self: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputMonthComponent, "tui-input-month", never, { "min": "min"; "max": "max"; "disabledItemHandler": "disabledItemHandler"; "defaultActiveYear": "defaultActiveYear"; }, {}, never, ["*", "input"]>;
}
