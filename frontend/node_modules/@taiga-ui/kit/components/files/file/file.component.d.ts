import { EventEmitter } from '@angular/core';
import { DomSanitizer, SafeValue } from '@angular/platform-browser';
import { TuiInjectionTokenType } from '@taiga-ui/cdk';
import { TuiSizeL } from '@taiga-ui/core';
import { TuiFileLike } from '@taiga-ui/kit/interfaces';
import { TUI_DIGITAL_INFORMATION_UNITS, TUI_FILE_TEXTS } from '@taiga-ui/kit/tokens';
import { TuiFileState } from '@taiga-ui/kit/types';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import { TUI_FILE_OPTIONS } from './file-options';
import * as i0 from "@angular/core";
export declare class TuiFileComponent {
    private readonly sanitizer;
    readonly fileTexts$: TuiInjectionTokenType<typeof TUI_FILE_TEXTS>;
    private readonly options;
    private readonly units$;
    file: TuiFileLike;
    state: TuiFileState;
    size: TuiSizeL;
    showDelete: boolean;
    showSize: boolean;
    leftContent: PolymorpheusContent;
    readonly removed: EventEmitter<void>;
    focused: boolean;
    constructor(sanitizer: DomSanitizer, fileTexts$: TuiInjectionTokenType<typeof TUI_FILE_TEXTS>, options: TuiInjectionTokenType<typeof TUI_FILE_OPTIONS>, units$: TuiInjectionTokenType<typeof TUI_DIGITAL_INFORMATION_UNITS>);
    get preview(): SafeValue;
    get isBig(): boolean;
    get isLoading(): boolean;
    get isError(): boolean;
    get isDeleted(): boolean;
    get allowDelete(): boolean;
    get icon(): string;
    get src(): string;
    get name(): string;
    get type(): string;
    get content$(): Observable<PolymorpheusContent>;
    get fileSize$(): Observable<string | null>;
    onRemoveClick(): void;
    onFocusVisible(focusVisible: boolean): void;
    private calculateContent$;
    private calculateFileSize$;
    private createPreview;
    private getName;
    private getType;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiFileComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiFileComponent, "tui-file", never, { "file": "file"; "state": "state"; "size": "size"; "showDelete": "showDelete"; "showSize": "showSize"; "leftContent": "leftContent"; }, { "removed": "removed"; }, never, ["*"]>;
}
