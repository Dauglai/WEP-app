import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiContextWithImplicit, TuiFocusableElementAccessor, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiAppearance, TuiBrightness, TuiModeDirective, TuiSizeL, TuiSizeXS } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { TuiToggleOptions } from './toggle-options';
import * as i0 from "@angular/core";
export declare class TuiToggleComponent extends AbstractTuiControl<boolean> implements TuiFocusableElementAccessor {
    private readonly modeDirective;
    readonly options: TuiToggleOptions;
    private readonly focusableElement?;
    singleColor: boolean;
    showIcons: boolean;
    showLoader: boolean;
    size: TuiSizeL;
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, modeDirective: TuiModeDirective | null, options: TuiToggleOptions);
    get iconOn(): PolymorpheusContent<TuiContextWithImplicit<TuiSizeL>>;
    get iconOff(): PolymorpheusContent<TuiContextWithImplicit<TuiSizeL>>;
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    get appearance(): TuiAppearance;
    get sizeM(): boolean;
    get loaderSize(): TuiSizeXS;
    get hostMode(): TuiBrightness | null;
    /** @deprecated use 'value' setter */
    onChecked(checked: boolean): void;
    onFocused(focused: boolean): void;
    onFocusVisible(focusVisible: boolean): void;
    protected getFallbackValue(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiToggleComponent, [{ optional: true; self: true; }, null, { optional: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiToggleComponent, "tui-toggle", never, { "singleColor": "singleColor"; "showIcons": "showIcons"; "showLoader": "showLoader"; "size": "size"; }, {}, never, never>;
}
