import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiContextWithImplicit, TuiFocusableElementAccessor } from '@taiga-ui/cdk';
import { TuiBrightness, TuiHintOptionsDirective, TuiSizeL, TuiSizeS, TuiTextfieldController } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare const DEFAULT_ROWS = 20;
export declare const LINE_HEIGHT_M = 20;
export declare const LINE_HEIGHT_L = 24;
export declare class TuiTextAreaComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor {
    readonly isIOS: boolean;
    readonly mode$: Observable<TuiBrightness | null>;
    readonly controller: TuiTextfieldController;
    readonly hintOptions: TuiHintOptionsDirective | null;
    private readonly focusableElement?;
    private readonly textfield?;
    rows: number;
    maxLength: number | null;
    expandable: boolean;
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, isIOS: boolean, mode$: Observable<TuiBrightness | null>, controller: TuiTextfieldController, hintOptions: TuiHintOptionsDirective | null);
    get labelOutside(): boolean;
    get nativeFocusableElement(): HTMLTextAreaElement | null;
    get focused(): boolean;
    get appearance(): string;
    get size(): TuiSizeL | TuiSizeS;
    get border(): number;
    get hasCleaner(): boolean;
    get hasTooltip(): boolean;
    get hasValue(): boolean;
    get hasCounter(): boolean;
    get hasPlaceholder(): boolean;
    get iconCleaner(): PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>>;
    get hasExampleText(): boolean;
    get computeMaxHeight(): number | null;
    get placeholderRaised(): boolean;
    get fittedContent(): string;
    get extraContent(): string;
    onFocused(focused: boolean): void;
    onValueChange(value: string): void;
    onMouseDown(event: MouseEvent): void;
    protected getFallbackValue(): string;
    private get lineHeight();
    private get placeholderRaisable();
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiTextAreaComponent, [{ optional: true; self: true; }, null, null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiTextAreaComponent, "tui-text-area", never, { "rows": "rows"; "maxLength": "maxLength"; "expandable": "expandable"; }, {}, ["textfield"], ["*", "textarea"]>;
}
