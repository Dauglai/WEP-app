import { DoCheck, ElementRef } from '@angular/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import type { TuiTreeController, TuiTreeItemContext } from '../../misc/tree.interfaces';
import * as i0 from "@angular/core";
export declare class TuiTreeItemComponent implements DoCheck {
    private readonly el;
    private readonly controller;
    readonly level: number;
    readonly content: PolymorpheusContent<TuiTreeItemContext>;
    private readonly nested;
    private readonly change$;
    readonly expanded$: import("rxjs").Observable<boolean>;
    readonly attached$: import("rxjs").Observable<boolean>;
    constructor(el: ElementRef<HTMLElement>, controller: TuiTreeController, level: number, content: PolymorpheusContent<TuiTreeItemContext>);
    get isExpandable(): boolean;
    get isExpanded(): boolean;
    ngDoCheck(): void;
    checkChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiTreeItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiTreeItemComponent, "tui-tree-item", never, {}, {}, ["nested"], ["*", "tui-tree-item", "tui-tree"]>;
}
