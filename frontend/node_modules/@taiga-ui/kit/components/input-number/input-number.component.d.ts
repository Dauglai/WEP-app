import { ChangeDetectorRef, QueryList } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiFocusableElementAccessor, TuiInputMode, TuiMapper } from '@taiga-ui/cdk';
import { TuiDecimal, TuiNumberFormatSettings, TuiTextMaskOptions } from '@taiga-ui/core';
import * as i0 from "@angular/core";
export declare class TuiInputNumberComponent extends AbstractTuiNullableControl<number> implements TuiFocusableElementAccessor {
    private readonly numberFormat;
    private readonly isIOS;
    private readonly primitiveTextfield?;
    private unfinishedValue;
    min: number;
    max: number;
    decimal: TuiDecimal;
    precision: number;
    /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */
    prefix: string;
    /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */
    postfix: string;
    readonly polymorpheusValueContent: QueryList<unknown>;
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, numberFormat: TuiNumberFormatSettings, isIOS: boolean);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get isNegativeAllowed(): boolean;
    get inputMode(): TuiInputMode;
    get calculatedMaxLength(): number;
    get formattedValue(): string;
    get computedValue(): string;
    onZero(event: KeyboardEvent): void;
    mask: TuiMapper<boolean, TuiTextMaskOptions>;
    onValueChange(value: string): void;
    onKeyDown(event: KeyboardEvent): void;
    onFocused(focused: boolean): void;
    getFormattedValue(value: number): string;
    private get isNativeValueNotFinished();
    get nativeValue(): string;
    set nativeValue(value: string);
    private get nativeNumberValue();
    private clear;
    private absoluteCapInputValue;
    private setCaretAfterComma;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputNumberComponent, [{ optional: true; self: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputNumberComponent, "tui-input-number", never, { "min": "min"; "max": "max"; "decimal": "decimal"; "precision": "precision"; "prefix": "prefix"; "postfix": "postfix"; }, {}, ["polymorpheusValueContent"], ["*", "input", "tuiContent"]>;
}
