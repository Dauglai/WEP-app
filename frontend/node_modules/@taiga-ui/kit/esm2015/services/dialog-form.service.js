import { Inject, Injectable } from '@angular/core';
import { TuiDialogService } from '@taiga-ui/core';
import { TUI_PROMPT } from '@taiga-ui/kit/components';
import { defer, of } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
export class TuiDialogFormService {
    constructor(dialogs) {
        this.dialogs = dialogs;
        this.dirty = false;
    }
    markAsDirty() {
        this.dirty = true;
    }
    markAsPristine() {
        this.dirty = false;
    }
    withPrompt(options) {
        return defer(() => this.dirty
            ? this.dialogs.open(TUI_PROMPT, Object.assign({ size: `s` }, options))
            : of(true));
    }
}
TuiDialogFormService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDialogFormService, deps: [{ token: TuiDialogService }], target: i0.ɵɵFactoryTarget.Injectable });
TuiDialogFormService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDialogFormService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDialogFormService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.TuiDialogService, decorators: [{
                    type: Inject,
                    args: [TuiDialogService]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLWZvcm0uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9zZXJ2aWNlcy9kaWFsb2ctZm9ybS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUUsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBbUIsZ0JBQWdCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUMsVUFBVSxFQUFnQixNQUFNLDBCQUEwQixDQUFDO0FBQ25FLE9BQU8sRUFBQyxLQUFLLEVBQWMsRUFBRSxFQUFDLE1BQU0sTUFBTSxDQUFDOzs7QUFHM0MsTUFBTSxPQUFPLG9CQUFvQjtJQUc3QixZQUF1RCxPQUF5QjtRQUF6QixZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUZ4RSxVQUFLLEdBQUcsS0FBSyxDQUFDO0lBRTZELENBQUM7SUFFcEYsV0FBVztRQUNQLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLENBQUM7SUFFRCxjQUFjO1FBQ1YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztJQUVELFVBQVUsQ0FBQyxPQUFpRDtRQUN4RCxPQUFPLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FDZCxJQUFJLENBQUMsS0FBSztZQUNOLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBVSxVQUFVLGtCQUNqQyxJQUFJLEVBQUUsR0FBRyxJQUNOLE9BQU8sRUFDWjtZQUNKLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQ2pCLENBQUM7SUFDTixDQUFDOztrSEF0QlEsb0JBQW9CLGtCQUdULGdCQUFnQjtzSEFIM0Isb0JBQW9COzRGQUFwQixvQkFBb0I7a0JBRGhDLFVBQVU7OzBCQUlNLE1BQU07MkJBQUMsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3QsIEluamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlEaWFsb2dPcHRpb25zLCBUdWlEaWFsb2dTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1RVSV9QUk9NUFQsIFR1aVByb21wdERhdGF9IGZyb20gJ0B0YWlnYS11aS9raXQvY29tcG9uZW50cyc7XG5pbXBvcnQge2RlZmVyLCBPYnNlcnZhYmxlLCBvZn0gZnJvbSAncnhqcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUdWlEaWFsb2dGb3JtU2VydmljZSB7XG4gICAgcHJpdmF0ZSBkaXJ0eSA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChUdWlEaWFsb2dTZXJ2aWNlKSBwcml2YXRlIHJlYWRvbmx5IGRpYWxvZ3M6IFR1aURpYWxvZ1NlcnZpY2UpIHt9XG5cbiAgICBtYXJrQXNEaXJ0eSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5kaXJ0eSA9IHRydWU7XG4gICAgfVxuXG4gICAgbWFya0FzUHJpc3RpbmUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZGlydHkgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB3aXRoUHJvbXB0KG9wdGlvbnM6IFBhcnRpYWw8VHVpRGlhbG9nT3B0aW9uczxUdWlQcm9tcHREYXRhPj4pOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICAgICAgcmV0dXJuIGRlZmVyKCgpID0+XG4gICAgICAgICAgICB0aGlzLmRpcnR5XG4gICAgICAgICAgICAgICAgPyB0aGlzLmRpYWxvZ3Mub3Blbjxib29sZWFuPihUVUlfUFJPTVBULCB7XG4gICAgICAgICAgICAgICAgICAgICAgc2l6ZTogYHNgLFxuICAgICAgICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIDogb2YodHJ1ZSksXG4gICAgICAgICk7XG4gICAgfVxufVxuIl19