import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Input, Output, ViewChild, } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { MODE_PROVIDER, TEXTFIELD_CONTROLLER_PROVIDER, TUI_MODE, TUI_TEXTFIELD_WATCHED_CONTROLLER, tuiSizeBigger, } from '@taiga-ui/core';
import { tuiStringHashToHsl } from '@taiga-ui/kit/utils/format';
import { TUI_TAG_OPTIONS } from './tag-options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
import * as i3 from "@tinkoff/ng-polymorpheus";
import * as i4 from "@taiga-ui/cdk";
import * as i5 from "@angular/forms";
import * as i6 from "rxjs";
export class TuiTagComponent {
    constructor(el, mode$, options, controller) {
        this.el = el;
        this.mode$ = mode$;
        this.options = options;
        this.controller = controller;
        // TODO: Possibly implement standard focus mechanisms and outline
        this.value = '';
        this.editable = false;
        this.separator = ',';
        this.maxLength = null;
        this.size = this.options.size;
        this.showLoader = false;
        this.status = this.options.status;
        this.hoverable = false;
        this.removable = false;
        this.disabled = false;
        this.autoColor = this.options.autoColor;
        this.edited = new EventEmitter();
        this.editing = false;
        this.editedText = null;
    }
    set input(input) {
        if (input) {
            input.nativeElement.focus();
        }
    }
    get backgroundColor() {
        return this.autoColor ? tuiStringHashToHsl(this.value) : null;
    }
    get canRemove() {
        return this.removable && !this.disabled && !this.showLoader;
    }
    get displayText() {
        return this.editedText === null ? this.value : this.editedText;
    }
    get loaderSize() {
        return tuiSizeBigger(this.size) ? 's' : 'xs';
    }
    get iconCleaner() {
        return this.controller.options.iconCleaner;
    }
    edit(event) {
        if (!this.canEdit) {
            return;
        }
        event.preventDefault();
        this.editing = true;
        this.editedText = this.value;
    }
    remove(event) {
        if (!this.canRemove) {
            return;
        }
        event.preventDefault();
        event.stopPropagation();
        this.edited.emit('');
    }
    onInput(value) {
        const newTags = value.split(this.separator);
        if (newTags.length > 1) {
            this.save(String(newTags));
            return;
        }
        this.editedText = value;
    }
    onKeyDown(event) {
        event.stopPropagation();
        switch (event.key.toLowerCase()) {
            case 'enter':
                event.preventDefault();
                this.save(this.editedText || '');
                break;
            case 'escape':
            case 'esc':
                event.preventDefault();
                this.stopEditing();
                this.el.nativeElement.focus();
                break;
            default:
                break;
        }
    }
    onBlur() {
        if (this.editedText !== null) {
            this.save(this.editedText);
        }
    }
    get canEdit() {
        return this.editable && !this.disabled && !this.showLoader;
    }
    stopEditing() {
        this.editing = false;
        this.editedText = null;
    }
    save(value) {
        this.stopEditing();
        this.edited.emit(value.trim());
    }
}
TuiTagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTagComponent, deps: [{ token: ElementRef }, { token: TUI_MODE }, { token: TUI_TAG_OPTIONS }, { token: TUI_TEXTFIELD_WATCHED_CONTROLLER }], target: i0.ɵɵFactoryTarget.Component });
TuiTagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTagComponent, selector: "tui-tag, a[tuiTag], button[tuiTag]", inputs: { value: "value", editable: "editable", separator: "separator", maxLength: "maxLength", size: "size", showLoader: "showLoader", status: "status", hoverable: "hoverable", removable: "removable", disabled: "disabled", autoColor: "autoColor", leftContent: "leftContent" }, outputs: { edited: "edited" }, host: { listeners: { "$.data-mode.attr": "mode$", "keydown.enter": "edit($event)", "keydown.delete": "remove($event)", "keydown.backspace": "remove($event)" }, properties: { "attr.data-size": "this.size", "attr.data-status": "this.status", "class._hoverable": "this.hoverable", "class._disabled": "this.disabled", "class._autocolor": "this.autoColor", "class._editing": "this.editing" } }, providers: [TEXTFIELD_CONTROLLER_PROVIDER, MODE_PROVIDER], viewQueries: [{ propertyName: "input", first: true, predicate: ["input"], descendants: true, read: ElementRef }], ngImport: i0, template: "<div\n    class=\"t-tag\"\n    [style.backgroundColor]=\"backgroundColor\"\n    (dblclick)=\"edit($event)\"\n>\n    <div\n        *ngIf=\"leftContent\"\n        class=\"t-content\"\n    >\n        <ng-container *polymorpheusOutlet=\"leftContent as text\">\n            {{ text }}\n        </ng-container>\n    </div>\n    <span\n        automation-id=\"tui-tag__text\"\n        class=\"t-text\"\n        [textContent]=\"displayText\"\n    ></span>\n    <tui-loader\n        *ngIf=\"showLoader\"\n        class=\"t-content\"\n        [inheritColor]=\"true\"\n        [size]=\"loaderSize\"\n    ></tui-loader>\n    <ng-container *ngIf=\"canRemove\">\n        <tui-svg\n            *polymorpheusOutlet=\"iconCleaner as src; context: {$implicit: size}\"\n            tuiPreventDefault=\"mousedown\"\n            automation-id=\"tui-tag__remove\"\n            class=\"t-icon\"\n            [src]=\"src\"\n            (click)=\"remove($event)\"\n        ></tui-svg>\n    </ng-container>\n</div>\n<input\n    *ngIf=\"editing\"\n    #input\n    automation-id=\"tui-tag__edit\"\n    type=\"text\"\n    class=\"t-edit\"\n    [attr.maxLength]=\"maxLength\"\n    [ngModel]=\"editedText\"\n    (ngModelChange)=\"onInput($event)\"\n    (blur)=\"onBlur()\"\n    (keydown)=\"onKeyDown($event)\"\n/>\n", styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-block;font:var(--tui-font-text-s);line-height:1.25rem;border-radius:var(--tui-radius-s);max-width:100%;cursor:default;outline:none;text-decoration:none}:host:after{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:0;left:0;width:100%;height:100%;content:\"\";box-sizing:border-box;border-radius:inherit;pointer-events:none}:host._hoverable:hover[data-status=custom]:after,:host._hoverable:active[data-status=custom]:after{background-color:var(--tui-clear)}:host:focus:after{border:2px solid var(--tui-focus)}:host[data-size=s]{font:var(--tui-font-text-xs);line-height:1.25rem;border-radius:var(--tui-radius-xs)}:host[data-status=primary]{background-color:var(--tui-primary);color:var(--tui-primary-text)}:host[data-status=primary]._hoverable:hover{background-color:var(--tui-primary-hover)}:host[data-status=primary]._hoverable:active{background-color:var(--tui-primary-active)}:host[data-status=error]{background-color:var(--tui-error-bg);color:var(--tui-text-01)}:host[data-status=error]._hoverable:hover,:host[data-status=error]._hoverable:active{background-color:var(--tui-error-bg-hover)}:host[data-status=error][data-mode=onDark]{background-color:var(--tui-error-bg-night);color:var(--tui-text-01-night)}:host[data-status=error][data-mode=onDark]._hoverable:hover,:host[data-status=error][data-mode=onDark]._hoverable:active{background-color:var(--tui-error-bg-night-hover)}:host[data-status=success]{background-color:var(--tui-success-bg);color:var(--tui-text-01)}:host[data-status=success]._hoverable:hover,:host[data-status=success]._hoverable:active{background-color:var(--tui-success-bg-hover)}:host[data-status=success][data-mode=onDark]{background-color:var(--tui-success-bg-night);color:var(--tui-text-01-night)}:host[data-status=success][data-mode=onDark]._hoverable:hover,:host[data-status=success][data-mode=onDark]._hoverable:active{background-color:var(--tui-success-bg-night-hover)}:host[data-status=warning]{background-color:var(--tui-warning-bg);color:var(--tui-text-01)}:host[data-status=warning]._hoverable:hover,:host[data-status=warning]._hoverable:active{background-color:var(--tui-warning-bg-hover)}:host[data-status=warning][data-mode=onDark]{background-color:var(--tui-warning-bg-night);color:var(--tui-text-01-night)}:host[data-status=warning][data-mode=onDark]._hoverable:hover,:host[data-status=warning][data-mode=onDark]._hoverable:active{background-color:var(--tui-warning-bg-night-hover)}:host[data-status=default]{color:var(--tui-text-01-night);background-color:var(--tui-base-06)}:host[data-status=default]:not([data-mode])._hoverable:hover{background-color:var(--tui-base-07)}:host[data-status=default]:not([data-mode])._hoverable:active{background-color:var(--tui-base-08)}:host[data-status=default][data-mode=onDark]{color:var(--tui-text-01-night);background-color:var(--tui-clear-inverse)}:host[data-status=default][data-mode=onDark]._hoverable:hover{background-color:var(--tui-clear-inverse-hover)}:host[data-status=default][data-mode=onDark]._hoverable:active{background-color:var(--tui-clear-inverse-active)}:host[data-status=default][data-mode=onDark]:focus:after{border:2px solid var(--tui-base-01)}:host[data-status=default][data-mode=onLight]{background-color:var(--tui-clear);color:var(--tui-text-01)}:host[data-status=default][data-mode=onLight]._hoverable:hover{background-color:var(--tui-clear-hover)}:host[data-status=default][data-mode=onLight]._hoverable:active{background-color:var(--tui-clear-active)}:host._editing{background:transparent!important}:host._disabled{pointer-events:none;opacity:var(--tui-disabled-opacity)}:host._hoverable{cursor:pointer}:host._autocolor{color:var(--tui-text-01)}.t-text{white-space:pre;overflow:hidden;text-overflow:ellipsis;padding-right:.02em}.t-tag{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:relative;display:flex;width:auto;align-items:center;grid-gap:.25rem;gap:.25rem;font:inherit;border-radius:inherit}:host[data-size=s] .t-tag{height:1.25rem;padding:0 .375rem}:host[data-size=m] .t-tag{height:var(--tui-height-xs);padding:0 .5rem}:host[data-size=l] .t-tag{height:var(--tui-height-s);padding:0 .75rem}:host._editing .t-tag{visibility:hidden}.t-edit{margin:0;border:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;font:inherit;color:var(--tui-text-01);width:100%;height:100%;box-sizing:border-box;padding:0 .5rem}.t-edit:-webkit-autofill,.t-edit:-webkit-autofill:hover,.t-edit:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}:host[data-size=s] .t-edit{padding:0 .375rem}:host[data-size=m] .t-edit{padding:0 .5rem}:host[data-size=l] .t-edit{padding:0 .75rem}.t-icon{width:1rem;height:100%;cursor:pointer;pointer-events:all;opacity:var(--tui-disabled-opacity)}.t-icon:hover{opacity:1}.t-content{width:1rem;height:1rem}\n"], components: [{ type: i1.TuiLoaderComponent, selector: "tui-loader", inputs: ["size", "inheritColor", "overlay", "textContent", "showLoader"] }, { type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i4.TuiPreventDefaultDirective, selector: "[tuiPreventDefault]", inputs: ["tuiPreventDefault"] }, { type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "value", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "editable", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "separator", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "maxLength", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "showLoader", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "status", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "hoverable", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "removable", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "disabled", void 0);
__decorate([
    tuiDefaultProp()
], TuiTagComponent.prototype, "autoColor", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTagComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-tag, a[tuiTag], button[tuiTag]',
                    templateUrl: './tag.template.html',
                    styleUrls: ['./tag.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [TEXTFIELD_CONTROLLER_PROVIDER, MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i6.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_TAG_OPTIONS]
                }] }, { type: i1.TuiTextfieldController, decorators: [{
                    type: Inject,
                    args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]
                }] }]; }, propDecorators: { value: [{
                type: Input
            }], editable: [{
                type: Input
            }], separator: [{
                type: Input
            }], maxLength: [{
                type: Input
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], showLoader: [{
                type: Input
            }], status: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-status']
            }], hoverable: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._hoverable']
            }], removable: [{
                type: Input
            }], disabled: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._disabled']
            }], autoColor: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._autocolor']
            }], leftContent: [{
                type: Input
            }], edited: [{
                type: Output
            }], editing: [{
                type: HostBinding,
                args: ['class._editing']
            }], input: [{
                type: ViewChild,
                args: ['input', { read: ElementRef }]
            }], edit: [{
                type: HostListener,
                args: ['keydown.enter', ['$event']]
            }], remove: [{
                type: HostListener,
                args: ['keydown.delete', ['$event']]
            }, {
                type: HostListener,
                args: ['keydown.backspace', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,