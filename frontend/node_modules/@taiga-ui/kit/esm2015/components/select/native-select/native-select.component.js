import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';
import { tuiAsDataList } from '@taiga-ui/core';
import { AbstractTuiNativeSelect } from '@taiga-ui/kit/abstract';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/components/data-list-wrapper";
import * as i2 from "@taiga-ui/core";
import * as i3 from "@angular/common";
export class TuiNativeSelectComponent extends AbstractTuiNativeSelect {
    constructor() {
        super(...arguments);
        this.items = [];
    }
}
TuiNativeSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNativeSelectComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TuiNativeSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNativeSelectComponent, selector: "select[tuiSelect]:not([labels]):not([multiple])", inputs: { items: "items" }, host: { listeners: { "change": "host.onValueChange($event.target.value)" }, properties: { "attr.aria-invalid": "host.invalid", "disabled": "host.disabled || control.readOnly", "tabIndex": "host.focusable ? 0 : -1", "value": "host.value" } }, providers: [
        tuiAsDataList(TuiNativeSelectComponent),
        {
            provide: TemplateRef,
            deps: [TuiNativeSelectComponent],
            useFactory: ({ datalist }) => datalist,
        },
        {
            provide: AbstractTuiNativeSelect,
            useExisting: TuiNativeSelectComponent,
        },
    ], usesInheritance: true, ngImport: i0, template: "<tui-data-list-wrapper\n    *tuiDataList\n    [items]=\"items\"\n    [disabledItemHandler]=\"disabledItemHandler || itemsHandlers.disabledItemHandler\"\n></tui-data-list-wrapper>\n<option\n    *ngFor=\"let option of items\"\n    [value]=\"option\"\n    [disabled]=\"disabledItemHandler ? disabledItemHandler(option) : itemsHandlers.disabledItemHandler(option)\"\n>\n    {{ option }}\n</option>\n", styles: [":host{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0}\n"], components: [{ type: i1.TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels])", inputs: ["items"] }], directives: [{ type: i2.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNativeSelectComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'select[tuiSelect]:not([labels]):not([multiple])',
                    templateUrl: './native-select.template.html',
                    providers: [
                        tuiAsDataList(TuiNativeSelectComponent),
                        {
                            provide: TemplateRef,
                            deps: [TuiNativeSelectComponent],
                            useFactory: ({ datalist }) => datalist,
                        },
                        {
                            provide: AbstractTuiNativeSelect,
                            useExisting: TuiNativeSelectComponent,
                        },
                    ],
                    host: {
                        '[attr.aria-invalid]': 'host.invalid',
                        '[disabled]': 'host.disabled || control.readOnly',
                        '[tabIndex]': 'host.focusable ? 0 : -1',
                        '[value]': 'host.value',
                        '(change)': 'host.onValueChange($event.target.value)',
                    },
                    styleUrls: ['./native-select.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { items: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLXNlbGVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9zZWxlY3QvbmF0aXZlLXNlbGVjdC9uYXRpdmUtc2VsZWN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL3NlbGVjdC9uYXRpdmUtc2VsZWN0L25hdGl2ZS1zZWxlY3QudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDOzs7OztBQTJCL0QsTUFBTSxPQUFPLHdCQUF5QixTQUFRLHVCQUF1QjtJQXpCckU7O1FBMkJJLFVBQUssR0FBNkIsRUFBRSxDQUFDO0tBQ3hDOztzSEFIWSx3QkFBd0I7MEdBQXhCLHdCQUF3Qix3VkF0QnRCO1FBQ1AsYUFBYSxDQUFDLHdCQUF3QixDQUFDO1FBQ3ZDO1lBQ0ksT0FBTyxFQUFFLFdBQVc7WUFDcEIsSUFBSSxFQUFFLENBQUMsd0JBQXdCLENBQUM7WUFDaEMsVUFBVSxFQUFFLENBQUMsRUFBQyxRQUFRLEVBQTJCLEVBQUUsRUFBRSxDQUFDLFFBQVE7U0FDakU7UUFDRDtZQUNJLE9BQU8sRUFBRSx1QkFBdUI7WUFDaEMsV0FBVyxFQUFFLHdCQUF3QjtTQUN4QztLQUNKLGlEQ2xCTCw2WUFZQTs0RkRpQmEsd0JBQXdCO2tCQXpCcEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsaURBQWlEO29CQUMzRCxXQUFXLEVBQUUsK0JBQStCO29CQUM1QyxTQUFTLEVBQUU7d0JBQ1AsYUFBYSwwQkFBMEI7d0JBQ3ZDOzRCQUNJLE9BQU8sRUFBRSxXQUFXOzRCQUNwQixJQUFJLEVBQUUsMEJBQTBCOzRCQUNoQyxVQUFVLEVBQUUsQ0FBQyxFQUFDLFFBQVEsRUFBMkIsRUFBRSxFQUFFLENBQUMsUUFBUTt5QkFDakU7d0JBQ0Q7NEJBQ0ksT0FBTyxFQUFFLHVCQUF1Qjs0QkFDaEMsV0FBVywwQkFBMEI7eUJBQ3hDO3FCQUNKO29CQUNELElBQUksRUFBRTt3QkFDRixxQkFBcUIsRUFBRSxjQUFjO3dCQUNyQyxZQUFZLEVBQUUsbUNBQW1DO3dCQUNqRCxZQUFZLEVBQUUseUJBQXlCO3dCQUN2QyxTQUFTLEVBQUUsWUFBWTt3QkFDdkIsVUFBVSxFQUFFLHlDQUF5QztxQkFDeEQ7b0JBQ0QsU0FBUyxFQUFFLENBQUMsNEJBQTRCLENBQUM7b0JBQ3pDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs4QkFHRyxLQUFLO3NCQURKLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aUFzRGF0YUxpc3R9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7QWJzdHJhY3RUdWlOYXRpdmVTZWxlY3R9IGZyb20gJ0B0YWlnYS11aS9raXQvYWJzdHJhY3QnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3NlbGVjdFt0dWlTZWxlY3RdOm5vdChbbGFiZWxzXSk6bm90KFttdWx0aXBsZV0pJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbmF0aXZlLXNlbGVjdC50ZW1wbGF0ZS5odG1sJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpQXNEYXRhTGlzdChUdWlOYXRpdmVTZWxlY3RDb21wb25lbnQpLFxuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUZW1wbGF0ZVJlZixcbiAgICAgICAgICAgIGRlcHM6IFtUdWlOYXRpdmVTZWxlY3RDb21wb25lbnRdLFxuICAgICAgICAgICAgdXNlRmFjdG9yeTogKHtkYXRhbGlzdH06IFR1aU5hdGl2ZVNlbGVjdENvbXBvbmVudCkgPT4gZGF0YWxpc3QsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IEFic3RyYWN0VHVpTmF0aXZlU2VsZWN0LFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IFR1aU5hdGl2ZVNlbGVjdENvbXBvbmVudCxcbiAgICAgICAgfSxcbiAgICBdLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1thdHRyLmFyaWEtaW52YWxpZF0nOiAnaG9zdC5pbnZhbGlkJyxcbiAgICAgICAgJ1tkaXNhYmxlZF0nOiAnaG9zdC5kaXNhYmxlZCB8fCBjb250cm9sLnJlYWRPbmx5JyxcbiAgICAgICAgJ1t0YWJJbmRleF0nOiAnaG9zdC5mb2N1c2FibGUgPyAwIDogLTEnLFxuICAgICAgICAnW3ZhbHVlXSc6ICdob3N0LnZhbHVlJyxcbiAgICAgICAgJyhjaGFuZ2UpJzogJ2hvc3Qub25WYWx1ZUNoYW5nZSgkZXZlbnQudGFyZ2V0LnZhbHVlKScsXG4gICAgfSxcbiAgICBzdHlsZVVybHM6IFsnLi9uYXRpdmUtc2VsZWN0LnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTmF0aXZlU2VsZWN0Q29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RUdWlOYXRpdmVTZWxlY3Qge1xuICAgIEBJbnB1dCgpXG4gICAgaXRlbXM6IHJlYWRvbmx5IHN0cmluZ1tdIHwgbnVsbCA9IFtdO1xufVxuIiwiPHR1aS1kYXRhLWxpc3Qtd3JhcHBlclxuICAgICp0dWlEYXRhTGlzdFxuICAgIFtpdGVtc109XCJpdGVtc1wiXG4gICAgW2Rpc2FibGVkSXRlbUhhbmRsZXJdPVwiZGlzYWJsZWRJdGVtSGFuZGxlciB8fCBpdGVtc0hhbmRsZXJzLmRpc2FibGVkSXRlbUhhbmRsZXJcIlxuPjwvdHVpLWRhdGEtbGlzdC13cmFwcGVyPlxuPG9wdGlvblxuICAgICpuZ0Zvcj1cImxldCBvcHRpb24gb2YgaXRlbXNcIlxuICAgIFt2YWx1ZV09XCJvcHRpb25cIlxuICAgIFtkaXNhYmxlZF09XCJkaXNhYmxlZEl0ZW1IYW5kbGVyID8gZGlzYWJsZWRJdGVtSGFuZGxlcihvcHRpb24pIDogaXRlbXNIYW5kbGVycy5kaXNhYmxlZEl0ZW1IYW5kbGVyKG9wdGlvbilcIlxuPlxuICAgIHt7IG9wdGlvbiB9fVxuPC9vcHRpb24+XG4iXX0=