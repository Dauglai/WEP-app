import { __decorate } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, Inject, Input, Optional, Self, TemplateRef, ViewChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TUI_IS_MOBILE, tuiAsControl, tuiAsFocusableItemAccessor, tuiDefaultProp, tuiIsNativeFocused, } from '@taiga-ui/cdk';
import { TUI_TEXTFIELD_CLEANER, tuiAsDataListHost, tuiAsOptionContent, TuiDataListDirective, TuiHostedDropdownComponent, TuiPrimitiveTextfieldComponent, } from '@taiga-ui/core';
import { AbstractTuiNativeSelect } from '@taiga-ui/kit/abstract';
import { TUI_ARROW_MODE } from '@taiga-ui/kit/components/arrow';
import { TUI_SELECT_OPTION } from '@taiga-ui/kit/components/select-option';
import { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';
import { TUI_SELECT_OPTIONS } from './select-options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@taiga-ui/cdk";
import * as i3 from "@angular/common";
import * as i4 from "@tinkoff/ng-polymorpheus";
import * as i5 from "@angular/forms";
export class TuiSelectComponent extends AbstractTuiNullableControl {
    constructor(control, cdr, textfieldCleaner, arrowMode, itemsHandlers, options, isMobile) {
        super(control, cdr);
        this.textfieldCleaner = textfieldCleaner;
        this.arrowMode = arrowMode;
        this.itemsHandlers = itemsHandlers;
        this.options = options;
        this.isMobile = isMobile;
        this.stringify = this.itemsHandlers.stringify;
        this.identityMatcher = this.itemsHandlers.identityMatcher;
        this.valueContent = this.options.valueContent;
    }
    get arrow() {
        return !this.interactive ? this.arrowMode.disabled : this.arrowMode.interactive;
    }
    get nativeFocusableElement() {
        return this.textfield ? this.textfield.nativeFocusableElement : null;
    }
    get focused() {
        return (tuiIsNativeFocused(this.nativeFocusableElement) ||
            (!!this.hostedDropdown && this.hostedDropdown.focused));
    }
    get nativeDropdownMode() {
        return !!this.nativeSelect && this.isMobile;
    }
    get computedValue() {
        return this.value === null ? '' : this.stringify(this.value) || ' ';
    }
    get computedContent() {
        return this.valueContent || this.computedValue;
    }
    onValueChange(value) {
        if (!value) {
            this.value = null;
        }
        else {
            this.value = value || null;
        }
    }
    onActiveZone(active) {
        this.updateFocused(active);
    }
    onKeyDownDelete() {
        if (this.textfieldCleaner.cleaner) {
            this.value = null;
        }
    }
    handleOption(option) {
        var _a;
        this.focusInput();
        this.value = option;
        (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(false);
    }
    focusInput(preventScroll = false) {
        if (this.nativeFocusableElement) {
            this.nativeFocusableElement.focus({ preventScroll });
        }
    }
}
TuiSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSelectComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TUI_TEXTFIELD_CLEANER }, { token: TUI_ARROW_MODE }, { token: TUI_ITEMS_HANDLERS }, { token: TUI_SELECT_OPTIONS }, { token: TUI_IS_MOBILE }], target: i0.ɵɵFactoryTarget.Component });
TuiSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSelectComponent, selector: "tui-select", inputs: { stringify: "stringify", identityMatcher: "identityMatcher", valueContent: "valueContent" }, providers: [
        tuiAsFocusableItemAccessor(TuiSelectComponent),
        tuiAsControl(TuiSelectComponent),
        tuiAsDataListHost(TuiSelectComponent),
        tuiAsOptionContent(TUI_SELECT_OPTION),
    ], queries: [{ propertyName: "nativeSelect", first: true, predicate: AbstractTuiNativeSelect, descendants: true, static: true }, { propertyName: "datalist", first: true, predicate: TuiDataListDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: "textfield", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }, { propertyName: "hostedDropdown", first: true, predicate: TuiHostedDropdownComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"interactive && !nativeDropdownMode\"\n    [content]=\"datalist || ''\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-primitive-textfield\n        automation-id=\"tui-select__textfield\"\n        class=\"t-textfield\"\n        [tuiTextfieldIcon]=\"arrow ? icon : ''\"\n        [editable]=\"false\"\n        [pseudoFocus]=\"computedFocused\"\n        [pseudoHover]=\"pseudoHover\"\n        [pseudoActive]=\"pseudoActive\"\n        [invalid]=\"computedInvalid\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [disabled]=\"computedDisabled\"\n        [focusable]=\"computedFocusable\"\n        [value]=\"computedValue\"\n        (valueChange)=\"onValueChange($any($event))\"\n        (keydown.delete.prevent)=\"onKeyDownDelete()\"\n        (keydown.backspace.prevent)=\"onKeyDownDelete()\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            select=\"input\"\n            ngProjectAs=\"input\"\n        ></ng-content>\n\n        <ng-template #select>\n            <ng-content\n                *ngIf=\"isMobile\"\n                select=\"select\"\n            ></ng-content>\n        </ng-template>\n\n        <ng-container\n            *ngTemplateOutlet=\"select\"\n            ngProjectAs=\"select\"\n        ></ng-container>\n\n        <div\n            *ngIf=\"value !== null\"\n            ngProjectAs=\"tuiContent\"\n            automation-id=\"tui-select__value\"\n            class=\"t-value\"\n        >\n            <div\n                *polymorpheusOutlet=\"computedContent as text; context: {$implicit: value, active: computedFocused}\"\n                class=\"t-primitive-value\"\n                [textContent]=\"text\"\n            ></div>\n        </div>\n    </tui-primitive-textfield>\n\n    <ng-template #icon>\n        <div\n            tuiWrapper\n            appearance=\"icon\"\n            class=\"t-icon\"\n        >\n            <ng-container *polymorpheusOutlet=\"arrow\"></ng-container>\n        </div>\n    </ng-template>\n</tui-hosted-dropdown>\n", styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:left}:host:not(._readonly) ::ng-deep input:not(:disabled){cursor:pointer}:host._readonly ::ng-deep input{cursor:default}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}.t-value{display:flex;width:100%;align-items:center}.t-primitive-value{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\n"], components: [{ type: i1.TuiHostedDropdownComponent, selector: "tui-hosted-dropdown", inputs: ["content", "sided", "canOpen", "open"], outputs: ["openChange", "focusedChange"] }, { type: i1.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "filler", "iconCleaner", "readOnly", "invalid", "disabled", "prefix", "postfix", "value"], outputs: ["valueChange"] }], directives: [{ type: i2.TuiActiveZoneDirective, selector: "[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)", inputs: ["tuiActiveZoneParent"], outputs: ["tuiActiveZoneChange"], exportAs: ["tuiActiveZone"] }, { type: i1.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { type: i1.TuiTextfieldIconDirective, selector: "[tuiTextfieldIcon]", inputs: ["tuiTextfieldIcon"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i1.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }], viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiSelectComponent.prototype, "stringify", void 0);
__decorate([
    tuiDefaultProp()
], TuiSelectComponent.prototype, "identityMatcher", void 0);
__decorate([
    tuiDefaultProp()
], TuiSelectComponent.prototype, "valueContent", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSelectComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-select',
                    templateUrl: './select.template.html',
                    styleUrls: ['./select.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiSelectComponent),
                        tuiAsControl(TuiSelectComponent),
                        tuiAsDataListHost(TuiSelectComponent),
                        tuiAsOptionContent(TUI_SELECT_OPTION),
                    ],
                    viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER],
                }]
        }], ctorParameters: function () { return [{ type: i5.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i1.TuiTextfieldCleanerDirective, decorators: [{
                    type: Inject,
                    args: [TUI_TEXTFIELD_CLEANER]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ARROW_MODE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ITEMS_HANDLERS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_SELECT_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_MOBILE]
                }] }]; }, propDecorators: { textfield: [{
                type: ViewChild,
                args: [TuiPrimitiveTextfieldComponent]
            }], hostedDropdown: [{
                type: ViewChild,
                args: [TuiHostedDropdownComponent]
            }], nativeSelect: [{
                type: ContentChild,
                args: [AbstractTuiNativeSelect, { static: true }]
            }], stringify: [{
                type: Input
            }], identityMatcher: [{
                type: Input
            }], valueContent: [{
                type: Input
            }], datalist: [{
                type: ContentChild,
                args: [TuiDataListDirective, { read: TemplateRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,