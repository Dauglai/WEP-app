import { __decorate } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, HostBinding, Inject, Input, Output, ViewChild, } from '@angular/core';
import { AbstractTuiInteractive, tuiAsFocusableItemAccessor, tuiDefaultProp, tuiIsNativeFocused, } from '@taiga-ui/cdk';
import { MODE_PROVIDER, TUI_MODE } from '@taiga-ui/core';
import { TuiAccordionItemContentDirective } from './accordion-item-content.directive';
import { TuiAccordionItemEagerContentDirective } from './accordion-item-eager-content.directive';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@taiga-ui/cdk";
import * as i3 from "@angular/common";
import * as i4 from "@tinkoff/ng-polymorpheus";
import * as i5 from "rxjs";
export class TuiAccordionItemComponent extends AbstractTuiInteractive {
    constructor(cdr, mode$) {
        super();
        this.cdr = cdr;
        this.mode$ = mode$;
        this.noPadding = false;
        this.showArrow = true;
        this.borders = 'all';
        this.size = 'm';
        this.disabled = false;
        this.disableHover = false;
        this.open = false;
        this.async = false;
        this.openChange = new EventEmitter();
    }
    get nativeFocusableElement() {
        return this.disabled || !this.focusableElement
            ? null
            : this.focusableElement.nativeElement;
    }
    get focused() {
        return tuiIsNativeFocused(this.nativeFocusableElement);
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onFocusVisible(focusVisible) {
        this.updateFocusVisible(focusVisible);
    }
    onRowToggle() {
        if (!this.disabled) {
            this.updateOpen(!this.open);
        }
    }
    onItemKeyDownEsc(event) {
        if (!this.open) {
            return;
        }
        event.stopPropagation();
        this.updateOpen(false);
    }
    close() {
        this.updateOpen(false);
        this.cdr.markForCheck();
    }
    updateOpen(open) {
        if (this.open === open) {
            return;
        }
        this.open = open;
        this.openChange.emit(open);
    }
}
TuiAccordionItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAccordionItemComponent, deps: [{ token: ChangeDetectorRef }, { token: TUI_MODE }], target: i0.ɵɵFactoryTarget.Component });
TuiAccordionItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAccordionItemComponent, selector: "tui-accordion-item", inputs: { noPadding: "noPadding", showArrow: "showArrow", borders: "borders", size: "size", disabled: "disabled", disableHover: "disableHover", open: "open", async: "async" }, outputs: { openChange: "openChange" }, host: { listeners: { "$.data-mode.attr": "mode$" }, properties: { "class._no-padding": "this.noPadding", "class._has-arrow": "this.showArrow", "attr.data-borders": "this.borders", "attr.data-size": "this.size", "class._disabled": "this.disabled" } }, providers: [tuiAsFocusableItemAccessor(TuiAccordionItemComponent), MODE_PROVIDER], queries: [{ propertyName: "eagerContent", first: true, predicate: TuiAccordionItemEagerContentDirective, descendants: true }, { propertyName: "lazyContent", first: true, predicate: TuiAccordionItemContentDirective, descendants: true }], viewQueries: [{ propertyName: "focusableElement", first: true, predicate: ["focusableElement"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div\n    automation-id=\"tui-accordion__item-wrapper\"\n    class=\"t-wrapper\"\n>\n    <button\n        #focusableElement\n        automation-id=\"tui-accordion__item-header\"\n        type=\"button\"\n        class=\"t-header\"\n        [disabled]=\"computedDisabled\"\n        [class.t-header_open]=\"open\"\n        [class.t-header_hoverable]=\"!disableHover\"\n        [tuiFocusable]=\"computedFocusable\"\n        (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n        (tuiFocusedChange)=\"onFocused($event)\"\n        (keydown.esc)=\"onItemKeyDownEsc($event)\"\n        (click)=\"onRowToggle()\"\n    >\n        <span\n            automation-id=\"tui-accordion__item-title\"\n            class=\"t-title\"\n        >\n            <ng-content></ng-content>\n        </span>\n        <tui-svg\n            *ngIf=\"showArrow\"\n            automation-id=\"tui-accordion__item-arrow\"\n            src=\"tuiIconChevronDownLarge\"\n            class=\"t-icon\"\n            [class.t-icon_open]=\"open\"\n        ></tui-svg>\n    </button>\n    <tui-expand\n        [async]=\"async\"\n        [expanded]=\"open\"\n    >\n        <ng-template tuiExpandContent>\n            <div\n                *ngIf=\"lazyContent\"\n                automation-id=\"tui-accordion__item-content\"\n                class=\"t-content\"\n            >\n                <ng-container *polymorpheusOutlet=\"lazyContent as text\">\n                    {{ text }}\n                </ng-container>\n            </div>\n        </ng-template>\n        <div\n            *ngIf=\"eagerContent\"\n            class=\"t-content\"\n        >\n            <ng-content select=\"[tuiAccordionItemContent]\"></ng-content>\n        </div>\n    </tui-expand>\n</div>\n", styles: [":host{position:relative;display:block;overflow:hidden;border-radius:var(--tui-radius-l)}:host[data-borders=top-bottom]{border-radius:0!important}.t-wrapper{position:relative;border-radius:inherit}.t-wrapper:after{position:absolute;top:0;left:0;width:100%;height:100%;content:\"\";box-sizing:border-box;border-radius:inherit;border:1px solid var(--tui-base-04);pointer-events:none}:host:not([data-borders]) .t-wrapper:after{border-width:0}:host[data-borders=all] .t-wrapper:after{border-width:1px}:host[data-borders=top-bottom] .t-wrapper:after{border-left-width:0;border-right-width:0}:host[data-borders=top] .t-wrapper:after{border-left-width:0;border-right-width:0;border-bottom-width:0}:host[data-borders=bottom] .t-wrapper:after{border-left-width:0;border-right-width:0;border-top-width:0}:host[data-mode=onDark] .t-wrapper:after{border-color:var(--tui-base-03)}:host[data-mode=onLight] .t-wrapper:after{border-color:var(--tui-text-01)}:host._focus-visible .t-wrapper:after{border:2px solid var(--tui-focus)}:host:not([data-mode]) .t-wrapper{background:var(--tui-base-01)}.t-header{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;background:none;font-size:inherit;line-height:inherit;transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;width:100%;font:var(--tui-font-text-l);align-items:center;box-sizing:border-box;border-bottom:1px solid var(--tui-base-04);min-height:var(--tui-height-l);padding:.75rem 1.25rem;color:var(--tui-text-01);cursor:pointer;text-align:left;outline:none}:host[data-mode=onDark] .t-header{color:var(--tui-text-01-night);border-color:var(--tui-base-03)}:host[data-mode=onLight] .t-header{border-color:var(--tui-text-01)}:host:not([data-borders]) .t-header{border-bottom-width:0;box-shadow:none}:host._has-arrow .t-header{padding-right:.75rem}:host[data-mode=onDark] .t-header_open{background:var(--tui-clear-inverse)}:host[data-mode=onLight] .t-header_open{background:var(--tui-clear)}:host[data-size=s] .t-header{font:var(--tui-font-text-m);min-height:var(--tui-height-m);padding:.625rem .75rem .625rem 1rem}:host._no-padding .t-header{padding-left:0;padding-right:0}:host._disabled .t-header{cursor:default}:host:hover:not([data-mode]) .t-header_hoverable{background:var(--tui-base-02)}:host:hover[data-mode=onDark] .t-header_hoverable{background:var(--tui-clear-inverse)}:host:hover[data-mode=onLight] .t-header_hoverable{background:var(--tui-clear)}.t-title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-right:0;flex-grow:1}:host._has-arrow .t-title{margin-right:.5rem}.t-icon{transition-property:transform,color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;width:1.5rem;height:1.5rem;margin-left:auto;color:var(--tui-base-06)}.t-icon_open{transform:rotate(180deg)}:host[data-mode] .t-icon{opacity:var(--tui-disabled-opacity)}:host:hover[data-mode] .t-icon{opacity:.8}:host[data-mode=onDark] .t-icon{color:var(--tui-text-01-night)}:host[data-mode=onLight] .t-icon{color:var(--tui-text-01)}:host:hover:not([data-mode]) .t-icon{color:var(--tui-base-07)}.t-content{font:var(--tui-font-text-m);padding:1.25rem;word-wrap:break-word}:host[data-size=s] .t-content{font:var(--tui-font-text-s);padding:1rem}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i1.TuiExpandComponent, selector: "tui-expand", inputs: ["async", "expanded"] }], directives: [{ type: i2.TuiFocusableDirective, selector: "[tuiFocusable]", inputs: ["tuiFocusable"] }, { type: i2.TuiFocusVisibleDirective, selector: "[tuiFocusVisibleChange]", outputs: ["tuiFocusVisibleChange"] }, { type: i2.TuiFocusedDirective, selector: "[tuiFocusedChange]", outputs: ["tuiFocusedChange"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.TuiExpandContentDirective, selector: "[tuiExpandContent]" }, { type: i4.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiAccordionItemComponent.prototype, "noPadding", void 0);
__decorate([
    tuiDefaultProp()
], TuiAccordionItemComponent.prototype, "showArrow", void 0);
__decorate([
    tuiDefaultProp()
], TuiAccordionItemComponent.prototype, "borders", void 0);
__decorate([
    tuiDefaultProp()
], TuiAccordionItemComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiAccordionItemComponent.prototype, "disabled", void 0);
__decorate([
    tuiDefaultProp()
], TuiAccordionItemComponent.prototype, "disableHover", void 0);
__decorate([
    tuiDefaultProp()
], TuiAccordionItemComponent.prototype, "open", void 0);
__decorate([
    tuiDefaultProp()
], TuiAccordionItemComponent.prototype, "async", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAccordionItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-accordion-item',
                    templateUrl: './accordion-item.template.html',
                    styleUrls: ['./accordion-item.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [tuiAsFocusableItemAccessor(TuiAccordionItemComponent), MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i5.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }]; }, propDecorators: { focusableElement: [{
                type: ViewChild,
                args: ['focusableElement']
            }], noPadding: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._no-padding']
            }], showArrow: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._has-arrow']
            }], borders: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-borders']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], disabled: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._disabled']
            }], disableHover: [{
                type: Input
            }], open: [{
                type: Input
            }], async: [{
                type: Input
            }], openChange: [{
                type: Output
            }], eagerContent: [{
                type: ContentChild,
                args: [TuiAccordionItemEagerContentDirective]
            }], lazyContent: [{
                type: ContentChild,
                args: [TuiAccordionItemContentDirective]
            }] } });
//# sourceMappingURL=data:application/json;base64,