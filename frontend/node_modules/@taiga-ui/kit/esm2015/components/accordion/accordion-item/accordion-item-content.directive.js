import { ChangeDetectorRef, Directive, Inject, Self, TemplateRef } from '@angular/core';
import { PolymorpheusTemplate } from '@tinkoff/ng-polymorpheus';
import * as i0 from "@angular/core";
export class TuiAccordionItemContentDirective extends PolymorpheusTemplate {
    constructor(templateRef, cdr) {
        super(templateRef, cdr);
    }
}
TuiAccordionItemContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAccordionItemContentDirective, deps: [{ token: TemplateRef, self: true }, { token: ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });
TuiAccordionItemContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiAccordionItemContentDirective, selector: "ng-template[tuiAccordionItemContent]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAccordionItemContentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ng-template[tuiAccordionItemContent]',
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{
                    type: Inject,
                    args: [TemplateRef]
                }, {
                    type: Self
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWl0ZW0tY29udGVudC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9hY2NvcmRpb24vYWNjb3JkaW9uLWl0ZW0vYWNjb3JkaW9uLWl0ZW0tY29udGVudC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN0RixPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7QUFLOUQsTUFBTSxPQUFPLGdDQUFpQyxTQUFRLG9CQUVyRDtJQUNHLFlBR0ksV0FBaUQsRUFDdEIsR0FBc0I7UUFFakQsS0FBSyxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDOzs4SEFWUSxnQ0FBZ0Msa0JBSTdCLFdBQVcseUJBR1gsaUJBQWlCO2tIQVBwQixnQ0FBZ0M7NEZBQWhDLGdDQUFnQztrQkFINUMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsc0NBQXNDO2lCQUNuRDs7MEJBS1EsTUFBTTsyQkFBQyxXQUFXOzswQkFDbEIsSUFBSTs7MEJBRUosTUFBTTsyQkFBQyxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdG9yUmVmLCBEaXJlY3RpdmUsIEluamVjdCwgU2VsZiwgVGVtcGxhdGVSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNUZW1wbGF0ZX0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICduZy10ZW1wbGF0ZVt0dWlBY2NvcmRpb25JdGVtQ29udGVudF0nLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlBY2NvcmRpb25JdGVtQ29udGVudERpcmVjdGl2ZSBleHRlbmRzIFBvbHltb3JwaGV1c1RlbXBsYXRlPFxuICAgIFJlY29yZDxzdHJpbmcsIHVua25vd24+XG4+IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUZW1wbGF0ZVJlZilcbiAgICAgICAgQFNlbGYoKVxuICAgICAgICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8UmVjb3JkPHN0cmluZywgdW5rbm93bj4+LFxuICAgICAgICBASW5qZWN0KENoYW5nZURldGVjdG9yUmVmKSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxuICAgICkge1xuICAgICAgICBzdXBlcih0ZW1wbGF0ZVJlZiwgY2RyKTtcbiAgICB9XG59XG4iXX0=