import { __decorate } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Inject, Input, Optional, Self, ViewChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TUI_DEFAULT_IDENTITY_MATCHER, tuiAsControl, tuiAsFocusableItemAccessor, tuiDefaultProp, } from '@taiga-ui/cdk';
import { TuiModeDirective } from '@taiga-ui/core';
import { TUI_RADIO_OPTIONS, TuiRadioComponent, } from '@taiga-ui/kit/components/radio';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/components/radio";
import * as i2 from "@angular/forms";
import * as i3 from "@taiga-ui/core";
export class TuiRadioLabeledComponent extends AbstractTuiNullableControl {
    constructor(control, cdr, modeDirective, options) {
        super(control, cdr);
        this.modeDirective = modeDirective;
        this.options = options;
        this.size = this.options.size;
        this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;
        this.pseudoDisabled = false;
    }
    get nativeFocusableElement() {
        return this.radio ? this.radio.nativeFocusableElement : null;
    }
    get focused() {
        return !!this.radio && this.radio.focused;
    }
    get computedDisabled() {
        return this.disabled || this.pseudoDisabled;
    }
    get mode() {
        return this.modeDirective ? this.modeDirective.mode : null;
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    /** @deprecated use 'value' setter */
    onModelChange(value) {
        this.value = value;
    }
}
TuiRadioLabeledComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioLabeledComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TuiModeDirective, optional: true }, { token: TUI_RADIO_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiRadioLabeledComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiRadioLabeledComponent, selector: "tui-radio-labeled", inputs: { item: "item", size: "size", identityMatcher: "identityMatcher", pseudoDisabled: "pseudoDisabled" }, host: { properties: { "attr.data-size": "this.size", "class._disabled": "this.computedDisabled", "attr.data-mode": "this.mode" } }, providers: [
        tuiAsFocusableItemAccessor(TuiRadioLabeledComponent),
        tuiAsControl(TuiRadioLabeledComponent),
    ], viewQueries: [{ propertyName: "radio", first: true, predicate: TuiRadioComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<label class=\"t-wrapper\">\n    <tui-radio\n        [focusable]=\"focusable\"\n        [identityMatcher]=\"identityMatcher\"\n        [name]=\"computedName || ''\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [pseudoDisabled]=\"computedDisabled\"\n        [pseudoInvalid]=\"computedInvalid\"\n        [pseudoFocus]=\"pseudoFocus\"\n        [pseudoHover]=\"pseudoHover\"\n        [pseudoActive]=\"pseudoActive\"\n        [size]=\"size\"\n        [item]=\"item\"\n        [(ngModel)]=\"value\"\n        (focusedChange)=\"onFocused($event)\"\n    ></tui-radio>\n    <div\n        class=\"t-content\"\n        [class.t-content_disabled]=\"computedDisabled\"\n    >\n        <ng-content></ng-content>\n    </div>\n</label>\n", styles: [":host{position:relative;display:block;font:var(--tui-font-text-s);line-height:1rem}:host._readonly{pointer-events:none}.t-wrapper{display:inline-flex;max-width:100%;cursor:pointer;vertical-align:top}:host._disabled .t-wrapper{cursor:default}:host[data-mode=onDark] .t-wrapper{color:var(--tui-text-01-night)}.t-content{word-wrap:break-word;min-width:0}.t-content_disabled{opacity:var(--tui-disabled-opacity)}:host[data-size=m] .t-content{margin-left:.5rem}:host[data-size=l] .t-content{font:var(--tui-font-text-m);margin-left:.75rem}\n"], components: [{ type: i1.TuiRadioComponent, selector: "tui-radio", inputs: ["item", "identityMatcher", "name", "size", "pseudoDisabled"] }], directives: [{ type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiRadioLabeledComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioLabeledComponent.prototype, "identityMatcher", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioLabeledComponent.prototype, "pseudoDisabled", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioLabeledComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-radio-labeled',
                    templateUrl: './radio-labeled.template.html',
                    styleUrls: ['./radio-labeled.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiRadioLabeledComponent),
                        tuiAsControl(TuiRadioLabeledComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i2.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i3.TuiModeDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiModeDirective]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_RADIO_OPTIONS]
                }] }]; }, propDecorators: { radio: [{
                type: ViewChild,
                args: [TuiRadioComponent]
            }], item: [{
                type: Input
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], identityMatcher: [{
                type: Input
            }], pseudoDisabled: [{
                type: Input
            }], computedDisabled: [{
                type: HostBinding,
                args: ['class._disabled']
            }], mode: [{
                type: HostBinding,
                args: ['attr.data-mode']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tbGFiZWxlZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9yYWRpby1sYWJlbGVkL3JhZGlvLWxhYmVsZWQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvcmFkaW8tbGFiZWxlZC9yYWRpby1sYWJlbGVkLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsTUFBTSxFQUNOLEtBQUssRUFDTCxRQUFRLEVBQ1IsSUFBSSxFQUNKLFNBQVMsR0FDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDekMsT0FBTyxFQUNILDBCQUEwQixFQUMxQiw0QkFBNEIsRUFDNUIsWUFBWSxFQUNaLDBCQUEwQixFQUMxQixjQUFjLEdBSWpCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBZ0IsZ0JBQWdCLEVBQVcsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6RSxPQUFPLEVBQ0gsaUJBQWlCLEVBQ2pCLGlCQUFpQixHQUVwQixNQUFNLGdDQUFnQyxDQUFDOzs7OztBQVl4QyxNQUFNLE9BQU8sd0JBQ1QsU0FBUSwwQkFBNkI7SUFzQnJDLFlBSUksT0FBeUIsRUFDRSxHQUFzQixFQUdoQyxhQUFzQyxFQUV0QyxPQUF3QjtRQUV6QyxLQUFLLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBSkgsa0JBQWEsR0FBYixhQUFhLENBQXlCO1FBRXRDLFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBcEI3QyxTQUFJLEdBQWEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFJbkMsb0JBQWUsR0FBMEIsNEJBQTRCLENBQUM7UUFJdEUsbUJBQWMsR0FBRyxLQUFLLENBQUM7SUFldkIsQ0FBQztJQUVELElBQUksc0JBQXNCO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ2pFLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDUCxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUNhLGdCQUFnQjtRQUN6QixPQUFPLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsSUFDSSxJQUFJO1FBQ0osT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQy9ELENBQUM7SUFFRCxTQUFTLENBQUMsT0FBZ0I7UUFDdEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQscUNBQXFDO0lBQ3JDLGFBQWEsQ0FBQyxLQUFRO1FBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7O3NIQS9EUSx3QkFBd0Isa0JBMEJyQixTQUFTLHlDQUVULGlCQUFpQixhQUVqQixnQkFBZ0IsNkJBRWhCLGlCQUFpQjswR0FoQ3BCLHdCQUF3Qiw4UkFMdEI7UUFDUCwwQkFBMEIsQ0FBQyx3QkFBd0IsQ0FBQztRQUNwRCxZQUFZLENBQUMsd0JBQXdCLENBQUM7S0FDekMsaUVBTVUsaUJBQWlCLHVFQzNDaEMsZ3ZCQXdCQTtBRDRCSTtJQURDLGNBQWMsRUFBRTtzREFDa0I7QUFJbkM7SUFEQyxjQUFjLEVBQUU7aUVBQ3FEO0FBSXRFO0lBREMsY0FBYyxFQUFFO2dFQUNNOzRGQXJCZCx3QkFBd0I7a0JBVnBDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsV0FBVyxFQUFFLCtCQUErQjtvQkFDNUMsU0FBUyxFQUFFLENBQUMsNEJBQTRCLENBQUM7b0JBQ3pDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxTQUFTLEVBQUU7d0JBQ1AsMEJBQTBCLDBCQUEwQjt3QkFDcEQsWUFBWSwwQkFBMEI7cUJBQ3pDO2lCQUNKOzswQkF5QlEsUUFBUTs7MEJBQ1IsSUFBSTs7MEJBQ0osTUFBTTsyQkFBQyxTQUFTOzswQkFFaEIsTUFBTTsyQkFBQyxpQkFBaUI7OzBCQUN4QixRQUFROzswQkFDUixNQUFNOzJCQUFDLGdCQUFnQjs7MEJBRXZCLE1BQU07MkJBQUMsaUJBQWlCOzRDQTNCWixLQUFLO3NCQURyQixTQUFTO3VCQUFDLGlCQUFpQjtnQkFJNUIsSUFBSTtzQkFESCxLQUFLO2dCQU1OLElBQUk7c0JBSEgsS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQyxnQkFBZ0I7Z0JBTTdCLGVBQWU7c0JBRmQsS0FBSztnQkFNTixjQUFjO3NCQUZiLEtBQUs7Z0JBNEJPLGdCQUFnQjtzQkFENUIsV0FBVzt1QkFBQyxpQkFBaUI7Z0JBTTFCLElBQUk7c0JBRFAsV0FBVzt1QkFBQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENoYW5nZURldGVjdG9yUmVmLFxuICAgIENvbXBvbmVudCxcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgT3B0aW9uYWwsXG4gICAgU2VsZixcbiAgICBWaWV3Q2hpbGQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOZ0NvbnRyb2x9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7XG4gICAgQWJzdHJhY3RUdWlOdWxsYWJsZUNvbnRyb2wsXG4gICAgVFVJX0RFRkFVTFRfSURFTlRJVFlfTUFUQ0hFUixcbiAgICB0dWlBc0NvbnRyb2wsXG4gICAgdHVpQXNGb2N1c2FibGVJdGVtQWNjZXNzb3IsXG4gICAgdHVpRGVmYXVsdFByb3AsXG4gICAgVHVpRm9jdXNhYmxlRWxlbWVudEFjY2Vzc29yLFxuICAgIFR1aUlkZW50aXR5TWF0Y2hlcixcbiAgICBUdWlOYXRpdmVGb2N1c2FibGVFbGVtZW50LFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpQnJpZ2h0bmVzcywgVHVpTW9kZURpcmVjdGl2ZSwgVHVpU2l6ZUx9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7XG4gICAgVFVJX1JBRElPX09QVElPTlMsXG4gICAgVHVpUmFkaW9Db21wb25lbnQsXG4gICAgVHVpUmFkaW9PcHRpb25zLFxufSBmcm9tICdAdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvcmFkaW8nO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1yYWRpby1sYWJlbGVkJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcmFkaW8tbGFiZWxlZC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9yYWRpby1sYWJlbGVkLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpQXNGb2N1c2FibGVJdGVtQWNjZXNzb3IoVHVpUmFkaW9MYWJlbGVkQ29tcG9uZW50KSxcbiAgICAgICAgdHVpQXNDb250cm9sKFR1aVJhZGlvTGFiZWxlZENvbXBvbmVudCksXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUmFkaW9MYWJlbGVkQ29tcG9uZW50PFQ+XG4gICAgZXh0ZW5kcyBBYnN0cmFjdFR1aU51bGxhYmxlQ29udHJvbDxUPlxuICAgIGltcGxlbWVudHMgVHVpRm9jdXNhYmxlRWxlbWVudEFjY2Vzc29yXG57XG4gICAgQFZpZXdDaGlsZChUdWlSYWRpb0NvbXBvbmVudClcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJhZGlvPzogVHVpUmFkaW9Db21wb25lbnQ8VD47XG5cbiAgICBASW5wdXQoKVxuICAgIGl0ZW0/OiBUO1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1zaXplJylcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHNpemU6IFR1aVNpemVMID0gdGhpcy5vcHRpb25zLnNpemU7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgaWRlbnRpdHlNYXRjaGVyOiBUdWlJZGVudGl0eU1hdGNoZXI8VD4gPSBUVUlfREVGQVVMVF9JREVOVElUWV9NQVRDSEVSO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHBzZXVkb0Rpc2FibGVkID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQFNlbGYoKVxuICAgICAgICBASW5qZWN0KE5nQ29udHJvbClcbiAgICAgICAgY29udHJvbDogTmdDb250cm9sIHwgbnVsbCxcbiAgICAgICAgQEluamVjdChDaGFuZ2VEZXRlY3RvclJlZikgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQEluamVjdChUdWlNb2RlRGlyZWN0aXZlKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IG1vZGVEaXJlY3RpdmU6IFR1aU1vZGVEaXJlY3RpdmUgfCBudWxsLFxuICAgICAgICBASW5qZWN0KFRVSV9SQURJT19PUFRJT05TKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aVJhZGlvT3B0aW9ucyxcbiAgICApIHtcbiAgICAgICAgc3VwZXIoY29udHJvbCwgY2RyKTtcbiAgICB9XG5cbiAgICBnZXQgbmF0aXZlRm9jdXNhYmxlRWxlbWVudCgpOiBUdWlOYXRpdmVGb2N1c2FibGVFbGVtZW50IHwgbnVsbCB7XG4gICAgICAgIHJldHVybiB0aGlzLnJhZGlvID8gdGhpcy5yYWRpby5uYXRpdmVGb2N1c2FibGVFbGVtZW50IDogbnVsbDtcbiAgICB9XG5cbiAgICBnZXQgZm9jdXNlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5yYWRpbyAmJiB0aGlzLnJhZGlvLmZvY3VzZWQ7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fZGlzYWJsZWQnKVxuICAgIG92ZXJyaWRlIGdldCBjb21wdXRlZERpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kaXNhYmxlZCB8fCB0aGlzLnBzZXVkb0Rpc2FibGVkO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLW1vZGUnKVxuICAgIGdldCBtb2RlKCk6IFR1aUJyaWdodG5lc3MgfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZURpcmVjdGl2ZSA/IHRoaXMubW9kZURpcmVjdGl2ZS5tb2RlIDogbnVsbDtcbiAgICB9XG5cbiAgICBvbkZvY3VzZWQoZm9jdXNlZDogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLnVwZGF0ZUZvY3VzZWQoZm9jdXNlZCk7XG4gICAgfVxuXG4gICAgLyoqIEBkZXByZWNhdGVkIHVzZSAndmFsdWUnIHNldHRlciAqL1xuICAgIG9uTW9kZWxDaGFuZ2UodmFsdWU6IFQpOiB2b2lkIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbn1cbiIsIjxsYWJlbCBjbGFzcz1cInQtd3JhcHBlclwiPlxuICAgIDx0dWktcmFkaW9cbiAgICAgICAgW2ZvY3VzYWJsZV09XCJmb2N1c2FibGVcIlxuICAgICAgICBbaWRlbnRpdHlNYXRjaGVyXT1cImlkZW50aXR5TWF0Y2hlclwiXG4gICAgICAgIFtuYW1lXT1cImNvbXB1dGVkTmFtZSB8fCAnJ1wiXG4gICAgICAgIFtuYXRpdmVJZF09XCJuYXRpdmVJZFwiXG4gICAgICAgIFtyZWFkT25seV09XCJyZWFkT25seVwiXG4gICAgICAgIFtwc2V1ZG9EaXNhYmxlZF09XCJjb21wdXRlZERpc2FibGVkXCJcbiAgICAgICAgW3BzZXVkb0ludmFsaWRdPVwiY29tcHV0ZWRJbnZhbGlkXCJcbiAgICAgICAgW3BzZXVkb0ZvY3VzXT1cInBzZXVkb0ZvY3VzXCJcbiAgICAgICAgW3BzZXVkb0hvdmVyXT1cInBzZXVkb0hvdmVyXCJcbiAgICAgICAgW3BzZXVkb0FjdGl2ZV09XCJwc2V1ZG9BY3RpdmVcIlxuICAgICAgICBbc2l6ZV09XCJzaXplXCJcbiAgICAgICAgW2l0ZW1dPVwiaXRlbVwiXG4gICAgICAgIFsobmdNb2RlbCldPVwidmFsdWVcIlxuICAgICAgICAoZm9jdXNlZENoYW5nZSk9XCJvbkZvY3VzZWQoJGV2ZW50KVwiXG4gICAgPjwvdHVpLXJhZGlvPlxuICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJ0LWNvbnRlbnRcIlxuICAgICAgICBbY2xhc3MudC1jb250ZW50X2Rpc2FibGVkXT1cImNvbXB1dGVkRGlzYWJsZWRcIlxuICAgID5cbiAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDwvZGl2PlxuPC9sYWJlbD5cbiJdfQ==