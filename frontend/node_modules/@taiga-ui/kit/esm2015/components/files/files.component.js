import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ContentChildren, Inject, Input, TemplateRef, ViewEncapsulation, } from '@angular/core';
import { EMPTY_QUERY, tuiDefaultProp, TuiItemDirective } from '@taiga-ui/cdk';
import { TUI_HIDE_TEXT, TUI_SHOW_ALL_TEXT } from '@taiga-ui/kit/tokens';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
import * as i3 from "rxjs";
export class TuiFilesComponent {
    constructor(hideText$, showAllText$) {
        this.hideText$ = hideText$;
        this.showAllText$ = showAllText$;
        this.items = EMPTY_QUERY;
        this.max = 0;
        this.hidden = true;
    }
    get hasExtraItems() {
        return !!this.max && this.items.length > this.max;
    }
    toggle() {
        this.hidden = !this.hidden;
    }
}
TuiFilesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilesComponent, deps: [{ token: TUI_HIDE_TEXT }, { token: TUI_SHOW_ALL_TEXT }], target: i0.ɵɵFactoryTarget.Component });
TuiFilesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiFilesComponent, selector: "tui-files", inputs: { max: "max" }, queries: [{ propertyName: "items", predicate: TuiItemDirective, read: TemplateRef }], ngImport: i0, template: "<ng-container *ngIf=\"items?.changes | async\"></ng-container>\n\n<section\n    tuiGroup\n    orientation=\"vertical\"\n    class=\"t-files\"\n    [collapsed]=\"true\"\n>\n    <ng-content></ng-content>\n    <ng-container *ngFor=\"let item of items; let index = index\">\n        <ng-container\n            *ngIf=\"!max || index < max\"\n            [ngTemplateOutlet]=\"item\"\n        ></ng-container>\n    </ng-container>\n    <tui-expand\n        *ngIf=\"hasExtraItems\"\n        [expanded]=\"!hidden\"\n    >\n        <div class=\"t-extra-items\">\n            <ng-container *ngFor=\"let item of items; let index = index\">\n                <ng-container\n                    *ngIf=\"max && index >= max\"\n                    [ngTemplateOutlet]=\"item\"\n                ></ng-container>\n            </ng-container>\n        </div>\n    </tui-expand>\n    <button\n        *ngIf=\"hasExtraItems\"\n        tuiButton\n        appearance=\"outline\"\n        size=\"m\"\n        type=\"button\"\n        class=\"t-button\"\n        [class.t-button_collapsed]=\"hidden\"\n        (click)=\"toggle()\"\n    >\n        {{ (hidden ? showAllText$ : hideText$) | async }}\n    </button>\n</section>\n", styles: ["tui-files{display:block}tui-files .t-files{position:relative;display:block;width:100%;height:100%;border-radius:var(--tui-radius-m);overflow:hidden}tui-files .t-button{z-index:3;width:100%;background:var(--tui-base-01)}tui-files .t-button_collapsed{box-shadow:0 1.125rem 1.875rem #0000007a;margin-top:-1.5rem}tui-files .t-extra-items tui-file{border-radius:0;margin-top:0;margin-bottom:-.0625rem}\n"], components: [{ type: i1.TuiExpandComponent, selector: "tui-expand", inputs: ["async", "expanded"] }, { type: i1.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.TuiGroupDirective, selector: "[tuiGroup]:not(ng-container)", inputs: ["orientation", "adaptive", "collapsed", "rounded", "size"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
__decorate([
    tuiDefaultProp()
], TuiFilesComponent.prototype, "max", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-files',
                    templateUrl: './files.component.html',
                    styleUrls: ['./files.component.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                }]
        }], ctorParameters: function () { return [{ type: i3.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_HIDE_TEXT]
                }] }, { type: i3.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_SHOW_ALL_TEXT]
                }] }]; }, propDecorators: { items: [{
                type: ContentChildren,
                args: [TuiItemDirective, { read: TemplateRef }]
            }], max: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvZmlsZXMvZmlsZXMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvZmlsZXMvZmlsZXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULGVBQWUsRUFDZixNQUFNLEVBQ04sS0FBSyxFQUVMLFdBQVcsRUFDWCxpQkFBaUIsR0FDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFdBQVcsRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFDLGFBQWEsRUFBRSxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDOzs7OztBQVV0RSxNQUFNLE9BQU8saUJBQWlCO0lBVTFCLFlBQ29DLFNBQTZCLEVBQ3pCLFlBQWdDO1FBRHBDLGNBQVMsR0FBVCxTQUFTLENBQW9CO1FBQ3pCLGlCQUFZLEdBQVosWUFBWSxDQUFvQjtRQVYvRCxVQUFLLEdBQW9ELFdBQVcsQ0FBQztRQUk5RSxRQUFHLEdBQUcsQ0FBQyxDQUFDO1FBRVIsV0FBTSxHQUFHLElBQUksQ0FBQztJQUtYLENBQUM7SUFFSixJQUFJLGFBQWE7UUFDYixPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDdEQsQ0FBQztJQUVELE1BQU07UUFDRixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUMvQixDQUFDOzsrR0FyQlEsaUJBQWlCLGtCQVdkLGFBQWEsYUFDYixpQkFBaUI7bUdBWnBCLGlCQUFpQiwrRkFDVCxnQkFBZ0IsUUFBUyxXQUFXLDZCQ3RCekQsZ3JDQXlDQTtBRGRJO0lBREMsY0FBYyxFQUFFOzhDQUNUOzRGQU5DLGlCQUFpQjtrQkFQN0IsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsV0FBVztvQkFDckIsV0FBVyxFQUFFLHdCQUF3QjtvQkFDckMsU0FBUyxFQUFFLENBQUMsd0JBQXdCLENBQUM7b0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtpQkFDeEM7OzBCQVlRLE1BQU07MkJBQUMsYUFBYTs7MEJBQ3BCLE1BQU07MkJBQUMsaUJBQWlCOzRDQVZwQixLQUFLO3NCQURiLGVBQWU7dUJBQUMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsV0FBVyxFQUFDO2dCQUt0RCxHQUFHO3NCQUZGLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBDb250ZW50Q2hpbGRyZW4sXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxuICAgIFF1ZXJ5TGlzdCxcbiAgICBUZW1wbGF0ZVJlZixcbiAgICBWaWV3RW5jYXBzdWxhdGlvbixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0VNUFRZX1FVRVJZLCB0dWlEZWZhdWx0UHJvcCwgVHVpSXRlbURpcmVjdGl2ZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1RVSV9ISURFX1RFWFQsIFRVSV9TSE9XX0FMTF9URVhUfSBmcm9tICdAdGFpZ2EtdWkva2l0L3Rva2Vucyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1maWxlcycsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2ZpbGVzLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9maWxlcy5jb21wb25lbnQubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUZpbGVzQ29tcG9uZW50IHtcbiAgICBAQ29udGVudENoaWxkcmVuKFR1aUl0ZW1EaXJlY3RpdmUsIHtyZWFkOiBUZW1wbGF0ZVJlZn0pXG4gICAgcmVhZG9ubHkgaXRlbXM6IFF1ZXJ5TGlzdDxUZW1wbGF0ZVJlZjxSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4+ID0gRU1QVFlfUVVFUlk7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbWF4ID0gMDtcblxuICAgIGhpZGRlbiA9IHRydWU7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfSElERV9URVhUKSByZWFkb25seSBoaWRlVGV4dCQ6IE9ic2VydmFibGU8c3RyaW5nPixcbiAgICAgICAgQEluamVjdChUVUlfU0hPV19BTExfVEVYVCkgcmVhZG9ubHkgc2hvd0FsbFRleHQkOiBPYnNlcnZhYmxlPHN0cmluZz4sXG4gICAgKSB7fVxuXG4gICAgZ2V0IGhhc0V4dHJhSXRlbXMoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhIXRoaXMubWF4ICYmIHRoaXMuaXRlbXMubGVuZ3RoID4gdGhpcy5tYXg7XG4gICAgfVxuXG4gICAgdG9nZ2xlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmhpZGRlbiA9ICF0aGlzLmhpZGRlbjtcbiAgICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiaXRlbXM/LmNoYW5nZXMgfCBhc3luY1wiPjwvbmctY29udGFpbmVyPlxuXG48c2VjdGlvblxuICAgIHR1aUdyb3VwXG4gICAgb3JpZW50YXRpb249XCJ2ZXJ0aWNhbFwiXG4gICAgY2xhc3M9XCJ0LWZpbGVzXCJcbiAgICBbY29sbGFwc2VkXT1cInRydWVcIlxuPlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBpdGVtIG9mIGl0ZW1zOyBsZXQgaW5kZXggPSBpbmRleFwiPlxuICAgICAgICA8bmctY29udGFpbmVyXG4gICAgICAgICAgICAqbmdJZj1cIiFtYXggfHwgaW5kZXggPCBtYXhcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRdPVwiaXRlbVwiXG4gICAgICAgID48L25nLWNvbnRhaW5lcj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8dHVpLWV4cGFuZFxuICAgICAgICAqbmdJZj1cImhhc0V4dHJhSXRlbXNcIlxuICAgICAgICBbZXhwYW5kZWRdPVwiIWhpZGRlblwiXG4gICAgPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidC1leHRyYS1pdGVtc1wiPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgaXRlbSBvZiBpdGVtczsgbGV0IGluZGV4ID0gaW5kZXhcIj5cbiAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwibWF4ICYmIGluZGV4ID49IG1heFwiXG4gICAgICAgICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIml0ZW1cIlxuICAgICAgICAgICAgICAgID48L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L3R1aS1leHBhbmQ+XG4gICAgPGJ1dHRvblxuICAgICAgICAqbmdJZj1cImhhc0V4dHJhSXRlbXNcIlxuICAgICAgICB0dWlCdXR0b25cbiAgICAgICAgYXBwZWFyYW5jZT1cIm91dGxpbmVcIlxuICAgICAgICBzaXplPVwibVwiXG4gICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICBjbGFzcz1cInQtYnV0dG9uXCJcbiAgICAgICAgW2NsYXNzLnQtYnV0dG9uX2NvbGxhcHNlZF09XCJoaWRkZW5cIlxuICAgICAgICAoY2xpY2spPVwidG9nZ2xlKClcIlxuICAgID5cbiAgICAgICAge3sgKGhpZGRlbiA/IHNob3dBbGxUZXh0JCA6IGhpZGVUZXh0JCkgfCBhc3luYyB9fVxuICAgIDwvYnV0dG9uPlxuPC9zZWN0aW9uPlxuIl19