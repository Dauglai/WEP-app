import { __decorate } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Inject, Input, Optional, Self, ViewChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TUI_DEFAULT_IDENTITY_MATCHER, tuiAsControl, tuiAsFocusableItemAccessor, tuiDefaultProp, } from '@taiga-ui/cdk';
import { TuiModeDirective, } from '@taiga-ui/core';
import { TuiRadioComponent } from '@taiga-ui/kit/components/radio';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/components/radio";
import * as i2 from "@taiga-ui/core";
import * as i3 from "@angular/forms";
export class TuiRadioBlockComponent extends AbstractTuiNullableControl {
    constructor(control, cdr, modeDirective) {
        super(control, cdr);
        this.modeDirective = modeDirective;
        this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;
        this.contentAlign = 'right';
        this.size = 'l';
        this.hideRadio = false;
        this.pseudoDisabled = false;
    }
    get nativeFocusableElement() {
        return this.radio ? this.radio.nativeFocusableElement : null;
    }
    get focused() {
        return !!this.radio && this.radio.focused;
    }
    get computedDisabled() {
        return this.disabled || this.pseudoDisabled;
    }
    get checked() {
        var _a;
        return !!((_a = this.radio) === null || _a === void 0 ? void 0 : _a.checked) && this.hideRadio;
    }
    get checkboxSize() {
        return this.size === 'l' ? 'l' : 'm';
    }
    get appearance() {
        var _a;
        if (!((_a = this.modeDirective) === null || _a === void 0 ? void 0 : _a.mode)) {
            return this.checked
                ? "whiteblock-active" /* WhiteblockActive */
                : "whiteblock" /* Whiteblock */;
        }
        return this.checked ? "primary" /* Primary */ : "secondary" /* Secondary */;
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onFocusVisible(focusVisible) {
        this.updateFocusVisible(focusVisible);
    }
    /** @deprecated use 'value' setter */
    onModelChange(value) {
        this.value = value;
    }
}
TuiRadioBlockComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioBlockComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TuiModeDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });
TuiRadioBlockComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiRadioBlockComponent, selector: "tui-radio-block", inputs: { item: "item", identityMatcher: "identityMatcher", contentAlign: "contentAlign", size: "size", hideRadio: "hideRadio", pseudoDisabled: "pseudoDisabled" }, host: { properties: { "attr.data-align": "this.contentAlign", "attr.data-size": "this.size", "class._hidden_input": "this.hideRadio", "class._disabled": "this.computedDisabled", "class._active": "this.checked" } }, providers: [
        tuiAsFocusableItemAccessor(TuiRadioBlockComponent),
        tuiAsControl(TuiRadioBlockComponent),
    ], viewQueries: [{ propertyName: "radio", first: true, predicate: TuiRadioComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<label\n    tuiWrapper\n    class=\"t-wrapper\"\n    [appearance]=\"appearance\"\n    [disabled]=\"computedDisabled\"\n    [focus]=\"computedFocusVisible\"\n    [hover]=\"pseudoHover\"\n    [active]=\"pseudoActive\"\n    [invalid]=\"computedInvalid\"\n>\n    <tui-radio\n        class=\"t-view\"\n        [focusable]=\"focusable\"\n        [identityMatcher]=\"identityMatcher\"\n        [item]=\"item\"\n        [name]=\"computedName || ''\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [pseudoDisabled]=\"computedDisabled\"\n        [pseudoInvalid]=\"computedInvalid\"\n        [pseudoFocus]=\"false\"\n        [pseudoHover]=\"pseudoHover\"\n        [pseudoActive]=\"pseudoActive\"\n        [size]=\"checkboxSize\"\n        [(ngModel)]=\"value\"\n        (focusedChange)=\"onFocused($event)\"\n        (focusVisibleChange)=\"onFocusVisible($event)\"\n    ></tui-radio>\n    <div class=\"t-label\">\n        <ng-content></ng-content>\n    </div>\n</label>\n", styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);display:inline-block;vertical-align:top;align-items:flex-start;border-radius:var(--tui-radius-m)}:host[data-size=m],:host[data-size=l]{font:var(--tui-font-text-m)}:host._disabled,:host._readonly{pointer-events:none}.t-wrapper{position:relative;display:flex;align-items:inherit;box-sizing:border-box;border-radius:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;padding:0 1rem 0 0}:host[data-align=right] .t-wrapper{flex-direction:row-reverse;padding:0 0 0 1rem}:host[data-size=s] .t-wrapper{min-height:var(--tui-height-s)}:host[data-size=m] .t-wrapper{min-height:var(--tui-height-m)}:host[data-size=l] .t-wrapper{min-height:var(--tui-height-l)}:host[data-size=s]._hidden_input .t-wrapper{padding:0 1rem}:host[data-size=m]._hidden_input .t-wrapper{padding:0 1.5rem}:host[data-size=l]._hidden_input .t-wrapper{padding:0 2.25rem}:host[data-size=s] .t-view{margin:calc(var(--tui-height-s) / 2 - .5rem) .5rem}:host[data-size=m] .t-view{margin:calc(var(--tui-height-m) / 2 - .5rem) .75rem}:host[data-size=l] .t-view{margin:calc(var(--tui-height-l) / 2 - .75rem) 1rem}:host._hidden_input .t-view{position:absolute;height:1px;width:1px;margin:-1px;border:0;padding:0;overflow:hidden;clip:rect(0,0,0,0);-webkit-clip-path:inset(0);clip-path:inset(0)}.t-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex-grow:1;align-self:center}:host._hidden_input .t-label{text-align:center}\n"], components: [{ type: i1.TuiRadioComponent, selector: "tui-radio", inputs: ["item", "identityMatcher", "name", "size", "pseudoDisabled"] }], directives: [{ type: i2.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiRadioBlockComponent.prototype, "identityMatcher", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioBlockComponent.prototype, "contentAlign", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioBlockComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioBlockComponent.prototype, "hideRadio", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioBlockComponent.prototype, "pseudoDisabled", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioBlockComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-radio-block',
                    templateUrl: './radio-block.template.html',
                    styleUrls: ['../checkbox-block/checkbox-block.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiRadioBlockComponent),
                        tuiAsControl(TuiRadioBlockComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i3.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i2.TuiModeDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiModeDirective]
                }] }]; }, propDecorators: { radio: [{
                type: ViewChild,
                args: [TuiRadioComponent]
            }], item: [{
                type: Input
            }], identityMatcher: [{
                type: Input
            }], contentAlign: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-align']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], hideRadio: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._hidden_input']
            }], pseudoDisabled: [{
                type: Input
            }], computedDisabled: [{
                type: HostBinding,
                args: ['class._disabled']
            }], checked: [{
                type: HostBinding,
                args: ['class._active']
            }] } });
//# sourceMappingURL=data:application/json;base64,