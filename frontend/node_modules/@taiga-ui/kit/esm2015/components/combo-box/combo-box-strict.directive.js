import { __decorate } from "tslib";
import { Directive, HostListener, Inject, Input } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { TuiComboBoxComponent } from './combo-box.component';
import * as i0 from "@angular/core";
import * as i1 from "./combo-box.component";
export class TuiComboBoxStrictDirective {
    constructor(comboBox) {
        this.comboBox = comboBox;
        this.strict = true;
    }
    onInput() {
        if (!this.strict && this.comboBox.search) {
            this.comboBox.value = this.comboBox.search;
        }
    }
}
TuiComboBoxStrictDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiComboBoxStrictDirective, deps: [{ token: TuiComboBoxComponent }], target: i0.ɵɵFactoryTarget.Directive });
TuiComboBoxStrictDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiComboBoxStrictDirective, selector: "tui-combo-box[strict]", inputs: { strict: "strict" }, host: { listeners: { "input": "onInput()" } }, ngImport: i0 });
__decorate([
    tuiDefaultProp()
], TuiComboBoxStrictDirective.prototype, "strict", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiComboBoxStrictDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tui-combo-box[strict]',
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiComboBoxComponent, decorators: [{
                    type: Inject,
                    args: [TuiComboBoxComponent]
                }] }]; }, propDecorators: { strict: [{
                type: Input
            }], onInput: [{
                type: HostListener,
                args: ['input']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8tYm94LXN0cmljdC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9jb21iby1ib3gvY29tYm8tYm94LXN0cmljdC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUU3QyxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQzs7O0FBSzNELE1BQU0sT0FBTywwQkFBMEI7SUFLbkMsWUFFcUIsUUFBMEM7UUFBMUMsYUFBUSxHQUFSLFFBQVEsQ0FBa0M7UUFKL0QsV0FBTSxHQUFHLElBQUksQ0FBQztJQUtYLENBQUM7SUFHSixPQUFPO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUU7WUFDdEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7U0FDOUM7SUFDTCxDQUFDOzt3SEFmUSwwQkFBMEIsa0JBTXZCLG9CQUFvQjs0R0FOdkIsMEJBQTBCO0FBR25DO0lBREMsY0FBYyxFQUFFOzBEQUNIOzRGQUhMLDBCQUEwQjtrQkFIdEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsdUJBQXVCO2lCQUNwQzs7MEJBT1EsTUFBTTsyQkFBQyxvQkFBb0I7NENBSGhDLE1BQU07c0JBRkwsS0FBSztnQkFVTixPQUFPO3NCQUROLFlBQVk7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIEluamVjdCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlEZWZhdWx0UHJvcH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5cbmltcG9ydCB7VHVpQ29tYm9Cb3hDb21wb25lbnR9IGZyb20gJy4vY29tYm8tYm94LmNvbXBvbmVudCc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAndHVpLWNvbWJvLWJveFtzdHJpY3RdJyxcbn0pXG5leHBvcnQgY2xhc3MgVHVpQ29tYm9Cb3hTdHJpY3REaXJlY3RpdmU8VD4ge1xuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBzdHJpY3QgPSB0cnVlO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVHVpQ29tYm9Cb3hDb21wb25lbnQpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgY29tYm9Cb3g6IFR1aUNvbWJvQm94Q29tcG9uZW50PFQgfCBzdHJpbmc+LFxuICAgICkge31cblxuICAgIEBIb3N0TGlzdGVuZXIoJ2lucHV0JylcbiAgICBvbklucHV0KCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuc3RyaWN0ICYmIHRoaXMuY29tYm9Cb3guc2VhcmNoKSB7XG4gICAgICAgICAgICB0aGlzLmNvbWJvQm94LnZhbHVlID0gdGhpcy5jb21ib0JveC5zZWFyY2g7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=