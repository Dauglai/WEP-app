import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { TuiHoveredModule, TuiPressedModule } from '@taiga-ui/cdk';
import { TuiWrapperModule } from '@taiga-ui/core';
import { TuiCheckboxModule } from '@taiga-ui/kit/components/checkbox';
import { TuiCheckboxBlockComponent } from './checkbox-block.component';
import * as i0 from "@angular/core";
export class TuiCheckboxBlockModule {
}
TuiCheckboxBlockModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxBlockModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiCheckboxBlockModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxBlockModule, declarations: [TuiCheckboxBlockComponent], imports: [FormsModule,
        TuiHoveredModule,
        TuiPressedModule,
        TuiCheckboxModule,
        TuiWrapperModule], exports: [TuiCheckboxBlockComponent] });
TuiCheckboxBlockModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxBlockModule, imports: [[
            FormsModule,
            TuiHoveredModule,
            TuiPressedModule,
            TuiCheckboxModule,
            TuiWrapperModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxBlockModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        FormsModule,
                        TuiHoveredModule,
                        TuiPressedModule,
                        TuiCheckboxModule,
                        TuiWrapperModule,
                    ],
                    declarations: [TuiCheckboxBlockComponent],
                    exports: [TuiCheckboxBlockComponent],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtYmxvY2subW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvY2hlY2tib3gtYmxvY2svY2hlY2tib3gtYmxvY2subW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNqRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUVwRSxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQzs7QUFhckUsTUFBTSxPQUFPLHNCQUFzQjs7b0hBQXRCLHNCQUFzQjtxSEFBdEIsc0JBQXNCLGlCQUhoQix5QkFBeUIsYUFOcEMsV0FBVztRQUNYLGdCQUFnQjtRQUNoQixnQkFBZ0I7UUFDaEIsaUJBQWlCO1FBQ2pCLGdCQUFnQixhQUdWLHlCQUF5QjtxSEFFMUIsc0JBQXNCLFlBVnRCO1lBQ0wsV0FBVztZQUNYLGdCQUFnQjtZQUNoQixnQkFBZ0I7WUFDaEIsaUJBQWlCO1lBQ2pCLGdCQUFnQjtTQUNuQjs0RkFJUSxzQkFBc0I7a0JBWGxDLFFBQVE7bUJBQUM7b0JBQ04sT0FBTyxFQUFFO3dCQUNMLFdBQVc7d0JBQ1gsZ0JBQWdCO3dCQUNoQixnQkFBZ0I7d0JBQ2hCLGlCQUFpQjt3QkFDakIsZ0JBQWdCO3FCQUNuQjtvQkFDRCxZQUFZLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztvQkFDekMsT0FBTyxFQUFFLENBQUMseUJBQXlCLENBQUM7aUJBQ3ZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Zvcm1zTW9kdWxlfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge1R1aUhvdmVyZWRNb2R1bGUsIFR1aVByZXNzZWRNb2R1bGV9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlXcmFwcGVyTW9kdWxlfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1R1aUNoZWNrYm94TW9kdWxlfSBmcm9tICdAdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvY2hlY2tib3gnO1xuXG5pbXBvcnQge1R1aUNoZWNrYm94QmxvY2tDb21wb25lbnR9IGZyb20gJy4vY2hlY2tib3gtYmxvY2suY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgICBUdWlIb3ZlcmVkTW9kdWxlLFxuICAgICAgICBUdWlQcmVzc2VkTW9kdWxlLFxuICAgICAgICBUdWlDaGVja2JveE1vZHVsZSxcbiAgICAgICAgVHVpV3JhcHBlck1vZHVsZSxcbiAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1R1aUNoZWNrYm94QmxvY2tDb21wb25lbnRdLFxuICAgIGV4cG9ydHM6IFtUdWlDaGVja2JveEJsb2NrQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpQ2hlY2tib3hCbG9ja01vZHVsZSB7fVxuIl19