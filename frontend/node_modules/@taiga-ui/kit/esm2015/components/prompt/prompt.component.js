import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';
import { TUI_IS_MOBILE } from '@taiga-ui/cdk';
import { TUI_PROMPT_WORDS } from '@taiga-ui/kit/tokens';
import { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, } from '@tinkoff/ng-polymorpheus';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@tinkoff/ng-polymorpheus";
import * as i3 from "@angular/common";
import * as i4 from "@taiga-ui/cdk";
import * as i5 from "rxjs";
export class TuiPromptComponent {
    constructor(words$, context, isMobile) {
        this.words$ = words$;
        this.context = context;
        this.isMobile = isMobile;
    }
    get appearance() {
        return this.isMobile ? "secondary" /* Secondary */ : "flat" /* Flat */;
    }
}
TuiPromptComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPromptComponent, deps: [{ token: TUI_PROMPT_WORDS }, { token: POLYMORPHEUS_CONTEXT }, { token: TUI_IS_MOBILE }], target: i0.ɵɵFactoryTarget.Component });
TuiPromptComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiPromptComponent, selector: "tui-prompt", ngImport: i0, template: "<div\n    *polymorpheusOutlet=\"context.data?.content as text\"\n    class=\"t-content\"\n    [innerHTML]=\"text\"\n></div>\n<div\n    *ngIf=\"words$ | async as words\"\n    class=\"t-buttons\"\n>\n    <button\n        tuiButton\n        type=\"button\"\n        size=\"m\"\n        class=\"t-button\"\n        [appearance]=\"appearance\"\n        (click)=\"context.completeWith(false)\"\n    >\n        {{ context.data?.no || words.no }}\n    </button>\n    <button\n        tuiButton\n        tuiAutoFocus\n        type=\"button\"\n        size=\"m\"\n        class=\"t-button\"\n        (click)=\"context.completeWith(true)\"\n    >\n        {{ context.data?.yes || words.yes }}\n    </button>\n</div>\n", styles: [".t-content:not(:empty){margin-bottom:1.25rem}.t-buttons{display:flex;justify-content:flex-end;margin-top:.75rem;width:100%}.t-button:last-child{margin-left:.75rem}:host-context(tui-root._mobile) .t-button{flex:1}\n"], components: [{ type: i1.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.TuiAutoFocusDirective, selector: "[tuiAutoFocus]", inputs: ["tuiAutoFocus"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPromptComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-prompt',
                    templateUrl: './prompt.template.html',
                    styleUrls: ['./prompt.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i5.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_PROMPT_WORDS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_MOBILE]
                }] }]; } });
export const TUI_PROMPT = new PolymorpheusComponent(TuiPromptComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbXB0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL3Byb21wdC9wcm9tcHQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvcHJvbXB0L3Byb21wdC50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFNUMsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUNILG9CQUFvQixFQUNwQixxQkFBcUIsR0FFeEIsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7OztBQWVsQyxNQUFNLE9BQU8sa0JBQWtCO0lBQzNCLFlBQ3VDLE1BQTZDLEVBRXZFLE9BQTZELEVBQzlCLFFBQWlCO1FBSHRCLFdBQU0sR0FBTixNQUFNLENBQXVDO1FBRXZFLFlBQU8sR0FBUCxPQUFPLENBQXNEO1FBQzlCLGFBQVEsR0FBUixRQUFRLENBQVM7SUFDMUQsQ0FBQztJQUVKLElBQUksVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLDZCQUF5QixDQUFDLGtCQUFtQixDQUFDO0lBQ3hFLENBQUM7O2dIQVZRLGtCQUFrQixrQkFFZixnQkFBZ0IsYUFDaEIsb0JBQW9CLGFBRXBCLGFBQWE7b0dBTGhCLGtCQUFrQixrREN2Qi9CLG9zQkE4QkE7NEZEUGEsa0JBQWtCO2tCQU45QixTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxZQUFZO29CQUN0QixXQUFXLEVBQUUsd0JBQXdCO29CQUNyQyxTQUFTLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztvQkFDbEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2xEOzswQkFHUSxNQUFNOzJCQUFDLGdCQUFnQjs7MEJBQ3ZCLE1BQU07MkJBQUMsb0JBQW9COzswQkFFM0IsTUFBTTsyQkFBQyxhQUFhOztBQVE3QixNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsSUFBSSxxQkFBcUIsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUVUlfSVNfTU9CSUxFfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpQXBwZWFyYW5jZSwgVHVpRGlhbG9nQ29udGV4dH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtUVUlfUFJPTVBUX1dPUkRTfSBmcm9tICdAdGFpZ2EtdWkva2l0L3Rva2Vucyc7XG5pbXBvcnQge1xuICAgIFBPTFlNT1JQSEVVU19DT05URVhULFxuICAgIFBvbHltb3JwaGV1c0NvbXBvbmVudCxcbiAgICBQb2x5bW9ycGhldXNDb250ZW50LFxufSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGludGVyZmFjZSBUdWlQcm9tcHREYXRhIHtcbiAgICByZWFkb25seSBjb250ZW50PzogUG9seW1vcnBoZXVzQ29udGVudDtcbiAgICByZWFkb25seSB5ZXM/OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgbm8/OiBzdHJpbmc7XG59XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXByb21wdCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3Byb21wdC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9wcm9tcHQuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlQcm9tcHRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9QUk9NUFRfV09SRFMpIHJlYWRvbmx5IHdvcmRzJDogT2JzZXJ2YWJsZTx7eWVzOiBzdHJpbmc7IG5vOiBzdHJpbmd9PixcbiAgICAgICAgQEluamVjdChQT0xZTU9SUEhFVVNfQ09OVEVYVClcbiAgICAgICAgcmVhZG9ubHkgY29udGV4dDogVHVpRGlhbG9nQ29udGV4dDxib29sZWFuLCBUdWlQcm9tcHREYXRhIHwgdW5kZWZpbmVkPixcbiAgICAgICAgQEluamVjdChUVUlfSVNfTU9CSUxFKSBwcml2YXRlIHJlYWRvbmx5IGlzTW9iaWxlOiBib29sZWFuLFxuICAgICkge31cblxuICAgIGdldCBhcHBlYXJhbmNlKCk6IFR1aUFwcGVhcmFuY2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5pc01vYmlsZSA/IFR1aUFwcGVhcmFuY2UuU2Vjb25kYXJ5IDogVHVpQXBwZWFyYW5jZS5GbGF0O1xuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IFRVSV9QUk9NUFQgPSBuZXcgUG9seW1vcnBoZXVzQ29tcG9uZW50KFR1aVByb21wdENvbXBvbmVudCk7XG4iLCI8ZGl2XG4gICAgKnBvbHltb3JwaGV1c091dGxldD1cImNvbnRleHQuZGF0YT8uY29udGVudCBhcyB0ZXh0XCJcbiAgICBjbGFzcz1cInQtY29udGVudFwiXG4gICAgW2lubmVySFRNTF09XCJ0ZXh0XCJcbj48L2Rpdj5cbjxkaXZcbiAgICAqbmdJZj1cIndvcmRzJCB8IGFzeW5jIGFzIHdvcmRzXCJcbiAgICBjbGFzcz1cInQtYnV0dG9uc1wiXG4+XG4gICAgPGJ1dHRvblxuICAgICAgICB0dWlCdXR0b25cbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIHNpemU9XCJtXCJcbiAgICAgICAgY2xhc3M9XCJ0LWJ1dHRvblwiXG4gICAgICAgIFthcHBlYXJhbmNlXT1cImFwcGVhcmFuY2VcIlxuICAgICAgICAoY2xpY2spPVwiY29udGV4dC5jb21wbGV0ZVdpdGgoZmFsc2UpXCJcbiAgICA+XG4gICAgICAgIHt7IGNvbnRleHQuZGF0YT8ubm8gfHwgd29yZHMubm8gfX1cbiAgICA8L2J1dHRvbj5cbiAgICA8YnV0dG9uXG4gICAgICAgIHR1aUJ1dHRvblxuICAgICAgICB0dWlBdXRvRm9jdXNcbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIHNpemU9XCJtXCJcbiAgICAgICAgY2xhc3M9XCJ0LWJ1dHRvblwiXG4gICAgICAgIChjbGljayk9XCJjb250ZXh0LmNvbXBsZXRlV2l0aCh0cnVlKVwiXG4gICAgPlxuICAgICAgICB7eyBjb250ZXh0LmRhdGE/LnllcyB8fCB3b3Jkcy55ZXMgfX1cbiAgICA8L2J1dHRvbj5cbjwvZGl2PlxuIl19