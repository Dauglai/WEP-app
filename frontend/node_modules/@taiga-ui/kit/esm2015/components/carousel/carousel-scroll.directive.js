import { Directive, ElementRef, Inject, Output } from '@angular/core';
import { tuiTypedFromEvent } from '@taiga-ui/cdk';
import { filter, map, tap, throttleTime } from 'rxjs/operators';
import * as i0 from "@angular/core";
export class TuiCarouselScrollDirective {
    constructor(el) {
        this.el = el;
        this.tuiCarouselScroll = tuiTypedFromEvent(this.el.nativeElement, 'wheel').pipe(filter(({ deltaX }) => Math.abs(deltaX) > 20), throttleTime(500), map(({ deltaX }) => Math.sign(deltaX)), tap(() => {
            // So we always have space to scroll and overflow-behavior saves us from back nav
            this.el.nativeElement.scrollLeft = 10;
        }));
    }
}
TuiCarouselScrollDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCarouselScrollDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TuiCarouselScrollDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiCarouselScrollDirective, selector: "[tuiCarouselScroll]", outputs: { tuiCarouselScroll: "tuiCarouselScroll" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCarouselScrollDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiCarouselScroll]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; }, propDecorators: { tuiCarouselScroll: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwtc2Nyb2xsLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL2Nhcm91c2VsL2Nhcm91c2VsLXNjcm9sbC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLFlBQVksRUFBQyxNQUFNLGdCQUFnQixDQUFDOztBQUs5RCxNQUFNLE9BQU8sMEJBQTBCO0lBWW5DLFlBQWlELEVBQTJCO1FBQTNCLE9BQUUsR0FBRixFQUFFLENBQXlCO1FBVm5FLHNCQUFpQixHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FDL0UsTUFBTSxDQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsRUFDM0MsWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUNqQixHQUFHLENBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQ3BDLEdBQUcsQ0FBQyxHQUFHLEVBQUU7WUFDTCxpRkFBaUY7WUFDakYsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUMxQyxDQUFDLENBQUMsQ0FDTCxDQUFDO0lBRTZFLENBQUM7O3dIQVp2RSwwQkFBMEIsa0JBWWYsVUFBVTs0R0FackIsMEJBQTBCOzRGQUExQiwwQkFBMEI7a0JBSHRDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLHFCQUFxQjtpQkFDbEM7OzBCQWFnQixNQUFNOzJCQUFDLFVBQVU7NENBVnJCLGlCQUFpQjtzQkFEekIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3QsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aVR5cGVkRnJvbUV2ZW50fSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7ZmlsdGVyLCBtYXAsIHRhcCwgdGhyb3R0bGVUaW1lfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aUNhcm91c2VsU2Nyb2xsXScsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUNhcm91c2VsU2Nyb2xsRGlyZWN0aXZlIHtcbiAgICBAT3V0cHV0KClcbiAgICByZWFkb25seSB0dWlDYXJvdXNlbFNjcm9sbCA9IHR1aVR5cGVkRnJvbUV2ZW50KHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ3doZWVsJykucGlwZShcbiAgICAgICAgZmlsdGVyKCh7ZGVsdGFYfSkgPT4gTWF0aC5hYnMoZGVsdGFYKSA+IDIwKSxcbiAgICAgICAgdGhyb3R0bGVUaW1lKDUwMCksXG4gICAgICAgIG1hcCgoe2RlbHRhWH0pID0+IE1hdGguc2lnbihkZWx0YVgpKSxcbiAgICAgICAgdGFwKCgpID0+IHtcbiAgICAgICAgICAgIC8vIFNvIHdlIGFsd2F5cyBoYXZlIHNwYWNlIHRvIHNjcm9sbCBhbmQgb3ZlcmZsb3ctYmVoYXZpb3Igc2F2ZXMgdXMgZnJvbSBiYWNrIG5hdlxuICAgICAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnNjcm9sbExlZnQgPSAxMDtcbiAgICAgICAgfSksXG4gICAgKTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSByZWFkb25seSBlbDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4pIHt9XG59XG4iXX0=