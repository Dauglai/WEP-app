import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject, Input, ViewChild, } from '@angular/core';
import { USER_AGENT, WINDOW } from '@ng-web-apis/common';
import { CHROMIUM_EDGE_START_VERSION, tuiDefaultProp, tuiIsEdgeOlderThan, } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
export class TuiProgressCircleComponent {
    constructor(userAgent, win, el) {
        this.userAgent = userAgent;
        this.win = win;
        this.el = el;
        this.value = 0;
        this.max = 1;
        this.color = null;
        this.size = 'm';
    }
    get progressPercentage() {
        return this.value / this.max;
    }
    // TODO: drop support of legacy Edge (EdgeHTML) in v4.x
    get oldEdgeRadiusFallback() {
        if (!tuiIsEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent)) {
            return null;
        }
        const strokeWidth = parseInt(this.win.getComputedStyle(this.progressCircle.nativeElement).strokeWidth, 10);
        return (this.el.nativeElement.offsetWidth - strokeWidth) / 2;
    }
}
TuiProgressCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressCircleComponent, deps: [{ token: USER_AGENT }, { token: WINDOW }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Component });
TuiProgressCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiProgressCircleComponent, selector: "tui-progress-circle", inputs: { value: "value", max: "max", color: "color", size: "size" }, host: { properties: { "style.--tui-progress-color": "this.color", "attr.data-size": "this.size", "style.--progress-percentage": "this.progressPercentage" } }, viewQueries: [{ propertyName: "progressCircle", first: true, predicate: ["progressCircle"], descendants: true, static: true }], ngImport: i0, template: "<progress\n    class=\"t-hidden-progress\"\n    [value]=\"value\"\n    [max]=\"max\"\n></progress>\n\n<svg\n    height=\"100%\"\n    width=\"100%\"\n    aria-hidden=\"true\"\n    class=\"t-svg\"\n>\n    <circle\n        cx=\"50%\"\n        cy=\"50%\"\n        class=\"t-track\"\n        [attr.r]=\"oldEdgeRadiusFallback\"\n    ></circle>\n\n    <circle\n        #progressCircle\n        cx=\"50%\"\n        cy=\"50%\"\n        class=\"t-progress\"\n        [attr.r]=\"oldEdgeRadiusFallback\"\n    ></circle>\n</svg>\n", styles: [":host{position:relative;display:block;color:var(--tui-primary);transform:rotate(-90deg);transform-origin:center;font-size:1rem}:host[data-size=s]{width:2em;height:2em}:host[data-size=s] .t-track{r:.75em;stroke-width:.5em}:host[data-size=s] .t-progress{r:.75em;stroke-width:.5em;stroke-dasharray:4.71238898em;stroke-dashoffset:calc(4.71238898em - var(--progress-percentage) * 4.71238898em)}:host[data-size=m]{width:3em;height:3em}:host[data-size=m] .t-track{r:1.375em;stroke-width:.25em}:host[data-size=m] .t-progress{r:1.3125em;stroke-width:.375em;stroke-dasharray:8.24668072em;stroke-dashoffset:calc(8.24668072em - var(--progress-percentage) * 8.24668072em)}:host[data-size=l]{width:4em;height:4em}:host[data-size=l] .t-track{r:1.875em;stroke-width:.25em}:host[data-size=l] .t-progress{r:1.8125em;stroke-width:.375em;stroke-dasharray:11.38827337em;stroke-dashoffset:calc(11.38827337em - var(--progress-percentage) * 11.38827337em)}:host[data-size=xl]{width:7em;height:7em}:host[data-size=xl] .t-track{r:3.375em;stroke-width:.25em}:host[data-size=xl] .t-progress{r:3.3125em;stroke-width:.375em;stroke-dasharray:20.81305133em;stroke-dashoffset:calc(20.81305133em - var(--progress-percentage) * 20.81305133em)}.t-track{fill:transparent;stroke:var(--tui-base-03)}.t-progress{fill:transparent;stroke:var(--tui-progress-color, currentColor);transition:stroke-dashoffset var(--tui-duration) linear}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;width:1px;margin:-1px;overflow:hidden;padding:0}.t-svg{overflow:unset}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiProgressCircleComponent.prototype, "value", void 0);
__decorate([
    tuiDefaultProp()
], TuiProgressCircleComponent.prototype, "max", void 0);
__decorate([
    tuiDefaultProp()
], TuiProgressCircleComponent.prototype, "color", void 0);
__decorate([
    tuiDefaultProp()
], TuiProgressCircleComponent.prototype, "size", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressCircleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-progress-circle',
                    templateUrl: './progress-circle.template.html',
                    styleUrls: ['./progress-circle.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [USER_AGENT]
                }] }, { type: Window, decorators: [{
                    type: Inject,
                    args: [WINDOW]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; }, propDecorators: { progressCircle: [{
                type: ViewChild,
                args: ['progressCircle', { static: true }]
            }], value: [{
                type: Input
            }], max: [{
                type: Input
            }], color: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['style.--tui-progress-color']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], progressPercentage: [{
                type: HostBinding,
                args: ['style.--progress-percentage']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL3Byb2dyZXNzL3Byb2dyZXNzLWNpcmNsZS9wcm9ncmVzcy1jaXJjbGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvcHJvZ3Jlc3MvcHJvZ3Jlc3MtY2lyY2xlL3Byb2dyZXNzLWNpcmNsZS50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEVBQ0wsU0FBUyxHQUNaLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUNILDJCQUEyQixFQUMzQixjQUFjLEVBQ2Qsa0JBQWtCLEdBQ3JCLE1BQU0sZUFBZSxDQUFDOztBQVN2QixNQUFNLE9BQU8sMEJBQTBCO0lBeUNuQyxZQUN5QyxTQUFpQixFQUNyQixHQUFXLEVBQ1AsRUFBMkI7UUFGM0IsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQUNyQixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQ1AsT0FBRSxHQUFGLEVBQUUsQ0FBeUI7UUF0Q3BFLFVBQUssR0FBRyxDQUFDLENBQUM7UUFJVixRQUFHLEdBQUcsQ0FBQyxDQUFDO1FBS1IsVUFBSyxHQUFrQixJQUFJLENBQUM7UUFLNUIsU0FBSSxHQUF5QixHQUFHLENBQUM7SUF5QjlCLENBQUM7SUF2QkosSUFDSSxrQkFBa0I7UUFDbEIsT0FBTyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDakMsQ0FBQztJQUVELHVEQUF1RDtJQUN2RCxJQUFJLHFCQUFxQjtRQUNyQixJQUFJLENBQUMsa0JBQWtCLENBQUMsMkJBQTJCLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQ2xFLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFFRCxNQUFNLFdBQVcsR0FBRyxRQUFRLENBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxXQUFXLEVBQ3hFLEVBQUUsQ0FDTCxDQUFDO1FBRUYsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakUsQ0FBQzs7d0hBdkNRLDBCQUEwQixrQkEwQ3ZCLFVBQVUsYUFDVixNQUFNLGFBQ04sVUFBVTs0R0E1Q2IsMEJBQTBCLGdhQ3ZCdkMsdWdCQTJCQTtBREVJO0lBREMsY0FBYyxFQUFFO3lEQUNQO0FBSVY7SUFEQyxjQUFjLEVBQUU7dURBQ1Q7QUFLUjtJQURDLGNBQWMsRUFBRTt5REFDVztBQUs1QjtJQURDLGNBQWMsRUFBRTt3REFDZ0I7NEZBcEJ4QiwwQkFBMEI7a0JBTnRDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsV0FBVyxFQUFFLGlDQUFpQztvQkFDOUMsU0FBUyxFQUFFLENBQUMsOEJBQThCLENBQUM7b0JBQzNDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs7MEJBMkNRLE1BQU07MkJBQUMsVUFBVTs4QkFDb0IsTUFBTTswQkFBM0MsTUFBTTsyQkFBQyxNQUFNOzswQkFDYixNQUFNOzJCQUFDLFVBQVU7NENBMUNMLGNBQWM7c0JBRDlCLFNBQVM7dUJBQUMsZ0JBQWdCLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDO2dCQUszQyxLQUFLO3NCQUZKLEtBQUs7Z0JBTU4sR0FBRztzQkFGRixLQUFLO2dCQU9OLEtBQUs7c0JBSEosS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQyw0QkFBNEI7Z0JBT3pDLElBQUk7c0JBSEgsS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQyxnQkFBZ0I7Z0JBS3pCLGtCQUFrQjtzQkFEckIsV0FBVzt1QkFBQyw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBFbGVtZW50UmVmLFxuICAgIEhvc3RCaW5kaW5nLFxuICAgIEluamVjdCxcbiAgICBJbnB1dCxcbiAgICBWaWV3Q2hpbGQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtVU0VSX0FHRU5ULCBXSU5ET1d9IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHtcbiAgICBDSFJPTUlVTV9FREdFX1NUQVJUX1ZFUlNJT04sXG4gICAgdHVpRGVmYXVsdFByb3AsXG4gICAgdHVpSXNFZGdlT2xkZXJUaGFuLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpU2l6ZVMsIFR1aVNpemVYTH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1wcm9ncmVzcy1jaXJjbGUnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wcm9ncmVzcy1jaXJjbGUudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcHJvZ3Jlc3MtY2lyY2xlLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUHJvZ3Jlc3NDaXJjbGVDb21wb25lbnQge1xuICAgIEBWaWV3Q2hpbGQoJ3Byb2dyZXNzQ2lyY2xlJywge3N0YXRpYzogdHJ1ZX0pXG4gICAgcHJpdmF0ZSByZWFkb25seSBwcm9ncmVzc0NpcmNsZSE6IEVsZW1lbnRSZWY8U1ZHQ2lyY2xlRWxlbWVudD47XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgdmFsdWUgPSAwO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIG1heCA9IDE7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnc3R5bGUuLS10dWktcHJvZ3Jlc3MtY29sb3InKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgY29sb3I6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1zaXplJylcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHNpemU6IFR1aVNpemVTIHwgVHVpU2l6ZVhMID0gJ20nO1xuXG4gICAgQEhvc3RCaW5kaW5nKCdzdHlsZS4tLXByb2dyZXNzLXBlcmNlbnRhZ2UnKVxuICAgIGdldCBwcm9ncmVzc1BlcmNlbnRhZ2UoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUgLyB0aGlzLm1heDtcbiAgICB9XG5cbiAgICAvLyBUT0RPOiBkcm9wIHN1cHBvcnQgb2YgbGVnYWN5IEVkZ2UgKEVkZ2VIVE1MKSBpbiB2NC54XG4gICAgZ2V0IG9sZEVkZ2VSYWRpdXNGYWxsYmFjaygpOiBudW1iZXIgfCBudWxsIHtcbiAgICAgICAgaWYgKCF0dWlJc0VkZ2VPbGRlclRoYW4oQ0hST01JVU1fRURHRV9TVEFSVF9WRVJTSU9OLCB0aGlzLnVzZXJBZ2VudCkpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc3Ryb2tlV2lkdGggPSBwYXJzZUludChcbiAgICAgICAgICAgIHRoaXMud2luLmdldENvbXB1dGVkU3R5bGUodGhpcy5wcm9ncmVzc0NpcmNsZS5uYXRpdmVFbGVtZW50KS5zdHJva2VXaWR0aCxcbiAgICAgICAgICAgIDEwLFxuICAgICAgICApO1xuXG4gICAgICAgIHJldHVybiAodGhpcy5lbC5uYXRpdmVFbGVtZW50Lm9mZnNldFdpZHRoIC0gc3Ryb2tlV2lkdGgpIC8gMjtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChVU0VSX0FHRU5UKSBwcml2YXRlIHJlYWRvbmx5IHVzZXJBZ2VudDogc3RyaW5nLFxuICAgICAgICBASW5qZWN0KFdJTkRPVykgcHJpdmF0ZSByZWFkb25seSB3aW46IFdpbmRvdyxcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICApIHt9XG59XG4iLCI8cHJvZ3Jlc3NcbiAgICBjbGFzcz1cInQtaGlkZGVuLXByb2dyZXNzXCJcbiAgICBbdmFsdWVdPVwidmFsdWVcIlxuICAgIFttYXhdPVwibWF4XCJcbj48L3Byb2dyZXNzPlxuXG48c3ZnXG4gICAgaGVpZ2h0PVwiMTAwJVwiXG4gICAgd2lkdGg9XCIxMDAlXCJcbiAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgIGNsYXNzPVwidC1zdmdcIlxuPlxuICAgIDxjaXJjbGVcbiAgICAgICAgY3g9XCI1MCVcIlxuICAgICAgICBjeT1cIjUwJVwiXG4gICAgICAgIGNsYXNzPVwidC10cmFja1wiXG4gICAgICAgIFthdHRyLnJdPVwib2xkRWRnZVJhZGl1c0ZhbGxiYWNrXCJcbiAgICA+PC9jaXJjbGU+XG5cbiAgICA8Y2lyY2xlXG4gICAgICAgICNwcm9ncmVzc0NpcmNsZVxuICAgICAgICBjeD1cIjUwJVwiXG4gICAgICAgIGN5PVwiNTAlXCJcbiAgICAgICAgY2xhc3M9XCJ0LXByb2dyZXNzXCJcbiAgICAgICAgW2F0dHIucl09XCJvbGRFZGdlUmFkaXVzRmFsbGJhY2tcIlxuICAgID48L2NpcmNsZT5cbjwvc3ZnPlxuIl19