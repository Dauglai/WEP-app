import { __decorate } from "tslib";
import { Directive, ElementRef, Inject, Input } from '@angular/core';
import { USER_AGENT } from '@ng-web-apis/common';
import { CHROMIUM_EDGE_START_VERSION, TuiDestroyService, tuiIsEdgeOlderThan, tuiPure, TuiResizeService, } from '@taiga-ui/cdk';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "rxjs";
function calculateColorSegments(colors, progressWidth) {
    const segmentWidth = Math.ceil(progressWidth / colors.length);
    const colorsString = colors.reduce((acc, color, i) => `${acc}, ${color} ${i * segmentWidth}px ${(i + 1) * segmentWidth}px`, '');
    return `linear-gradient(to right ${colorsString})`;
}
export class TuiProgressColorSegmentsDirective {
    constructor(el, resize$, userAgent) {
        this.el = el;
        this.resize$ = resize$;
        this.userAgent = userAgent;
        // TODO: drop support of legacy Edge (EdgeHTML) in v4.x
        this.isOldBrowsers = tuiIsEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent);
        this.colors = [];
    }
    get calcSegments$() {
        return this.resize$.pipe(map(() => this.isOldBrowsers
            ? this.colors[0]
            : calculateColorSegments(this.colors, this.el.nativeElement.offsetWidth)));
    }
}
TuiProgressColorSegmentsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressColorSegmentsDirective, deps: [{ token: ElementRef }, { token: TuiResizeService }, { token: USER_AGENT }], target: i0.ɵɵFactoryTarget.Directive });
TuiProgressColorSegmentsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiProgressColorSegmentsDirective, selector: "progress[tuiProgressBar][tuiProgressColorSegments]", inputs: { colors: ["tuiProgressColorSegments", "colors"] }, host: { listeners: { "$.style.--tui-progress-color": "0" }, properties: { "$.style.--tui-progress-color": "calcSegments$" } }, providers: [TuiDestroyService, TuiResizeService], ngImport: i0 });
__decorate([
    tuiPure
], TuiProgressColorSegmentsDirective.prototype, "calcSegments$", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressColorSegmentsDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'progress[tuiProgressBar][tuiProgressColorSegments]',
                    host: {
                        '[$.style.--tui-progress-color]': 'calcSegments$',
                        '($.style.--tui-progress-color)': '0',
                    },
                    providers: [TuiDestroyService, TuiResizeService],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TuiResizeService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [USER_AGENT]
                }] }]; }, propDecorators: { colors: [{
                type: Input,
                args: ['tuiProgressColorSegments']
            }], calcSegments$: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtY29sb3Itc2VnbWVudHMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvcHJvZ3Jlc3MvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWNvbG9yLXNlZ21lbnRzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDL0MsT0FBTyxFQUNILDJCQUEyQixFQUMzQixpQkFBaUIsRUFDakIsa0JBQWtCLEVBQ2xCLE9BQU8sRUFDUCxnQkFBZ0IsR0FDbkIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDOzs7QUFFbkMsU0FBUyxzQkFBc0IsQ0FBQyxNQUFnQixFQUFFLGFBQXFCO0lBQ25FLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5RCxNQUFNLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUM5QixDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FDZCxHQUFHLEdBQUcsS0FBSyxLQUFLLElBQUksQ0FBQyxHQUFHLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxZQUFZLElBQUksRUFDeEUsRUFBRSxDQUNMLENBQUM7SUFFRixPQUFPLDRCQUE0QixZQUFZLEdBQUcsQ0FBQztBQUN2RCxDQUFDO0FBVUQsTUFBTSxPQUFPLGlDQUFpQztJQXdCMUMsWUFDeUMsRUFBbUMsRUFDN0IsT0FBNEIsRUFDbEMsU0FBaUI7UUFGakIsT0FBRSxHQUFGLEVBQUUsQ0FBaUM7UUFDN0IsWUFBTyxHQUFQLE9BQU8sQ0FBcUI7UUFDbEMsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQTFCMUQsdURBQXVEO1FBQ3RDLGtCQUFhLEdBQUcsa0JBQWtCLENBQy9DLDJCQUEyQixFQUMzQixJQUFJLENBQUMsU0FBUyxDQUNqQixDQUFDO1FBR0YsV0FBTSxHQUFhLEVBQUUsQ0FBQztJQW9CbkIsQ0FBQztJQWpCSixJQUFJLGFBQWE7UUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUNwQixHQUFHLENBQUMsR0FBRyxFQUFFLENBQ0wsSUFBSSxDQUFDLGFBQWE7WUFDZCxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDaEIsQ0FBQyxDQUFDLHNCQUFzQixDQUNsQixJQUFJLENBQUMsTUFBTSxFQUNYLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FDcEMsQ0FDVixDQUNKLENBQUM7SUFDTixDQUFDOzsrSEF0QlEsaUNBQWlDLGtCQXlCOUIsVUFBVSxhQUNWLGdCQUFnQixhQUNoQixVQUFVO21IQTNCYixpQ0FBaUMsd1FBRi9CLENBQUMsaUJBQWlCLEVBQUUsZ0JBQWdCLENBQUM7QUFhaEQ7SUFEQyxPQUFPO3NFQVlQOzRGQXRCUSxpQ0FBaUM7a0JBUjdDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLG9EQUFvRDtvQkFDOUQsSUFBSSxFQUFFO3dCQUNGLGdDQUFnQyxFQUFFLGVBQWU7d0JBQ2pELGdDQUFnQyxFQUFFLEdBQUc7cUJBQ3hDO29CQUNELFNBQVMsRUFBRSxDQUFDLGlCQUFpQixFQUFFLGdCQUFnQixDQUFDO2lCQUNuRDs7MEJBMEJRLE1BQU07MkJBQUMsVUFBVTs7MEJBQ2pCLE1BQU07MkJBQUMsZ0JBQWdCOzswQkFDdkIsTUFBTTsyQkFBQyxVQUFVOzRDQW5CdEIsTUFBTTtzQkFETCxLQUFLO3VCQUFDLDBCQUEwQjtnQkFJN0IsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3QsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VVNFUl9BR0VOVH0gZnJvbSAnQG5nLXdlYi1hcGlzL2NvbW1vbic7XG5pbXBvcnQge1xuICAgIENIUk9NSVVNX0VER0VfU1RBUlRfVkVSU0lPTixcbiAgICBUdWlEZXN0cm95U2VydmljZSxcbiAgICB0dWlJc0VkZ2VPbGRlclRoYW4sXG4gICAgdHVpUHVyZSxcbiAgICBUdWlSZXNpemVTZXJ2aWNlLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5mdW5jdGlvbiBjYWxjdWxhdGVDb2xvclNlZ21lbnRzKGNvbG9yczogc3RyaW5nW10sIHByb2dyZXNzV2lkdGg6IG51bWJlcik6IHN0cmluZyB7XG4gICAgY29uc3Qgc2VnbWVudFdpZHRoID0gTWF0aC5jZWlsKHByb2dyZXNzV2lkdGggLyBjb2xvcnMubGVuZ3RoKTtcbiAgICBjb25zdCBjb2xvcnNTdHJpbmcgPSBjb2xvcnMucmVkdWNlKFxuICAgICAgICAoYWNjLCBjb2xvciwgaSkgPT5cbiAgICAgICAgICAgIGAke2FjY30sICR7Y29sb3J9ICR7aSAqIHNlZ21lbnRXaWR0aH1weCAkeyhpICsgMSkgKiBzZWdtZW50V2lkdGh9cHhgLFxuICAgICAgICAnJyxcbiAgICApO1xuXG4gICAgcmV0dXJuIGBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgJHtjb2xvcnNTdHJpbmd9KWA7XG59XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAncHJvZ3Jlc3NbdHVpUHJvZ3Jlc3NCYXJdW3R1aVByb2dyZXNzQ29sb3JTZWdtZW50c10nLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1skLnN0eWxlLi0tdHVpLXByb2dyZXNzLWNvbG9yXSc6ICdjYWxjU2VnbWVudHMkJyxcbiAgICAgICAgJygkLnN0eWxlLi0tdHVpLXByb2dyZXNzLWNvbG9yKSc6ICcwJyxcbiAgICB9LFxuICAgIHByb3ZpZGVyczogW1R1aURlc3Ryb3lTZXJ2aWNlLCBUdWlSZXNpemVTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUHJvZ3Jlc3NDb2xvclNlZ21lbnRzRGlyZWN0aXZlIHtcbiAgICAvLyBUT0RPOiBkcm9wIHN1cHBvcnQgb2YgbGVnYWN5IEVkZ2UgKEVkZ2VIVE1MKSBpbiB2NC54XG4gICAgcHJpdmF0ZSByZWFkb25seSBpc09sZEJyb3dzZXJzID0gdHVpSXNFZGdlT2xkZXJUaGFuKFxuICAgICAgICBDSFJPTUlVTV9FREdFX1NUQVJUX1ZFUlNJT04sXG4gICAgICAgIHRoaXMudXNlckFnZW50LFxuICAgICk7XG5cbiAgICBASW5wdXQoJ3R1aVByb2dyZXNzQ29sb3JTZWdtZW50cycpXG4gICAgY29sb3JzOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgQHR1aVB1cmVcbiAgICBnZXQgY2FsY1NlZ21lbnRzJCgpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXNpemUkLnBpcGUoXG4gICAgICAgICAgICBtYXAoKCkgPT5cbiAgICAgICAgICAgICAgICB0aGlzLmlzT2xkQnJvd3NlcnNcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLmNvbG9yc1swXVxuICAgICAgICAgICAgICAgICAgICA6IGNhbGN1bGF0ZUNvbG9yU2VnbWVudHMoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29sb3JzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGgsXG4gICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICksXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSByZWFkb25seSBlbDogRWxlbWVudFJlZjxIVE1MUHJvZ3Jlc3NFbGVtZW50PixcbiAgICAgICAgQEluamVjdChUdWlSZXNpemVTZXJ2aWNlKSBwcml2YXRlIHJlYWRvbmx5IHJlc2l6ZSQ6IE9ic2VydmFibGU8dW5rbm93bj4sXG4gICAgICAgIEBJbmplY3QoVVNFUl9BR0VOVCkgcHJpdmF0ZSByZWFkb25seSB1c2VyQWdlbnQ6IHN0cmluZyxcbiAgICApIHt9XG59XG4iXX0=