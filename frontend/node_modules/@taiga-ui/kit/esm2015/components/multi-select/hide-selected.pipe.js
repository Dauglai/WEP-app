import { __decorate } from "tslib";
import { Inject, Pipe } from '@angular/core';
import { tuiPure } from '@taiga-ui/cdk';
import { tuiIsFlat } from '@taiga-ui/kit/utils';
import { TuiMultiSelectComponent } from './multi-select.component';
import * as i0 from "@angular/core";
import * as i1 from "./multi-select.component";
export class TuiHideSelectedPipe {
    constructor(component) {
        this.component = component;
    }
    transform(items) {
        const { value, identityMatcher } = this.component;
        if (!items) {
            return null;
        }
        return tuiIsFlat(items)
            ? this.filter(items, value, identityMatcher)
            : this.filter2d(items, value, identityMatcher);
    }
    filter2d(items, value, matcher) {
        return items.map(subItems => this.filter(subItems, value, matcher));
    }
    filter(items, value, matcher) {
        return items.filter(item => value.every(selected => !matcher(selected, item)));
    }
}
TuiHideSelectedPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHideSelectedPipe, deps: [{ token: TuiMultiSelectComponent }], target: i0.ɵɵFactoryTarget.Pipe });
TuiHideSelectedPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHideSelectedPipe, name: "tuiHideSelected", pure: false });
__decorate([
    tuiPure
], TuiHideSelectedPipe.prototype, "filter2d", null);
__decorate([
    tuiPure
], TuiHideSelectedPipe.prototype, "filter", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHideSelectedPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: `tuiHideSelected`,
                    pure: false,
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiMultiSelectComponent, decorators: [{
                    type: Inject,
                    args: [TuiMultiSelectComponent]
                }] }]; }, propDecorators: { filter2d: [], filter: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZS1zZWxlY3RlZC5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvbXVsdGktc2VsZWN0L2hpZGUtc2VsZWN0ZWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBcUIsT0FBTyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUU5QyxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7O0FBTWpFLE1BQU0sT0FBTyxtQkFBbUI7SUFDNUIsWUFFcUIsU0FBdUM7UUFBdkMsY0FBUyxHQUFULFNBQVMsQ0FBOEI7SUFDekQsQ0FBQztJQU1KLFNBQVMsQ0FDTCxLQUF3RDtRQUV4RCxNQUFNLEVBQUMsS0FBSyxFQUFFLGVBQWUsRUFBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFaEQsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNSLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFFRCxPQUFPLFNBQVMsQ0FBQyxLQUFLLENBQUM7WUFDbkIsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUM7WUFDNUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBR08sUUFBUSxDQUNaLEtBQWtDLEVBQ2xDLEtBQW1CLEVBQ25CLE9BQThCO1FBRTlCLE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFHTyxNQUFNLENBQ1YsS0FBbUIsRUFDbkIsS0FBbUIsRUFDbkIsT0FBOEI7UUFFOUIsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkYsQ0FBQzs7aUhBeENRLG1CQUFtQixrQkFFaEIsdUJBQXVCOytHQUYxQixtQkFBbUI7QUF5QjVCO0lBREMsT0FBTzttREFPUDtBQUdEO0lBREMsT0FBTztpREFPUDs0RkF4Q1EsbUJBQW1CO2tCQUovQixJQUFJO21CQUFDO29CQUNGLElBQUksRUFBRSxpQkFBaUI7b0JBQ3ZCLElBQUksRUFBRSxLQUFLO2lCQUNkOzswQkFHUSxNQUFNOzJCQUFDLHVCQUF1Qjs0Q0F1QjNCLFFBQVEsTUFTUixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3QsIFBpcGUsIFBpcGVUcmFuc2Zvcm19IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlJZGVudGl0eU1hdGNoZXIsIHR1aVB1cmV9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHt0dWlJc0ZsYXR9IGZyb20gJ0B0YWlnYS11aS9raXQvdXRpbHMnO1xuXG5pbXBvcnQge1R1aU11bHRpU2VsZWN0Q29tcG9uZW50fSBmcm9tICcuL211bHRpLXNlbGVjdC5jb21wb25lbnQnO1xuXG5AUGlwZSh7XG4gICAgbmFtZTogYHR1aUhpZGVTZWxlY3RlZGAsXG4gICAgcHVyZTogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUhpZGVTZWxlY3RlZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUdWlNdWx0aVNlbGVjdENvbXBvbmVudClcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBjb21wb25lbnQ6IFR1aU11bHRpU2VsZWN0Q29tcG9uZW50PGFueT4sXG4gICAgKSB7fVxuXG4gICAgdHJhbnNmb3JtPFQ+KGl0ZW1zOiByZWFkb25seSBUW10gfCBudWxsKTogcmVhZG9ubHkgVFtdIHwgbnVsbDtcbiAgICB0cmFuc2Zvcm08VD4oXG4gICAgICAgIGl0ZW1zOiBSZWFkb25seUFycmF5PHJlYWRvbmx5IFRbXT4gfCBudWxsLFxuICAgICk6IFJlYWRvbmx5QXJyYXk8cmVhZG9ubHkgVFtdPiB8IG51bGw7XG4gICAgdHJhbnNmb3JtPFQ+KFxuICAgICAgICBpdGVtczogUmVhZG9ubHlBcnJheTxyZWFkb25seSBUW10+IHwgcmVhZG9ubHkgVFtdIHwgbnVsbCxcbiAgICApOiBSZWFkb25seUFycmF5PHJlYWRvbmx5IFRbXT4gfCByZWFkb25seSBUW10gfCBudWxsIHtcbiAgICAgICAgY29uc3Qge3ZhbHVlLCBpZGVudGl0eU1hdGNoZXJ9ID0gdGhpcy5jb21wb25lbnQ7XG5cbiAgICAgICAgaWYgKCFpdGVtcykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHVpSXNGbGF0KGl0ZW1zKVxuICAgICAgICAgICAgPyB0aGlzLmZpbHRlcihpdGVtcywgdmFsdWUsIGlkZW50aXR5TWF0Y2hlcilcbiAgICAgICAgICAgIDogdGhpcy5maWx0ZXIyZChpdGVtcywgdmFsdWUsIGlkZW50aXR5TWF0Y2hlcik7XG4gICAgfVxuXG4gICAgQHR1aVB1cmVcbiAgICBwcml2YXRlIGZpbHRlcjJkPFQ+KFxuICAgICAgICBpdGVtczogUmVhZG9ubHlBcnJheTxyZWFkb25seSBUW10+LFxuICAgICAgICB2YWx1ZTogcmVhZG9ubHkgVFtdLFxuICAgICAgICBtYXRjaGVyOiBUdWlJZGVudGl0eU1hdGNoZXI8VD4sXG4gICAgKTogUmVhZG9ubHlBcnJheTxyZWFkb25seSBUW10+IHtcbiAgICAgICAgcmV0dXJuIGl0ZW1zLm1hcChzdWJJdGVtcyA9PiB0aGlzLmZpbHRlcihzdWJJdGVtcywgdmFsdWUsIG1hdGNoZXIpKTtcbiAgICB9XG5cbiAgICBAdHVpUHVyZVxuICAgIHByaXZhdGUgZmlsdGVyPFQ+KFxuICAgICAgICBpdGVtczogcmVhZG9ubHkgVFtdLFxuICAgICAgICB2YWx1ZTogcmVhZG9ubHkgVFtdLFxuICAgICAgICBtYXRjaGVyOiBUdWlJZGVudGl0eU1hdGNoZXI8VD4sXG4gICAgKTogcmVhZG9ubHkgVFtdIHtcbiAgICAgICAgcmV0dXJuIGl0ZW1zLmZpbHRlcihpdGVtID0+IHZhbHVlLmV2ZXJ5KHNlbGVjdGVkID0+ICFtYXRjaGVyKHNlbGVjdGVkLCBpdGVtKSkpO1xuICAgIH1cbn1cbiJdfQ==