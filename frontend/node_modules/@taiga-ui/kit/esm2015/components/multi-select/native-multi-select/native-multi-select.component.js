import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';
import { tuiAsDataList } from '@taiga-ui/core';
import { AbstractTuiNativeMultiSelect } from './native-multi-select';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/components/data-list-wrapper";
import * as i2 from "@angular/common";
import * as i3 from "@taiga-ui/core";
import * as i4 from "../multi-select-group/multi-select-group.directive";
import * as i5 from "@angular/forms";
import * as i6 from "@taiga-ui/cdk";
export class TuiNativeMultiSelectComponent extends AbstractTuiNativeMultiSelect {
    constructor() {
        super(...arguments);
        this.items = [];
    }
}
TuiNativeMultiSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNativeMultiSelectComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TuiNativeMultiSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNativeMultiSelectComponent, selector: "select[multiple][tuiSelect]:not([labels])", inputs: { items: "items" }, host: { listeners: { "change": "onValueChange()", "click.stop.silent": "0", "mousedown.stop.silent": "0" }, properties: { "attr.aria-invalid": "host.invalid", "disabled": "host.disabled || control.readOnly", "tabIndex": "host.focusable ? 0 : -1" } }, providers: [
        tuiAsDataList(TuiNativeMultiSelectComponent),
        {
            provide: TemplateRef,
            deps: [TuiNativeMultiSelectComponent],
            useFactory: ({ datalist }) => datalist,
        },
        {
            provide: AbstractTuiNativeMultiSelect,
            useExisting: TuiNativeMultiSelectComponent,
        },
    ], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"control.control?.valueChanges | async\"></ng-container>\n\n<tui-data-list-wrapper\n    *tuiDataList\n    tuiMultiSelectGroup\n    [items]=\"items\"\n    [disabledItemHandler]=\"disabledItemHandler || host.disableItemHandler\"\n></tui-data-list-wrapper>\n<option\n    *ngFor=\"let option of items\"\n    [selected]=\"option | tuiMapper : selectedMapper : host.value\"\n    [value]=\"option\"\n    [disabled]=\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\"\n>\n    {{ option }}\n</option>\n", styles: [":host{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0}\n"], components: [{ type: i1.TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels])", inputs: ["items"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: i4.TuiMultiSelectGroupDirective, selector: "[tuiMultiSelectGroup]" }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i5.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }], pipes: { "async": i2.AsyncPipe, "tuiMapper": i6.TuiMapperPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNativeMultiSelectComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'select[multiple][tuiSelect]:not([labels])',
                    templateUrl: './native-multi-select.template.html',
                    providers: [
                        tuiAsDataList(TuiNativeMultiSelectComponent),
                        {
                            provide: TemplateRef,
                            deps: [TuiNativeMultiSelectComponent],
                            useFactory: ({ datalist }) => datalist,
                        },
                        {
                            provide: AbstractTuiNativeMultiSelect,
                            useExisting: TuiNativeMultiSelectComponent,
                        },
                    ],
                    host: {
                        '[attr.aria-invalid]': 'host.invalid',
                        '[disabled]': 'host.disabled || control.readOnly',
                        '[tabIndex]': 'host.focusable ? 0 : -1',
                        '(change)': 'onValueChange()',
                        '(click.stop.silent)': '0',
                        '(mousedown.stop.silent)': '0',
                    },
                    styleUrls: ['./native-multi-select.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { items: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLW11bHRpLXNlbGVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9tdWx0aS1zZWxlY3QvbmF0aXZlLW11bHRpLXNlbGVjdC9uYXRpdmUtbXVsdGktc2VsZWN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL211bHRpLXNlbGVjdC9uYXRpdmUtbXVsdGktc2VsZWN0L25hdGl2ZS1tdWx0aS1zZWxlY3QudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBQyw0QkFBNEIsRUFBQyxNQUFNLHVCQUF1QixDQUFDOzs7Ozs7OztBQTRCbkUsTUFBTSxPQUFPLDZCQUE4QixTQUFRLDRCQUE0QjtJQTFCL0U7O1FBNEJJLFVBQUssR0FBNkIsRUFBRSxDQUFDO0tBQ3hDOzsySEFIWSw2QkFBNkI7K0dBQTdCLDZCQUE2QiwyVkF2QjNCO1FBQ1AsYUFBYSxDQUFDLDZCQUE2QixDQUFDO1FBQzVDO1lBQ0ksT0FBTyxFQUFFLFdBQVc7WUFDcEIsSUFBSSxFQUFFLENBQUMsNkJBQTZCLENBQUM7WUFDckMsVUFBVSxFQUFFLENBQUMsRUFBQyxRQUFRLEVBQWdDLEVBQUUsRUFBRSxDQUFDLFFBQVE7U0FDdEU7UUFDRDtZQUNJLE9BQU8sRUFBRSw0QkFBNEI7WUFDckMsV0FBVyxFQUFFLDZCQUE2QjtTQUM3QztLQUNKLGlEQ25CTCx3aUJBZ0JBOzRGRGVhLDZCQUE2QjtrQkExQnpDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLDJDQUEyQztvQkFDckQsV0FBVyxFQUFFLHFDQUFxQztvQkFDbEQsU0FBUyxFQUFFO3dCQUNQLGFBQWEsK0JBQStCO3dCQUM1Qzs0QkFDSSxPQUFPLEVBQUUsV0FBVzs0QkFDcEIsSUFBSSxFQUFFLCtCQUErQjs0QkFDckMsVUFBVSxFQUFFLENBQUMsRUFBQyxRQUFRLEVBQWdDLEVBQUUsRUFBRSxDQUFDLFFBQVE7eUJBQ3RFO3dCQUNEOzRCQUNJLE9BQU8sRUFBRSw0QkFBNEI7NEJBQ3JDLFdBQVcsK0JBQStCO3lCQUM3QztxQkFDSjtvQkFDRCxJQUFJLEVBQUU7d0JBQ0YscUJBQXFCLEVBQUUsY0FBYzt3QkFDckMsWUFBWSxFQUFFLG1DQUFtQzt3QkFDakQsWUFBWSxFQUFFLHlCQUF5Qjt3QkFDdkMsVUFBVSxFQUFFLGlCQUFpQjt3QkFDN0IscUJBQXFCLEVBQUUsR0FBRzt3QkFDMUIseUJBQXlCLEVBQUUsR0FBRztxQkFDakM7b0JBQ0QsU0FBUyxFQUFFLENBQUMsa0NBQWtDLENBQUM7b0JBQy9DLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs4QkFHRyxLQUFLO3NCQURKLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aUFzRGF0YUxpc3R9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcblxuaW1wb3J0IHtBYnN0cmFjdFR1aU5hdGl2ZU11bHRpU2VsZWN0fSBmcm9tICcuL25hdGl2ZS1tdWx0aS1zZWxlY3QnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3NlbGVjdFttdWx0aXBsZV1bdHVpU2VsZWN0XTpub3QoW2xhYmVsc10pJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbmF0aXZlLW11bHRpLXNlbGVjdC50ZW1wbGF0ZS5odG1sJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpQXNEYXRhTGlzdChUdWlOYXRpdmVNdWx0aVNlbGVjdENvbXBvbmVudCksXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRlbXBsYXRlUmVmLFxuICAgICAgICAgICAgZGVwczogW1R1aU5hdGl2ZU11bHRpU2VsZWN0Q29tcG9uZW50XSxcbiAgICAgICAgICAgIHVzZUZhY3Rvcnk6ICh7ZGF0YWxpc3R9OiBUdWlOYXRpdmVNdWx0aVNlbGVjdENvbXBvbmVudCkgPT4gZGF0YWxpc3QsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IEFic3RyYWN0VHVpTmF0aXZlTXVsdGlTZWxlY3QsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogVHVpTmF0aXZlTXVsdGlTZWxlY3RDb21wb25lbnQsXG4gICAgICAgIH0sXG4gICAgXSxcbiAgICBob3N0OiB7XG4gICAgICAgICdbYXR0ci5hcmlhLWludmFsaWRdJzogJ2hvc3QuaW52YWxpZCcsXG4gICAgICAgICdbZGlzYWJsZWRdJzogJ2hvc3QuZGlzYWJsZWQgfHwgY29udHJvbC5yZWFkT25seScsXG4gICAgICAgICdbdGFiSW5kZXhdJzogJ2hvc3QuZm9jdXNhYmxlID8gMCA6IC0xJyxcbiAgICAgICAgJyhjaGFuZ2UpJzogJ29uVmFsdWVDaGFuZ2UoKScsXG4gICAgICAgICcoY2xpY2suc3RvcC5zaWxlbnQpJzogJzAnLFxuICAgICAgICAnKG1vdXNlZG93bi5zdG9wLnNpbGVudCknOiAnMCcsXG4gICAgfSxcbiAgICBzdHlsZVVybHM6IFsnLi9uYXRpdmUtbXVsdGktc2VsZWN0LnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTmF0aXZlTXVsdGlTZWxlY3RDb21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdFR1aU5hdGl2ZU11bHRpU2VsZWN0IHtcbiAgICBASW5wdXQoKVxuICAgIGl0ZW1zOiByZWFkb25seSBzdHJpbmdbXSB8IG51bGwgPSBbXTtcbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJjb250cm9sLmNvbnRyb2w/LnZhbHVlQ2hhbmdlcyB8IGFzeW5jXCI+PC9uZy1jb250YWluZXI+XG5cbjx0dWktZGF0YS1saXN0LXdyYXBwZXJcbiAgICAqdHVpRGF0YUxpc3RcbiAgICB0dWlNdWx0aVNlbGVjdEdyb3VwXG4gICAgW2l0ZW1zXT1cIml0ZW1zXCJcbiAgICBbZGlzYWJsZWRJdGVtSGFuZGxlcl09XCJkaXNhYmxlZEl0ZW1IYW5kbGVyIHx8IGhvc3QuZGlzYWJsZUl0ZW1IYW5kbGVyXCJcbj48L3R1aS1kYXRhLWxpc3Qtd3JhcHBlcj5cbjxvcHRpb25cbiAgICAqbmdGb3I9XCJsZXQgb3B0aW9uIG9mIGl0ZW1zXCJcbiAgICBbc2VsZWN0ZWRdPVwib3B0aW9uIHwgdHVpTWFwcGVyIDogc2VsZWN0ZWRNYXBwZXIgOiBob3N0LnZhbHVlXCJcbiAgICBbdmFsdWVdPVwib3B0aW9uXCJcbiAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRJdGVtSGFuZGxlciA/IGRpc2FibGVkSXRlbUhhbmRsZXIob3B0aW9uKSA6IGhvc3QuZGlzYWJsZUl0ZW1IYW5kbGVyKG9wdGlvbilcIlxuPlxuICAgIHt7IG9wdGlvbiB9fVxuPC9vcHRpb24+XG4iXX0=