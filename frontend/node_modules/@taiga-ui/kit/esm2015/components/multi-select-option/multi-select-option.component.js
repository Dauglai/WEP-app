import { ChangeDetectionStrategy, Component } from '@angular/core';
import { tuiIsPresent } from '@taiga-ui/cdk';
import { TuiSelectOptionComponent } from '@taiga-ui/kit/components/select-option';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
export class TuiMultiSelectOptionComponent extends TuiSelectOptionComponent {
    get size() {
        var _a;
        return this.option.size === 'l' ||
            (((_a = this.dataList) === null || _a === void 0 ? void 0 : _a.size) === 'l' && !this.option.size)
            ? 'l'
            : 'm';
    }
    get selected() {
        const { value } = this.option;
        return (tuiIsPresent(value) &&
            tuiIsPresent(this.value) &&
            this.value.some(item => this.matcher(item, value)));
    }
}
TuiMultiSelectOptionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMultiSelectOptionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TuiMultiSelectOptionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMultiSelectOptionComponent, selector: "tui-multi-select-option", usesInheritance: true, ngImport: i0, template: "<tui-primitive-checkbox\n    class=\"t-checkbox\"\n    [size]=\"size\"\n    [value]=\"selected$ | async\"\n></tui-primitive-checkbox>\n<ng-container [ngTemplateOutlet]=\"context.$implicit\"></ng-container>\n", styles: ["@keyframes retrigger{0%{left:1px}to{left:2px}}:host{display:flex;flex:1;align-items:center;overflow:hidden;animation:retrigger 1s}.t-checkbox{margin-right:.75rem}\n"], components: [{ type: i1.TuiPrimitiveCheckboxComponent, selector: "tui-primitive-checkbox", inputs: ["size", "disabled", "focused", "hovered", "pressed", "invalid", "value"] }], directives: [{ type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMultiSelectOptionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-multi-select-option',
                    templateUrl: './multi-select-option.template.html',
                    styleUrls: ['./multi-select-option.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9tdWx0aS1zZWxlY3Qtb3B0aW9uL211bHRpLXNlbGVjdC1vcHRpb24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvbXVsdGktc2VsZWN0LW9wdGlvbi9tdWx0aS1zZWxlY3Qtb3B0aW9uLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNqRSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLHdDQUF3QyxDQUFDOzs7O0FBUWhGLE1BQU0sT0FBTyw2QkFFWCxTQUFRLHdCQUEyQjtJQUNqQyxJQUFJLElBQUk7O1FBQ0osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxHQUFHO1lBQzNCLENBQUMsQ0FBQSxNQUFBLElBQUksQ0FBQyxRQUFRLDBDQUFFLElBQUksTUFBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNsRCxDQUFDLENBQUMsR0FBRztZQUNMLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDZCxDQUFDO0lBRUQsSUFBdUIsUUFBUTtRQUMzQixNQUFNLEVBQUMsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUU1QixPQUFPLENBQ0gsWUFBWSxDQUFDLEtBQUssQ0FBQztZQUNuQixZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQ3JELENBQUM7SUFDTixDQUFDOzsySEFsQlEsNkJBQTZCOytHQUE3Qiw2QkFBNkIsc0ZDWDFDLGlOQU1BOzRGREthLDZCQUE2QjtrQkFOekMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxXQUFXLEVBQUUscUNBQXFDO29CQUNsRCxTQUFTLEVBQUUsQ0FBQyxrQ0FBa0MsQ0FBQztvQkFDL0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2xEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpSXNQcmVzZW50fSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpU2l6ZUx9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7VHVpU2VsZWN0T3B0aW9uQ29tcG9uZW50fSBmcm9tICdAdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvc2VsZWN0LW9wdGlvbic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLW11bHRpLXNlbGVjdC1vcHRpb24nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9tdWx0aS1zZWxlY3Qtb3B0aW9uLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL211bHRpLXNlbGVjdC1vcHRpb24uc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlNdWx0aVNlbGVjdE9wdGlvbkNvbXBvbmVudDxcbiAgICBUIGV4dGVuZHMgYW55W10sXG4+IGV4dGVuZHMgVHVpU2VsZWN0T3B0aW9uQ29tcG9uZW50PFQ+IHtcbiAgICBnZXQgc2l6ZSgpOiBUdWlTaXplTCB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wdGlvbi5zaXplID09PSAnbCcgfHxcbiAgICAgICAgICAgICh0aGlzLmRhdGFMaXN0Py5zaXplID09PSAnbCcgJiYgIXRoaXMub3B0aW9uLnNpemUpXG4gICAgICAgICAgICA/ICdsJ1xuICAgICAgICAgICAgOiAnbSc7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG92ZXJyaWRlIGdldCBzZWxlY3RlZCgpOiBib29sZWFuIHtcbiAgICAgICAgY29uc3Qge3ZhbHVlfSA9IHRoaXMub3B0aW9uO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICB0dWlJc1ByZXNlbnQodmFsdWUpICYmXG4gICAgICAgICAgICB0dWlJc1ByZXNlbnQodGhpcy52YWx1ZSkgJiZcbiAgICAgICAgICAgIHRoaXMudmFsdWUuc29tZShpdGVtID0+IHRoaXMubWF0Y2hlcihpdGVtLCB2YWx1ZSkpXG4gICAgICAgICk7XG4gICAgfVxufVxuIiwiPHR1aS1wcmltaXRpdmUtY2hlY2tib3hcbiAgICBjbGFzcz1cInQtY2hlY2tib3hcIlxuICAgIFtzaXplXT1cInNpemVcIlxuICAgIFt2YWx1ZV09XCJzZWxlY3RlZCQgfCBhc3luY1wiXG4+PC90dWktcHJpbWl0aXZlLWNoZWNrYm94PlxuPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJjb250ZXh0LiRpbXBsaWNpdFwiPjwvbmctY29udGFpbmVyPlxuIl19