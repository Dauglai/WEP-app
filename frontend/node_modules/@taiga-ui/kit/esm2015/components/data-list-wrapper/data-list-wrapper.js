import { __decorate } from "tslib";
import { Directive, forwardRef, Input, ViewChildren, } from '@angular/core';
import { EMPTY_QUERY, tuiDefaultProp, tuiIsNativeFocused, tuiIsPresent, } from '@taiga-ui/cdk';
import { TuiOptionComponent, } from '@taiga-ui/core';
import * as i0 from "@angular/core";
export class AbstractTuiDataListWrapper {
    constructor(itemsHandlers, defaultSize) {
        this.itemsHandlers = itemsHandlers;
        this.defaultSize = defaultSize;
        this.optionsQuery = EMPTY_QUERY;
        this.disabledItemHandler = this.itemsHandlers.disabledItemHandler;
        this.size = this.defaultSize;
        this.itemContent = ({ $implicit }) => this.itemsHandlers.stringify($implicit);
    }
    getContext($implicit, { nativeElement }) {
        return { $implicit, active: tuiIsNativeFocused(nativeElement) };
    }
    getOptions(includeDisabled = false) {
        return this.optionsQuery
            .filter(({ disabled }) => includeDisabled || !disabled)
            .map(({ value }) => value)
            .filter(tuiIsPresent);
    }
}
AbstractTuiDataListWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AbstractTuiDataListWrapper, deps: "invalid", target: i0.ɵɵFactoryTarget.Directive });
AbstractTuiDataListWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: AbstractTuiDataListWrapper, inputs: { disabledItemHandler: "disabledItemHandler", emptyContent: "emptyContent", size: "size", itemContent: "itemContent" }, viewQueries: [{ propertyName: "optionsQuery", predicate: i0.forwardRef(function () { return TuiOptionComponent; }), descendants: true }], ngImport: i0 });
__decorate([
    tuiDefaultProp()
], AbstractTuiDataListWrapper.prototype, "disabledItemHandler", void 0);
__decorate([
    tuiDefaultProp()
], AbstractTuiDataListWrapper.prototype, "size", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AbstractTuiDataListWrapper, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: undefined }, { type: undefined }]; }, propDecorators: { optionsQuery: [{
                type: ViewChildren,
                args: [forwardRef(() => TuiOptionComponent)]
            }], disabledItemHandler: [{
                type: Input
            }], emptyContent: [{
                type: Input
            }], size: [{
                type: Input
            }], itemContent: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9kYXRhLWxpc3Qtd3JhcHBlci9kYXRhLWxpc3Qtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILFNBQVMsRUFFVCxVQUFVLEVBQ1YsS0FBSyxFQUVMLFlBQVksR0FDZixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0gsV0FBVyxFQUNYLGNBQWMsRUFDZCxrQkFBa0IsRUFDbEIsWUFBWSxHQUNmLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFDSCxrQkFBa0IsR0FJckIsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLeEIsTUFBTSxPQUFnQiwwQkFBMEI7SUFnQjVDLFlBQ3VCLGFBQWtDLEVBQ2xDLFdBQWlDO1FBRGpDLGtCQUFhLEdBQWIsYUFBYSxDQUFxQjtRQUNsQyxnQkFBVyxHQUFYLFdBQVcsQ0FBc0I7UUFoQnJDLGlCQUFZLEdBQXFDLFdBQVcsQ0FBQztRQUloRix3QkFBbUIsR0FDZixJQUFJLENBQUMsYUFBYSxDQUFDLG1CQUFtQixDQUFDO1FBTzNDLFNBQUksR0FBeUIsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQVE5QyxnQkFBVyxHQUFtRCxDQUFDLEVBQUMsU0FBUyxFQUFDLEVBQUUsRUFBRSxDQUMxRSxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUp6QyxDQUFDO0lBTUosVUFBVSxDQUNOLFNBQVksRUFDWixFQUFDLGFBQWEsRUFBMEI7UUFFeEMsT0FBTyxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsa0JBQWtCLENBQUMsYUFBYSxDQUFDLEVBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRUQsVUFBVSxDQUFDLGtCQUEyQixLQUFLO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLFlBQVk7YUFDbkIsTUFBTSxDQUFDLENBQUMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFFLENBQUMsZUFBZSxJQUFJLENBQUMsUUFBUSxDQUFDO2FBQ3BELEdBQUcsQ0FBQyxDQUFDLEVBQUMsS0FBSyxFQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQzthQUN2QixNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7d0hBckNpQiwwQkFBMEI7NEdBQTFCLDBCQUEwQiw4TkFDYixrQkFBa0I7QUFLakQ7SUFEQyxjQUFjLEVBQUU7dUVBRTBCO0FBTzNDO0lBREMsY0FBYyxFQUFFO3dEQUM2Qjs0RkFkNUIsMEJBQTBCO2tCQUQvQyxTQUFTO2tIQUdhLFlBQVk7c0JBRDlCLFlBQVk7dUJBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLGtCQUFrQixDQUFDO2dCQUtsRCxtQkFBbUI7c0JBRmxCLEtBQUs7Z0JBTU4sWUFBWTtzQkFEWCxLQUFLO2dCQUtOLElBQUk7c0JBRkgsS0FBSztnQkFVTixXQUFXO3NCQURWLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIERpcmVjdGl2ZSxcbiAgICBFbGVtZW50UmVmLFxuICAgIGZvcndhcmRSZWYsXG4gICAgSW5wdXQsXG4gICAgUXVlcnlMaXN0LFxuICAgIFZpZXdDaGlsZHJlbixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIEVNUFRZX1FVRVJZLFxuICAgIHR1aURlZmF1bHRQcm9wLFxuICAgIHR1aUlzTmF0aXZlRm9jdXNlZCxcbiAgICB0dWlJc1ByZXNlbnQsXG59IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtcbiAgICBUdWlPcHRpb25Db21wb25lbnQsXG4gICAgVHVpU2l6ZUwsXG4gICAgVHVpU2l6ZVhTLFxuICAgIFR1aVZhbHVlQ29udGVudENvbnRleHQsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7VHVpSXRlbXNIYW5kbGVyc30gZnJvbSAnQHRhaWdhLXVpL2tpdC90b2tlbnMnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdFR1aURhdGFMaXN0V3JhcHBlcjxUPiB7XG4gICAgQFZpZXdDaGlsZHJlbihmb3J3YXJkUmVmKCgpID0+IFR1aU9wdGlvbkNvbXBvbmVudCkpXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IG9wdGlvbnNRdWVyeTogUXVlcnlMaXN0PFR1aU9wdGlvbkNvbXBvbmVudDxUPj4gPSBFTVBUWV9RVUVSWTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBkaXNhYmxlZEl0ZW1IYW5kbGVyOiBUdWlJdGVtc0hhbmRsZXJzPFQ+WydkaXNhYmxlZEl0ZW1IYW5kbGVyJ10gPVxuICAgICAgICB0aGlzLml0ZW1zSGFuZGxlcnMuZGlzYWJsZWRJdGVtSGFuZGxlcjtcblxuICAgIEBJbnB1dCgpXG4gICAgZW1wdHlDb250ZW50OiBQb2x5bW9ycGhldXNDb250ZW50O1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHNpemU6IFR1aVNpemVMIHwgVHVpU2l6ZVhTID0gdGhpcy5kZWZhdWx0U2l6ZTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgaXRlbXNIYW5kbGVyczogVHVpSXRlbXNIYW5kbGVyczxUPixcbiAgICAgICAgcHJvdGVjdGVkIHJlYWRvbmx5IGRlZmF1bHRTaXplOiBUdWlTaXplTCB8IFR1aVNpemVYUyxcbiAgICApIHt9XG5cbiAgICBASW5wdXQoKVxuICAgIGl0ZW1Db250ZW50OiBQb2x5bW9ycGhldXNDb250ZW50PFR1aVZhbHVlQ29udGVudENvbnRleHQ8VD4+ID0gKHskaW1wbGljaXR9KSA9PlxuICAgICAgICB0aGlzLml0ZW1zSGFuZGxlcnMuc3RyaW5naWZ5KCRpbXBsaWNpdCk7XG5cbiAgICBnZXRDb250ZXh0KFxuICAgICAgICAkaW1wbGljaXQ6IFQsXG4gICAgICAgIHtuYXRpdmVFbGVtZW50fTogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sXG4gICAgKTogVHVpVmFsdWVDb250ZW50Q29udGV4dDxUPiB7XG4gICAgICAgIHJldHVybiB7JGltcGxpY2l0LCBhY3RpdmU6IHR1aUlzTmF0aXZlRm9jdXNlZChuYXRpdmVFbGVtZW50KX07XG4gICAgfVxuXG4gICAgZ2V0T3B0aW9ucyhpbmNsdWRlRGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZSk6IHJlYWRvbmx5IFRbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnNRdWVyeVxuICAgICAgICAgICAgLmZpbHRlcigoe2Rpc2FibGVkfSkgPT4gaW5jbHVkZURpc2FibGVkIHx8ICFkaXNhYmxlZClcbiAgICAgICAgICAgIC5tYXAoKHt2YWx1ZX0pID0+IHZhbHVlKVxuICAgICAgICAgICAgLmZpbHRlcih0dWlJc1ByZXNlbnQpO1xuICAgIH1cbn1cbiJdfQ==