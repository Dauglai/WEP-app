import { ChangeDetectionStrategy, Component, HostBinding, Inject } from '@angular/core';
import { TUI_ANIMATION_OPTIONS, tuiFadeIn, tuiHeightCollapse, tuiSlideInRight, } from '@taiga-ui/core';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
// TODO: find the best way for prevent cycle
// eslint-disable-next-line import/no-cycle
import { TuiPushAlertDirective } from './push-alert.directive';
import * as i0 from "@angular/core";
import * as i1 from "./push.component";
import * as i2 from "@taiga-ui/core";
import * as i3 from "@angular/common";
import * as i4 from "./push.directive";
import * as i5 from "@tinkoff/ng-polymorpheus";
export class TuiPushAlertComponent {
    constructor(options, context) {
        this.options = options;
        this.context = context;
        this.animation = Object.assign({ value: '' }, this.options);
    }
    get isDirective() {
        return this.context.content instanceof TuiPushAlertDirective;
    }
}
TuiPushAlertComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPushAlertComponent, deps: [{ token: TUI_ANIMATION_OPTIONS }, { token: POLYMORPHEUS_CONTEXT }], target: i0.ɵɵFactoryTarget.Component });
TuiPushAlertComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiPushAlertComponent, selector: "tui-push-alert", host: { attributes: { "role": "alert" }, properties: { "@tuiFadeIn": "this.animation", "@tuiSlideInRight": "this.animation", "@tuiHeightCollapse": "this.animation" } }, ngImport: i0, template: "<tui-push\n    *ngIf=\"!isDirective; else $any(context.content).template\"\n    [heading]=\"context.heading\"\n    [type]=\"context.type\"\n    [timestamp]=\"context.timestamp\"\n    (close)=\"context.$implicit.complete()\"\n>\n    <img\n        *ngIf=\"context.image\"\n        alt=\"\"\n        [src]=\"context.image\"\n    />\n    <tui-svg\n        *ngIf=\"context.icon\"\n        [style.color]=\"context.iconColor\"\n        [src]=\"context.icon\"\n    ></tui-svg>\n    <div\n        *polymorpheusOutlet=\"context.content as text\"\n        [innerHTML]=\"text\"\n    ></div>\n    <button\n        *ngIf=\"context.buttons.length > 1\"\n        type=\"button\"\n        tuiButton\n        (click)=\"context.$implicit.next(context.buttons[0])\"\n    >\n        {{ context.buttons[0] }}\n    </button>\n    <button\n        *ngIf=\"context.buttons.length\"\n        tuiLink\n        type=\"button\"\n        (click)=\"context.$implicit.next(context.buttons[context.buttons.length - 1])\"\n    >\n        {{ context.buttons[context.buttons.length - 1] }}\n    </button>\n</tui-push>\n", styles: [":host{max-width:calc(100% - 2rem);margin:0 1rem 1rem auto}:host:first-child{margin-top:auto}\n"], components: [{ type: i1.TuiPushComponent, selector: "tui-push", inputs: ["heading", "type", "timestamp"], outputs: ["close"] }, { type: i2.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i2.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }, { type: i2.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.TuiPushDirective, selector: "tui-push" }, { type: i5.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [tuiFadeIn, tuiSlideInRight, tuiHeightCollapse], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPushAlertComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-push-alert',
                    templateUrl: './push-alert.template.html',
                    styleUrls: ['./push-alert.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [tuiFadeIn, tuiSlideInRight, tuiHeightCollapse],
                    host: { role: 'alert' },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATION_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }]; }, propDecorators: { animation: [{
                type: HostBinding,
                args: ['@tuiFadeIn']
            }, {
                type: HostBinding,
                args: ['@tuiSlideInRight']
            }, {
                type: HostBinding,
                args: ['@tuiHeightCollapse']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC1hbGVydC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9wdXNoL3B1c2gtYWxlcnQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvcHVzaC9wdXNoLWFsZXJ0LnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRXRGLE9BQU8sRUFDSCxxQkFBcUIsRUFDckIsU0FBUyxFQUNULGlCQUFpQixFQUNqQixlQUFlLEdBQ2xCLE1BQU0sZ0JBQWdCLENBQUM7QUFDeEIsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFHOUQsNENBQTRDO0FBQzVDLDJDQUEyQztBQUMzQyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7OztBQVU3RCxNQUFNLE9BQU8scUJBQXFCO0lBTTlCLFlBQ29ELE9BQXlCLEVBRWhFLE9BQTBDO1FBRkgsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFFaEUsWUFBTyxHQUFQLE9BQU8sQ0FBbUM7UUFMOUMsY0FBUyxHQUFHLGdCQUFDLEtBQUssRUFBRSxFQUFFLElBQUssSUFBSSxDQUFDLE9BQU8sQ0FBVSxDQUFDO0lBTXhELENBQUM7SUFFSixJQUFJLFdBQVc7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxZQUFZLHFCQUFxQixDQUFDO0lBQ2pFLENBQUM7O21IQWRRLHFCQUFxQixrQkFPbEIscUJBQXFCLGFBQ3JCLG9CQUFvQjt1R0FSdkIscUJBQXFCLCtOQ3hCbEMsNmpDQXNDQSwwOEJEakJnQixDQUFDLFNBQVMsRUFBRSxlQUFlLEVBQUUsaUJBQWlCLENBQUM7NEZBR2xELHFCQUFxQjtrQkFSakMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixXQUFXLEVBQUUsNEJBQTRCO29CQUN6QyxTQUFTLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztvQkFDdEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFVBQVUsRUFBRSxDQUFDLFNBQVMsRUFBRSxlQUFlLEVBQUUsaUJBQWlCLENBQUM7b0JBQzNELElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUM7aUJBQ3hCOzswQkFRUSxNQUFNOzJCQUFDLHFCQUFxQjs7MEJBQzVCLE1BQU07MkJBQUMsb0JBQW9COzRDQUp2QixTQUFTO3NCQUhqQixXQUFXO3VCQUFDLFlBQVk7O3NCQUN4QixXQUFXO3VCQUFDLGtCQUFrQjs7c0JBQzlCLFdBQVc7dUJBQUMsb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBbmltYXRpb25PcHRpb25zfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIEluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURpYWxvZ30gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1xuICAgIFRVSV9BTklNQVRJT05fT1BUSU9OUyxcbiAgICB0dWlGYWRlSW4sXG4gICAgdHVpSGVpZ2h0Q29sbGFwc2UsXG4gICAgdHVpU2xpZGVJblJpZ2h0LFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1BPTFlNT1JQSEVVU19DT05URVhUfSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuXG5pbXBvcnQge1R1aVB1c2hPcHRpb25zfSBmcm9tICcuL3B1c2gub3B0aW9ucyc7XG4vLyBUT0RPOiBmaW5kIHRoZSBiZXN0IHdheSBmb3IgcHJldmVudCBjeWNsZVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHtUdWlQdXNoQWxlcnREaXJlY3RpdmV9IGZyb20gJy4vcHVzaC1hbGVydC5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1wdXNoLWFsZXJ0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcHVzaC1hbGVydC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9wdXNoLWFsZXJ0LnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBhbmltYXRpb25zOiBbdHVpRmFkZUluLCB0dWlTbGlkZUluUmlnaHQsIHR1aUhlaWdodENvbGxhcHNlXSxcbiAgICBob3N0OiB7cm9sZTogJ2FsZXJ0J30sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVB1c2hBbGVydENvbXBvbmVudCB7XG4gICAgQEhvc3RCaW5kaW5nKCdAdHVpRmFkZUluJylcbiAgICBASG9zdEJpbmRpbmcoJ0B0dWlTbGlkZUluUmlnaHQnKVxuICAgIEBIb3N0QmluZGluZygnQHR1aUhlaWdodENvbGxhcHNlJylcbiAgICByZWFkb25seSBhbmltYXRpb24gPSB7dmFsdWU6ICcnLCAuLi50aGlzLm9wdGlvbnN9IGFzIGNvbnN0O1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0FOSU1BVElPTl9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IEFuaW1hdGlvbk9wdGlvbnMsXG4gICAgICAgIEBJbmplY3QoUE9MWU1PUlBIRVVTX0NPTlRFWFQpXG4gICAgICAgIHJlYWRvbmx5IGNvbnRleHQ6IFR1aURpYWxvZzxUdWlQdXNoT3B0aW9ucywgc3RyaW5nPixcbiAgICApIHt9XG5cbiAgICBnZXQgaXNEaXJlY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHQuY29udGVudCBpbnN0YW5jZW9mIFR1aVB1c2hBbGVydERpcmVjdGl2ZTtcbiAgICB9XG59XG4iLCI8dHVpLXB1c2hcbiAgICAqbmdJZj1cIiFpc0RpcmVjdGl2ZTsgZWxzZSAkYW55KGNvbnRleHQuY29udGVudCkudGVtcGxhdGVcIlxuICAgIFtoZWFkaW5nXT1cImNvbnRleHQuaGVhZGluZ1wiXG4gICAgW3R5cGVdPVwiY29udGV4dC50eXBlXCJcbiAgICBbdGltZXN0YW1wXT1cImNvbnRleHQudGltZXN0YW1wXCJcbiAgICAoY2xvc2UpPVwiY29udGV4dC4kaW1wbGljaXQuY29tcGxldGUoKVwiXG4+XG4gICAgPGltZ1xuICAgICAgICAqbmdJZj1cImNvbnRleHQuaW1hZ2VcIlxuICAgICAgICBhbHQ9XCJcIlxuICAgICAgICBbc3JjXT1cImNvbnRleHQuaW1hZ2VcIlxuICAgIC8+XG4gICAgPHR1aS1zdmdcbiAgICAgICAgKm5nSWY9XCJjb250ZXh0Lmljb25cIlxuICAgICAgICBbc3R5bGUuY29sb3JdPVwiY29udGV4dC5pY29uQ29sb3JcIlxuICAgICAgICBbc3JjXT1cImNvbnRleHQuaWNvblwiXG4gICAgPjwvdHVpLXN2Zz5cbiAgICA8ZGl2XG4gICAgICAgICpwb2x5bW9ycGhldXNPdXRsZXQ9XCJjb250ZXh0LmNvbnRlbnQgYXMgdGV4dFwiXG4gICAgICAgIFtpbm5lckhUTUxdPVwidGV4dFwiXG4gICAgPjwvZGl2PlxuICAgIDxidXR0b25cbiAgICAgICAgKm5nSWY9XCJjb250ZXh0LmJ1dHRvbnMubGVuZ3RoID4gMVwiXG4gICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICB0dWlCdXR0b25cbiAgICAgICAgKGNsaWNrKT1cImNvbnRleHQuJGltcGxpY2l0Lm5leHQoY29udGV4dC5idXR0b25zWzBdKVwiXG4gICAgPlxuICAgICAgICB7eyBjb250ZXh0LmJ1dHRvbnNbMF0gfX1cbiAgICA8L2J1dHRvbj5cbiAgICA8YnV0dG9uXG4gICAgICAgICpuZ0lmPVwiY29udGV4dC5idXR0b25zLmxlbmd0aFwiXG4gICAgICAgIHR1aUxpbmtcbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIChjbGljayk9XCJjb250ZXh0LiRpbXBsaWNpdC5uZXh0KGNvbnRleHQuYnV0dG9uc1tjb250ZXh0LmJ1dHRvbnMubGVuZ3RoIC0gMV0pXCJcbiAgICA+XG4gICAgICAgIHt7IGNvbnRleHQuYnV0dG9uc1tjb250ZXh0LmJ1dHRvbnMubGVuZ3RoIC0gMV0gfX1cbiAgICA8L2J1dHRvbj5cbjwvdHVpLXB1c2g+XG4iXX0=