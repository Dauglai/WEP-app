import { __decorate } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Input, Optional, Self, ViewChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, tuiAsControl, tuiAsFocusableItemAccessor, tuiDefaultProp, } from '@taiga-ui/cdk';
import { TUI_DIGIT_REGEXP, TuiPrimitiveTextfieldComponent, } from '@taiga-ui/core';
import { TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@taiga-ui/kit/directives";
import * as i3 from "@taiga-ui/cdk";
import * as i4 from "@taiga-ui/kit/pipes";
import * as i5 from "@angular/forms";
export class TuiInputYearComponent extends AbstractTuiNullableControl {
    constructor(control, cdr, options) {
        super(control, cdr);
        this.options = options;
        this.min = this.options.min.year;
        this.max = this.options.max.year;
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        this.open = false;
        this.initialItem = new Date().getFullYear();
        this.textMaskOptions = {
            mask: new Array(4).fill(TUI_DIGIT_REGEXP),
            guide: false,
        };
    }
    get nativeFocusableElement() {
        return this.textfield ? this.textfield.nativeFocusableElement : null;
    }
    get focused() {
        return !!this.textfield && this.textfield.focused;
    }
    get calendarIcon() {
        return this.options.icon;
    }
    onValueChange(value) {
        this.value = value ? Number(value.slice(0, 4)) : null;
    }
    onYearClick({ year }) {
        this.value = year;
        this.onOpenChange(false);
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onOpenChange(open) {
        this.open = open;
    }
    toggle() {
        this.open = !this.open;
    }
}
TuiInputYearComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TUI_INPUT_DATE_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiInputYearComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputYearComponent, selector: "tui-input-year", inputs: { min: "min", max: "max", disabledItemHandler: "disabledItemHandler" }, providers: [
        tuiAsFocusableItemAccessor(TuiInputYearComponent),
        tuiAsControl(TuiInputYearComponent),
    ], viewQueries: [{ propertyName: "textfield", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"interactive\"\n    [content]=\"dropdown\"\n    [open]=\"open && interactive\"\n    (openChange)=\"onOpenChange($event)\"\n    (click)=\"toggle()\"\n>\n    <tui-primitive-textfield\n        class=\"t-textfield\"\n        [disabled]=\"computedDisabled\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [tuiTextfieldIcon]=\"calendarIcon\"\n        [pseudoFocus]=\"pseudoFocus\"\n        [pseudoHover]=\"pseudoHover\"\n        [invalid]=\"computedInvalid\"\n        [textMask]=\"textMaskOptions\"\n        [value]=\"value?.toString() || ''\"\n        (valueChange)=\"onValueChange($event)\"\n        (focusedChange)=\"onFocused($event)\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            select=\"input\"\n            ngProjectAs=\"input\"\n        ></ng-content>\n    </tui-primitive-textfield>\n\n    <ng-template #dropdown>\n        <tui-primitive-year-picker\n            tuiPreventDefault=\"mousedown\"\n            [min]=\"min | tuiToYear\"\n            [max]=\"max | tuiToYear\"\n            [initialItem]=\"value || initialItem | tuiToYear\"\n            [disabledItemHandler]=\"disabledItemHandler\"\n            [value]=\"value === null ? null : (value | tuiToYear)\"\n            (yearClick)=\"onYearClick($event)\"\n        ></tui-primitive-year-picker>\n    </ng-template>\n</tui-hosted-dropdown>\n", styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\n"], components: [{ type: i1.TuiHostedDropdownComponent, selector: "tui-hosted-dropdown", inputs: ["content", "sided", "canOpen", "open"], outputs: ["openChange", "focusedChange"] }, { type: i1.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "filler", "iconCleaner", "readOnly", "invalid", "disabled", "prefix", "postfix", "value"], outputs: ["valueChange"] }, { type: i1.TuiPrimitiveYearPickerComponent, selector: "tui-primitive-year-picker", inputs: ["value", "initialItem", "min", "max", "disabledItemHandler"], outputs: ["yearClick"] }], directives: [{ type: i1.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { type: i1.TuiTextfieldIconDirective, selector: "[tuiTextfieldIcon]", inputs: ["tuiTextfieldIcon"] }, { type: i2.MaskedInputDirective, selector: "[textMask]", inputs: ["textMask"], exportAs: ["textMask"] }, { type: i3.TuiPreventDefaultDirective, selector: "[tuiPreventDefault]", inputs: ["tuiPreventDefault"] }], pipes: { "tuiToYear": i4.TuiToYearPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiInputYearComponent.prototype, "min", void 0);
__decorate([
    tuiDefaultProp()
], TuiInputYearComponent.prototype, "max", void 0);
__decorate([
    tuiDefaultProp()
], TuiInputYearComponent.prototype, "disabledItemHandler", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-input-year',
                    templateUrl: './input-year.template.html',
                    styleUrls: ['./input-year.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiInputYearComponent),
                        tuiAsControl(TuiInputYearComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i5.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_INPUT_DATE_OPTIONS]
                }] }]; }, propDecorators: { textfield: [{
                type: ViewChild,
                args: [TuiPrimitiveTextfieldComponent]
            }], min: [{
                type: Input
            }], max: [{
                type: Input
            }], disabledItemHandler: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,