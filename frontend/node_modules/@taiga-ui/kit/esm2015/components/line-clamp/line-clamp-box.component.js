import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';
import { TuiDestroyService, TuiHoveredService } from '@taiga-ui/cdk';
import { tuiFadeIn, TuiHintComponent, TuiHintDirective, tuiPositionAccessorFor, TuiPositionService, tuiRectAccessorFor, } from '@taiga-ui/core';
import * as i0 from "@angular/core";
import * as i1 from "@tinkoff/ng-polymorpheus";
export class TuiLineClampBoxComponent extends TuiHintComponent {
    get width() {
        return this.accessor.getClientRect().width;
    }
}
TuiLineClampBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLineClampBoxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TuiLineClampBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiLineClampBoxComponent, selector: "tui-line-clamp-box", host: { properties: { "style.minWidth.px": "this.width" } }, providers: [
        TuiDestroyService,
        TuiPositionService,
        TuiHoveredService,
        tuiPositionAccessorFor('hint'),
        tuiRectAccessorFor('hint', TuiHintDirective),
    ], usesInheritance: true, ngImport: i0, template: `
        <ng-container *polymorpheusOutlet="content as text">{{ text }}</ng-container>
    `, isInline: true, styles: [":host{box-shadow:0 1.5rem 1rem #00000008,0 .75rem .75rem #0000000a,0 .25rem .375rem #0000000d;position:absolute;width:-webkit-min-content;width:min-content;padding:.75rem 1rem;margin-left:calc(-1px - 1rem);margin-top:calc(-1px - .75rem);border-radius:var(--tui-radius-l);box-sizing:content-box;border:1px solid var(--tui-base-03);background:var(--tui-base-01);color:var(--tui-text-01);word-wrap:break-word}\n"], directives: [{ type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLineClampBoxComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-line-clamp-box',
                    template: `
        <ng-container *polymorpheusOutlet="content as text">{{ text }}</ng-container>
    `,
                    styleUrls: ['./line-clamp-box.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        TuiDestroyService,
                        TuiPositionService,
                        TuiHoveredService,
                        tuiPositionAccessorFor('hint'),
                        tuiRectAccessorFor('hint', TuiHintDirective),
                    ],
                    animations: [tuiFadeIn],
                }]
        }], propDecorators: { width: [{
                type: HostBinding,
                args: ['style.minWidth.px']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluZS1jbGFtcC1ib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvbGluZS1jbGFtcC9saW5lLWNsYW1wLWJveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDOUUsT0FBTyxFQUFDLGlCQUFpQixFQUFFLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFDSCxTQUFTLEVBQ1QsZ0JBQWdCLEVBQ2hCLGdCQUFnQixFQUNoQixzQkFBc0IsRUFDdEIsa0JBQWtCLEVBQ2xCLGtCQUFrQixHQUNyQixNQUFNLGdCQUFnQixDQUFDOzs7QUFrQnhCLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxnQkFBZ0I7SUFDMUQsSUFDSSxLQUFLO1FBQ0wsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxDQUFDLEtBQUssQ0FBQztJQUMvQyxDQUFDOztzSEFKUSx3QkFBd0I7MEdBQXhCLHdCQUF3QiwwR0FUdEI7UUFDUCxpQkFBaUI7UUFDakIsa0JBQWtCO1FBQ2xCLGlCQUFpQjtRQUNqQixzQkFBc0IsQ0FBQyxNQUFNLENBQUM7UUFDOUIsa0JBQWtCLENBQUMsTUFBTSxFQUFFLGdCQUFnQixDQUFDO0tBQy9DLGlEQVhTOztLQUVULDJsQkFVVyxDQUFDLFNBQVMsQ0FBQzs0RkFFZCx3QkFBd0I7a0JBaEJwQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFFBQVEsRUFBRTs7S0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQztvQkFDMUMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRTt3QkFDUCxpQkFBaUI7d0JBQ2pCLGtCQUFrQjt3QkFDbEIsaUJBQWlCO3dCQUNqQixzQkFBc0IsQ0FBQyxNQUFNLENBQUM7d0JBQzlCLGtCQUFrQixDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsQ0FBQztxQkFDL0M7b0JBQ0QsVUFBVSxFQUFFLENBQUMsU0FBUyxDQUFDO2lCQUMxQjs4QkFHTyxLQUFLO3NCQURSLFdBQVc7dUJBQUMsbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBIb3N0QmluZGluZ30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURlc3Ryb3lTZXJ2aWNlLCBUdWlIb3ZlcmVkU2VydmljZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1xuICAgIHR1aUZhZGVJbixcbiAgICBUdWlIaW50Q29tcG9uZW50LFxuICAgIFR1aUhpbnREaXJlY3RpdmUsXG4gICAgdHVpUG9zaXRpb25BY2Nlc3NvckZvcixcbiAgICBUdWlQb3NpdGlvblNlcnZpY2UsXG4gICAgdHVpUmVjdEFjY2Vzc29yRm9yLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWxpbmUtY2xhbXAtYm94JyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctY29udGFpbmVyICpwb2x5bW9ycGhldXNPdXRsZXQ9XCJjb250ZW50IGFzIHRleHRcIj57eyB0ZXh0IH19PC9uZy1jb250YWluZXI+XG4gICAgYCxcbiAgICBzdHlsZVVybHM6IFsnLi9saW5lLWNsYW1wLWJveC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIFR1aURlc3Ryb3lTZXJ2aWNlLFxuICAgICAgICBUdWlQb3NpdGlvblNlcnZpY2UsXG4gICAgICAgIFR1aUhvdmVyZWRTZXJ2aWNlLFxuICAgICAgICB0dWlQb3NpdGlvbkFjY2Vzc29yRm9yKCdoaW50JyksXG4gICAgICAgIHR1aVJlY3RBY2Nlc3NvckZvcignaGludCcsIFR1aUhpbnREaXJlY3RpdmUpLFxuICAgIF0sXG4gICAgYW5pbWF0aW9uczogW3R1aUZhZGVJbl0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUxpbmVDbGFtcEJveENvbXBvbmVudCBleHRlbmRzIFR1aUhpbnRDb21wb25lbnQge1xuICAgIEBIb3N0QmluZGluZygnc3R5bGUubWluV2lkdGgucHgnKVxuICAgIGdldCB3aWR0aCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5hY2Nlc3Nvci5nZXRDbGllbnRSZWN0KCkud2lkdGg7XG4gICAgfVxufVxuIl19