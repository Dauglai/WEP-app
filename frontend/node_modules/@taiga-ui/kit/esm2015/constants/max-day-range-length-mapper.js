import { tuiObjectFromEntries, } from '@taiga-ui/cdk';
export const MAX_DAY_RANGE_LENGTH_MAPPER = (min, value, maxLength, backwards) => {
    if (!(value === null || value === void 0 ? void 0 : value.isSingleDay) || !maxLength) {
        return min;
    }
    const negativeMaxLength = tuiObjectFromEntries(Object.entries(maxLength).map(([key, value]) => [key, -value]));
    const dateShift = value.from
        .append(backwards ? negativeMaxLength : maxLength)
        .append({ day: !backwards ? -1 : 1 });
    if (backwards) {
        return dateShift.dayBefore(min) ? min : dateShift;
    }
    if (!min) {
        return dateShift;
    }
    return dateShift.dayAfter(min) ? min : dateShift;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4LWRheS1yYW5nZS1sZW5ndGgtbWFwcGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbnN0YW50cy9tYXgtZGF5LXJhbmdlLWxlbmd0aC1tYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUtILG9CQUFvQixHQUN2QixNQUFNLGVBQWUsQ0FBQztBQUV2QixNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBOEIsQ0FDbEUsR0FBRyxFQUNILEtBQWtCLEVBQ2xCLFNBQTRCLEVBQzVCLFNBQWtCLEVBQ3BCLEVBQUU7SUFDQSxJQUFJLENBQUMsQ0FBQSxLQUFLLGFBQUwsS0FBSyx1QkFBTCxLQUFLLENBQUUsV0FBVyxDQUFBLElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDbkMsT0FBTyxHQUFHLENBQUM7S0FDZDtJQUVELE1BQU0saUJBQWlCLEdBQUcsb0JBQW9CLENBQzFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FDakUsQ0FBQztJQUVGLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxJQUFJO1NBQ3ZCLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7U0FDakQsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUV4QyxJQUFJLFNBQVMsRUFBRTtRQUNYLE9BQU8sU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7S0FDckQ7SUFFRCxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ04sT0FBTyxTQUFTLENBQUM7S0FDcEI7SUFFRCxPQUFPLFNBQVMsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0FBQ3JELENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgVHVpRGF5LFxuICAgIFR1aURheUxpa2UsXG4gICAgVHVpRGF5UmFuZ2UsXG4gICAgVHVpTWFwcGVyLFxuICAgIHR1aU9iamVjdEZyb21FbnRyaWVzLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcblxuZXhwb3J0IGNvbnN0IE1BWF9EQVlfUkFOR0VfTEVOR1RIX01BUFBFUjogVHVpTWFwcGVyPFR1aURheSwgVHVpRGF5PiA9IChcbiAgICBtaW4sXG4gICAgdmFsdWU6IFR1aURheVJhbmdlLFxuICAgIG1heExlbmd0aDogVHVpRGF5TGlrZSB8IG51bGwsXG4gICAgYmFja3dhcmRzOiBib29sZWFuLFxuKSA9PiB7XG4gICAgaWYgKCF2YWx1ZT8uaXNTaW5nbGVEYXkgfHwgIW1heExlbmd0aCkge1xuICAgICAgICByZXR1cm4gbWluO1xuICAgIH1cblxuICAgIGNvbnN0IG5lZ2F0aXZlTWF4TGVuZ3RoID0gdHVpT2JqZWN0RnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKG1heExlbmd0aCkubWFwKChba2V5LCB2YWx1ZV0pID0+IFtrZXksIC12YWx1ZV0pLFxuICAgICk7XG5cbiAgICBjb25zdCBkYXRlU2hpZnQgPSB2YWx1ZS5mcm9tXG4gICAgICAgIC5hcHBlbmQoYmFja3dhcmRzID8gbmVnYXRpdmVNYXhMZW5ndGggOiBtYXhMZW5ndGgpXG4gICAgICAgIC5hcHBlbmQoe2RheTogIWJhY2t3YXJkcyA/IC0xIDogMX0pO1xuXG4gICAgaWYgKGJhY2t3YXJkcykge1xuICAgICAgICByZXR1cm4gZGF0ZVNoaWZ0LmRheUJlZm9yZShtaW4pID8gbWluIDogZGF0ZVNoaWZ0O1xuICAgIH1cblxuICAgIGlmICghbWluKSB7XG4gICAgICAgIHJldHVybiBkYXRlU2hpZnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGVTaGlmdC5kYXlBZnRlcihtaW4pID8gbWluIDogZGF0ZVNoaWZ0O1xufTtcbiJdfQ==