import { Attribute, Directive, Inject, Injector } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import { TUI_FOCUSABLE_ITEM_ACCESSOR } from '@taiga-ui/cdk';
import { tuiCreateUnfinishedValidator } from '@taiga-ui/kit/validators';
import * as i0 from "@angular/core";
export class TuiUnfinishedValidatorDirective {
    constructor(injector, 
    // eslint-disable-next-line @angular-eslint/no-attribute-decorator
    message) {
        this.injector = injector;
        this.message = message;
        this.validate = tuiCreateUnfinishedValidator(() => this.injector.get(TUI_FOCUSABLE_ITEM_ACCESSOR), this.message || '');
    }
}
TuiUnfinishedValidatorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnfinishedValidatorDirective, deps: [{ token: Injector }, { token: 'tuiUnfinishedValidator', attribute: true }], target: i0.ɵɵFactoryTarget.Directive });
TuiUnfinishedValidatorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiUnfinishedValidatorDirective, selector: "[tuiUnfinishedValidator]", providers: [
        {
            provide: NG_VALIDATORS,
            useExisting: TuiUnfinishedValidatorDirective,
            multi: true,
        },
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnfinishedValidatorDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiUnfinishedValidator]',
                    providers: [
                        {
                            provide: NG_VALIDATORS,
                            useExisting: TuiUnfinishedValidatorDirective,
                            multi: true,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector, decorators: [{
                    type: Inject,
                    args: [Injector]
                }] }, { type: undefined, decorators: [{
                    type: Attribute,
                    args: ['tuiUnfinishedValidator']
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5maW5pc2hlZC12YWxpZGF0b3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2RpcmVjdGl2ZXMvdW5maW5pc2hlZC12YWxpZGF0b3IvdW5maW5pc2hlZC12YWxpZGF0b3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLGFBQWEsRUFBWSxNQUFNLGdCQUFnQixDQUFDO0FBQ3hELE9BQU8sRUFBQywyQkFBMkIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMxRCxPQUFPLEVBQUMsNEJBQTRCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7QUFZdEUsTUFBTSxPQUFPLCtCQUErQjtJQU14QyxZQUVxQixRQUFrQjtJQUNuQyxrRUFBa0U7SUFFakQsT0FBc0I7UUFIdEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUdsQixZQUFPLEdBQVAsT0FBTyxDQUFlO1FBVmxDLGFBQVEsR0FBRyw0QkFBNEIsQ0FDNUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUMsRUFDcEQsSUFBSSxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQ3JCLENBQUM7SUFRQyxDQUFDOzs2SEFaSywrQkFBK0Isa0JBTzVCLFFBQVEsYUFHTCx3QkFBd0I7aUhBVjlCLCtCQUErQixtREFSN0I7UUFDUDtZQUNJLE9BQU8sRUFBRSxhQUFhO1lBQ3RCLFdBQVcsRUFBRSwrQkFBK0I7WUFDNUMsS0FBSyxFQUFFLElBQUk7U0FDZDtLQUNKOzRGQUVRLCtCQUErQjtrQkFWM0MsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyxTQUFTLEVBQUU7d0JBQ1A7NEJBQ0ksT0FBTyxFQUFFLGFBQWE7NEJBQ3RCLFdBQVcsaUNBQWlDOzRCQUM1QyxLQUFLLEVBQUUsSUFBSTt5QkFDZDtxQkFDSjtpQkFDSjs7MEJBUVEsTUFBTTsyQkFBQyxRQUFROzswQkFHZixTQUFTOzJCQUFDLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXR0cmlidXRlLCBEaXJlY3RpdmUsIEluamVjdCwgSW5qZWN0b3J9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOR19WQUxJREFUT1JTLCBWYWxpZGF0b3J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7VFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7dHVpQ3JlYXRlVW5maW5pc2hlZFZhbGlkYXRvcn0gZnJvbSAnQHRhaWdhLXVpL2tpdC92YWxpZGF0b3JzJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpVW5maW5pc2hlZFZhbGlkYXRvcl0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IFR1aVVuZmluaXNoZWRWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlVbmZpbmlzaGVkVmFsaWRhdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgVmFsaWRhdG9yIHtcbiAgICByZWFkb25seSB2YWxpZGF0ZSA9IHR1aUNyZWF0ZVVuZmluaXNoZWRWYWxpZGF0b3IoXG4gICAgICAgICgpID0+IHRoaXMuaW5qZWN0b3IuZ2V0KFRVSV9GT0NVU0FCTEVfSVRFTV9BQ0NFU1NPUiksXG4gICAgICAgIHRoaXMubWVzc2FnZSB8fCAnJyxcbiAgICApO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoSW5qZWN0b3IpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgaW5qZWN0b3I6IEluamVjdG9yLFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L25vLWF0dHJpYnV0ZS1kZWNvcmF0b3JcbiAgICAgICAgQEF0dHJpYnV0ZSgndHVpVW5maW5pc2hlZFZhbGlkYXRvcicpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgbWVzc2FnZTogc3RyaW5nIHwgbnVsbCxcbiAgICApIHt9XG59XG4iXX0=