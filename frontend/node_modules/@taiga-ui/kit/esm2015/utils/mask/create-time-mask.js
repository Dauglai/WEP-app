import { TUI_DIGIT_REGEXP } from '@taiga-ui/core';
import { MAX_TIME_VALUES } from '@taiga-ui/kit/constants';
function tuiCreateTimePartMask(maxPartValue, prefix) {
    const { length } = String(maxPartValue);
    const regExp = new Array(length).fill(TUI_DIGIT_REGEXP);
    if (prefix) {
        regExp.unshift(prefix);
    }
    return regExp;
}
export function tuiCreateTimeMask(mode, maxValues = {}) {
    const { HH, MM, SS, MS } = Object.assign(Object.assign({}, MAX_TIME_VALUES), maxValues);
    return [
        ...tuiCreateTimePartMask(HH),
        ...tuiCreateTimePartMask(MM, `:`),
        ...(mode.includes(`HH:MM:SS`) ? tuiCreateTimePartMask(SS, `:`) : []),
        ...(mode === `HH:MM:SS.MSS` ? tuiCreateTimePartMask(MS, `.`) : []),
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXRpbWUtbWFzay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC91dGlscy9tYXNrL2NyZWF0ZS10aW1lLW1hc2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLGdCQUFnQixFQUFrQixNQUFNLGdCQUFnQixDQUFDO0FBQ2pFLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUd4RCxTQUFTLHFCQUFxQixDQUMxQixZQUFvQixFQUNwQixNQUFlO0lBRWYsTUFBTSxFQUFDLE1BQU0sRUFBQyxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN0QyxNQUFNLE1BQU0sR0FBRyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUV4RCxJQUFJLE1BQU0sRUFBRTtRQUNSLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDMUI7SUFFRCxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDO0FBRUQsTUFBTSxVQUFVLGlCQUFpQixDQUM3QixJQUFpQixFQUNqQixZQUF5RCxFQUFFO0lBRTNELE1BQU0sRUFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUMsbUNBQ2YsZUFBZSxHQUNmLFNBQVMsQ0FDZixDQUFDO0lBRUYsT0FBTztRQUNILEdBQUcscUJBQXFCLENBQUMsRUFBRSxDQUFDO1FBQzVCLEdBQUcscUJBQXFCLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQztRQUNqQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMscUJBQXFCLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDcEUsR0FBRyxDQUFDLElBQUksS0FBSyxjQUFjLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0tBQ3JFLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUdWlUaW1lTW9kZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1RVSV9ESUdJVF9SRUdFWFAsIFR1aVRleHRNYXNrTGlzdH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtNQVhfVElNRV9WQUxVRVN9IGZyb20gJ0B0YWlnYS11aS9raXQvY29uc3RhbnRzJztcbmltcG9ydCB7VHVpVGltZUZvcm1hdFBhcnRzfSBmcm9tICdAdGFpZ2EtdWkva2l0L3R5cGVzJztcblxuZnVuY3Rpb24gdHVpQ3JlYXRlVGltZVBhcnRNYXNrKFxuICAgIG1heFBhcnRWYWx1ZTogbnVtYmVyLFxuICAgIHByZWZpeD86IHN0cmluZyxcbik6IEFycmF5PFJlZ0V4cCB8IHN0cmluZz4ge1xuICAgIGNvbnN0IHtsZW5ndGh9ID0gU3RyaW5nKG1heFBhcnRWYWx1ZSk7XG4gICAgY29uc3QgcmVnRXhwID0gbmV3IEFycmF5KGxlbmd0aCkuZmlsbChUVUlfRElHSVRfUkVHRVhQKTtcblxuICAgIGlmIChwcmVmaXgpIHtcbiAgICAgICAgcmVnRXhwLnVuc2hpZnQocHJlZml4KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVnRXhwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHVpQ3JlYXRlVGltZU1hc2soXG4gICAgbW9kZTogVHVpVGltZU1vZGUsXG4gICAgbWF4VmFsdWVzOiBQYXJ0aWFsPFJlY29yZDxUdWlUaW1lRm9ybWF0UGFydHMsIG51bWJlcj4+ID0ge30sXG4pOiBUdWlUZXh0TWFza0xpc3Qge1xuICAgIGNvbnN0IHtISCwgTU0sIFNTLCBNU30gPSB7XG4gICAgICAgIC4uLk1BWF9USU1FX1ZBTFVFUyxcbiAgICAgICAgLi4ubWF4VmFsdWVzLFxuICAgIH07XG5cbiAgICByZXR1cm4gW1xuICAgICAgICAuLi50dWlDcmVhdGVUaW1lUGFydE1hc2soSEgpLFxuICAgICAgICAuLi50dWlDcmVhdGVUaW1lUGFydE1hc2soTU0sIGA6YCksXG4gICAgICAgIC4uLihtb2RlLmluY2x1ZGVzKGBISDpNTTpTU2ApID8gdHVpQ3JlYXRlVGltZVBhcnRNYXNrKFNTLCBgOmApIDogW10pLFxuICAgICAgICAuLi4obW9kZSA9PT0gYEhIOk1NOlNTLk1TU2AgPyB0dWlDcmVhdGVUaW1lUGFydE1hc2soTVMsIGAuYCkgOiBbXSksXG4gICAgXTtcbn1cbiJdfQ==