import { TUI_FIRST_DAY, TuiDay, TuiDayRange } from '@taiga-ui/cdk';
import { TuiDayRangePeriod } from '@taiga-ui/kit/classes';
export function tuiCreateDefaultDayRangePeriods(periodTitles = [
    `For all the time`,
    `Today`,
    `Yesterday`,
    `Current week`,
    `Current month`,
    `Previous month`,
]) {
    const today = TuiDay.currentLocal();
    const yesterday = today.append({ day: -1 });
    const startOfWeek = today.append({ day: -today.dayOfWeek() });
    const endOfWeek = startOfWeek.append({ day: 6 });
    const startOfMonth = today.append({ day: 1 - today.day });
    const endOfMonth = startOfMonth.append({ month: 1, day: -1 });
    const startOfLastMonth = startOfMonth.append({ month: -1 });
    return [
        new TuiDayRangePeriod(new TuiDayRange(TUI_FIRST_DAY, today), periodTitles[0]),
        new TuiDayRangePeriod(new TuiDayRange(today, today), periodTitles[1]),
        new TuiDayRangePeriod(new TuiDayRange(yesterday, yesterday), periodTitles[2]),
        new TuiDayRangePeriod(new TuiDayRange(startOfWeek, endOfWeek), periodTitles[3]),
        new TuiDayRangePeriod(new TuiDayRange(startOfMonth, endOfMonth), periodTitles[4]),
        new TuiDayRangePeriod(new TuiDayRange(startOfLastMonth, startOfMonth.append({ day: -1 })), periodTitles[5]),
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWRlZmF1bHQtZGF5LXJhbmdlLXBlcmlvZHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvdXRpbHMvbWlzY2VsbGFuZW91cy9jcmVhdGUtZGVmYXVsdC1kYXktcmFuZ2UtcGVyaW9kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsYUFBYSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFeEQsTUFBTSxVQUFVLCtCQUErQixDQUMzQyxlQUFpRTtJQUM3RCxrQkFBa0I7SUFDbEIsT0FBTztJQUNQLFdBQVc7SUFDWCxjQUFjO0lBQ2QsZUFBZTtJQUNmLGdCQUFnQjtDQUNuQjtJQUVELE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNwQyxNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUMxQyxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFDLENBQUMsQ0FBQztJQUM1RCxNQUFNLFNBQVMsR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDL0MsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBQyxDQUFDLENBQUM7SUFDeEQsTUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUM1RCxNQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBRTFELE9BQU87UUFDSCxJQUFJLGlCQUFpQixDQUFDLElBQUksV0FBVyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0UsSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLElBQUksaUJBQWlCLENBQUMsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3RSxJQUFJLGlCQUFpQixDQUFDLElBQUksV0FBVyxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0UsSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxZQUFZLEVBQUUsVUFBVSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pGLElBQUksaUJBQWlCLENBQ2pCLElBQUksV0FBVyxDQUFDLGdCQUFnQixFQUFFLFlBQVksQ0FBQyxNQUFNLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQ2pFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FDbEI7S0FDSixDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VFVJX0ZJUlNUX0RBWSwgVHVpRGF5LCBUdWlEYXlSYW5nZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aURheVJhbmdlUGVyaW9kfSBmcm9tICdAdGFpZ2EtdWkva2l0L2NsYXNzZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gdHVpQ3JlYXRlRGVmYXVsdERheVJhbmdlUGVyaW9kcyhcbiAgICBwZXJpb2RUaXRsZXM6IFtzdHJpbmcsIHN0cmluZywgc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nXSA9IFtcbiAgICAgICAgYEZvciBhbGwgdGhlIHRpbWVgLFxuICAgICAgICBgVG9kYXlgLFxuICAgICAgICBgWWVzdGVyZGF5YCxcbiAgICAgICAgYEN1cnJlbnQgd2Vla2AsXG4gICAgICAgIGBDdXJyZW50IG1vbnRoYCxcbiAgICAgICAgYFByZXZpb3VzIG1vbnRoYCxcbiAgICBdLFxuKTogcmVhZG9ubHkgVHVpRGF5UmFuZ2VQZXJpb2RbXSB7XG4gICAgY29uc3QgdG9kYXkgPSBUdWlEYXkuY3VycmVudExvY2FsKCk7XG4gICAgY29uc3QgeWVzdGVyZGF5ID0gdG9kYXkuYXBwZW5kKHtkYXk6IC0xfSk7XG4gICAgY29uc3Qgc3RhcnRPZldlZWsgPSB0b2RheS5hcHBlbmQoe2RheTogLXRvZGF5LmRheU9mV2VlaygpfSk7XG4gICAgY29uc3QgZW5kT2ZXZWVrID0gc3RhcnRPZldlZWsuYXBwZW5kKHtkYXk6IDZ9KTtcbiAgICBjb25zdCBzdGFydE9mTW9udGggPSB0b2RheS5hcHBlbmQoe2RheTogMSAtIHRvZGF5LmRheX0pO1xuICAgIGNvbnN0IGVuZE9mTW9udGggPSBzdGFydE9mTW9udGguYXBwZW5kKHttb250aDogMSwgZGF5OiAtMX0pO1xuICAgIGNvbnN0IHN0YXJ0T2ZMYXN0TW9udGggPSBzdGFydE9mTW9udGguYXBwZW5kKHttb250aDogLTF9KTtcblxuICAgIHJldHVybiBbXG4gICAgICAgIG5ldyBUdWlEYXlSYW5nZVBlcmlvZChuZXcgVHVpRGF5UmFuZ2UoVFVJX0ZJUlNUX0RBWSwgdG9kYXkpLCBwZXJpb2RUaXRsZXNbMF0pLFxuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QobmV3IFR1aURheVJhbmdlKHRvZGF5LCB0b2RheSksIHBlcmlvZFRpdGxlc1sxXSksXG4gICAgICAgIG5ldyBUdWlEYXlSYW5nZVBlcmlvZChuZXcgVHVpRGF5UmFuZ2UoeWVzdGVyZGF5LCB5ZXN0ZXJkYXkpLCBwZXJpb2RUaXRsZXNbMl0pLFxuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QobmV3IFR1aURheVJhbmdlKHN0YXJ0T2ZXZWVrLCBlbmRPZldlZWspLCBwZXJpb2RUaXRsZXNbM10pLFxuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QobmV3IFR1aURheVJhbmdlKHN0YXJ0T2ZNb250aCwgZW5kT2ZNb250aCksIHBlcmlvZFRpdGxlc1s0XSksXG4gICAgICAgIG5ldyBUdWlEYXlSYW5nZVBlcmlvZChcbiAgICAgICAgICAgIG5ldyBUdWlEYXlSYW5nZShzdGFydE9mTGFzdE1vbnRoLCBzdGFydE9mTW9udGguYXBwZW5kKHtkYXk6IC0xfSkpLFxuICAgICAgICAgICAgcGVyaW9kVGl0bGVzWzVdLFxuICAgICAgICApLFxuICAgIF07XG59XG4iXX0=