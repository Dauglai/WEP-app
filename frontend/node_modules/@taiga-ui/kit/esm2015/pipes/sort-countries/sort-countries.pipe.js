import { Inject, Pipe } from '@angular/core';
import { TUI_COUNTRIES } from '@taiga-ui/kit/tokens';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "rxjs";
export class TuiSortCountriesPipe {
    constructor(countriesNames$) {
        this.countriesNames$ = countriesNames$;
    }
    transform(countries) {
        return this.countriesNames$.pipe(map(names => [...countries].sort((a, b) => names[a].localeCompare(names[b]))));
    }
}
TuiSortCountriesPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSortCountriesPipe, deps: [{ token: TUI_COUNTRIES }], target: i0.ɵɵFactoryTarget.Pipe });
TuiSortCountriesPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSortCountriesPipe, name: "tuiSortCountries" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSortCountriesPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: `tuiSortCountries`,
                }]
        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_COUNTRIES]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC1jb3VudHJpZXMucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9waXBlcy9zb3J0LWNvdW50cmllcy9zb3J0LWNvdW50cmllcy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUUxRCxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFbkQsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDOzs7QUFLbkMsTUFBTSxPQUFPLG9CQUFvQjtJQUM3QixZQUVxQixlQUE4RDtRQUE5RCxvQkFBZSxHQUFmLGVBQWUsQ0FBK0M7SUFDaEYsQ0FBQztJQUVKLFNBQVMsQ0FBQyxTQUF1QztRQUM3QyxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUM1QixHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQ2hGLENBQUM7SUFDTixDQUFDOztrSEFWUSxvQkFBb0Isa0JBRWpCLGFBQWE7Z0hBRmhCLG9CQUFvQjs0RkFBcEIsb0JBQW9CO2tCQUhoQyxJQUFJO21CQUFDO29CQUNGLElBQUksRUFBRSxrQkFBa0I7aUJBQzNCOzswQkFHUSxNQUFNOzJCQUFDLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdCwgUGlwZSwgUGlwZVRyYW5zZm9ybX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aUNvdW50cnlJc29Db2RlfSBmcm9tICdAdGFpZ2EtdWkvaTE4bic7XG5pbXBvcnQge1RVSV9DT1VOVFJJRVN9IGZyb20gJ0B0YWlnYS11aS9raXQvdG9rZW5zJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AUGlwZSh7XG4gICAgbmFtZTogYHR1aVNvcnRDb3VudHJpZXNgLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlTb3J0Q291bnRyaWVzUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9DT1VOVFJJRVMpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgY291bnRyaWVzTmFtZXMkOiBPYnNlcnZhYmxlPFJlY29yZDxUdWlDb3VudHJ5SXNvQ29kZSwgc3RyaW5nPj4sXG4gICAgKSB7fVxuXG4gICAgdHJhbnNmb3JtKGNvdW50cmllczogcmVhZG9ubHkgVHVpQ291bnRyeUlzb0NvZGVbXSk6IE9ic2VydmFibGU8VHVpQ291bnRyeUlzb0NvZGVbXT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5jb3VudHJpZXNOYW1lcyQucGlwZShcbiAgICAgICAgICAgIG1hcChuYW1lcyA9PiBbLi4uY291bnRyaWVzXS5zb3J0KChhLCBiKSA9PiBuYW1lc1thXS5sb2NhbGVDb21wYXJlKG5hbWVzW2JdKSkpLFxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==