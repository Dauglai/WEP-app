{"version":3,"file":"taiga-ui-kit-components-input-month-range.js","sources":["../../../projects/kit/components/input-month-range/input-month-range.component.ts","../../../projects/kit/components/input-month-range/input-month-range.template.html","../../../projects/kit/components/input-month-range/input-month-range.directive.ts","../../../projects/kit/components/input-month-range/input-month-range.module.ts","../../../projects/kit/components/input-month-range/taiga-ui-kit-components-input-month-range.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    ALWAYS_FALSE_HANDLER,\n    CHAR_EN_DASH,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    tuiDateClamp,\n    TuiDay,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiHandler,\n    TuiMonth,\n    TuiMonthRange,\n    TuiYear,\n} from '@taiga-ui/cdk';\nimport {\n    TuiMonthPipe,\n    TuiPrimitiveTextfieldComponent,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TuiMonthContext} from '@taiga-ui/kit/interfaces';\nimport {TUI_MONTH_FORMATTER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {\n    TUI_INPUT_DATE_OPTIONS,\n    TUI_MONTH_FORMATTER,\n    TuiInputDateOptions,\n} from '@taiga-ui/kit/tokens';\nimport {TuiBooleanHandlerWithContext} from '@taiga-ui/kit/types';\nimport {Observable} from 'rxjs';\n\n@Component({\n    selector: 'tui-input-month-range',\n    templateUrl: './input-month-range.template.html',\n    styleUrls: ['./input-month-range.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent),\n        tuiAsControl(TuiInputMonthRangeComponent),\n        TUI_MONTH_FORMATTER_PROVIDER,\n        TuiMonthPipe,\n    ],\n})\nexport class TuiInputMonthRangeComponent\n    extends AbstractTuiNullableControl<TuiMonthRange>\n    implements TuiWithOptionalMinMax<TuiMonth>, TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    @Input()\n    @tuiDefaultProp()\n    min: TuiMonth = this.options.min;\n\n    @Input()\n    @tuiDefaultProp()\n    max: TuiMonth = this.options.max;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandlerWithContext<TuiMonth, TuiMonthContext> =\n        ALWAYS_FALSE_HANDLER;\n\n    @Input()\n    @tuiDefaultProp()\n    defaultActiveYear: TuiYear = TuiDay.currentLocal();\n\n    open = false;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(TUI_MONTH_FORMATTER)\n        readonly formatter: TuiHandler<TuiMonth | null, Observable<string>>,\n        @Inject(TUI_INPUT_DATE_OPTIONS)\n        private readonly options: TuiInputDateOptions,\n    ) {\n        super(control, cdr);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get computedDefaultActiveYear(): TuiYear {\n        return (\n            this.value?.from || tuiDateClamp(this.defaultActiveYear, this.min, this.max)\n        );\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get calendarIcon(): TuiInputDateOptions['icon'] {\n        return this.options.icon;\n    }\n\n    computeValue(from: string | null, to: string | null): string {\n        const formattedTo = from === to && this.focused && !this.readOnly ? '' : to;\n\n        return `${from} ${CHAR_EN_DASH} ${formattedTo}`;\n    }\n\n    onValueChange(value: string): void {\n        if (value) {\n            return;\n        }\n\n        this.value = null;\n        this.onOpenChange(true);\n    }\n\n    onMonthClick(month: TuiMonth): void {\n        if (this.value === null || !this.value.isSingleMonth) {\n            this.writeValue(new TuiMonthRange(month, month));\n\n            return;\n        }\n\n        this.value = TuiMonthRange.sort(this.value.from, month);\n        this.close();\n    }\n\n    onOpenChange(open: boolean): void {\n        this.open = open;\n    }\n\n    onActiveZone(focused: boolean): void {\n        this.updateFocused(focused);\n\n        if (focused) {\n            return;\n        }\n\n        if (this.value?.isSingleMonth) {\n            this.value = new TuiMonthRange(this.value.from, this.value.from);\n        }\n    }\n\n    override setDisabledState(): void {\n        super.setDisabledState();\n        this.close();\n    }\n\n    private close(): void {\n        this.open = false;\n    }\n}\n","<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"interactive\"\n    [content]=\"dropdown\"\n    [open]=\"open && interactive\"\n    (openChange)=\"onOpenChange($event)\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-primitive-textfield\n        class=\"t-textfield\"\n        [editable]=\"false\"\n        [disabled]=\"computedDisabled\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [tuiTextfieldIcon]=\"calendarIcon\"\n        [pseudoFocus]=\"pseudoFocus\"\n        [pseudoHover]=\"pseudoHover\"\n        [invalid]=\"computedInvalid\"\n        [value]=\"\n            value\n                ? computeValue(value.from | tuiMapper : formatter | async, value.to | tuiMapper : formatter | async)\n                : ''\n        \"\n        (valueChange)=\"onValueChange($event)\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            select=\"input\"\n            ngProjectAs=\"input\"\n        ></ng-content>\n    </tui-primitive-textfield>\n\n    <ng-template #dropdown>\n        <tui-calendar-month\n            tuiPreventDefault=\"mousedown\"\n            [disabledItemHandler]=\"disabledItemHandler\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [value]=\"value\"\n            [year]=\"computedDefaultActiveYear\"\n            (monthClick)=\"onMonthClick($event)\"\n        ></tui-calendar-month>\n    </ng-template>\n</tui-hosted-dropdown>\n","import {Directive, DoCheck, Inject, Self} from '@angular/core';\nimport {\n    AbstractTuiControl,\n    TuiDestroyService,\n    TuiHandler,\n    TuiMonth,\n    TuiMonthRange,\n} from '@taiga-ui/cdk';\nimport {AbstractTuiTextfieldHost, tuiAsTextfieldHost} from '@taiga-ui/core';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\nimport {combineLatest, Observable, Subject} from 'rxjs';\nimport {distinctUntilChanged, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {TuiInputMonthRangeComponent} from './input-month-range.component';\n\n@Directive({\n    selector: 'tui-input-month-range',\n    providers: [tuiAsTextfieldHost(TuiInputMonthRangeDirective), TuiDestroyService],\n})\nexport class TuiInputMonthRangeDirective\n    extends AbstractTuiTextfieldHost<TuiInputMonthRangeComponent>\n    implements DoCheck\n{\n    private readonly value$ = new Subject<TuiMonthRange | null>();\n\n    private localizedValue: [string, string] = ['', ''];\n\n    constructor(\n        @Inject(AbstractTuiControl) host: TuiInputMonthRangeComponent,\n        @Inject(TUI_MONTH_FORMATTER)\n        formatter: TuiHandler<TuiMonth | null, Observable<string>>,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<unknown>,\n    ) {\n        super(host);\n\n        this.value$\n            .pipe(\n                distinctUntilChanged(),\n                switchMap((value: TuiMonthRange | null) =>\n                    combineLatest([\n                        formatter(value?.from || null),\n                        formatter(value?.to || null),\n                    ]),\n                ),\n                takeUntil(destroy$),\n            )\n            .subscribe(localizedValue => {\n                this.localizedValue = localizedValue;\n            });\n    }\n\n    override get readOnly(): boolean {\n        return true;\n    }\n\n    override get value(): string {\n        return this.localizedValue[0]\n            ? this.host.computeValue(...this.localizedValue)\n            : '';\n    }\n\n    ngDoCheck(): void {\n        this.value$.next(this.host.value);\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiActiveZoneModule,\n    TuiMapperPipeModule,\n    TuiPreventDefaultModule,\n} from '@taiga-ui/cdk';\nimport {\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiCalendarMonthModule} from '@taiga-ui/kit/components/calendar-month';\n\nimport {TuiInputMonthRangeComponent} from './input-month-range.component';\nimport {TuiInputMonthRangeDirective} from './input-month-range.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiCalendarMonthModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiSvgModule,\n        TuiPreventDefaultModule,\n        TuiActiveZoneModule,\n        TuiMapperPipeModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective],\n    exports: [\n        TuiInputMonthRangeComponent,\n        TuiInputMonthRangeDirective,\n        TuiTextfieldComponent,\n    ],\n})\nexport class TuiInputMonthRangeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}