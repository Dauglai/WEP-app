import * as i0 from '@angular/core';
import { ElementRef, TemplateRef, Directive, Inject, Input, ViewChild, HostBinding } from '@angular/core';
import * as i1 from '@taiga-ui/cdk';
import { AbstractTuiControl, TuiIdService } from '@taiga-ui/cdk';
import { TUI_TEXTFIELD_HOST, TuiDataListDirective } from '@taiga-ui/core';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';

class AbstractTuiNativeSelect {
    constructor(host, control, el, idService, itemsHandlers) {
        this.host = host;
        this.control = control;
        this.el = el;
        this.idService = idService;
        this.itemsHandlers = itemsHandlers;
        this.disabledItemHandler = null;
        this.datalist = null;
    }
    get id() {
        return this.el.nativeElement.id || this.idService.generate();
    }
}
AbstractTuiNativeSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AbstractTuiNativeSelect, deps: [{ token: TUI_TEXTFIELD_HOST }, { token: AbstractTuiControl }, { token: ElementRef }, { token: TuiIdService }, { token: TUI_ITEMS_HANDLERS }], target: i0.ɵɵFactoryTarget.Directive });
AbstractTuiNativeSelect.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: AbstractTuiNativeSelect, inputs: { disabledItemHandler: "disabledItemHandler" }, host: { properties: { "id": "this.id" } }, viewQueries: [{ propertyName: "datalist", first: true, predicate: TuiDataListDirective, descendants: true, read: TemplateRef, static: true }], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AbstractTuiNativeSelect, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_TEXTFIELD_HOST]
                }] }, { type: i1.AbstractTuiControl, decorators: [{
                    type: Inject,
                    args: [AbstractTuiControl]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i1.TuiIdService, decorators: [{
                    type: Inject,
                    args: [TuiIdService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ITEMS_HANDLERS]
                }] }]; }, propDecorators: { disabledItemHandler: [{
                type: Input
            }], datalist: [{
                type: ViewChild,
                args: [TuiDataListDirective, { read: TemplateRef, static: true }]
            }], id: [{
                type: HostBinding,
                args: [`id`]
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { AbstractTuiNativeSelect };
//# sourceMappingURL=taiga-ui-kit-abstract.js.map
