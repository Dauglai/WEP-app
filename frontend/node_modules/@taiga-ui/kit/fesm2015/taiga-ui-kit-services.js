import * as i0 from '@angular/core';
import { Injectable, Inject } from '@angular/core';
import * as i1 from '@taiga-ui/core';
import { TuiDialogService } from '@taiga-ui/core';
import { TUI_PROMPT } from '@taiga-ui/kit/components';
import { defer, of } from 'rxjs';

class TuiDialogFormService {
    constructor(dialogs) {
        this.dialogs = dialogs;
        this.dirty = false;
    }
    markAsDirty() {
        this.dirty = true;
    }
    markAsPristine() {
        this.dirty = false;
    }
    withPrompt(options) {
        return defer(() => this.dirty
            ? this.dialogs.open(TUI_PROMPT, Object.assign({ size: `s` }, options))
            : of(true));
    }
}
TuiDialogFormService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDialogFormService, deps: [{ token: TuiDialogService }], target: i0.ɵɵFactoryTarget.Injectable });
TuiDialogFormService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDialogFormService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDialogFormService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.TuiDialogService, decorators: [{
                    type: Inject,
                    args: [TuiDialogService]
                }] }]; } });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiDialogFormService };
//# sourceMappingURL=taiga-ui-kit-services.js.map
