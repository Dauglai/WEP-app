{"version":3,"file":"taiga-ui-kit-components-calendar-month.js","sources":["../../../projects/kit/components/calendar-month/calendar-month.component.ts","../../../projects/kit/components/calendar-month/calendar-month.template.html","../../../projects/kit/components/calendar-month/calendar-month.module.ts","../../../projects/kit/components/calendar-month/taiga-ui-kit-components-calendar-month.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport {\n    ALWAYS_FALSE_HANDLER,\n    TUI_FIRST_DAY,\n    TUI_LAST_DAY,\n    TuiBooleanHandler,\n    TuiDay,\n    tuiDefaultProp,\n    TuiMonth,\n    TuiMonthRange,\n    tuiNullableSame,\n    tuiPure,\n    TuiYear,\n} from '@taiga-ui/cdk';\nimport {TuiInteractiveState, TuiRangeState, TuiWithOptionalMinMax} from '@taiga-ui/core';\nimport {TuiMonthContext} from '@taiga-ui/kit/interfaces';\nimport {TUI_CALENDAR_MONTHS} from '@taiga-ui/kit/tokens';\nimport {TuiBooleanHandlerWithContext} from '@taiga-ui/kit/types';\nimport {Observable} from 'rxjs';\n\nconst TODAY = TuiDay.currentLocal();\n\n@Component({\n    selector: 'tui-calendar-month',\n    templateUrl: './calendar-month.template.html',\n    styleUrls: ['./calendar-month.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiCalendarMonthComponent implements TuiWithOptionalMinMax<TuiMonth> {\n    @Input()\n    @tuiDefaultProp()\n    value: TuiMonth | TuiMonthRange | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    year: TuiYear = TODAY;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandlerWithContext<TuiMonth, TuiMonthContext> =\n        ALWAYS_FALSE_HANDLER;\n\n    @Input()\n    @tuiDefaultProp()\n    min: TuiMonth = TUI_FIRST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    max: TuiMonth = TUI_LAST_DAY;\n\n    @Output()\n    readonly monthClick = new EventEmitter<TuiMonth>();\n\n    @Output()\n    readonly hoveredItemChange = new EventEmitter<TuiMonth | null>();\n\n    @Output()\n    readonly yearChange = new EventEmitter<TuiYear>();\n\n    isYearPickerShown = false;\n\n    hoveredItem: TuiMonth | null = null;\n    pressedItem: TuiMonth | null = null;\n\n    constructor(\n        @Inject(TUI_CALENDAR_MONTHS) readonly months$: Observable<readonly string[]>,\n    ) {}\n\n    @HostBinding('class._single')\n    get isSingle(): boolean {\n        return (\n            this.value !== null &&\n            (this.value instanceof TuiMonth || this.value.isSingleMonth)\n        );\n    }\n\n    get previousYearDisabled(): boolean {\n        return this.year.yearSameOrBefore(this.min);\n    }\n\n    get nextYearDisabled(): boolean {\n        return this.year.yearSameOrAfter(this.max);\n    }\n\n    getItemState(item: TuiMonth): TuiInteractiveState | null {\n        const {disabledItemHandlerWithMinMax, pressedItem, hoveredItem} = this;\n\n        if (disabledItemHandlerWithMinMax(item)) {\n            return TuiInteractiveState.Disabled;\n        }\n\n        if (pressedItem?.monthSame(item)) {\n            return TuiInteractiveState.Active;\n        }\n\n        if (hoveredItem?.monthSame(item)) {\n            return TuiInteractiveState.Hover;\n        }\n\n        return null;\n    }\n\n    getItemRange(item: TuiMonth): TuiRangeState | null {\n        const {value, hoveredItem} = this;\n\n        if (value === null) {\n            return null;\n        }\n\n        if (value instanceof TuiMonth) {\n            return value.monthSame(item) ? TuiRangeState.Single : null;\n        }\n\n        const theFirstOfRange = value.from.monthSame(item) && !value.isSingleMonth;\n        const hoveredItemAfterFrom =\n            hoveredItem?.monthAfter(value.from) &&\n            value.from.monthSame(item) &&\n            value.isSingleMonth;\n        const hoveredItemIsCandidateToBeFrom =\n            hoveredItem?.monthSame(item) &&\n            hoveredItem?.monthBefore(value.from) &&\n            value.isSingleMonth;\n\n        if (theFirstOfRange || hoveredItemAfterFrom || hoveredItemIsCandidateToBeFrom) {\n            return TuiRangeState.Start;\n        }\n\n        const theLastOfRange = value.to.monthSame(item) && !value.isSingleMonth;\n        const hoveredItemBeforeTo =\n            value.to.monthSame(item) &&\n            hoveredItem?.monthBefore(value.to) &&\n            value.isSingleMonth;\n        const hoveredItemIsCandidateToBeTo =\n            hoveredItem?.monthSame(item) &&\n            hoveredItem?.monthAfter(value.from) &&\n            value.isSingleMonth;\n\n        if (theLastOfRange || hoveredItemBeforeTo || hoveredItemIsCandidateToBeTo) {\n            return TuiRangeState.End;\n        }\n\n        return value.isSingleMonth && value.from.monthSame(item)\n            ? TuiRangeState.Single\n            : null;\n    }\n\n    getTuiMonth(monthNumber: number, yearNumber: number): TuiMonth {\n        return new TuiMonth(yearNumber, monthNumber);\n    }\n\n    isItemToday(item: TuiMonth): boolean {\n        return TODAY.monthSame(item);\n    }\n\n    isItemInsideRange(month: TuiMonth): boolean {\n        const {value, hoveredItem} = this;\n\n        if (value === null || value instanceof TuiMonth) {\n            return false;\n        }\n\n        if (!value.isSingleMonth) {\n            return value.from.monthSameOrBefore(month) && value.to.monthAfter(month);\n        }\n\n        if (hoveredItem === null) {\n            return false;\n        }\n\n        const range = TuiMonthRange.sort(value.from, hoveredItem);\n\n        return range.from.monthSameOrBefore(month) && range.to.monthAfter(month);\n    }\n\n    onPickerYearClick(year: TuiYear): void {\n        this.isYearPickerShown = false;\n\n        if (this.year.yearSame(year)) {\n            return;\n        }\n\n        this.updateActiveYear(year);\n    }\n\n    onItemClick(month: TuiMonth): void {\n        if (this.disabledItemHandlerWithMinMax(month)) {\n            return;\n        }\n\n        this.monthClick.emit(month);\n    }\n\n    onYearClick(): void {\n        this.isYearPickerShown = true;\n    }\n\n    onNextYear(): void {\n        this.updateActiveYear(this.year.append({year: 1}));\n    }\n\n    onPreviousYear(): void {\n        this.updateActiveYear(this.year.append({year: -1}));\n    }\n\n    onItemHovered(hovered: boolean, item: TuiMonth): void {\n        this.updateHoveredItem(hovered ? item : null);\n    }\n\n    onItemPressed(pressed: boolean, item: TuiMonth): void {\n        this.updatePressedItem(pressed ? item : null);\n    }\n\n    @tuiPure\n    private calculateDisabledItemHandlerWithMinMax(\n        disabledItemHandler: TuiBooleanHandlerWithContext<TuiMonth, TuiMonthContext>,\n        value: TuiMonth | TuiMonthRange | null,\n        min: TuiMonth,\n        max: TuiMonth,\n    ): TuiBooleanHandler<TuiMonth> {\n        return item =>\n            item.monthBefore(min) ||\n            item.monthAfter(max) ||\n            disabledItemHandler(item, {value});\n    }\n\n    private get disabledItemHandlerWithMinMax(): TuiBooleanHandler<TuiMonth> {\n        return this.calculateDisabledItemHandlerWithMinMax(\n            this.disabledItemHandler,\n            this.value,\n            this.min,\n            this.max,\n        );\n    }\n\n    private updateHoveredItem(month: TuiMonth | null): void {\n        if (tuiNullableSame(this.hoveredItem, month, (a, b) => a.monthSame(b))) {\n            return;\n        }\n\n        this.hoveredItem = month;\n        this.hoveredItemChange.emit(month);\n    }\n\n    private updatePressedItem(item: TuiMonth | null): void {\n        this.pressedItem = item;\n    }\n\n    private updateActiveYear(year: TuiYear): void {\n        this.year = year;\n        this.yearChange.emit(year);\n    }\n}\n","<tui-scrollbar\n    *ngIf=\"isYearPickerShown; else monthSelect\"\n    class=\"t-scrollbar\"\n>\n    <tui-primitive-year-picker\n        [min]=\"min\"\n        [max]=\"max\"\n        [initialItem]=\"year\"\n        [value]=\"value\"\n        (yearClick)=\"onPickerYearClick($event)\"\n    ></tui-primitive-year-picker>\n</tui-scrollbar>\n<ng-template #monthSelect>\n    <tui-primitive-spin-button\n        [focusable]=\"false\"\n        [leftDisabled]=\"previousYearDisabled\"\n        [rightDisabled]=\"nextYearDisabled\"\n        (leftClick)=\"onPreviousYear()\"\n        (rightClick)=\"onNextYear()\"\n    >\n        <button\n            tuiLink\n            type=\"button\"\n            automation-id=\"tui-calendar-month__active-year\"\n            [tuiFocusable]=\"false\"\n            (click)=\"onYearClick()\"\n        >\n            {{ year.formattedYear }}\n        </button>\n    </tui-primitive-spin-button>\n    <div class=\"t-row\">\n        <ng-container *ngFor=\"let month of months$ | async; let index = index\">\n            <div\n                *tuiLet=\"getTuiMonth(index, year.year) as item\"\n                class=\"t-cell\"\n                [class.t-cell_today]=\"isItemToday(item)\"\n                [class.t-cell_interval]=\"isItemInsideRange(item)\"\n                [attr.data-range]=\"getItemRange(item)\"\n                [attr.data-state]=\"getItemState(item)\"\n                (tuiHoveredChange)=\"onItemHovered($event, item)\"\n                (tuiPressedChange)=\"onItemHovered($event, item)\"\n                (click)=\"onItemClick(item)\"\n            >\n                <div class=\"t-item\">{{ month }}</div>\n            </div>\n        </ng-container>\n    </div>\n</ng-template>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiFocusableModule,\n    TuiHoveredModule,\n    TuiLetModule,\n    TuiPressedModule,\n} from '@taiga-ui/cdk';\nimport {\n    TuiLinkModule,\n    TuiPrimitiveSpinButtonModule,\n    TuiPrimitiveYearPickerModule,\n    TuiScrollbarModule,\n} from '@taiga-ui/core';\n\nimport {TuiCalendarMonthComponent} from './calendar-month.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiPrimitiveYearPickerModule,\n        TuiPrimitiveSpinButtonModule,\n        TuiScrollbarModule,\n        TuiLinkModule,\n        TuiLetModule,\n        TuiHoveredModule,\n        TuiPressedModule,\n        TuiFocusableModule,\n    ],\n    declarations: [TuiCalendarMonthComponent],\n    exports: [TuiCalendarMonthComponent],\n})\nexport class TuiCalendarMonthModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}