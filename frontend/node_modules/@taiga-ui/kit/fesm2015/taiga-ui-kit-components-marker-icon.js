import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, Input, HostBinding, NgModule } from '@angular/core';
import { TuiDestroyService, tuiDefaultProp } from '@taiga-ui/cdk';
import * as i1 from '@taiga-ui/core';
import { TUI_MODE, MODE_PROVIDER, TuiSvgModule } from '@taiga-ui/core';
import * as i2 from 'rxjs';
import { CommonModule } from '@angular/common';

class TuiMarkerIconComponent {
    constructor(mode$) {
        this.mode$ = mode$;
        this.mode = null;
        this.size = 'm';
        this.src = '';
    }
}
TuiMarkerIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMarkerIconComponent, deps: [{ token: TUI_MODE }], target: i0.ɵɵFactoryTarget.Component });
TuiMarkerIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMarkerIconComponent, selector: "tui-marker-icon, a[tuiMarkerIcon], button[tuiMarkerIcon]", inputs: { mode: "mode", size: "size", src: "src" }, host: { listeners: { "$.data-mode.attr": "mode$" }, properties: { "attr.data-marker-mode": "this.mode", "attr.data-size": "this.size" } }, providers: [TuiDestroyService, MODE_PROVIDER], ngImport: i0, template: "<tui-svg\n    class=\"t-icon\"\n    [src]=\"src\"\n></tui-svg>\n", styles: [":host{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-flex;align-items:center;justify-content:center;flex-shrink:0;border-radius:100%;color:var(--tui-text-03);background-color:var(--tui-base-02);background-size:cover!important;transition-property:color,background-color}:host[data-size=xs]{width:2rem;height:2rem}:host[data-size=s]{width:3rem;height:3rem}:host[data-size=m]{width:4rem;height:4rem}:host[data-size=l]{width:6rem;height:6rem}:host[data-size=xl]{width:8rem;height:8rem}:host[new][data-size=xxs]{width:1.5rem;height:1.5rem}:host[new][data-size=xxs] .t-icon{transform:scale(.58)}:host[new][data-size=xs]{width:2rem;height:2rem}:host[new][data-size=xs] .t-icon{transform:scale(.83)}:host[new][data-size=s]{width:2.5rem;height:2.5rem}:host[new][data-size=s] .t-icon{transform:scale(1)}:host[new][data-size=m]{width:3rem;height:3rem}:host[new][data-size=m] .t-icon{transform:scale(1)}:host[new][data-size=l]{width:4rem;height:4rem}:host[new][data-size=l] .t-icon{transform:scale(1.33)}:host[new][data-size=xl]{width:6rem;height:6rem}:host[new][data-size=xl] .t-icon{transform:scale(2.33)}:host[new][data-size=xxl]{width:8rem;height:8rem}:host[new][data-size=xxl] .t-icon{transform:scale(3.33)}:host[data-mode=onDark]:not([data-marker-mode]){color:var(--tui-base-01);background-color:var(--tui-clear-inverse)}:host[data-marker-mode=primary]{color:var(--tui-primary-text);background-color:var(--tui-primary)}:host[data-marker-mode=white]{color:var(--tui-text-03);background-color:var(--tui-base-01)}:host[data-marker-mode=warning]{color:var(--tui-warning-fill);background-color:var(--tui-warning-bg)}:host[data-marker-mode=secondary]{color:var(--tui-base-01);background-color:var(--tui-info-fill)}:host[data-marker-mode=error]{color:var(--tui-error-fill);background-color:var(--tui-error-bg)}:host[data-marker-mode=success]{color:var(--tui-success-fill);background-color:var(--tui-success-bg)}:host[data-marker-mode=link]{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;color:var(--tui-link);background-color:var(--tui-secondary)}a:host[data-marker-mode=link],button:host[data-marker-mode=link]{cursor:pointer}a:host[data-marker-mode=link]:hover,button:host[data-marker-mode=link]:hover{color:var(--tui-link-hover);background-color:var(--tui-secondary-hover)}a:host[data-marker-mode=link]:active,button:host[data-marker-mode=link]:active{color:var(--tui-link-hover);background-color:var(--tui-secondary-active)}.t-icon{width:1.5rem;height:1.5rem}:host[data-size=xs] .t-icon{transform:scale(1)}:host[data-size=s] .t-icon{transform:scale(1)}:host[data-size=m] .t-icon{transform:scale(1.33)}:host[data-size=l] .t-icon{transform:scale(2)}:host[data-size=xl] .t-icon{transform:scale(2.67)}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiMarkerIconComponent.prototype, "mode", void 0);
__decorate([
    tuiDefaultProp()
], TuiMarkerIconComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiMarkerIconComponent.prototype, "src", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMarkerIconComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-marker-icon, a[tuiMarkerIcon], button[tuiMarkerIcon]',
                    templateUrl: './marker-icon.template.html',
                    styleUrls: ['./marker-icon.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [TuiDestroyService, MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }]; }, propDecorators: { mode: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-marker-mode']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], src: [{
                type: Input
            }] } });

class TuiMarkerIconModule {
}
TuiMarkerIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMarkerIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiMarkerIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMarkerIconModule, declarations: [TuiMarkerIconComponent], imports: [CommonModule, TuiSvgModule], exports: [TuiMarkerIconComponent] });
TuiMarkerIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMarkerIconModule, imports: [[CommonModule, TuiSvgModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMarkerIconModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiSvgModule],
                    declarations: [TuiMarkerIconComponent],
                    exports: [TuiMarkerIconComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiMarkerIconComponent, TuiMarkerIconModule };
//# sourceMappingURL=taiga-ui-kit-components-marker-icon.js.map
