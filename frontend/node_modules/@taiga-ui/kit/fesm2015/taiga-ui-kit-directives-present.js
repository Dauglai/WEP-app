import * as i0 from '@angular/core';
import { ElementRef, Directive, Inject, Output, HostListener, NgModule } from '@angular/core';
import { USER_AGENT } from '@ng-web-apis/common';
import { tuiIsFirefox } from '@taiga-ui/cdk';
import { BehaviorSubject } from 'rxjs';
import { distinctUntilChanged, skip } from 'rxjs/operators';

class TuiPresentDirective {
    constructor({ nativeElement }, userAgent) {
        this.visibility$ = new BehaviorSubject(false);
        this.tuiPresentChange = this.visibility$.pipe(distinctUntilChanged(), skip(1));
        if (tuiIsFirefox(userAgent)) {
            return;
        }
        const observer = new MutationObserver(() => {
            if (!nativeElement.offsetParent &&
                nativeElement.offsetWidth === 0 &&
                nativeElement.offsetHeight === 0) {
                this.visibility$.next(false);
            }
        });
        observer.observe(nativeElement, {
            attributes: true,
            attributeFilter: ['style', 'class'],
        });
    }
    /**
     * Someday animationcancel would work and mutation observer would not be needed:
     * https://drafts.csswg.org/css-animations/#eventdef-animationevent-animationcancel
     * It would also trigger on CSS like display: none on parent nodes which is awesome
     * but currently only works in Firefox
     * ___
     * TODO: remove MutationObserver when we bump versions of supported browsers:
     *** Safari 12+
     *** Chrome 83+
     * See: {@link https://caniuse.com/mdn-api_window_animationcancel_event}
     */
    onAnimation(visibility) {
        this.visibility$.next(visibility);
    }
    ngOnDestroy() {
        this.visibility$.next(false);
    }
}
TuiPresentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPresentDirective, deps: [{ token: ElementRef }, { token: USER_AGENT }], target: i0.ɵɵFactoryTarget.Directive });
TuiPresentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiPresentDirective, selector: "[tuiPresentChange]", outputs: { tuiPresentChange: "tuiPresentChange" }, host: { listeners: { "animationcancel.self": "onAnimation(false)", "animationstart.self": "onAnimation(true)" }, properties: { "style.animation": "\"tuiPresent 1s infinite\"" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPresentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiPresentChange]',
                    host: {
                        '[style.animation]': '"tuiPresent 1s infinite"',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [USER_AGENT]
                }] }]; }, propDecorators: { tuiPresentChange: [{
                type: Output
            }], onAnimation: [{
                type: HostListener,
                args: ['animationcancel.self', ['false']]
            }, {
                type: HostListener,
                args: ['animationstart.self', ['true']]
            }] } });

class TuiPresentModule {
}
TuiPresentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPresentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiPresentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPresentModule, declarations: [TuiPresentDirective], exports: [TuiPresentDirective] });
TuiPresentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPresentModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPresentModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiPresentDirective],
                    exports: [TuiPresentDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiPresentDirective, TuiPresentModule };
//# sourceMappingURL=taiga-ui-kit-directives-present.js.map
