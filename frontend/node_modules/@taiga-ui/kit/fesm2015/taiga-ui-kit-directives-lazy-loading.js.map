{"version":3,"file":"taiga-ui-kit-directives-lazy-loading.js","sources":["../../../projects/kit/directives/lazy-loading/lazy-loading.service.ts","../../../projects/kit/directives/lazy-loading/lazy-loading.directive.ts","../../../projects/kit/directives/lazy-loading/lazy-loading.module.ts","../../../projects/kit/directives/lazy-loading/taiga-ui-kit-directives-lazy-loading.ts"],"sourcesContent":["import {ChangeDetectorRef, Inject, Injectable, Self} from '@angular/core';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport {IntersectionObserverService} from '@ng-web-apis/intersection-observer';\nimport {TuiDestroyService, tuiWatch} from '@taiga-ui/cdk';\nimport {Observable, of, Subject} from 'rxjs';\nimport {catchError, filter, map, switchMap, take, takeUntil} from 'rxjs/operators';\n\n@Injectable()\nexport class TuiLazyLoadingService extends Observable<SafeResourceUrl | string> {\n    private readonly src$ = new Subject<SafeResourceUrl | string>();\n\n    constructor(\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<void>,\n        @Inject(IntersectionObserverService)\n        intersections$: Observable<IntersectionObserverEntry[]>,\n    ) {\n        super(subscriber =>\n            this.src$\n                .pipe(\n                    switchMap(src =>\n                        intersections$.pipe(\n                            filter(([{isIntersecting}]) => isIntersecting),\n                            map(() => src),\n                            catchError(() => of(src)),\n                            tuiWatch(cdr),\n                            take(1),\n                        ),\n                    ),\n                    takeUntil(destroy$),\n                )\n                .subscribe(subscriber),\n        );\n    }\n\n    next(src: SafeResourceUrl | string): void {\n        this.src$.next(src);\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport {IntersectionObserverService} from '@ng-web-apis/intersection-observer';\nimport {TuiDestroyService} from '@taiga-ui/cdk';\n\nimport {TuiLazyLoadingService} from './lazy-loading.service';\n\n@Directive({\n    selector: 'img[loading=\"lazy\"]',\n    providers: [TuiLazyLoadingService, IntersectionObserverService, TuiDestroyService],\n})\nexport class TuiLazyLoadingDirective {\n    @Input('src')\n    set srcSetter(src: SafeResourceUrl | string) {\n        this.src = this.supported ? src : null;\n        this.src$.next(src);\n    }\n\n    @HostBinding('style.animation')\n    animation = 'tuiSkeletonVibe ease-in-out 1s infinite alternate';\n\n    @HostBinding('style.background')\n    background = 'var(--tui-clear-hover)';\n\n    @HostBinding('attr.src')\n    src: SafeResourceUrl | string | null = null;\n\n    constructor(\n        @Inject(TuiLazyLoadingService)\n        private readonly src$: TuiLazyLoadingService,\n        @Inject(ElementRef)\n        private readonly el: ElementRef<HTMLImageElement>,\n    ) {\n        if (!this.supported) {\n            this.src$.subscribe(src => {\n                this.src = src;\n            });\n        }\n    }\n\n    private get supported(): boolean {\n        return 'loading' in this.el.nativeElement;\n    }\n\n    @HostListener('load')\n    onLoad(): void {\n        this.background = '';\n        this.animation = '';\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiLazyLoadingDirective} from './lazy-loading.directive';\n\n@NgModule({\n    declarations: [TuiLazyLoadingDirective],\n    exports: [TuiLazyLoadingDirective],\n})\nexport class TuiLazyLoadingModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;AAQM,MAAO,qBAAsB,SAAQ,UAAoC,CAAA;AAG3E,IAAA,WAAA,CAC+B,GAAsB,EACd,QAA0B,EAE7D,cAAuD,EAAA;AAEvD,QAAA,KAAK,CAAC,UAAU,IACZ,IAAI,CAAC,IAAI;AACJ,aAAA,IAAI,CACD,SAAS,CAAC,GAAG,IACT,cAAc,CAAC,IAAI,CACf,MAAM,CAAC,CAAC,CAAC,EAAC,cAAc,EAAC,CAAC,KAAK,cAAc,CAAC,EAC9C,GAAG,CAAC,MAAM,GAAG,CAAC,EACd,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EACzB,QAAQ,CAAC,GAAG,CAAC,EACb,IAAI,CAAC,CAAC,CAAC,CACV,CACJ,EACD,SAAS,CAAC,QAAQ,CAAC,CACtB;AACA,aAAA,SAAS,CAAC,UAAU,CAAC,CAC7B,CAAC;AAvBW,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,OAAO,EAA4B,CAAC;KAwB/D;AAED,IAAA,IAAI,CAAC,GAA6B,EAAA;AAC9B,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACvB;;AA7BQ,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EAIlB,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,iBAAiB,EACT,EAAA,EAAA,KAAA,EAAA,iBAAiB,yBACzB,2BAA2B,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;uHAN9B,qBAAqB,EAAA,CAAA,CAAA;4FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,UAAU;;0BAKF,MAAM;2BAAC,iBAAiB,CAAA;;0BACxB,IAAI;;0BAAI,MAAM;2BAAC,iBAAiB,CAAA;;0BAChC,MAAM;2BAAC,2BAA2B,CAAA;;;MCI9B,uBAAuB,CAAA;IAgBhC,WAEqB,CAAA,IAA2B,EAE3B,EAAgC,EAAA;QAFhC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAuB;QAE3B,IAAE,CAAA,EAAA,GAAF,EAAE,CAA8B;QAZrD,IAAS,CAAA,SAAA,GAAG,mDAAmD,CAAC;QAGhE,IAAU,CAAA,UAAA,GAAG,wBAAwB,CAAC;QAGtC,IAAG,CAAA,GAAA,GAAoC,IAAI,CAAC;AAQxC,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACjB,YAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAG;AACtB,gBAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACnB,aAAC,CAAC,CAAC;AACN,SAAA;KACJ;IA1BD,IACI,SAAS,CAAC,GAA6B,EAAA;AACvC,QAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;AACvC,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACvB;AAwBD,IAAA,IAAY,SAAS,GAAA;AACjB,QAAA,OAAO,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;KAC7C;IAGD,MAAM,GAAA;AACF,QAAA,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;qHArCQ,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAiBpB,qBAAqB,EAAA,EAAA,EAAA,KAAA,EAErB,UAAU,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAnBb,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,8PAFrB,CAAC,qBAAqB,EAAE,2BAA2B,EAAE,iBAAiB,CAAC,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAEzE,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAJnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,SAAS,EAAE,CAAC,qBAAqB,EAAE,2BAA2B,EAAE,iBAAiB,CAAC;AACrF,iBAAA,CAAA;;0BAkBQ,MAAM;2BAAC,qBAAqB,CAAA;;0BAE5B,MAAM;2BAAC,UAAU,CAAA;4CAjBlB,SAAS,EAAA,CAAA;sBADZ,KAAK;uBAAC,KAAK,CAAA;gBAOZ,SAAS,EAAA,CAAA;sBADR,WAAW;uBAAC,iBAAiB,CAAA;gBAI9B,UAAU,EAAA,CAAA;sBADT,WAAW;uBAAC,kBAAkB,CAAA;gBAI/B,GAAG,EAAA,CAAA;sBADF,WAAW;uBAAC,UAAU,CAAA;gBAqBvB,MAAM,EAAA,CAAA;sBADL,YAAY;uBAAC,MAAM,CAAA;;;MC3CX,oBAAoB,CAAA;;kHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;mHAApB,oBAAoB,EAAA,YAAA,EAAA,CAHd,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAC5B,uBAAuB,CAAA,EAAA,CAAA,CAAA;mHAExB,oBAAoB,EAAA,CAAA,CAAA;4FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;AACrC,iBAAA,CAAA;;;ACPD;;AAEG;;;;"}