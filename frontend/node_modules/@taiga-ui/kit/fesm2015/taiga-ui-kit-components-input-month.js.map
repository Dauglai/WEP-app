{"version":3,"file":"taiga-ui-kit-components-input-month.js","sources":["../../../projects/kit/components/input-month/input-month.component.ts","../../../projects/kit/components/input-month/input-month.template.html","../../../projects/kit/components/input-month/input-month.directive.ts","../../../projects/kit/components/input-month/input-month.module.ts","../../../projects/kit/components/input-month/taiga-ui-kit-components-input-month.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    ALWAYS_FALSE_HANDLER,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    TuiBooleanHandler,\n    tuiDateClamp,\n    TuiDay,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiHandler,\n    TuiMonth,\n    TuiYear,\n} from '@taiga-ui/cdk';\nimport {\n    TuiMonthPipe,\n    TuiPrimitiveTextfieldComponent,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TUI_MONTH_FORMATTER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {\n    TUI_INPUT_DATE_OPTIONS,\n    TUI_MONTH_FORMATTER,\n    TuiInputDateOptions,\n} from '@taiga-ui/kit/tokens';\nimport {Observable} from 'rxjs';\n\n@Component({\n    selector: 'tui-input-month',\n    templateUrl: './input-month.template.html',\n    styleUrls: ['./input-month.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputMonthComponent),\n        tuiAsControl(TuiInputMonthComponent),\n        TUI_MONTH_FORMATTER_PROVIDER,\n        TuiMonthPipe,\n    ],\n})\nexport class TuiInputMonthComponent\n    extends AbstractTuiNullableControl<TuiMonth>\n    implements TuiWithOptionalMinMax<TuiMonth>, TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    @Input()\n    @tuiDefaultProp()\n    min: TuiMonth = this.options.min;\n\n    @Input()\n    @tuiDefaultProp()\n    max: TuiMonth = this.options.max;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<TuiMonth> = ALWAYS_FALSE_HANDLER;\n\n    @Input()\n    @tuiDefaultProp()\n    defaultActiveYear: TuiYear = TuiDay.currentLocal();\n\n    activeYear?: TuiYear;\n\n    open = false;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(TUI_MONTH_FORMATTER)\n        readonly formatter: TuiHandler<TuiMonth | null, Observable<string>>,\n        @Inject(TUI_INPUT_DATE_OPTIONS)\n        private readonly options: TuiInputDateOptions,\n    ) {\n        super(control, cdr);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get computedDefaultActiveYear(): TuiYear {\n        return (\n            this.activeYear ||\n            this.value ||\n            tuiDateClamp(this.defaultActiveYear, this.min, this.max)\n        );\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get calendarIcon(): TuiInputDateOptions['icon'] {\n        return this.options.icon;\n    }\n\n    onValueChange(value: string): void {\n        if (value) {\n            return;\n        }\n\n        this.value = null;\n        this.onOpenChange(true);\n    }\n\n    onMonthClick(month: TuiMonth): void {\n        this.value = month;\n        this.close();\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    onOpenChange(open: boolean): void {\n        if (open && this.value) {\n            this.activeYear = this.value;\n        }\n\n        this.open = open;\n    }\n\n    override setDisabledState(): void {\n        super.setDisabledState();\n        this.close();\n    }\n\n    private close(): void {\n        this.open = false;\n    }\n}\n","<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"interactive\"\n    [content]=\"dropdown\"\n    [open]=\"open && interactive\"\n    (openChange)=\"onOpenChange($event)\"\n>\n    <tui-primitive-textfield\n        class=\"t-textfield\"\n        [editable]=\"false\"\n        [disabled]=\"computedDisabled\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [tuiTextfieldIcon]=\"calendarIcon\"\n        [pseudoFocus]=\"pseudoFocus\"\n        [pseudoHover]=\"pseudoHover\"\n        [invalid]=\"computedInvalid\"\n        [value]=\"(value | tuiMapper : formatter | async) || ''\"\n        (valueChange)=\"onValueChange($event)\"\n        (focusedChange)=\"onFocused($event)\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            select=\"input\"\n            ngProjectAs=\"input\"\n        ></ng-content>\n    </tui-primitive-textfield>\n\n    <ng-template #dropdown>\n        <tui-calendar-month\n            tuiPreventDefault=\"mousedown\"\n            [disabledItemHandler]=\"disabledItemHandler\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [value]=\"value\"\n            [year]=\"computedDefaultActiveYear\"\n            (yearChange)=\"activeYear = $event\"\n            (monthClick)=\"onMonthClick($event)\"\n        ></tui-calendar-month>\n    </ng-template>\n</tui-hosted-dropdown>\n","import {Directive, DoCheck, Inject, Self} from '@angular/core';\nimport {AbstractTuiControl, TuiDestroyService, TuiHandler, TuiMonth} from '@taiga-ui/cdk';\nimport {AbstractTuiTextfieldHost, tuiAsTextfieldHost} from '@taiga-ui/core';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\nimport {Observable, Subject} from 'rxjs';\nimport {distinctUntilChanged, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {TuiInputMonthComponent} from './input-month.component';\n\n@Directive({\n    selector: 'tui-input-month',\n    providers: [tuiAsTextfieldHost(TuiInputMonthDirective), TuiDestroyService],\n})\nexport class TuiInputMonthDirective\n    extends AbstractTuiTextfieldHost<TuiInputMonthComponent>\n    implements DoCheck\n{\n    private readonly value$ = new Subject<TuiMonth | null>();\n\n    private localizedValue = '';\n\n    constructor(\n        @Inject(AbstractTuiControl) host: TuiInputMonthComponent,\n        @Inject(TUI_MONTH_FORMATTER)\n        formatter: TuiHandler<TuiMonth | null, Observable<string>>,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<unknown>,\n    ) {\n        super(host);\n\n        this.value$\n            .pipe(distinctUntilChanged(), switchMap(formatter), takeUntil(destroy$))\n            .subscribe(localizedValue => {\n                this.localizedValue = localizedValue;\n            });\n    }\n\n    override get readOnly(): boolean {\n        return true;\n    }\n\n    override get value(): string {\n        return this.localizedValue;\n    }\n\n    ngDoCheck(): void {\n        this.value$.next(this.host.value);\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiMapperPipeModule, TuiPreventDefaultModule} from '@taiga-ui/cdk';\nimport {\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiCalendarMonthModule} from '@taiga-ui/kit/components/calendar-month';\n\nimport {TuiInputMonthComponent} from './input-month.component';\nimport {TuiInputMonthDirective} from './input-month.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiCalendarMonthModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiSvgModule,\n        TuiPreventDefaultModule,\n        TuiMapperPipeModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputMonthComponent, TuiInputMonthDirective],\n    exports: [TuiInputMonthComponent, TuiInputMonthDirective, TuiTextfieldComponent],\n})\nexport class TuiInputMonthModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}