import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, NgModule } from '@angular/core';
import * as i3 from '@angular/forms';
import { NgControl, FormsModule } from '@angular/forms';
import * as i4 from '@taiga-ui/cdk';
import { AbstractTuiControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiDefaultProp, TuiFocusableModule, TuiFocusedModule } from '@taiga-ui/cdk';
import { TUI_VALUE_ACCESSOR_PROVIDER } from '@taiga-ui/kit/providers';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@taiga-ui/core';
import { TuiMaskAccessorModule } from '@taiga-ui/core';

class TuiInputInlineComponent extends AbstractTuiControl {
    constructor(control, cdr) {
        super(control, cdr);
        this.maxLength = null;
    }
    get nativeFocusableElement() {
        return !this.native ? null : this.native.nativeElement;
    }
    get focused() {
        return tuiIsNativeFocused(this.nativeFocusableElement);
    }
    get hasValue() {
        return this.value !== '';
    }
    /** @deprecated use 'value' setter */
    onValueChange(value) {
        this.value = value;
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    getFallbackValue() {
        return '';
    }
}
TuiInputInlineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputInlineComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
TuiInputInlineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputInlineComponent, selector: "tui-input-inline", inputs: { maxLength: "maxLength" }, providers: [
        TUI_VALUE_ACCESSOR_PROVIDER,
        tuiAsFocusableItemAccessor(TuiInputInlineComponent),
    ], viewQueries: [{ propertyName: "native", first: true, predicate: ["native"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<span class=\"t-before\">{{ value }}</span>\n\n<span\n    *ngIf=\"!hasValue\"\n    automation-id=\"tui-input-inline__placeholder\"\n    class=\"t-placeholder\"\n>\n    <ng-content></ng-content>\n</span>\n\n<input\n    #native\n    automation-id=\"tui-input-inline__native\"\n    type=\"text\"\n    tuiMaskAccessor\n    class=\"t-native\"\n    [attr.maxLength]=\"maxLength\"\n    [id]=\"id\"\n    [disabled]=\"computedDisabled\"\n    [readOnly]=\"readOnly\"\n    [tuiFocusable]=\"focusable\"\n    [(ngModel)]=\"value\"\n    (tuiFocusedChange)=\"onFocused($event)\"\n/>\n", styles: [":host{position:relative;display:inline-block;overflow:hidden;white-space:nowrap;box-sizing:border-box}.t-before{padding-right:.02em;margin-left:1px;visibility:hidden;white-space:pre}.t-placeholder{margin-left:-1px}.t-native{position:absolute;top:0;left:0;background-color:transparent;padding:inherit;font:inherit;color:inherit;box-sizing:border-box;width:100%;height:100%;border-width:0;text-align:inherit;letter-spacing:inherit;text-indent:inherit;text-transform:inherit;outline:none}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.TuiMaskAccessorDirective, selector: "input[tuiMaskAccessor]" }, { type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i4.TuiFocusableDirective, selector: "[tuiFocusable]", inputs: ["tuiFocusable"] }, { type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i4.TuiFocusedDirective, selector: "[tuiFocusedChange]", outputs: ["tuiFocusedChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiInputInlineComponent.prototype, "maxLength", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputInlineComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-input-inline',
                    templateUrl: './input-inline.template.html',
                    styleUrls: ['./input-inline.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        TUI_VALUE_ACCESSOR_PROVIDER,
                        tuiAsFocusableItemAccessor(TuiInputInlineComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i3.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }]; }, propDecorators: { native: [{
                type: ViewChild,
                args: ['native']
            }], maxLength: [{
                type: Input
            }] } });

class TuiInputInlineModule {
}
TuiInputInlineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputInlineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiInputInlineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputInlineModule, declarations: [TuiInputInlineComponent], imports: [CommonModule,
        FormsModule,
        TuiFocusableModule,
        TuiFocusedModule,
        TuiMaskAccessorModule], exports: [TuiInputInlineComponent] });
TuiInputInlineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputInlineModule, imports: [[
            CommonModule,
            FormsModule,
            TuiFocusableModule,
            TuiFocusedModule,
            TuiMaskAccessorModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputInlineModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        TuiFocusableModule,
                        TuiFocusedModule,
                        TuiMaskAccessorModule,
                    ],
                    declarations: [TuiInputInlineComponent],
                    exports: [TuiInputInlineComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiInputInlineComponent, TuiInputInlineModule };
//# sourceMappingURL=taiga-ui-kit-components-input-inline.js.map
