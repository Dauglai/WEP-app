{"version":3,"file":"taiga-ui-kit-directives-highlight.js","sources":["../../../projects/kit/directives/highlight/highlight.directive.ts","../../../projects/kit/directives/highlight/highlight.module.ts","../../../projects/kit/directives/highlight/taiga-ui-kit-directives-highlight.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {Directive, ElementRef, Inject, Input, OnChanges, Renderer2} from '@angular/core';\nimport {\n    svgNodeFilter,\n    tuiDefaultProp,\n    TuiDestroyService,\n    tuiPx,\n    TuiResizeService,\n} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\n\n@Directive({\n    selector: '[tuiHighlight]',\n    host: {\n        '[style.position]': '\"relative\"',\n        '[style.zIndex]': '0',\n    },\n    providers: [TuiDestroyService, TuiResizeService],\n})\nexport class TuiHighlightDirective implements OnChanges {\n    private readonly highlight: HTMLElement = this.setUpHighlight();\n\n    private readonly treeWalker = this.doc.createTreeWalker(\n        this.el.nativeElement,\n        NodeFilter.SHOW_TEXT,\n        svgNodeFilter,\n    );\n\n    @Input()\n    @tuiDefaultProp()\n    tuiHighlight = '';\n\n    @Input()\n    tuiHighlightColor = 'var(--tui-selection)';\n\n    constructor(\n        @Inject(DOCUMENT) private readonly doc: Document,\n        @Inject(ElementRef) private readonly el: ElementRef<HTMLElement>,\n        @Inject(Renderer2) private readonly renderer: Renderer2,\n        @Inject(TuiResizeService) resize$: Observable<unknown>,\n    ) {\n        resize$.subscribe(() => {\n            this.updateStyles();\n        });\n    }\n\n    get match(): boolean {\n        return this.indexOf(this.el.nativeElement.textContent) !== -1;\n    }\n\n    ngOnChanges(): void {\n        this.updateStyles();\n    }\n\n    private updateStyles(): void {\n        this.highlight.style.display = 'none';\n\n        if (!this.match) {\n            return;\n        }\n\n        this.treeWalker.currentNode = this.el.nativeElement;\n\n        do {\n            const index = this.indexOf(this.treeWalker.currentNode.nodeValue);\n\n            if (index === -1) {\n                continue;\n            }\n\n            const range = this.doc.createRange();\n\n            range.setStart(this.treeWalker.currentNode, index);\n            range.setEnd(this.treeWalker.currentNode, index + this.tuiHighlight.length);\n\n            const hostRect = this.el.nativeElement.getBoundingClientRect();\n            const {left, top, width, height} = range.getBoundingClientRect();\n            const {style} = this.highlight;\n\n            style.background = this.tuiHighlightColor;\n            style.left = tuiPx(left - hostRect.left);\n            style.top = tuiPx(top - hostRect.top);\n            style.width = tuiPx(width);\n            style.height = tuiPx(height);\n            style.display = 'block';\n\n            return;\n        } while (this.treeWalker.nextNode());\n    }\n\n    private indexOf(source: string | null): number {\n        return !source || !this.tuiHighlight\n            ? -1\n            : source.toLowerCase().indexOf(this.tuiHighlight.toLowerCase());\n    }\n\n    private setUpHighlight(): HTMLElement {\n        const highlight = this.renderer.createElement('div');\n        const {style} = highlight;\n\n        style.background = this.tuiHighlightColor;\n        style.zIndex = '-1';\n        style.position = 'absolute';\n        this.renderer.appendChild(this.el.nativeElement, highlight);\n\n        return highlight;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiHighlightDirective} from './highlight.directive';\n\n@NgModule({\n    declarations: [TuiHighlightDirective],\n    exports: [TuiHighlightDirective],\n})\nexport class TuiHighlightModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}