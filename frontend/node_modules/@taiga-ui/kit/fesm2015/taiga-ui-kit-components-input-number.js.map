{"version":3,"file":"taiga-ui-kit-components-input-number.js","sources":["../../../projects/kit/components/input-number/input-number.component.ts","../../../projects/kit/components/input-number/input-number.template.html","../../../projects/kit/components/input-number/input-number.directive.ts","../../../projects/kit/components/input-number/input-number.module.ts","../../../projects/kit/components/input-number/taiga-ui-kit-components-input-number.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    QueryList,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    EMPTY_QUERY,\n    TUI_IS_IOS,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiInputMode,\n    TuiMapper,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_DECIMAL_SYMBOLS,\n    TUI_NUMBER_FORMAT,\n    tuiCreateAutoCorrectedNumberPipe,\n    tuiCreateNumberMask,\n    TuiDecimal,\n    tuiEnableAutoCorrectDecimalSymbol,\n    tuiFormatNumber,\n    tuiGetFractionPartPadded,\n    tuiMaskedMoneyValueIsEmpty,\n    tuiMaskedNumberStringToNumber,\n    TuiNumberFormatSettings,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextMaskOptions,\n} from '@taiga-ui/core';\nimport {PolymorpheusOutletDirective} from '@tinkoff/ng-polymorpheus';\n\nconst DEFAULT_MAX_LENGTH = 18;\n\n@Component({\n    selector: 'tui-input-number',\n    templateUrl: './input-number.template.html',\n    styleUrls: ['./input-number.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputNumberComponent),\n        tuiAsControl(TuiInputNumberComponent),\n    ],\n})\nexport class TuiInputNumberComponent\n    extends AbstractTuiNullableControl<number>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly primitiveTextfield?: TuiPrimitiveTextfieldComponent;\n\n    private unfinishedValue: string | null = '';\n\n    @Input()\n    @tuiDefaultProp()\n    min = Number.MIN_SAFE_INTEGER;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Number.MAX_SAFE_INTEGER;\n\n    @Input()\n    @tuiDefaultProp()\n    decimal: TuiDecimal = 'not-zero';\n\n    @Input()\n    @tuiDefaultProp()\n    precision = 2;\n\n    /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */\n    @Input()\n    @tuiDefaultProp()\n    prefix = '';\n\n    /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n    @Input()\n    @tuiDefaultProp()\n    postfix = '';\n\n    @ContentChildren(PolymorpheusOutletDirective, {descendants: true})\n    readonly polymorpheusValueContent: QueryList<unknown> = EMPTY_QUERY;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef)\n        cdr: ChangeDetectorRef,\n        @Inject(TUI_NUMBER_FORMAT)\n        private readonly numberFormat: TuiNumberFormatSettings,\n        @Inject(TUI_IS_IOS) private readonly isIOS: boolean,\n    ) {\n        super(control, cdr);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return !this.primitiveTextfield || this.computedDisabled\n            ? null\n            : this.primitiveTextfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.primitiveTextfield && this.primitiveTextfield.focused;\n    }\n\n    get isNegativeAllowed(): boolean {\n        return this.min < 0;\n    }\n\n    get inputMode(): TuiInputMode {\n        if (this.isIOS && this.isNegativeAllowed) {\n            // iPhone does not have minus sign if inputMode is equal to 'numeric' / 'decimal'\n            return 'text';\n        }\n\n        return this.decimal === 'never' ? 'numeric' : 'decimal';\n    }\n\n    get calculatedMaxLength(): number {\n        const decimalPart =\n            this.decimal !== 'never' &&\n            this.nativeValue.includes(this.numberFormat.decimalSeparator);\n        const precision = decimalPart ? Math.min(this.precision + 1, 20) : 0;\n        const takeThousand = this.numberFormat.thousandSeparator.repeat(5).length;\n\n        return DEFAULT_MAX_LENGTH + precision + takeThousand;\n    }\n\n    get formattedValue(): string {\n        return this.getFormattedValue(this.value || 0);\n    }\n\n    get computedValue(): string {\n        if (this.focused) {\n            return this.nativeValue;\n        }\n\n        return this.value === null ? '' : this.formattedValue;\n    }\n\n    @HostListener('keydown.0', ['$event'])\n    onZero(event: KeyboardEvent): void {\n        const decimal =\n            this.nativeValue.split(this.numberFormat.decimalSeparator)[1] || '';\n        const {nativeFocusableElement} = this;\n\n        if (\n            decimal.length < this.precision ||\n            !nativeFocusableElement ||\n            !nativeFocusableElement.selectionStart ||\n            this.nativeValue[nativeFocusableElement.selectionStart] !== '0'\n        ) {\n            return;\n        }\n\n        event.preventDefault();\n        nativeFocusableElement.selectionStart++;\n    }\n\n    mask: TuiMapper<boolean, TuiTextMaskOptions> = (\n        allowNegative: boolean,\n        decimal: TuiDecimal,\n        decimalLimit: number,\n        nativeFocusableElement: HTMLInputElement | null,\n    ) => ({\n        mask: tuiCreateNumberMask({\n            allowNegative,\n            decimalLimit,\n            allowDecimal: decimal !== 'never',\n            requireDecimal: decimal === 'always',\n            decimalSymbol: this.numberFormat.decimalSeparator,\n            thousandSymbol: this.numberFormat.thousandSeparator,\n            autoCorrectDecimalSymbol: tuiEnableAutoCorrectDecimalSymbol(\n                this.numberFormat,\n            ),\n        }),\n        pipe: tuiCreateAutoCorrectedNumberPipe(\n            decimal === 'always' ? decimalLimit : 0,\n            this.numberFormat.decimalSeparator,\n            this.numberFormat.thousandSeparator,\n            nativeFocusableElement,\n            allowNegative,\n            this.isIOS,\n        ),\n        guide: false,\n    });\n\n    onValueChange(value: string): void {\n        if (tuiMaskedMoneyValueIsEmpty(value)) {\n            this.value = null;\n\n            return;\n        }\n\n        if (this.isNativeValueNotFinished) {\n            this.unfinishedValue = value;\n\n            return;\n        }\n\n        this.unfinishedValue = null;\n        const capped = this.absoluteCapInputValue(value);\n\n        if (capped === null || Number.isNaN(capped)) {\n            return;\n        }\n\n        this.value = capped;\n\n        if (\n            capped !==\n            tuiMaskedNumberStringToNumber(\n                value,\n                this.numberFormat.decimalSeparator,\n                this.numberFormat.thousandSeparator,\n            )\n        ) {\n            this.nativeValue = this.formattedValue;\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (!TUI_DECIMAL_SYMBOLS.includes(event.key)) {\n            return;\n        }\n\n        if (this.decimal === 'never') {\n            event.preventDefault();\n\n            return;\n        }\n\n        if (this.nativeValue.includes(this.numberFormat.decimalSeparator)) {\n            event.preventDefault();\n            this.setCaretAfterComma();\n        }\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n\n        if (focused) {\n            return;\n        }\n\n        const nativeNumberValue = this.unfinishedValue\n            ? tuiMaskedNumberStringToNumber(\n                  this.unfinishedValue,\n                  this.numberFormat.decimalSeparator,\n                  this.numberFormat.thousandSeparator,\n              )\n            : this.nativeNumberValue;\n\n        this.unfinishedValue = null;\n\n        if (Number.isNaN(nativeNumberValue)) {\n            this.clear();\n\n            return;\n        }\n\n        this.value = Math.min(this.max, Math.max(this.min, nativeNumberValue));\n        this.nativeValue = this.formattedValue;\n    }\n\n    getFormattedValue(value: number): string {\n        const absValue = Math.abs(value);\n        const hasFraction = absValue % 1 > 0;\n        let decimalLimit =\n            this.decimal === 'always' || (hasFraction && this.decimal !== 'never')\n                ? this.precision\n                : 0;\n\n        const fraction = hasFraction\n            ? tuiGetFractionPartPadded(value, this.precision)\n            : '';\n\n        if (this.focused && this.decimal !== 'always') {\n            decimalLimit = fraction.length;\n        }\n\n        return tuiFormatNumber(value, {\n            ...this.numberFormat,\n            decimalLimit,\n        });\n    }\n\n    private get isNativeValueNotFinished(): boolean {\n        const nativeNumberValue = this.nativeNumberValue;\n\n        return nativeNumberValue < 0\n            ? nativeNumberValue > this.max\n            : nativeNumberValue < this.min;\n    }\n\n    get nativeValue(): string {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n\n    set nativeValue(value: string) {\n        if (!this.primitiveTextfield || !this.nativeFocusableElement) {\n            return;\n        }\n\n        this.primitiveTextfield.value = value;\n        this.nativeFocusableElement.value = value;\n    }\n\n    private get nativeNumberValue(): number {\n        return tuiMaskedNumberStringToNumber(\n            this.nativeValue,\n            this.numberFormat.decimalSeparator,\n            this.numberFormat.thousandSeparator,\n        );\n    }\n\n    private clear(): void {\n        this.nativeValue = '';\n        this.value = null;\n    }\n\n    private absoluteCapInputValue(inputValue: string): number | null {\n        const value = tuiMaskedNumberStringToNumber(\n            inputValue,\n            this.numberFormat.decimalSeparator,\n            this.numberFormat.thousandSeparator,\n        );\n        const capped =\n            value < 0\n                ? Math.max(Math.max(this.min, Number.MIN_SAFE_INTEGER), value)\n                : Math.min(value, Math.min(this.max, Number.MAX_SAFE_INTEGER));\n        const ineligibleValue =\n            Number.isNaN(capped) || capped < this.min || capped > this.max;\n\n        return ineligibleValue ? null : capped;\n    }\n\n    private setCaretAfterComma(): void {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        const afterCommaPosition = this.nativeValue.length - this.precision;\n\n        this.nativeFocusableElement.setSelectionRange(\n            afterCommaPosition,\n            afterCommaPosition,\n        );\n    }\n}\n","<tui-primitive-textfield\n    tuiValueAccessor\n    class=\"t-textfield\"\n    [pseudoHover]=\"pseudoHover\"\n    [pseudoFocus]=\"computedFocused\"\n    [pseudoActive]=\"pseudoActive\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n    [disabled]=\"computedDisabled\"\n    [textMask]=\"isNegativeAllowed | tuiMapper : mask : decimal : precision : nativeFocusableElement\"\n    [value]=\"computedValue\"\n    [prefix]=\"prefix\"\n    [postfix]=\"postfix\"\n    [focusable]=\"focusable\"\n    (valueChange)=\"onValueChange($event)\"\n    (focusedChange)=\"onFocused($event)\"\n    (keydown)=\"onKeyDown($event)\"\n>\n    <ng-content></ng-content>\n    <ng-content\n        select=\"input\"\n        ngProjectAs=\"input\"\n    ></ng-content>\n    <div\n        *ngIf=\"polymorpheusValueContent.length\"\n        ngProjectAs=\"tuiContent\"\n        class=\"t-value-content\"\n    >\n        <ng-container *polymorpheusOutlet=\"valueContent as text\">\n            {{ text }}\n        </ng-container>\n    </div>\n</tui-primitive-textfield>\n\n<ng-container *ngIf=\"polymorpheusValueContent.changes | async\"></ng-container>\n\n<ng-template #valueContent>\n    <ng-content select=\"tuiContent\"></ng-content>\n</ng-template>\n","import {Directive, DoCheck} from '@angular/core';\nimport {AbstractTuiTextfieldHost, tuiAsTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputNumberComponent} from './input-number.component';\n\n@Directive({\n    selector: 'tui-input-number',\n    providers: [tuiAsTextfieldHost(TuiInputNumberDirective)],\n})\nexport class TuiInputNumberDirective\n    extends AbstractTuiTextfieldHost<TuiInputNumberComponent>\n    implements DoCheck\n{\n    input?: HTMLInputElement;\n\n    override get value(): string {\n        return this.host.computedValue;\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    ngDoCheck(): void {\n        if (!this.host.nativeFocusableElement) {\n            return;\n        }\n\n        this.host.nativeFocusableElement.maxLength = this.host.calculatedMaxLength;\n        this.host.nativeFocusableElement.inputMode = this.host.inputMode;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiMapperPipeModule} from '@taiga-ui/cdk';\nimport {\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TextMaskModule, TuiValueAccessorModule} from '@taiga-ui/kit/directives';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputNumberComponent} from './input-number.component';\nimport {TuiInputNumberDirective} from './input-number.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TextMaskModule,\n        TuiMapperPipeModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiValueAccessorModule,\n        PolymorpheusModule,\n    ],\n    declarations: [TuiInputNumberComponent, TuiInputNumberDirective],\n    exports: [TuiInputNumberComponent, TuiInputNumberDirective, TuiTextfieldComponent],\n})\nexport class TuiInputNumberModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}