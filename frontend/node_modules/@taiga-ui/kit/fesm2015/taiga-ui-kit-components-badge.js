import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, Input, HostBinding, NgModule } from '@angular/core';
import { tuiIsNumber, tuiIsPresent, tuiDefaultProp } from '@taiga-ui/cdk';
import { TUI_MODE, MODE_PROVIDER } from '@taiga-ui/core';
import * as i1 from 'rxjs';
import { CommonModule } from '@angular/common';

class TuiBadgeComponent {
    constructor(mode$) {
        this.mode$ = mode$;
        this.size = 'm';
        this.status = 'default';
        this.hoverable = false;
    }
    get padding() {
        var _a;
        if (this.isEmpty) {
            return 'none';
        }
        return tuiIsNumber((_a = this.value) === null || _a === void 0 ? void 0 : _a.valueOf()) ? 'm' : 'l';
    }
    get outputValue() {
        var _a;
        const value = (_a = this.value) === null || _a === void 0 ? void 0 : _a.valueOf();
        if (tuiIsNumber(value) && value > 99) {
            return '99+';
        }
        return tuiIsPresent(this.value) ? String(this.value) : '';
    }
    get isEmpty() {
        return !this.value && this.value !== 0;
    }
    titleText({ offsetWidth, scrollWidth }) {
        return offsetWidth < scrollWidth ? this.outputValue : '';
    }
}
TuiBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeComponent, deps: [{ token: TUI_MODE }], target: i0.ɵɵFactoryTarget.Component });
TuiBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiBadgeComponent, selector: "tui-badge", inputs: { value: "value", size: "size", status: "status", hoverable: "hoverable" }, host: { listeners: { "$.data-mode.attr": "mode$" }, properties: { "attr.data-size": "this.size", "attr.data-status": "this.status", "class._hoverable": "this.hoverable", "attr.data-padding": "this.padding", "class._empty-value": "this.isEmpty" } }, providers: [MODE_PROVIDER], ngImport: i0, template: "<span class=\"t-left-content\">\n    <ng-content></ng-content>\n</span>\n<span\n    #text\n    class=\"t-text\"\n    [title]=\"titleText(text)\"\n    (mouseenter)=\"(0)\"\n>\n    {{ outputValue }}\n</span>\n", styles: [":host{transition-property:background-color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;--left-content-color: currentColor;position:relative;display:inline-flex;font:var(--tui-font-text-s);align-items:center;justify-content:center;box-sizing:border-box;color:var(--tui-base-01);border-radius:6.25rem;white-space:nowrap;overflow:hidden;vertical-align:middle;max-width:100%}:host:after{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:0;left:0;width:100%;height:100%;content:\"\";box-sizing:border-box;border-radius:inherit;pointer-events:none}:host._hoverable:hover[data-status=custom]:after,:host._hoverable:active[data-status=custom]:after{background-color:var(--tui-clear)}:host[data-status=primary]{background-color:var(--tui-primary);color:var(--tui-primary-text)}:host[data-status=primary]._hoverable:hover{background-color:var(--tui-primary-hover)}:host[data-status=primary]._hoverable:active{background-color:var(--tui-primary-active)}:host[data-status=error]{--left-content-color: var(--tui-error-fill);background-color:var(--tui-error-bg);color:var(--tui-text-01)}:host[data-status=error]._hoverable:hover,:host[data-status=error]._hoverable:active{background-color:var(--tui-error-bg-hover)}:host[data-status=error][data-mode=onDark]{background-color:var(--tui-error-bg-night);color:var(--tui-text-01-night)}:host[data-status=error][data-mode=onDark]._hoverable:hover,:host[data-status=error][data-mode=onDark]._hoverable:active{background-color:var(--tui-error-bg-night-hover)}:host[data-status=success]{--left-content-color: var(--tui-success-fill);background-color:var(--tui-success-bg);color:var(--tui-text-01)}:host[data-status=success]._hoverable:hover,:host[data-status=success]._hoverable:active{background-color:var(--tui-success-bg-hover)}:host[data-status=success][data-mode=onDark]{background-color:var(--tui-success-bg-night);color:var(--tui-text-01-night)}:host[data-status=success][data-mode=onDark]._hoverable:hover,:host[data-status=success][data-mode=onDark]._hoverable:active{background-color:var(--tui-success-bg-night-hover)}:host[data-status=warning]{--left-content-color: var(--tui-warning-fill);background-color:var(--tui-warning-bg);color:var(--tui-text-01)}:host[data-status=warning]._hoverable:hover,:host[data-status=warning]._hoverable:active{background-color:var(--tui-warning-bg-hover)}:host[data-status=warning][data-mode=onDark]{background-color:var(--tui-warning-bg-night);color:var(--tui-text-01-night)}:host[data-status=warning][data-mode=onDark]._hoverable:hover,:host[data-status=warning][data-mode=onDark]._hoverable:active{background-color:var(--tui-warning-bg-night-hover)}:host[data-status=info]{--left-content-color: var(--tui-info-fill);background-color:var(--tui-info-bg);color:var(--tui-text-01)}:host[data-status=info]._hoverable:hover,:host[data-status=info]._hoverable:active{background-color:var(--tui-info-bg-hover)}:host[data-status=info][data-mode=onDark]{background-color:var(--tui-info-bg-night);color:var(--tui-text-01-night)}:host[data-status=info][data-mode=onDark]._hoverable:hover,:host[data-status=info][data-mode=onDark]._hoverable:active{background-color:var(--tui-info-bg-night-hover)}:host[data-status=neutral]{--left-content-color: var(--tui-neutral-fill);background-color:var(--tui-neutral-bg);color:var(--tui-text-01)}:host[data-status=neutral]._hoverable:hover,:host[data-status=neutral]._hoverable:active{background-color:var(--tui-neutral-bg-hover)}:host[data-status=neutral][data-mode=onDark]{background-color:var(--tui-neutral-bg-night);color:var(--tui-text-01-night)}:host[data-status=neutral][data-mode=onDark]._hoverable:hover,:host[data-status=neutral][data-mode=onDark]._hoverable:active{background-color:var(--tui-neutral-bg-night-hover)}:host[data-status=default]{background-color:var(--tui-base-06)}:host[data-status=default]:not([data-mode])._hoverable:hover{background-color:var(--tui-base-07)}:host[data-status=default]:not([data-mode])._hoverable:active{background-color:var(--tui-base-08)}:host[data-status=default][data-mode=onDark]{background-color:var(--tui-clear-inverse-hover)}:host[data-status=default][data-mode=onDark]._hoverable:hover{background-color:var(--tui-clear-inverse-active)}:host[data-status=default][data-mode=onDark]._hoverable:active{background-color:var(--tui-clear-inverse-active)}:host[data-status=default][data-mode=onDark]:focus:after{border:2px solid var(--tui-base-01)}:host[data-status=default][data-mode=onLight]{background-color:var(--tui-clear);color:var(--tui-text-01)}:host[data-status=default][data-mode=onLight]._hoverable:hover{background-color:var(--tui-clear-hover)}:host[data-status=default][data-mode=onLight]._hoverable:active{background-color:var(--tui-clear-active)}:host._hoverable{cursor:pointer}:host[data-padding=m]{padding:0 .5rem}:host[data-padding=m][data-size=xs]{padding:0 .25rem}:host[data-padding=m][data-size=s]{padding:0 .375rem}:host[data-padding=m][data-size=l]{padding:0 .625rem}:host[data-padding=l]{padding:0 .625rem}:host[data-padding=l][data-size=xs]{padding:0 .375rem}:host[data-padding=l][data-size=s]{padding:0 .5rem}:host[data-padding=l][data-size=l]{padding:0 .75rem}:host[data-size=xs]{font:var(--tui-font-text-xs);height:1rem;min-width:1rem}:host[data-size=xs] .t-left-content:before{width:.34375rem;height:.34375rem}:host[data-size=s]{font:var(--tui-font-text-xs);height:1.25rem;min-width:1.25rem}:host[data-size=s] .t-left-content:before{width:.25rem;height:.25rem}:host[data-size=m]{height:var(--tui-height-xs);line-height:var(--tui-height-xs);min-width:var(--tui-height-xs)}:host[data-size=l]{height:var(--tui-height-s);line-height:var(--tui-height-s);min-width:var(--tui-height-s)}:host[data-size=l] .t-left-content:before{margin:0 .5rem 0 0;width:.5rem;height:.5rem}:host._empty-value .t-left-content{margin:0 -.25rem}:host._empty-value .t-left-content:before{margin:0}.t-left-content{display:none;color:var(--left-content-color);line-height:0}.t-left-content:not(:empty){display:block;margin-left:-.25rem}.t-left-content:not(:empty):before{content:none}:host[data-status=error] .t-left-content,:host[data-status=success] .t-left-content,:host[data-status=warning] .t-left-content,:host[data-status=info] .t-left-content,:host[data-status=neutral] .t-left-content{display:block}.t-left-content:before{content:\"\";display:block;background:currentColor;margin:0 .375rem 0 0;width:.375rem;height:.375rem;border-radius:100%}.t-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiBadgeComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiBadgeComponent.prototype, "status", void 0);
__decorate([
    tuiDefaultProp()
], TuiBadgeComponent.prototype, "hoverable", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-badge',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    templateUrl: './badge.template.html',
                    styleUrls: ['./badge.style.less'],
                    providers: [MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }]; }, propDecorators: { value: [{
                type: Input
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], status: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-status']
            }], hoverable: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._hoverable']
            }], padding: [{
                type: HostBinding,
                args: ['attr.data-padding']
            }], isEmpty: [{
                type: HostBinding,
                args: ['class._empty-value']
            }] } });

class TuiBadgeModule {
}
TuiBadgeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiBadgeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeModule, declarations: [TuiBadgeComponent], imports: [CommonModule], exports: [TuiBadgeComponent] });
TuiBadgeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [TuiBadgeComponent],
                    exports: [TuiBadgeComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiBadgeComponent, TuiBadgeModule };
//# sourceMappingURL=taiga-ui-kit-components-badge.js.map
