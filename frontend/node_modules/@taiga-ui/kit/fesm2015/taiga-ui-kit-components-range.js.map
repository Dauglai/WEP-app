{"version":3,"file":"taiga-ui-kit-components-range.js","sources":["../../../projects/kit/components/range/range.component.ts","../../../projects/kit/components/range/range.template.html","../../../projects/kit/components/range/range-change.directive.ts","../../../projects/kit/components/range/range.module.ts","../../../projects/kit/components/range/taiga-ui-kit-components-range.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    QueryList,\n    Self,\n    ViewChildren,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    EMPTY_QUERY,\n    tuiClamp,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    tuiIsNativeFocusedIn,\n    TuiNativeFocusableElement,\n    tuiPure,\n    tuiQuantize,\n} from '@taiga-ui/cdk';\nimport {TuiSizeS, TuiWithOptionalMinMax} from '@taiga-ui/core';\nimport {TuiSliderComponent} from '@taiga-ui/kit/components/slider';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\nimport {\n    tuiKeyStepValueToPercentage,\n    tuiPercentageToKeyStepValue,\n} from '@taiga-ui/kit/utils';\n\n@Component({\n    selector: 'tui-range',\n    templateUrl: './range.template.html',\n    styleUrls: ['./range.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.tabindex]': '-1',\n        '[attr.aria-disabled]': 'computedDisabled',\n    },\n})\nexport class TuiRangeComponent\n    extends AbstractTuiControl<[number, number]>\n    implements TuiWithOptionalMinMax<number>, TuiFocusableElementAccessor\n{\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = 100;\n\n    @Input()\n    @tuiDefaultProp(s => s > 0, 'Step must be a non-negative number')\n    step = 1;\n\n    @Input()\n    @HostBinding('attr.data-size')\n    @tuiDefaultProp()\n    size: TuiSizeS = 'm';\n\n    @Input()\n    @tuiDefaultProp(\n        s => s > 0 && Number.isInteger(s),\n        'Segments must be positive integer',\n    )\n    segments = 1;\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    @ViewChildren(TuiSliderComponent, {read: ElementRef})\n    slidersRefs: QueryList<ElementRef<HTMLInputElement>> = EMPTY_QUERY;\n\n    lastActiveThumb: 'left' | 'right' = 'right';\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(ElementRef) private readonly el: ElementRef<HTMLElement>,\n    ) {\n        super(control, cdr);\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        const [sliderLeftRef, sliderRightRef] = this.slidersRefs;\n\n        if (\n            this.computedDisabled ||\n            !this.focusable ||\n            !sliderLeftRef ||\n            !sliderRightRef\n        ) {\n            return null;\n        }\n\n        const isLeftThumbLocked = this.right === 100;\n\n        return isLeftThumbLocked\n            ? sliderRightRef.nativeElement\n            : sliderLeftRef.nativeElement;\n    }\n\n    get focused(): boolean {\n        return tuiIsNativeFocusedIn(this.el.nativeElement);\n    }\n\n    get fractionStep(): number {\n        return this.step / (this.max - this.min);\n    }\n\n    get computedKeySteps(): TuiKeySteps {\n        return this.computePureKeySteps(this.keySteps, this.min, this.max);\n    }\n\n    get segmentWidthRatio(): number {\n        return 1 / this.segments;\n    }\n\n    @HostBinding('style.--left.%')\n    get left(): number {\n        return this.getPercentageFromValue(this.value[0]);\n    }\n\n    @HostBinding('style.--right.%')\n    get right(): number {\n        return 100 - this.getPercentageFromValue(this.value[1]);\n    }\n\n    @HostListener('focusin', ['true'])\n    @HostListener('focusout', ['false'])\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    @HostListener('keydown.arrowUp.prevent', ['1', '$event.target'])\n    @HostListener('keydown.arrowRight.prevent', ['1', '$event.target'])\n    @HostListener('keydown.arrowLeft.prevent', ['-1', '$event.target'])\n    @HostListener('keydown.arrowDown.prevent', ['-1', '$event.target'])\n    changeByStep(coefficient: number, target: HTMLElement): void {\n        const [sliderLeftRef, sliderRightRef] = this.slidersRefs;\n        const leftThumbElement = sliderLeftRef.nativeElement;\n        const rightThumbElement = sliderRightRef.nativeElement;\n\n        const isRightThumb =\n            target === this.el.nativeElement\n                ? this.lastActiveThumb === 'right'\n                : target === rightThumbElement;\n        const activeThumbElement = isRightThumb ? rightThumbElement : leftThumbElement;\n        const previousValue = isRightThumb ? this.value[1] : this.value[0];\n        /** @bad TODO think about a solution without twice conversion */\n        const previousFraction = this.getPercentageFromValue(previousValue) / 100;\n        const newFractionValue = previousFraction + coefficient * this.fractionStep;\n\n        this.processValue(this.getValueFromFraction(newFractionValue), isRightThumb);\n\n        if (activeThumbElement) {\n            activeThumbElement.focus();\n        }\n    }\n\n    processValue(value: number, right: boolean): void {\n        if (right) {\n            this.updateEnd(value);\n        } else {\n            this.updateStart(value);\n        }\n\n        this.lastActiveThumb = right ? 'right' : 'left';\n    }\n\n    getValueFromFraction(fraction: number): number {\n        const guardedFraction = tuiClamp(tuiQuantize(fraction, this.fractionStep), 0, 1);\n\n        return tuiPercentageToKeyStepValue(guardedFraction * 100, this.computedKeySteps);\n    }\n\n    getPercentageFromValue(value: number): number {\n        return tuiKeyStepValueToPercentage(value, this.computedKeySteps);\n    }\n\n    protected getFallbackValue(): [number, number] {\n        return [0, 0];\n    }\n\n    @tuiPure\n    private computePureKeySteps(\n        keySteps: TuiKeySteps | null,\n        min: number,\n        max: number,\n    ): TuiKeySteps {\n        return (\n            keySteps || [\n                [0, min],\n                [100, max],\n            ]\n        );\n    }\n\n    private updateStart(value: number): void {\n        this.value = [Math.min(value, this.value[1]), this.value[1]];\n    }\n\n    private updateEnd(value: number): void {\n        this.value = [this.value[0], Math.max(value, this.value[0])];\n    }\n}\n","<div\n    class=\"t-track\"\n    [style.--segment-width.%]=\"segmentWidthRatio * 100\"\n    [style.--bg-size-ratio]=\"1 - segmentWidthRatio\"\n>\n    <input\n        tuiSlider\n        readonly\n        type=\"range\"\n        step=\"any\"\n        automation-id=\"tui-range__left\"\n        class=\"t-thumb\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [ngModel]=\"value[0]\"\n        [size]=\"size\"\n        [keySteps]=\"computedKeySteps\"\n        [tuiFocusable]=\"focusable\"\n        [attr.disabled]=\"computedDisabled || null\"\n    />\n    <input\n        tuiSlider\n        readonly\n        type=\"range\"\n        step=\"any\"\n        automation-id=\"tui-range__right\"\n        class=\"t-thumb\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [ngModel]=\"value[1]\"\n        [size]=\"size\"\n        [keySteps]=\"computedKeySteps\"\n        [tuiFocusable]=\"focusable\"\n        [attr.disabled]=\"computedDisabled || null\"\n    />\n</div>\n","import {DOCUMENT} from '@angular/common';\nimport {Directive, ElementRef, EventEmitter, Inject, Output, Self} from '@angular/core';\nimport {tuiClamp, TuiDestroyService, tuiRound, tuiTypedFromEvent} from '@taiga-ui/cdk';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {merge, Observable} from 'rxjs';\nimport {filter, map, repeat, startWith, switchMap, takeUntil, tap} from 'rxjs/operators';\n\nimport {TuiRangeComponent} from './range.component';\n\n@Directive({\n    selector: 'tui-range',\n    providers: [TuiDestroyService],\n})\nexport class TuiRangeChangeDirective {\n    /**\n     * TODO replace with pointer events (when all supported browsers can handle them).\n     * Don't forget to use setPointerCapture instead of listening all doc events\n     */\n    private readonly pointerDown$ = merge(\n        tuiTypedFromEvent(this.el.nativeElement, 'touchstart', {\n            passive: true,\n        }).pipe(\n            filter(({touches}) => touches.length === 1),\n            map(({touches}) => touches[0]),\n        ),\n        tuiTypedFromEvent(this.el.nativeElement, 'mousedown', {passive: true}),\n    );\n\n    private readonly pointerMove$ = merge(\n        tuiTypedFromEvent(this.doc, 'touchmove').pipe(\n            filter(({touches}) => touches.length === 1),\n            map(({touches}) => touches[0]),\n        ),\n        tuiTypedFromEvent(this.doc, 'mousemove'),\n    );\n\n    private readonly pointerUp$ = merge(\n        tuiTypedFromEvent(this.doc, 'touchend', {passive: true}),\n        tuiTypedFromEvent(this.doc, 'mouseup', {passive: true}),\n    );\n\n    @Output()\n    readonly activeThumbChange = new EventEmitter<'left' | 'right'>();\n\n    constructor(\n        @Inject(DOCUMENT) private readonly doc: Document,\n        @Inject(ElementRef) private readonly el: ElementRef<HTMLElement>,\n        @Inject(TuiRangeComponent) private readonly range: TuiRangeComponent,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<unknown>,\n    ) {\n        let activeThumb: 'left' | 'right';\n\n        this.pointerDown$\n            .pipe(\n                tap(({clientX, target}) => {\n                    activeThumb = this.detectActiveThumb(clientX, target);\n                    this.activeThumbChange.emit(activeThumb);\n\n                    if (this.range.focusable) {\n                        el.nativeElement.focus();\n                    }\n                }),\n                switchMap(event => this.pointerMove$.pipe(startWith(event))),\n                map(({clientX}) => this.getFractionFromEvents(clientX)),\n                takeUntil(this.pointerUp$),\n                repeat(),\n                takeUntil(destroy$),\n            )\n            .subscribe(fraction => {\n                const value = this.range.getValueFromFraction(fraction);\n\n                this.range.processValue(value, activeThumb === 'right');\n            });\n    }\n\n    private getFractionFromEvents(clickClientX: number): number {\n        const hostRect = this.el.nativeElement.getBoundingClientRect();\n        const value = clickClientX - hostRect.left;\n        const total = hostRect.width;\n\n        return tuiClamp(tuiRound(value / total, TUI_FLOATING_PRECISION), 0, 1);\n    }\n\n    private detectActiveThumb(\n        clientX: number,\n        target: EventTarget | null,\n    ): 'left' | 'right' {\n        const [leftSliderRef, rightSliderRef] = this.range.slidersRefs;\n\n        switch (target) {\n            case leftSliderRef.nativeElement:\n                return 'left';\n            case rightSliderRef.nativeElement:\n                return 'right';\n            default:\n                return this.findNearestActiveThumb(clientX);\n        }\n    }\n\n    private findNearestActiveThumb(clientX: number): 'left' | 'right' {\n        const fraction = this.getFractionFromEvents(clientX);\n        const deltaLeft = fraction * 100 - this.range.left;\n        const deltaRight = fraction * 100 - 100 + this.range.right;\n\n        return Math.abs(deltaLeft) > Math.abs(deltaRight) ||\n            deltaRight > 0 ||\n            (this.range.left === 0 && this.range.right === 100)\n            ? 'right'\n            : 'left';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiFocusableModule} from '@taiga-ui/cdk';\nimport {TuiSliderModule} from '@taiga-ui/kit/components/slider';\n\nimport {TuiRangeComponent} from './range.component';\nimport {TuiRangeChangeDirective} from './range-change.directive';\n\n@NgModule({\n    imports: [CommonModule, TuiFocusableModule, TuiSliderModule, FormsModule],\n    declarations: [TuiRangeComponent, TuiRangeChangeDirective],\n    exports: [TuiRangeComponent, TuiRangeChangeDirective],\n})\nexport class TuiRangeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AA4CM,MAAO,iBACT,SAAQ,kBAAoC,CAAA;AAoC5C,IAAA,WAAA,CAII,OAAyB,EACE,GAAsB,EACZ,EAA2B,EAAA;AAEhE,QAAA,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAFiB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAyB;QArCpE,IAAG,CAAA,GAAA,GAAG,CAAC,CAAC;QAIR,IAAG,CAAA,GAAA,GAAG,GAAG,CAAC;QAIV,IAAI,CAAA,IAAA,GAAG,CAAC,CAAC;QAKT,IAAI,CAAA,IAAA,GAAa,GAAG,CAAC;QAOrB,IAAQ,CAAA,QAAA,GAAG,CAAC,CAAC;QAIb,IAAQ,CAAA,QAAA,GAAuB,IAAI,CAAC;QAGpC,IAAW,CAAA,WAAA,GAA4C,WAAW,CAAC;QAEnE,IAAe,CAAA,eAAA,GAAqB,OAAO,CAAC;KAW3C;AAED,IAAA,IAAI,sBAAsB,GAAA;QACtB,MAAM,CAAC,aAAa,EAAE,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QAEzD,IACI,IAAI,CAAC,gBAAgB;YACrB,CAAC,IAAI,CAAC,SAAS;AACf,YAAA,CAAC,aAAa;AACd,YAAA,CAAC,cAAc,EACjB;AACE,YAAA,OAAO,IAAI,CAAC;AACf,SAAA;AAED,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC;AAE7C,QAAA,OAAO,iBAAiB;cAClB,cAAc,CAAC,aAAa;AAC9B,cAAE,aAAa,CAAC,aAAa,CAAC;KACrC;AAED,IAAA,IAAI,OAAO,GAAA;QACP,OAAO,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;KACtD;AAED,IAAA,IAAI,YAAY,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5C;AAED,IAAA,IAAI,gBAAgB,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KACtE;AAED,IAAA,IAAI,iBAAiB,GAAA;AACjB,QAAA,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;KAC5B;AAED,IAAA,IACI,IAAI,GAAA;QACJ,OAAO,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACrD;AAED,IAAA,IACI,KAAK,GAAA;AACL,QAAA,OAAO,GAAG,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3D;AAID,IAAA,SAAS,CAAC,OAAgB,EAAA;AACtB,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC/B;IAMD,YAAY,CAAC,WAAmB,EAAE,MAAmB,EAAA;QACjD,MAAM,CAAC,aAAa,EAAE,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;AACzD,QAAA,MAAM,gBAAgB,GAAG,aAAa,CAAC,aAAa,CAAC;AACrD,QAAA,MAAM,iBAAiB,GAAG,cAAc,CAAC,aAAa,CAAC;QAEvD,MAAM,YAAY,GACd,MAAM,KAAK,IAAI,CAAC,EAAE,CAAC,aAAa;AAC5B,cAAE,IAAI,CAAC,eAAe,KAAK,OAAO;AAClC,cAAE,MAAM,KAAK,iBAAiB,CAAC;QACvC,MAAM,kBAAkB,GAAG,YAAY,GAAG,iBAAiB,GAAG,gBAAgB,CAAC;QAC/E,MAAM,aAAa,GAAG,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;QAEnE,MAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC;QAC1E,MAAM,gBAAgB,GAAG,gBAAgB,GAAG,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;AAE5E,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,EAAE,YAAY,CAAC,CAAC;AAE7E,QAAA,IAAI,kBAAkB,EAAE;YACpB,kBAAkB,CAAC,KAAK,EAAE,CAAC;AAC9B,SAAA;KACJ;IAED,YAAY,CAAC,KAAa,EAAE,KAAc,EAAA;AACtC,QAAA,IAAI,KAAK,EAAE;AACP,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACzB,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3B,SAAA;AAED,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC;KACnD;AAED,IAAA,oBAAoB,CAAC,QAAgB,EAAA;AACjC,QAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEjF,OAAO,2BAA2B,CAAC,eAAe,GAAG,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;KACpF;AAED,IAAA,sBAAsB,CAAC,KAAa,EAAA;QAChC,OAAO,2BAA2B,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;KACpE;IAES,gBAAgB,GAAA;AACtB,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACjB;AAGO,IAAA,mBAAmB,CACvB,QAA4B,EAC5B,GAAW,EACX,GAAW,EAAA;QAEX,QACI,QAAQ,IAAI;YACR,CAAC,CAAC,EAAE,GAAG,CAAC;YACR,CAAC,GAAG,EAAE,GAAG,CAAC;AACb,SAAA,EACH;KACL;AAEO,IAAA,WAAW,CAAC,KAAa,EAAA;QAC7B,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KAChE;AAEO,IAAA,SAAS,CAAC,KAAa,EAAA;QAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAChE;;AAzKQ,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAwCd,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,SAAS,EAET,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,iBAAiB,aACjB,UAAU,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA3Cb,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,EAgCZ,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,kBAAA,EAAA,yBAAA,EAAA,+BAAA,EAAA,4BAAA,EAAA,+BAAA,EAAA,2BAAA,EAAA,gCAAA,EAAA,2BAAA,EAAA,gCAAA,EAAA,EAAA,UAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,aAAA,EAAA,SAAA,EAAA,kBAAkB,EAAS,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,UAAU,oDC5EvD,+8BAoCA,EAAA,MAAA,EAAA,CAAA,y5EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,8FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;ADcI,UAAA,CAAA;AADC,IAAA,cAAc,EAAE;AACT,CAAA,EAAA,iBAAA,CAAA,SAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAIR,UAAA,CAAA;AADC,IAAA,cAAc,EAAE;AACP,CAAA,EAAA,iBAAA,CAAA,SAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAIV,UAAA,CAAA;IADC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,oCAAoC,CAAC;AACxD,CAAA,EAAA,iBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAKT,UAAA,CAAA;AADC,IAAA,cAAc,EAAE;AACI,CAAA,EAAA,iBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAOrB,UAAA,CAAA;AAJC,IAAA,cAAc,CACX,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EACjC,mCAAmC,CACtC;AACY,CAAA,EAAA,iBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAIb,UAAA,CAAA;AADC,IAAA,cAAc,EAAE;AACmB,CAAA,EAAA,iBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAwHpC,UAAA,CAAA;IADC,OAAO;AAYP,CAAA,EAAA,iBAAA,CAAA,SAAA,EAAA,qBAAA,EAAA,IAAA,CAAA,CAAA;4FAjKQ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAV7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,WAAW,EAAE,uBAAuB;oBACpC,SAAS,EAAE,CAAC,oBAAoB,CAAC;oBACjC,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,oBAAA,IAAI,EAAE;AACF,wBAAA,iBAAiB,EAAE,IAAI;AACvB,wBAAA,sBAAsB,EAAE,kBAAkB;AAC7C,qBAAA;AACJ,iBAAA,CAAA;;0BAuCQ,QAAQ;;0BACR,IAAI;;0BACJ,MAAM;2BAAC,SAAS,CAAA;;0BAEhB,MAAM;2BAAC,iBAAiB,CAAA;;0BACxB,MAAM;2BAAC,UAAU,CAAA;4CArCtB,GAAG,EAAA,CAAA;sBAFF,KAAK;gBAMN,GAAG,EAAA,CAAA;sBAFF,KAAK;gBAMN,IAAI,EAAA,CAAA;sBAFH,KAAK;gBAON,IAAI,EAAA,CAAA;sBAHH,KAAK;;sBACL,WAAW;uBAAC,gBAAgB,CAAA;gBAS7B,QAAQ,EAAA,CAAA;sBALP,KAAK;gBASN,QAAQ,EAAA,CAAA;sBAFP,KAAK;gBAKN,WAAW,EAAA,CAAA;sBADV,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,kBAAkB,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAA;gBAoDhD,IAAI,EAAA,CAAA;sBADP,WAAW;uBAAC,gBAAgB,CAAA;gBAMzB,KAAK,EAAA,CAAA;sBADR,WAAW;uBAAC,iBAAiB,CAAA;gBAO9B,SAAS,EAAA,CAAA;sBAFR,YAAY;uBAAC,SAAS,EAAE,CAAC,MAAM,CAAC,CAAA;;sBAChC,YAAY;uBAAC,UAAU,EAAE,CAAC,OAAO,CAAC,CAAA;gBASnC,YAAY,EAAA,CAAA;sBAJX,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,yBAAyB,EAAE,CAAC,GAAG,EAAE,eAAe,CAAC,CAAA;;sBAC9D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,4BAA4B,EAAE,CAAC,GAAG,EAAE,eAAe,CAAC,CAAA;;sBACjE,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,2BAA2B,EAAE,CAAC,IAAI,EAAE,eAAe,CAAC,CAAA;;sBACjE,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,2BAA2B,EAAE,CAAC,IAAI,EAAE,eAAe,CAAC,CAAA;gBAgD1D,mBAAmB,EAAA,EAAA,EAAA,EAAA,CAAA;;MErLlB,uBAAuB,CAAA;AA+BhC,IAAA,WAAA,CACuC,GAAa,EACX,EAA2B,EACpB,KAAwB,EACjC,QAA6B,EAAA;QAH7B,IAAG,CAAA,GAAA,GAAH,GAAG,CAAU;QACX,IAAE,CAAA,EAAA,GAAF,EAAE,CAAyB;QACpB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAmB;AAjCxE;;;AAGG;AACc,QAAA,IAAA,CAAA,YAAY,GAAG,KAAK,CACjC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE;AACnD,YAAA,OAAO,EAAE,IAAI;SAChB,CAAC,CAAC,IAAI,CACH,MAAM,CAAC,CAAC,EAAC,OAAO,EAAC,KAAK,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,EAC3C,GAAG,CAAC,CAAC,EAAC,OAAO,EAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CACjC,EACD,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CACzE,CAAC;QAEe,IAAY,CAAA,YAAA,GAAG,KAAK,CACjC,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,IAAI,CACzC,MAAM,CAAC,CAAC,EAAC,OAAO,EAAC,KAAK,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,EAC3C,GAAG,CAAC,CAAC,EAAC,OAAO,EAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CACjC,EACD,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAC3C,CAAC;AAEe,QAAA,IAAA,CAAA,UAAU,GAAG,KAAK,CAC/B,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,EACxD,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAC1D,CAAC;AAGO,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,YAAY,EAAoB,CAAC;AAQ9D,QAAA,IAAI,WAA6B,CAAC;AAElC,QAAA,IAAI,CAAC,YAAY;aACZ,IAAI,CACD,GAAG,CAAC,CAAC,EAAC,OAAO,EAAE,MAAM,EAAC,KAAI;YACtB,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACtD,YAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAEzC,YAAA,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;AACtB,gBAAA,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC5B,aAAA;SACJ,CAAC,EACF,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAC5D,GAAG,CAAC,CAAC,EAAC,OAAO,EAAC,KAAK,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,EACvD,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAC1B,MAAM,EAAE,EACR,SAAS,CAAC,QAAQ,CAAC,CACtB;aACA,SAAS,CAAC,QAAQ,IAAG;YAClB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAExD,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,KAAK,OAAO,CAAC,CAAC;AAC5D,SAAC,CAAC,CAAC;KACV;AAEO,IAAA,qBAAqB,CAAC,YAAoB,EAAA;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;AAC/D,QAAA,MAAM,KAAK,GAAG,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC3C,QAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;AAE7B,QAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,EAAE,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAC1E;IAEO,iBAAiB,CACrB,OAAe,EACf,MAA0B,EAAA;QAE1B,MAAM,CAAC,aAAa,EAAE,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;AAE/D,QAAA,QAAQ,MAAM;YACV,KAAK,aAAa,CAAC,aAAa;AAC5B,gBAAA,OAAO,MAAM,CAAC;YAClB,KAAK,cAAc,CAAC,aAAa;AAC7B,gBAAA,OAAO,OAAO,CAAC;AACnB,YAAA;AACI,gBAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;AACnD,SAAA;KACJ;AAEO,IAAA,sBAAsB,CAAC,OAAe,EAAA;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACrD,MAAM,SAAS,GAAG,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACnD,QAAA,MAAM,UAAU,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;AAE3D,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;AAC7C,YAAA,UAAU,GAAG,CAAC;AACd,aAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC;AACnD,cAAE,OAAO;cACP,MAAM,CAAC;KAChB;;AAhGQ,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,kBAgCpB,QAAQ,EAAA,EAAA,EAAA,KAAA,EACR,UAAU,EACV,EAAA,EAAA,KAAA,EAAA,iBAAiB,aACT,iBAAiB,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;yGAnC5B,uBAAuB,EAAA,QAAA,EAAA,WAAA,EAAA,OAAA,EAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,EAAA,SAAA,EAFrB,CAAC,iBAAiB,CAAC,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAErB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAJnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,WAAW;oBACrB,SAAS,EAAE,CAAC,iBAAiB,CAAC;AACjC,iBAAA,CAAA;0DAiC+C,QAAQ,EAAA,UAAA,EAAA,CAAA;0BAA/C,MAAM;2BAAC,QAAQ,CAAA;;0BACf,MAAM;2BAAC,UAAU,CAAA;;0BACjB,MAAM;2BAAC,iBAAiB,CAAA;;0BACxB,IAAI;;0BAAI,MAAM;2BAAC,iBAAiB,CAAA;4CAN5B,iBAAiB,EAAA,CAAA;sBADzB,MAAM;;;MC3BE,cAAc,CAAA;;4GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAHR,YAAA,EAAA,CAAA,iBAAiB,EAAE,uBAAuB,aAD/C,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,WAAW,CAE9D,EAAA,OAAA,EAAA,CAAA,iBAAiB,EAAE,uBAAuB,CAAA,EAAA,CAAA,CAAA;6GAE3C,cAAc,EAAA,OAAA,EAAA,CAJd,CAAC,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,WAAW,CAAC,CAAA,EAAA,CAAA,CAAA;4FAIhE,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,WAAW,CAAC;AACzE,oBAAA,YAAY,EAAE,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;AAC1D,oBAAA,OAAO,EAAE,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;AACxD,iBAAA,CAAA;;;ACbD;;AAEG;;;;"}