{"version":3,"file":"taiga-ui-kit-components-slider.js","sources":["../../../projects/kit/components/slider/slider-options.ts","../../../projects/kit/components/slider/slider.component.ts","../../../projects/kit/components/slider/helpers/slider-key-steps.directive.ts","../../../projects/kit/components/slider/helpers/slider-readonly.directive.ts","../../../projects/kit/components/slider/helpers/slider-thumb-label/slider-thumb-label.component.ts","../../../projects/kit/components/slider/helpers/slider-thumb-label/slider-thumb-label.template.html","../../../projects/kit/components/slider/slider.module.ts","../../../projects/kit/components/slider/taiga-ui-kit-components-slider.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiSizeS} from '@taiga-ui/core';\n\nexport interface TuiSliderOptions {\n    readonly size: TuiSizeS;\n    readonly trackColor: string;\n}\n\nexport const TUI_SLIDER_DEFAULT_OPTIONS: TuiSliderOptions = {\n    size: `m`,\n    trackColor: `var(--tui-base-03)`,\n};\n\n/**\n * Default parameters for Slider component\n */\nexport const TUI_SLIDER_OPTIONS = new InjectionToken<TuiSliderOptions>(\n    `[TUI_SLIDER_OPTIONS]`,\n    {factory: () => TUI_SLIDER_DEFAULT_OPTIONS},\n);\n\nexport function tuiSliderOptionsProvider(\n    options: Partial<TuiSliderOptions>,\n): ValueProvider {\n    return {\n        provide: TUI_SLIDER_OPTIONS,\n        useValue: {...TUI_SLIDER_DEFAULT_OPTIONS, ...options},\n    };\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Injector,\n    Input,\n    Optional,\n    Self,\n} from '@angular/core';\nimport {NgControl, NgModel} from '@angular/forms';\nimport {USER_AGENT} from '@ng-web-apis/common';\nimport {\n    CHROMIUM_EDGE_START_VERSION,\n    tuiDefaultProp,\n    tuiIsEdgeOlderThan,\n    tuiPure,\n    tuiWatch,\n} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\nimport {take} from 'rxjs/operators';\n\n// TODO: find the best way for prevent cycle\n// eslint-disable-next-line import/no-cycle\nimport {TuiSliderKeyStepsDirective} from './helpers/slider-key-steps.directive';\nimport {TUI_SLIDER_OPTIONS, TuiSliderOptions} from './slider-options';\n\n@Component({\n    /**\n     * We have to call our component as `<input tuiSlider type=\"range\" ... />`\n     * because otherwise built-in angular\n     * {@link https://github.com/angular/angular/blob/master/packages/forms/src/directives/range_value_accessor.ts#L45 RangeValueAccessor}\n     * cannot be matched by its CSS selector.\n     */\n    selector: 'input[type=range][tuiSlider]',\n    template: '',\n    styleUrls: ['./slider.style.less'],\n    host: {\n        /**\n         * For change detection.\n         * Webkit does not have built-in method for customization of filling progress (as Firefox).\n         * We draw filling of progress by `background: linear-gradient(...)` of the track.\n         * This function triggers change detection (for {@link valuePercentage} function) when we drag thumb of the input.\n         */\n        '(input)': '0',\n        '[style.--tui-slider-track-color]': 'options.trackColor',\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiSliderComponent {\n    @Input()\n    @HostBinding('attr.data-size')\n    @tuiDefaultProp()\n    size: TuiSizeS = this.options.size;\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 1;\n\n    get min(): number {\n        return Number(this.el.nativeElement.min);\n    }\n\n    get max(): number {\n        return Number(this.el.nativeElement.max || 100);\n    }\n\n    get step(): number {\n        return Number(this.el.nativeElement.step) || 1;\n    }\n\n    get value(): number {\n        const {el, control, hasKeySteps} = this;\n\n        if (!hasKeySteps && control instanceof NgModel) {\n            /**\n             * If developer uses `[(ngModel)]` and programmatically change value,\n             * the `el.nativeElement.value` is equal to the previous value at this moment.\n             */\n            return control.viewModel;\n        }\n\n        return Number(el.nativeElement.value) || 0;\n    }\n\n    set value(newValue: number) {\n        this.el.nativeElement.value = `${newValue}`;\n    }\n\n    @HostBinding('style.--tui-slider-fill-percentage.%')\n    get valuePercentage(): number {\n        return (100 * (this.value - this.min)) / (this.max - this.min) || 0;\n    }\n\n    @HostBinding('style.--tui-slider-segment-width.%')\n    get segmentWidth(): number {\n        return 100 / Math.max(1, this.segments);\n    }\n\n    // TODO: drop support of legacy Edge (EdgeHTML) in v4.x\n    @HostBinding('class._old-edge')\n    get isOldEdge(): boolean {\n        return tuiIsEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent);\n    }\n\n    @tuiPure\n    get hasKeySteps(): boolean {\n        return Boolean(this.injector.get(TuiSliderKeyStepsDirective, null));\n    }\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        private readonly control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(TUI_SLIDER_OPTIONS) readonly options: TuiSliderOptions,\n        @Inject(ElementRef) readonly el: ElementRef<HTMLInputElement>,\n        @Inject(USER_AGENT) private readonly userAgent: string,\n        @Inject(Injector) private readonly injector: Injector,\n    ) {\n        if (control instanceof NgModel) {\n            /**\n             * The ValueAccessor.writeValue method is called twice on any value accessor during component initialization,\n             * when a control is bound using [(ngModel)], first time with a phantom null value.\n             * With `changeDetection: ChangeDetectionStrategy.OnPush` the second call of writeValue with real value don't re-render the view.\n             * ___\n             * See this {@link https://github.com/angular/angular/issues/14988 issue}\n             */\n            control.valueChanges?.pipe(tuiWatch(cdr), take(1)).subscribe();\n        }\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    Self,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    tuiAssert,\n    tuiClamp,\n    TuiFocusableElementAccessor,\n    tuiIsNativeFocused,\n} from '@taiga-ui/cdk';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\nimport {\n    tuiKeyStepValueToPercentage,\n    tuiPercentageToKeyStepValue,\n} from '@taiga-ui/kit/utils';\n\n// TODO: find the best way for prevent cycle\n// eslint-disable-next-line import/no-cycle\nimport {TuiSliderComponent} from '../slider.component';\n\n@Directive({\n    selector: 'input[tuiSlider][keySteps]',\n    host: {\n        '[attr.aria-valuenow]': 'safeCurrentValue',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n    },\n})\nexport class TuiSliderKeyStepsDirective\n    extends AbstractTuiControl<number>\n    implements TuiFocusableElementAccessor\n{\n    @Input()\n    keySteps!: TuiKeySteps;\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.computedDisabled ? null : this.el.nativeElement;\n    }\n\n    get focused(): boolean {\n        return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n\n    get min(): number {\n        return this.keySteps[0][1];\n    }\n\n    get max(): number {\n        return this.keySteps[this.keySteps.length - 1][1];\n    }\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(ElementRef) private readonly el: ElementRef<HTMLInputElement>,\n        @Inject(forwardRef(() => TuiSliderComponent))\n        private readonly slider: TuiSliderComponent,\n    ) {\n        super(control, cdr);\n    }\n\n    @HostListener('input')\n    @HostListener('change')\n    updateControlValue(): void {\n        this.value = tuiPercentageToKeyStepValue(\n            this.slider.valuePercentage,\n            this.keySteps,\n        );\n    }\n\n    override writeValue(controlValue: number | null): void {\n        if (controlValue === null) {\n            return;\n        }\n\n        const clampedControlValue = tuiClamp(controlValue, this.min, this.max);\n\n        ngDevMode &&\n            tuiAssert.assert(\n                controlValue === clampedControlValue,\n                '\\n[SliderKeySteps]: You cannot programmatically set value which is less/more than min/max',\n            );\n\n        this.slider.value = this.transformToNativeValue(clampedControlValue);\n    }\n\n    protected getFallbackValue(): number {\n        return 0;\n    }\n\n    private transformToNativeValue(controlValue: number): number {\n        const {min, max} = this.slider;\n        const newValuePercentage = tuiKeyStepValueToPercentage(\n            controlValue,\n            this.keySteps,\n        );\n\n        return (newValuePercentage * (max - min)) / 100 + min;\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Directive, ElementRef, HostListener, Inject, Input, Self} from '@angular/core';\nimport {\n    ALWAYS_FALSE_HANDLER,\n    ALWAYS_TRUE_HANDLER,\n    tuiCoerceBooleanProperty,\n    tuiDefaultProp,\n    TuiDestroyService,\n    tuiTypedFromEvent,\n} from '@taiga-ui/cdk';\nimport {combineLatest, merge, Observable} from 'rxjs';\nimport {filter, map, takeUntil, tap} from 'rxjs/operators';\n\nconst SLIDER_INTERACTION_KEYS = new Set([\n    'ArrowLeft',\n    'ArrowRight',\n    'ArrowUp',\n    'ArrowDown',\n    'Home',\n    'End',\n    'PageUp',\n    'PageDown',\n]);\n\n/**\n * Native <input type='range' readonly> doesn't work.\n * This directive imitates this native behaviour.\n */\n@Directive({\n    selector: 'input[tuiSlider][readonly]',\n    providers: [TuiDestroyService],\n})\nexport class TuiSliderReadonlyDirective {\n    @Input()\n    @tuiDefaultProp()\n    readonly: boolean | string = true;\n\n    constructor(\n        @Inject(ElementRef) el: ElementRef<HTMLInputElement>,\n        @Inject(DOCUMENT) doc: Document,\n        @Self()\n        @Inject(TuiDestroyService)\n        destroy$: Observable<unknown>,\n    ) {\n        const touchStart$ = tuiTypedFromEvent(el.nativeElement, 'touchstart', {\n            passive: false,\n        });\n        const touchMove$ = tuiTypedFromEvent(doc, 'touchmove', {\n            passive: false,\n        });\n        const touchEnd$ = tuiTypedFromEvent(doc, 'touchend', {\n            passive: true,\n        });\n\n        const shouldPreventMove$ = merge(\n            touchStart$.pipe(\n                tap(e => this.preventEvent(e)),\n                map(ALWAYS_TRUE_HANDLER),\n            ),\n            touchEnd$.pipe(map(ALWAYS_FALSE_HANDLER)),\n        );\n\n        /**\n         * @bad TODO think about another solution.\n         * Keep in mind that preventing touch event (on slider) inside `@HostListener('touchstart')` doesn't work for mobile chrome.\n         */\n        combineLatest([touchMove$, shouldPreventMove$])\n            .pipe(\n                filter(([_, shouldPreventMove]) => shouldPreventMove),\n                takeUntil(destroy$),\n            )\n            .subscribe(([moveEvent]) => this.preventEvent(moveEvent));\n    }\n\n    @HostListener('mousedown', ['$event'])\n    preventEvent(event: Event): void {\n        if (event.cancelable && tuiCoerceBooleanProperty(this.readonly)) {\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    preventKeyboardInteraction(event: KeyboardEvent): void {\n        if (SLIDER_INTERACTION_KEYS.has(event.key)) {\n            this.preventEvent(event);\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {tuiAssert} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\n\nimport {TuiSliderComponent} from '../../slider.component';\n\n@Component({\n    selector: '[tuiSliderThumbLabel]',\n    templateUrl: './slider-thumb-label.template.html',\n    styleUrls: ['./slider-thumb-label.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiSliderThumbLabelComponent implements AfterContentInit {\n    @ContentChild(TuiSliderComponent)\n    readonly slider?: TuiSliderComponent;\n\n    @ContentChild(NgControl)\n    readonly control?: NgControl;\n\n    get size(): TuiSizeS {\n        return this.slider?.size || 'm';\n    }\n\n    get ratio(): number {\n        return (this.slider?.valuePercentage || 0) / 100;\n    }\n\n    get ghostLeft(): number {\n        return this.ratio * (this.slider?.el.nativeElement.offsetWidth || 0);\n    }\n\n    ngAfterContentInit(): void {\n        ngDevMode &&\n            tuiAssert.assert(\n                Boolean(this.control?.valueChanges),\n                '\\n[tuiSliderThumbLabel] expected <input tuiSlider type=\"range\" /> to use Angular Forms.\\n' +\n                    'Use [(ngModel)] or [formControl] or formControlName for correct work.',\n            );\n    }\n}\n","<ng-container *ngIf=\"control?.valueChanges | async\"></ng-container>\n\n<div\n    class=\"t-ghost\"\n    [attr.data-size]=\"size\"\n    [style.left.px]=\"ghostLeft\"\n    [style.--tui-slider-thumb-ratio]=\"ratio\"\n>\n    <ng-content></ng-content>\n</div>\n\n<ng-content select=\"input[type=range]\"></ng-content>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {TuiSliderKeyStepsDirective} from './helpers/slider-key-steps.directive';\nimport {TuiSliderReadonlyDirective} from './helpers/slider-readonly.directive';\nimport {TuiSliderThumbLabelComponent} from './helpers/slider-thumb-label/slider-thumb-label.component';\nimport {TuiSliderComponent} from './slider.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        TuiSliderComponent,\n        TuiSliderThumbLabelComponent,\n        TuiSliderKeyStepsDirective,\n        TuiSliderReadonlyDirective,\n    ],\n    exports: [\n        TuiSliderComponent,\n        TuiSliderThumbLabelComponent,\n        TuiSliderKeyStepsDirective,\n        TuiSliderReadonlyDirective,\n    ],\n})\nexport class TuiSliderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":"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"}