import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { ElementRef, Component, ChangeDetectionStrategy, Inject, Input, HostBinding, HostListener, NgModule } from '@angular/core';
import * as i3 from '@taiga-ui/cdk';
import { AbstractTuiInteractive, tuiIsNativeFocused, TuiFocusVisibleService, TuiDestroyService, tuiAsFocusableItemAccessor, tuiDefaultProp, TuiFocusableModule, TuiFocusVisibleModule } from '@taiga-ui/cdk';
import * as i1 from '@taiga-ui/kit/components/marker-icon';
import { TuiMarkerIconModule } from '@taiga-ui/kit/components/marker-icon';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';

class TuiActionComponent extends AbstractTuiInteractive {
    constructor(focusVisible$, el) {
        super();
        this.el = el;
        this.icon = '';
        this.disabled = false;
        focusVisible$.subscribe(visible => {
            this.updateFocusVisible(visible);
        });
    }
    get nativeFocusableElement() {
        return this.el.nativeElement;
    }
    get focused() {
        return tuiIsNativeFocused(this.nativeFocusableElement);
    }
    get tabIndex() {
        return this.computedFocusable ? 0 : -1;
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
}
TuiActionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiActionComponent, deps: [{ token: TuiFocusVisibleService }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Component });
TuiActionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiActionComponent, selector: "button[tuiAction], a[tuiAction]", inputs: { icon: "icon" }, host: { listeners: { "focusin": "onFocused(true)", "focusout": "onFocused(false)" }, properties: { "tabIndex": "this.tabIndex" }, classAttribute: "tui-island tui-island_hoverable" }, providers: [
        TuiDestroyService,
        TuiFocusVisibleService,
        tuiAsFocusableItemAccessor(TuiActionComponent),
    ], usesInheritance: true, ngImport: i0, template: "<ng-content></ng-content>\n<tui-marker-icon\n    *ngIf=\"icon\"\n    size=\"s\"\n    class=\"t-icon tui-island__marker\"\n    [src]=\"icon\"\n></tui-marker-icon>\n", styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;background:none;font-size:inherit;line-height:inherit;display:flex;justify-content:space-between;font:var(--tui-font-text-m);padding:.875rem;border:2px solid transparent;text-align:start}:host._focus-visible{border-color:var(--tui-focus)}:host:after{display:none}.t-icon{color:var(--tui-action-color, var(--tui-link));background-color:var(--tui-action-background, var(--tui-base-02))}\n"], components: [{ type: i1.TuiMarkerIconComponent, selector: "tui-marker-icon, a[tuiMarkerIcon], button[tuiMarkerIcon]", inputs: ["mode", "size", "src"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiActionComponent.prototype, "icon", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiActionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'button[tuiAction], a[tuiAction]',
                    templateUrl: './action.template.html',
                    styleUrls: ['./action.style.less'],
                    host: {
                        class: 'tui-island tui-island_hoverable',
                    },
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        TuiDestroyService,
                        TuiFocusVisibleService,
                        tuiAsFocusableItemAccessor(TuiActionComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i3.TuiFocusVisibleService, decorators: [{
                    type: Inject,
                    args: [TuiFocusVisibleService]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; }, propDecorators: { icon: [{
                type: Input
            }], tabIndex: [{
                type: HostBinding,
                args: ['tabIndex']
            }], onFocused: [{
                type: HostListener,
                args: ['focusin', ['true']]
            }, {
                type: HostListener,
                args: ['focusout', ['false']]
            }] } });

class TuiActionModule {
}
TuiActionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiActionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiActionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiActionModule, declarations: [TuiActionComponent], imports: [CommonModule,
        TuiFocusableModule,
        TuiFocusVisibleModule,
        TuiMarkerIconModule], exports: [TuiActionComponent] });
TuiActionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiActionModule, imports: [[
            CommonModule,
            TuiFocusableModule,
            TuiFocusVisibleModule,
            TuiMarkerIconModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiActionModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        TuiFocusableModule,
                        TuiFocusVisibleModule,
                        TuiMarkerIconModule,
                    ],
                    declarations: [TuiActionComponent],
                    exports: [TuiActionComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiActionComponent, TuiActionModule };
//# sourceMappingURL=taiga-ui-kit-components-action.js.map
