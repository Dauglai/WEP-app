{"version":3,"file":"taiga-ui-kit-components-input-phone.js","sources":["../../../projects/kit/components/input-phone/input-phone.options.ts","../../../projects/kit/components/input-phone/input-phone.component.ts","../../../projects/kit/components/input-phone/input-phone.template.html","../../../projects/kit/components/input-phone/input-phone.directive.ts","../../../projects/kit/components/input-phone/input-phone.module.ts","../../../projects/kit/components/input-phone/taiga-ui-kit-components-input-phone.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\n\nexport interface TuiInputPhoneOptions {\n    readonly phoneMaskAfterCountryCode: string;\n    readonly allowText: boolean;\n    readonly countryCode: string;\n}\n\nexport const TUI_INPUT_PHONE_DEFAULT_OPTIONS: TuiInputPhoneOptions = {\n    phoneMaskAfterCountryCode: `### ###-##-##`,\n    allowText: false,\n    countryCode: `+7`,\n};\n\n/**\n * Default parameters for input phone component\n */\nexport const TUI_INPUT_PHONE_OPTIONS = new InjectionToken<TuiInputPhoneOptions>(\n    `[TUI_INPUT_PHONE_OPTIONS]`,\n    {\n        factory: () => TUI_INPUT_PHONE_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiInputPhoneOptionsProvider: (\n    options: Partial<TuiInputPhoneOptions>,\n) => ValueProvider = (options: Partial<TuiInputPhoneOptions>) => ({\n    provide: TUI_INPUT_PHONE_OPTIONS,\n    useValue: {...TUI_INPUT_PHONE_DEFAULT_OPTIONS, ...options},\n});\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    TuiActiveZoneDirective,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    TuiContextWithImplicit,\n    tuiDefaultProp,\n    TuiDestroyService,\n    TuiFocusableElementAccessor,\n    tuiGetClipboardDataText,\n    TuiInputMode,\n    tuiIsNativeFocused,\n    tuiRequiredSetter,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_MASK_SYMBOLS_REGEXP,\n    TUI_SELECTION_STREAM,\n    TUI_TEXTFIELD_CLEANER,\n    tuiAsDataListHost,\n    TuiDataListDirective,\n    TuiDataListHost,\n    tuiFormatPhone,\n    TuiHostedDropdownComponent,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldCleanerDirective,\n    TuiTextMaskOptions,\n} from '@taiga-ui/core';\nimport {FIXED_DROPDOWN_CONTROLLER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {Observable} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {TUI_INPUT_PHONE_OPTIONS, TuiInputPhoneOptions} from './input-phone.options';\n\n@Component({\n    selector: 'tui-input-phone',\n    templateUrl: './input-phone.template.html',\n    styleUrls: ['./input-phone.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        TuiDestroyService,\n        tuiAsFocusableItemAccessor(TuiInputPhoneComponent),\n        tuiAsControl(TuiInputPhoneComponent),\n        tuiAsDataListHost(TuiInputPhoneComponent),\n    ],\n    viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER],\n})\nexport class TuiInputPhoneComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor, TuiDataListHost<string>\n{\n    @ViewChild(TuiHostedDropdownComponent)\n    private readonly dropdown?: TuiHostedDropdownComponent;\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    @Input('countryCode')\n    @tuiRequiredSetter()\n    set countryCodeSetter(countryCode: string) {\n        this.updateValueWithNewCountryCode(countryCode);\n        this.countryCode = countryCode;\n    }\n\n    @Input()\n    @tuiDefaultProp()\n    phoneMaskAfterCountryCode = this.options.phoneMaskAfterCountryCode;\n\n    @Input()\n    @tuiDefaultProp()\n    allowText = this.options.allowText;\n\n    @Input()\n    @tuiDefaultProp()\n    search = '';\n\n    @Output()\n    readonly searchChange = new EventEmitter<string>();\n\n    @ContentChild(TuiDataListDirective, {read: TemplateRef})\n    readonly datalist?: TemplateRef<TuiContextWithImplicit<TuiActiveZoneDirective>>;\n\n    readonly textMaskOptions: TuiTextMaskOptions = {\n        mask: value =>\n            this.allowText && !this.value && isText(value) && value !== '+'\n                ? false\n                : [\n                      ...this.countryCode.split(''),\n                      ' ',\n                      ...this.phoneMaskAfterCountryCode\n                          .replace(/[^#\\- ()]+/g, '')\n                          .split('')\n                          .map(item => (item === '#' ? /\\d/ : item)),\n                  ],\n        pipe: value => {\n            if (this.allowText) {\n                return value;\n            }\n\n            return value === '' && this.focused && !this.readOnly\n                ? `${this.countryCode} `\n                : value.replace(/-$/, '');\n        },\n        guide: false,\n    };\n\n    countryCode = this.options.countryCode;\n\n    open = false;\n\n    constructor(\n        @Optional() @Self() @Inject(NgControl) control: NgControl | null,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<unknown>,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(TUI_SELECTION_STREAM) selection$: Observable<unknown>,\n        @Inject(TUI_TEXTFIELD_CLEANER)\n        private readonly textfieldCleaner: TuiTextfieldCleanerDirective,\n        @Inject(TUI_INPUT_PHONE_OPTIONS) private readonly options: TuiInputPhoneOptions,\n    ) {\n        super(control, cdr);\n\n        selection$.pipe(takeUntil(destroy$)).subscribe(() => {\n            this.setCaretPosition();\n        });\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return !this.textfield || this.computedDisabled\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return (\n            tuiIsNativeFocused(this.nativeFocusableElement) ||\n            (!!this.dropdown && this.dropdown.focused)\n        );\n    }\n\n    get computedValue(): string {\n        return this.value\n            ? tuiFormatPhone(this.value, this.countryCode, this.phoneMaskAfterCountryCode)\n            : this.search || '';\n    }\n\n    get inputMode(): TuiInputMode {\n        return this.allowText ? 'text' : 'numeric';\n    }\n\n    get canOpen(): boolean {\n        return this.interactive && !!this.datalist;\n    }\n\n    get canClean(): boolean {\n        return this.computedValue !== this.countryCode && this.textfieldCleaner.cleaner;\n    }\n\n    onDrop(event: DragEvent): void {\n        if (!event.dataTransfer) {\n            return;\n        }\n\n        this.setValueWithoutPrefix(event.dataTransfer.getData('text'));\n        event.preventDefault();\n    }\n\n    onPaste(event: Event): void {\n        this.setValueWithoutPrefix(tuiGetClipboardDataText(event as ClipboardEvent));\n    }\n\n    onActiveZone(active: boolean): void {\n        this.updateFocused(active);\n\n        if (active && !this.computedValue && !this.readOnly && !this.allowText) {\n            this.updateSearch(this.countryCode);\n\n            return;\n        }\n\n        if (\n            this.computedValue === this.countryCode ||\n            (this.search !== null &&\n                Number.isNaN(\n                    parseInt(this.search.replace(TUI_MASK_SYMBOLS_REGEXP, ''), 10),\n                ))\n        ) {\n            this.updateSearch('');\n        }\n    }\n\n    onBackspace(event: Event): void {\n        const target = event.target as HTMLInputElement;\n\n        if (\n            (target.selectionStart || 0) <= this.nonRemovableLength &&\n            target.selectionStart === target.selectionEnd\n        ) {\n            event.preventDefault();\n        }\n    }\n\n    onValueChange(value: string): void {\n        value = value === '' ? this.countryCode : value;\n\n        const parsed = isText(value)\n            ? value\n            : value.replace(TUI_MASK_SYMBOLS_REGEXP, '').slice(0, this.maxPhoneLength);\n\n        this.updateSearch(parsed);\n        this.value = parsed === this.countryCode || isText(parsed) ? '' : parsed;\n        this.open = true;\n    }\n\n    handleOption(item: string): void {\n        this.focusInput();\n        this.value = item;\n        this.updateSearch('');\n        this.open = false;\n    }\n\n    override setDisabledState(): void {\n        super.setDisabledState();\n        this.open = false;\n    }\n\n    override writeValue(value: string | null): void {\n        super.writeValue(value);\n        this.updateSearch('');\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    private get caretIsInForbiddenArea(): boolean {\n        const {nativeFocusableElement} = this;\n\n        if (!nativeFocusableElement) {\n            return false;\n        }\n\n        const {selectionStart, selectionEnd} = nativeFocusableElement;\n\n        return (\n            tuiIsNativeFocused(nativeFocusableElement) &&\n            selectionStart !== null &&\n            selectionStart < this.nonRemovableLength &&\n            selectionStart === selectionEnd\n        );\n    }\n\n    private get nonRemovableLength(): number {\n        return this.isTextValue ? 0 : this.countryCode.length + 1;\n    }\n\n    private get maxPhoneLength(): number {\n        return (\n            this.countryCode.length +\n            this.phoneMaskAfterCountryCode.replace(/[^#]+/g, '').length\n        );\n    }\n\n    private get isTextValue(): boolean {\n        return !!this.search && isText(this.search);\n    }\n\n    private setCaretPosition(): void {\n        if (this.caretIsInForbiddenArea && !!this.nativeFocusableElement) {\n            this.nativeFocusableElement.setSelectionRange(\n                this.nonRemovableLength,\n                this.nonRemovableLength,\n            );\n        }\n    }\n\n    private setValueWithoutPrefix(value: string): void {\n        if (this.readOnly) {\n            return;\n        }\n\n        this.open = true;\n        this.value = this.cleanValue(value);\n        this.updateSearch(\n            this.allowText && isText(value)\n                ? value\n                : value.replace(TUI_MASK_SYMBOLS_REGEXP, ''),\n        );\n    }\n\n    private cleanValue(value: string): string {\n        const reg: RegExp =\n            this.countryCode === '+7' ? /^7|^8/ : new RegExp(this.countryCode.slice(1));\n        const oldValueExist =\n            this.value.length > this.countryCode.length &&\n            this.value.length < this.maxPhoneLength;\n        const newValueLength = value.replace(TUI_MASK_SYMBOLS_REGEXP, '').length;\n        const cleanNewValue = value.replace(/[^0-9]+/g, '');\n        const selectionLength = String(getSelection()).length;\n\n        if (oldValueExist && selectionLength === 0) {\n            return `${this.value}${cleanNewValue}`.slice(0, this.maxPhoneLength);\n        }\n\n        if (newValueLength < this.maxPhoneLength - 1) {\n            return `${this.countryCode}${cleanNewValue}`.slice(0, this.maxPhoneLength);\n        }\n\n        return `${this.countryCode}${cleanNewValue.replace(reg, '')}`.slice(\n            0,\n            this.maxPhoneLength,\n        );\n    }\n\n    private focusInput(): void {\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.focus({preventScroll: true});\n        }\n    }\n\n    private updateSearch(search: string): void {\n        if (this.search === search) {\n            return;\n        }\n\n        this.search = search;\n        this.searchChange.emit(search);\n    }\n\n    private updateValueWithNewCountryCode(newCountryCode: string): void {\n        if (!this.isTextValue) {\n            this.value = this.value.replace(this.countryCode, newCountryCode);\n        }\n    }\n}\n\nfunction isText(value: string): boolean {\n    return Number.isNaN(parseInt(value.replace(TUI_MASK_SYMBOLS_REGEXP, ''), 10));\n}\n","<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"canOpen\"\n    [content]=\"datalist || ''\"\n    [(open)]=\"open\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-primitive-textfield\n        tuiValueAccessor\n        class=\"t-textfield\"\n        [pseudoHover]=\"pseudoHover\"\n        [pseudoFocus]=\"computedFocused\"\n        [invalid]=\"computedInvalid\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [disabled]=\"computedDisabled\"\n        [focusable]=\"focusable\"\n        [textMask]=\"textMaskOptions\"\n        [value]=\"computedValue\"\n        [tuiTextfieldCleaner]=\"canClean\"\n        (valueChange)=\"onValueChange($event)\"\n        (drop)=\"onDrop($event)\"\n        (keydown.backspace)=\"onBackspace($event)\"\n        (paste.prevent)=\"onPaste($event)\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            select=\"input\"\n            ngProjectAs=\"input\"\n        ></ng-content>\n    </tui-primitive-textfield>\n</tui-hosted-dropdown>\n","import {Directive, DoCheck} from '@angular/core';\nimport {AbstractTuiTextfieldHost, tuiAsTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputPhoneComponent} from './input-phone.component';\n\n@Directive({\n    selector: 'tui-input-phone',\n    providers: [tuiAsTextfieldHost(TuiInputPhoneDirective)],\n})\nexport class TuiInputPhoneDirective\n    extends AbstractTuiTextfieldHost<TuiInputPhoneComponent>\n    implements DoCheck\n{\n    input?: HTMLInputElement;\n\n    override get value(): string {\n        return this.host.computedValue;\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    override process(input: HTMLInputElement): void {\n        this.input = input;\n    }\n\n    ngDoCheck(): void {\n        if (!this.input) {\n            return;\n        }\n\n        this.input.type = 'tel';\n        this.input.inputMode = this.host.inputMode;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {TuiActiveZoneModule} from '@taiga-ui/cdk';\nimport {\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TextMaskModule, TuiValueAccessorModule} from '@taiga-ui/kit/directives';\n\nimport {TuiInputPhoneComponent} from './input-phone.component';\nimport {TuiInputPhoneDirective} from './input-phone.directive';\n\n@NgModule({\n    imports: [\n        TextMaskModule,\n        TuiPrimitiveTextfieldModule,\n        TuiHostedDropdownModule,\n        TuiTextfieldControllerModule,\n        TuiActiveZoneModule,\n        TuiValueAccessorModule,\n    ],\n    declarations: [TuiInputPhoneComponent, TuiInputPhoneDirective],\n    exports: [TuiInputPhoneComponent, TuiInputPhoneDirective, TuiTextfieldComponent],\n})\nexport class TuiInputPhoneModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}