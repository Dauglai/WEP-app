{"version":3,"file":"taiga-ui-kit-utils-files.js","sources":["../../../projects/kit/utils/files/format-size.ts","../../../projects/kit/utils/files/get-accept-array.ts","../../../projects/kit/utils/files/taiga-ui-kit-utils-files.ts"],"sourcesContent":["import {tuiRound} from '@taiga-ui/cdk';\n\nconst BYTES_PER_KB = 1000;\nconst BYTES_PER_MB = 1000 * BYTES_PER_KB;\n\nexport function tuiFormatSize(\n    units: [string, string, string],\n    size?: number,\n): string | null {\n    if (size === undefined) {\n        return null;\n    }\n\n    if (size < BYTES_PER_KB) {\n        return `${size} ${units[0]}`;\n    }\n\n    if (size < BYTES_PER_MB) {\n        return `${(size / BYTES_PER_KB).toFixed(0)} ${units[1]}`;\n    }\n\n    return `${tuiRound(size / BYTES_PER_MB, 2).toLocaleString(`ru-RU`)} ${units[2]}`;\n}\n","export function tuiGetAcceptArray(accept: string): readonly string[] {\n    return accept\n        .toLowerCase()\n        .split(`,`)\n        .map(format => format.trim());\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;AAEA,MAAM,YAAY,GAAG,IAAI,CAAC;AAC1B,MAAM,YAAY,GAAG,IAAI,GAAG,YAAY,CAAC;AAEzB,SAAA,aAAa,CACzB,KAA+B,EAC/B,IAAa,EAAA;IAEb,IAAI,IAAI,KAAK,SAAS,EAAE;AACpB,QAAA,OAAO,IAAI,CAAC;AACf,KAAA;IAED,IAAI,IAAI,GAAG,YAAY,EAAE;QACrB,OAAO,CAAA,EAAG,IAAI,CAAI,CAAA,EAAA,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAChC,KAAA;IAED,IAAI,IAAI,GAAG,YAAY,EAAE;AACrB,QAAA,OAAO,GAAG,CAAC,IAAI,GAAG,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,CAAI,CAAA,EAAA,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAC5D,KAAA;IAED,OAAO,CAAA,EAAG,QAAQ,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAA,KAAA,CAAO,CAAC,CAAI,CAAA,EAAA,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AACrF;;ACtBM,SAAU,iBAAiB,CAAC,MAAc,EAAA;AAC5C,IAAA,OAAO,MAAM;AACR,SAAA,WAAW,EAAE;SACb,KAAK,CAAC,GAAG,CAAC;SACV,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AACtC;;ACLA;;AAEG;;;;"}