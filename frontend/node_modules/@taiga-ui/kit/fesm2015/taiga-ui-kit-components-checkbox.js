import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';
import * as i3 from '@angular/forms';
import { NgControl } from '@angular/forms';
import * as i2 from '@taiga-ui/cdk';
import { AbstractTuiNullableControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule } from '@taiga-ui/cdk';
import * as i1 from '@taiga-ui/core';
import { TUI_CHECKBOX_OPTIONS, TuiPrimitiveCheckboxModule } from '@taiga-ui/core';
import { CommonModule } from '@angular/common';

class TuiCheckboxComponent extends AbstractTuiNullableControl {
    constructor(control, options, cdr) {
        super(control, cdr);
        this.options = options;
        this.size = this.options.size;
    }
    get nativeFocusableElement() {
        return !this.focusableElement || this.computedDisabled
            ? null
            : this.focusableElement.nativeElement;
    }
    get focused() {
        return tuiIsNativeFocused(this.nativeFocusableElement);
    }
    get computedFocusable() {
        return this.interactive && this.focusable;
    }
    /** @deprecated use 'value' setter */
    onChecked(checked) {
        this.value = checked;
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onFocusVisible(focusVisible) {
        this.updateFocusVisible(focusVisible);
    }
}
TuiCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: TUI_CHECKBOX_OPTIONS }, { token: ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
TuiCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiCheckboxComponent, selector: "tui-checkbox", inputs: { size: "size" }, host: { properties: { "attr.data-size": "this.size" } }, providers: [
        tuiAsFocusableItemAccessor(TuiCheckboxComponent),
        tuiAsControl(TuiCheckboxComponent),
    ], viewQueries: [{ propertyName: "focusableElement", first: true, predicate: ["focusableElement"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<tui-primitive-checkbox\n    [size]=\"size\"\n    [disabled]=\"disabled\"\n    [focused]=\"computedFocusVisible\"\n    [hovered]=\"pseudoHover\"\n    [pressed]=\"pseudoActive\"\n    [invalid]=\"computedInvalid\"\n    [value]=\"value\"\n>\n    <input\n        #focusableElement\n        type=\"checkbox\"\n        automation-id=\"tui-checkbox__native\"\n        class=\"t-native\"\n        [disabled]=\"disabled\"\n        [id]=\"id\"\n        [tuiFocusable]=\"computedFocusable\"\n        [(tuiChecked)]=\"value\"\n        (tuiFocusedChange)=\"onFocused($event)\"\n        (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n    />\n</tui-primitive-checkbox>\n", styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;flex-shrink:0}:host[data-size=m]{width:1rem;height:1rem}:host[data-size=l]{width:1.5rem;height:1.5rem}:host._readonly tui-primitive-checkbox{pointer-events:none}.t-native{padding:0;margin:0;border:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}.t-native:-webkit-autofill,.t-native:-webkit-autofill:hover,.t-native:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}\n"], components: [{ type: i1.TuiPrimitiveCheckboxComponent, selector: "tui-primitive-checkbox", inputs: ["size", "disabled", "focused", "hovered", "pressed", "invalid", "value"] }], directives: [{ type: i2.TuiCheckedDirective, selector: "input[tuiChecked], input[tuiCheckedChange]", inputs: ["tuiChecked"], outputs: ["tuiCheckedChange"] }, { type: i2.TuiFocusableDirective, selector: "[tuiFocusable]", inputs: ["tuiFocusable"] }, { type: i2.TuiFocusedDirective, selector: "[tuiFocusedChange]", outputs: ["tuiFocusedChange"] }, { type: i2.TuiFocusVisibleDirective, selector: "[tuiFocusVisibleChange]", outputs: ["tuiFocusVisibleChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiCheckboxComponent.prototype, "size", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-checkbox',
                    templateUrl: './checkbox.template.html',
                    styleUrls: ['./checkbox.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiCheckboxComponent),
                        tuiAsControl(TuiCheckboxComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i3.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_CHECKBOX_OPTIONS]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }]; }, propDecorators: { focusableElement: [{
                type: ViewChild,
                args: ['focusableElement']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }] } });

class TuiCheckboxModule {
}
TuiCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxModule, declarations: [TuiCheckboxComponent], imports: [CommonModule,
        TuiCheckedModule,
        TuiFocusableModule,
        TuiFocusedModule,
        TuiFocusVisibleModule,
        TuiPrimitiveCheckboxModule], exports: [TuiCheckboxComponent] });
TuiCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxModule, imports: [[
            CommonModule,
            TuiCheckedModule,
            TuiFocusableModule,
            TuiFocusedModule,
            TuiFocusVisibleModule,
            TuiPrimitiveCheckboxModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckboxModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        TuiCheckedModule,
                        TuiFocusableModule,
                        TuiFocusedModule,
                        TuiFocusVisibleModule,
                        TuiPrimitiveCheckboxModule,
                    ],
                    declarations: [TuiCheckboxComponent],
                    exports: [TuiCheckboxComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiCheckboxComponent, TuiCheckboxModule };
//# sourceMappingURL=taiga-ui-kit-components-checkbox.js.map
