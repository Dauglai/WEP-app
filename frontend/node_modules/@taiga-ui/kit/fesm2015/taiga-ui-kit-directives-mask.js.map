{"version":3,"file":"taiga-ui-kit-directives-mask.js","sources":["../../../projects/kit/directives/mask/legacy-mask.ts","../../../projects/kit/directives/mask/taiga-ui-kit-directives-mask.ts"],"sourcesContent":["/* eslint-disable */\n/**\n * Copied from\n * {@link https://github.com/text-mask/text-mask/blob/master/angular2/src/angular2TextMask.ts angular2-text-mask}\n * ___\n * \"angular2-text-mask\" is a legacy not-maintained library. It is published using legacy View Engine distribution.\n * Stackblitz fails to run \"View Engine\"-libraries in Ivy application.\n * See {@link https://github.com/Tinkoff/taiga-ui/issues/2541#issuecomment-1235516443 this comment}.\n */\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    NgModule,\n    OnChanges,\n    Optional,\n    Renderer2,\n} from '@angular/core';\nimport {\n    COMPOSITION_BUFFER_MODE,\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport {ÉµgetDOM as getDOM} from '@angular/platform-browser';\nimport {TUI_LEGACY_MASK, TuiTextMaskOptions} from '@taiga-ui/core';\nimport {createTextMaskInputElement} from 'text-mask-core';\n\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid(): boolean {\n    const userAgent = getDOM() ? getDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n\n/**\n * @internal\n * @deprecated\n * Don't use it! It can be deleted at any time (even in minor releases).\n * Use {@link https://github.com/text-mask/text-mask/tree/master/angular2 angular2-text-mask} instead.\n */\n@Directive({\n    host: {\n        '(input)': '_handleInput($event.target.value)',\n        '(blur)': 'onTouched()',\n        '(compositionstart)': '_compositionStart()',\n        '(compositionend)': '_compositionEnd($event.target.value)',\n    },\n    selector: '[textMask]',\n    exportAs: 'textMask',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MaskedInputDirective),\n            multi: true,\n        },\n        {\n            provide: TUI_LEGACY_MASK,\n            useExisting: forwardRef(() => MaskedInputDirective),\n        },\n    ],\n})\nexport class MaskedInputDirective implements ControlValueAccessor, OnChanges {\n    @Input('textMask') textMaskConfig: TuiTextMaskOptions = {\n        mask: [],\n        guide: true,\n        placeholderChar: '_',\n        pipe: undefined,\n        keepCharPositions: false,\n    };\n\n    onChange = (_: any) => {};\n    onTouched = () => {};\n\n    private textMaskInputElement: any;\n    private inputElement!: HTMLInputElement;\n\n    /** Whether the user is creating a composition string (IME events). */\n    private _composing = false;\n\n    constructor(\n        private _renderer: Renderer2,\n        private _elementRef: ElementRef,\n        @Optional() @Inject(COMPOSITION_BUFFER_MODE) private _compositionMode: boolean,\n    ) {\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n\n    ngOnChanges() {\n        this._setupMask(true);\n        if (this.textMaskInputElement !== undefined) {\n            this.textMaskInputElement.update(this.inputElement.value);\n        }\n    }\n\n    writeValue(value: any) {\n        this._setupMask();\n\n        // set the initial value for cases where the mask is disabled\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this.inputElement, 'value', normalizedValue);\n\n        if (this.textMaskInputElement !== undefined) {\n            this.textMaskInputElement.update(value);\n        }\n    }\n\n    registerOnChange(fn: (_: any) => void): void {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this._renderer.setProperty(\n            this._elementRef.nativeElement,\n            'disabled',\n            isDisabled,\n        );\n    }\n\n    _handleInput(value: any) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this._setupMask();\n\n            if (this.textMaskInputElement !== undefined) {\n                this.textMaskInputElement.update(value);\n\n                // get the updated value\n                value = this.inputElement.value;\n                this.onChange(value);\n            }\n        }\n    }\n\n    _setupMask(create = false) {\n        if (!this.inputElement) {\n            if (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\n                // `textMask` directive is used directly on an input element\n                this.inputElement = this._elementRef.nativeElement;\n            } else {\n                // `textMask` directive is used on an abstracted input element, `md-input-container`, etc\n                this.inputElement =\n                    this._elementRef.nativeElement.getElementsByTagName('INPUT')[0];\n            }\n        }\n\n        if (this.inputElement && create) {\n            this.textMaskInputElement = createTextMaskInputElement(\n                Object.assign({inputElement: this.inputElement}, this.textMaskConfig),\n            );\n        }\n    }\n\n    _compositionStart(): void {\n        this._composing = true;\n    }\n\n    _compositionEnd(value: any): void {\n        this._composing = false;\n        this._compositionMode && this._handleInput(value);\n    }\n}\n\n/**\n * @internal\n * @deprecated\n * Don't use it! It can be deleted at any time (even in minor releases).\n * Use {@link https://github.com/text-mask/text-mask/tree/master/angular2 angular2-text-mask} instead.\n */\n@NgModule({\n    declarations: [MaskedInputDirective],\n    exports: [MaskedInputDirective],\n})\nexport class TextMaskModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["getDOM"],"mappings":"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"}