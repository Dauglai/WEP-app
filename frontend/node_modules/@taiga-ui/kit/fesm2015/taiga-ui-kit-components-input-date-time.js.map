{"version":3,"file":"taiga-ui-kit-components-input-date-time.js","sources":["../../../projects/kit/components/input-date-time/native-date-time/native-date-time.directive.ts","../../../projects/kit/components/input-date-time/input-date-time.component.ts","../../../projects/kit/components/input-date-time/input-date-time.template.html","../../../projects/kit/components/input-date-time/input-date-time.directive.ts","../../../projects/kit/components/input-date-time/input-date-time.module.ts","../../../projects/kit/components/input-date-time/taiga-ui-kit-components-input-date-time.ts"],"sourcesContent":["import {Directive, Inject} from '@angular/core';\nimport {TuiDay, TuiTime} from '@taiga-ui/cdk';\nimport {TUI_TEXTFIELD_HOST} from '@taiga-ui/core';\n\nimport type {TuiInputDateTimeDirective} from '../input-date-time.directive';\n\n@Directive({\n    selector: 'input[tuiDateTime]',\n    host: {\n        type: 'datetime-local',\n        '[tabIndex]': '-1',\n        '[value]': 'value',\n        '(change.stop)': 'onChange($event.target.value)',\n        '(input.stop)': 'onChange($event.target.value)',\n        '(click.stop.silent)': '0',\n        '(mousedown.stop.silent)': '0',\n    },\n})\nexport class TuiNativeDateTimeDirective {\n    constructor(@Inject(TUI_TEXTFIELD_HOST) readonly host: TuiInputDateTimeDirective) {}\n\n    get value(): string {\n        if (!this.host.rawValue[0] || !this.host.rawValue[1]) {\n            return '';\n        }\n\n        return `${this.host.rawValue[0]?.toString(\n            'YMD',\n            '-',\n        )}T${this.host.rawValue[1]?.toString('HH:MM')}`;\n    }\n\n    onChange(value: string): void {\n        if (!value) {\n            this.host.writeValue([null, null]);\n\n            return;\n        }\n\n        const date = new Date(value);\n        const day = TuiDay.fromLocalNativeDate(date);\n        const time = TuiTime.fromLocalNativeDate(date);\n\n        this.host.writeValue([day, time]);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    AbstractTuiValueTransformer,\n    ALWAYS_FALSE_HANDLER,\n    changeDateSeparator,\n    DATE_FILLER_LENGTH,\n    TUI_DATE_FORMAT,\n    TUI_DATE_SEPARATOR,\n    TUI_IS_IOS,\n    TUI_IS_MOBILE,\n    TuiActiveZoneDirective,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    TuiBooleanHandler,\n    tuiClamp,\n    TuiContextWithImplicit,\n    tuiDateClamp,\n    TuiDateMode,\n    TuiDay,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiMonth,\n    tuiNullableSame,\n    tuiPure,\n    TuiTime,\n    TuiTimeMode,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_TEXTFIELD_SIZE,\n    TuiPrimitiveTextfieldComponent,\n    TuiSizeL,\n    TuiSizeS,\n    TuiTextfieldSizeDirective,\n    TuiTextMaskOptions,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {DATE_TIME_SEPARATOR} from '@taiga-ui/kit/constants';\nimport {\n    TUI_DATE_TEXTS,\n    TUI_DATE_TIME_VALUE_TRANSFORMER,\n    TUI_INPUT_DATE_OPTIONS,\n    TUI_TIME_TEXTS,\n    tuiDateStreamWithTransformer,\n    TuiInputDateOptions,\n} from '@taiga-ui/kit/tokens';\nimport {\n    tuiCreateAutoCorrectedDateTimePipe,\n    tuiCreateDateMask,\n    tuiCreateTimeMask,\n} from '@taiga-ui/kit/utils/mask';\nimport {combineLatest, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Component({\n    selector: 'tui-input-date-time',\n    templateUrl: './input-date-time.template.html',\n    styleUrls: ['./input-date-time.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputDateTimeComponent),\n        tuiAsControl(TuiInputDateTimeComponent),\n        tuiDateStreamWithTransformer(TUI_DATE_TIME_VALUE_TRANSFORMER),\n    ],\n})\nexport class TuiInputDateTimeComponent\n    extends AbstractTuiControl<[TuiDay | null, TuiTime | null]>\n    implements\n        TuiWithOptionalMinMax<TuiDay | [TuiDay, TuiTime]>,\n        TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    private month: TuiMonth | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    min: TuiDay | [TuiDay, TuiTime] = this.options.min;\n\n    @Input()\n    @tuiDefaultProp()\n    max: TuiDay | [TuiDay, TuiTime] = this.options.max;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<TuiDay> = ALWAYS_FALSE_HANDLER;\n\n    @Input()\n    @tuiDefaultProp()\n    defaultActiveYearMonth = TuiMonth.currentLocal();\n\n    @Input()\n    @tuiDefaultProp()\n    timeMode: TuiTimeMode = 'HH:MM';\n\n    open = false;\n\n    readonly type!: TuiContextWithImplicit<TuiActiveZoneDirective>;\n\n    readonly filler$: Observable<string> = combineLatest([\n        this.dateTexts$.pipe(\n            map(dateTexts =>\n                changeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator),\n            ),\n        ),\n        this.timeTexts$.pipe(map(texts => texts[this.timeMode])),\n    ]).pipe(map(fillers => this.getDateTimeString(...fillers)));\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_DATE_FORMAT) readonly dateFormat: TuiDateMode,\n        @Inject(TUI_DATE_SEPARATOR) readonly dateSeparator: string,\n        @Inject(TUI_TIME_TEXTS)\n        readonly timeTexts$: Observable<Record<TuiTimeMode, string>>,\n        @Inject(TUI_DATE_TEXTS)\n        readonly dateTexts$: Observable<Record<TuiDateMode, string>>,\n        @Optional()\n        @Inject(TUI_DATE_TIME_VALUE_TRANSFORMER)\n        override readonly valueTransformer: AbstractTuiValueTransformer<\n            [TuiDay | null, TuiTime | null]\n        > | null,\n        @Inject(TUI_INPUT_DATE_OPTIONS)\n        private readonly options: TuiInputDateOptions,\n        @Inject(TUI_IS_MOBILE) readonly isMobile: boolean,\n        @Inject(TUI_IS_IOS) readonly isIos: boolean,\n    ) {\n        super(control, cdr, valueTransformer);\n    }\n\n    get fillerLength(): number {\n        return DATE_FILLER_LENGTH + DATE_TIME_SEPARATOR.length + this.timeMode.length;\n    }\n\n    get textMaskOptions(): TuiTextMaskOptions {\n        return this.calculateMask(\n            this.value[0],\n            this.calendarMinDay,\n            this.calendarMaxDay,\n            this.timeMode,\n            this.dateFormat,\n            this.dateSeparator,\n        );\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get calendarIcon(): TuiInputDateOptions['icon'] {\n        return this.options.icon;\n    }\n\n    private get nativePicker(): boolean {\n        return !!this.options.nativePicker && this.isMobile;\n    }\n\n    get showNativePicker(): boolean {\n        return this.nativePicker && this.timeMode === 'HH:MM';\n    }\n\n    get computedValue(): string {\n        const {value, nativeValue, timeMode} = this;\n        const [date, time] = value;\n        const hasTimeInputChars = nativeValue.length > DATE_FILLER_LENGTH;\n\n        if (!date || (!time && hasTimeInputChars)) {\n            return nativeValue;\n        }\n\n        return this.getDateTimeString(date, time, timeMode);\n    }\n\n    get calendarValue(): TuiDay | null {\n        return this.value[0];\n    }\n\n    get calendarMinDay(): TuiDay {\n        return Array.isArray(this.min) ? this.min[0] : this.min;\n    }\n\n    get calendarMaxDay(): TuiDay {\n        return Array.isArray(this.max) ? this.max[0] : this.max;\n    }\n\n    get computedActiveYearMonth(): TuiMonth {\n        return (\n            this.month ||\n            this.value[0] ||\n            tuiDateClamp(\n                this.defaultActiveYearMonth,\n                Array.isArray(this.min) ? this.min[0] : this.min,\n                Array.isArray(this.max) ? this.max[0] : this.max,\n            )\n        );\n    }\n\n    get nativeValue(): string {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n\n    set nativeValue(value: string) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        this.nativeFocusableElement.value = value;\n    }\n\n    get size(): TuiSizeL | TuiSizeS {\n        return this.textfieldSize.size;\n    }\n\n    @HostListener('click')\n    onClick(): void {\n        this.open = !this.open;\n    }\n\n    onValueChange(value: string): void {\n        if (!value) {\n            this.onOpenChange(true);\n        }\n\n        if (value.length < DATE_FILLER_LENGTH) {\n            this.value = [null, null];\n\n            return;\n        }\n\n        const [date, time] = value.split(DATE_TIME_SEPARATOR);\n        const parsedDate = TuiDay.normalizeParse(date, this.dateFormat);\n        const parsedTime =\n            time && time.length === this.timeMode.length\n                ? this.clampTime(TuiTime.fromString(time), parsedDate)\n                : null;\n\n        this.open = false;\n        this.value = [parsedDate, parsedTime];\n    }\n\n    onDayClick(day: TuiDay): void {\n        const modifiedTime = this.value[1] && this.clampTime(this.value[1], day);\n\n        this.value = [day, modifiedTime];\n        this.updateNativeValue(day);\n        this.open = false;\n    }\n\n    onMonthChange(month: TuiMonth): void {\n        this.month = month;\n    }\n\n    onOpenChange(open: boolean): void {\n        this.open = open;\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n\n        if (\n            focused ||\n            this.value[0] === null ||\n            this.value[1] !== null ||\n            this.nativeValue.length <= this.fillerLength + DATE_TIME_SEPARATOR.length ||\n            this.timeMode === 'HH:MM'\n        ) {\n            return;\n        }\n\n        const [, time] = this.nativeValue.split(DATE_TIME_SEPARATOR);\n\n        if (!time) {\n            return;\n        }\n\n        const parsedTime = TuiTime.fromString(time);\n\n        this.value = [this.value[0], parsedTime];\n\n        setTimeout(() => {\n            if (this.nativeValue.endsWith('.') || this.nativeValue.endsWith(':')) {\n                this.nativeValue = this.nativeValue.slice(0, -1);\n            }\n        });\n    }\n\n    override setDisabledState(): void {\n        super.setDisabledState();\n        this.open = false;\n    }\n\n    override writeValue(value: [TuiDay | null, TuiTime | null] | null): void {\n        super.writeValue(value);\n\n        this.nativeValue =\n            this.value && (this.value[0] || this.value[1]) ? this.computedValue : '';\n    }\n\n    protected getFallbackValue(): [TuiDay | null, TuiTime | null] {\n        return [null, null];\n    }\n\n    protected override valueIdenticalComparator(\n        oldValue: [TuiDay | null, TuiTime | null],\n        newValue: [TuiDay | null, TuiTime | null],\n    ): boolean {\n        return (\n            tuiNullableSame(oldValue[0], newValue[0], (a, b) => a.daySame(b)) &&\n            tuiNullableSame(oldValue[1], newValue[1], (a, b) => String(a) === String(b))\n        );\n    }\n\n    @tuiPure\n    private calculateMask(\n        day: TuiDay | null,\n        min: TuiDay,\n        max: TuiDay,\n        timeMode: TuiTimeMode,\n        dateFormat: TuiDateMode,\n        dateSeparator: string,\n    ): TuiTextMaskOptions {\n        return {\n            mask: [\n                ...tuiCreateDateMask(dateFormat, dateSeparator),\n                ',',\n                ' ',\n                ...tuiCreateTimeMask(timeMode),\n            ],\n            pipe: tuiCreateAutoCorrectedDateTimePipe({\n                value: day,\n                min,\n                max,\n                dateFormat,\n                dateSeparator,\n                timeMode,\n            }),\n            guide: false,\n        };\n    }\n\n    @tuiPure\n    private getDateTimeString(\n        date: TuiDay | string,\n        time: TuiTime | string | null,\n        timeMode: TuiTimeMode = 'HH:MM',\n    ): string {\n        const dateString =\n            date instanceof TuiDay\n                ? date.toString(this.dateFormat, this.dateSeparator)\n                : date;\n        const timeString = time instanceof TuiTime ? time.toString(timeMode) : time || '';\n\n        return `${dateString}${DATE_TIME_SEPARATOR}${timeString}`;\n    }\n\n    private updateNativeValue(day: TuiDay): void {\n        const time = this.nativeValue.split(DATE_TIME_SEPARATOR)[1] || '';\n\n        this.nativeValue = this.getDateTimeString(day, time);\n    }\n\n    private clampTime(time: TuiTime, day: TuiDay): TuiTime {\n        const ms = time.toAbsoluteMilliseconds();\n        const min =\n            Array.isArray(this.min) && day.daySame(this.calendarMinDay)\n                ? this.min[1].toAbsoluteMilliseconds()\n                : -Infinity;\n        const max =\n            Array.isArray(this.max) && day.daySame(this.calendarMaxDay)\n                ? this.max[1].toAbsoluteMilliseconds()\n                : Infinity;\n\n        return TuiTime.fromAbsoluteMilliseconds(tuiClamp(ms, min, max));\n    }\n}\n","<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"interactive && !showNativePicker\"\n    [content]=\"dropdown\"\n    [open]=\"open && interactive\"\n    (openChange)=\"onOpenChange($event)\"\n>\n    <tui-primitive-textfield\n        automation-id=\"tui-input-date-time__textfield\"\n        tuiValueAccessor\n        class=\"t-textfield\"\n        [tuiTextfieldIcon]=\"calendarIcon && iconContent\"\n        [tuiTextfieldFiller]=\"(filler$ | async) || ''\"\n        [pseudoFocus]=\"pseudoFocus\"\n        [pseudoHover]=\"pseudoHover\"\n        [invalid]=\"computedInvalid\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [disabled]=\"computedDisabled\"\n        [textMask]=\"textMaskOptions\"\n        [value]=\"computedValue\"\n        (valueChange)=\"onValueChange($event)\"\n        (focusedChange)=\"onFocused($event)\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            select=\"input\"\n            ngProjectAs=\"input\"\n        ></ng-content>\n    </tui-primitive-textfield>\n\n    <ng-template #iconContent>\n        <tui-svg\n            *polymorpheusOutlet=\"calendarIcon as src; context: {$implicit: size}\"\n            tuiWrapper\n            appearance=\"icon\"\n            [class.t-icon]=\"!computedDisabled\"\n            [src]=\"src\"\n        ></tui-svg>\n        <input\n            *ngIf=\"showNativePicker\"\n            tuiDateTime\n            class=\"t-native-input\"\n        />\n    </ng-template>\n\n    <ng-template\n        #dropdown=\"polymorpheus\"\n        [polymorpheus]=\"type\"\n    >\n        <tui-calendar\n            tuiPreventDefault=\"mousedown\"\n            automation-id=\"tui-input-date-time__calendar\"\n            [min]=\"calendarMinDay\"\n            [max]=\"calendarMaxDay\"\n            [disabledItemHandler]=\"disabledItemHandler\"\n            [month]=\"computedActiveYearMonth\"\n            [value]=\"calendarValue\"\n            (dayClick)=\"onDayClick($event)\"\n            (monthChange)=\"onMonthChange($event)\"\n        ></tui-calendar>\n    </ng-template>\n</tui-hosted-dropdown>\n","import {Directive} from '@angular/core';\nimport {TuiDay, TuiTime} from '@taiga-ui/cdk';\nimport {AbstractTuiTextfieldHost, tuiAsTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputDateTimeComponent} from './input-date-time.component';\n\n@Directive({\n    selector: 'tui-input-date-time',\n    providers: [tuiAsTextfieldHost(TuiInputDateTimeDirective)],\n})\nexport class TuiInputDateTimeDirective extends AbstractTuiTextfieldHost<TuiInputDateTimeComponent> {\n    override get value(): string {\n        return this.host.computedValue;\n    }\n\n    get rawValue(): [TuiDay | null, TuiTime | null] {\n        return this.host.value;\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    writeValue(value: [TuiDay | null, TuiTime | null]): void {\n        this.host.writeValue(value);\n    }\n\n    override process(input: HTMLInputElement): void {\n        input.inputMode = 'numeric';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiPreventDefaultModule} from '@taiga-ui/cdk';\nimport {\n    TuiCalendarModule,\n    TuiHostedDropdownModule,\n    TuiLinkModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n    TuiWrapperModule,\n} from '@taiga-ui/core';\nimport {TextMaskModule, TuiValueAccessorModule} from '@taiga-ui/kit/directives';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputDateTimeComponent} from './input-date-time.component';\nimport {TuiInputDateTimeDirective} from './input-date-time.directive';\nimport {TuiNativeDateTimeDirective} from './native-date-time/native-date-time.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TextMaskModule,\n        PolymorpheusModule,\n        TuiWrapperModule,\n        TuiPreventDefaultModule,\n        TuiCalendarModule,\n        TuiSvgModule,\n        TuiLinkModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiValueAccessorModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [\n        TuiInputDateTimeComponent,\n        TuiInputDateTimeDirective,\n        TuiNativeDateTimeDirective,\n    ],\n    exports: [\n        TuiInputDateTimeComponent,\n        TuiInputDateTimeDirective,\n        TuiTextfieldComponent,\n    ],\n})\nexport class TuiInputDateTimeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i5.TuiNativeDateTimeDirective"],"mappings":"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"}