{"version":3,"file":"taiga-ui-kit-components-input-phone-international.js","sources":["../../../projects/kit/components/input-phone-international/const/mask-after-code-regexp.ts","../../../projects/kit/components/input-phone-international/input-phone-international.options.ts","../../../projects/kit/components/input-phone-international/tokens/countries-masks.ts","../../../projects/kit/components/input-phone-international/utils/extract-value-from-event.ts","../../../projects/kit/components/input-phone-international/utils/not-kz-region.ts","../../../projects/kit/components/input-phone-international/input-phone-international.component.ts","../../../projects/kit/components/input-phone-international/input-phone-international.template.html","../../../projects/kit/components/input-phone-international/input-phone-international.module.ts","../../../projects/kit/components/input-phone-international/taiga-ui-kit-components-input-phone-international.ts"],"sourcesContent":["export const MASK_AFTER_CODE_REGEXP = /\\([#]+\\)|[#\\- ]/g;\n","import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\n\nexport interface TuiInputPhoneInternationalOptions {\n    readonly countries: readonly TuiCountryIsoCode[];\n    readonly countryIsoCode: TuiCountryIsoCode;\n}\n\nexport const TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS: TuiInputPhoneInternationalOptions =\n    {\n        countries: [],\n        countryIsoCode: TuiCountryIsoCode.RU,\n    };\n\n/**\n * Default parameters for input phone international component\n */\nexport const TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS =\n    new InjectionToken<TuiInputPhoneInternationalOptions>(\n        `[TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS]`,\n        {\n            factory: () => TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS,\n        },\n    );\n\nexport const tuiInputPhoneInternationalOptionsProvider: (\n    options: Partial<TuiInputPhoneInternationalOptions>,\n) => ValueProvider = (options: Partial<TuiInputPhoneInternationalOptions>) => ({\n    provide: TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS,\n    useValue: {...TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS, ...options},\n});\n","import {InjectionToken} from '@angular/core';\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\n\nexport const TUI_COUNTRIES_MASKS: InjectionToken<Record<TuiCountryIsoCode, string>> =\n    new InjectionToken<Record<TuiCountryIsoCode, string>>(`[TUI_COUNTRIES_MASKS]`, {\n        factory: () => ({\n            [TuiCountryIsoCode.AD]: `+376###-###`,\n            [TuiCountryIsoCode.AE]: `+971-##-###-####`,\n            [TuiCountryIsoCode.AF]: `+93##-###-####`,\n            [TuiCountryIsoCode.AG]: `+1(268) ###-####`,\n            [TuiCountryIsoCode.AI]: `+1(264) ###-####`,\n            [TuiCountryIsoCode.AL]: `+355(###) ###-###`,\n            [TuiCountryIsoCode.AM]: `+374##-###-###`,\n            [TuiCountryIsoCode.AO]: `+244(###) ###-###`,\n            [TuiCountryIsoCode.AR]: `+54(###) ###-####`,\n            [TuiCountryIsoCode.AT]: `+43(###) ###-####`,\n            [TuiCountryIsoCode.AU]: `+61#-####-####`,\n            [TuiCountryIsoCode.AW]: `+297###-####`,\n            [TuiCountryIsoCode.AZ]: `+994##-###-##-##`,\n            [TuiCountryIsoCode.BA]: `+387 ###-####-##`,\n            [TuiCountryIsoCode.BB]: `+1(246) ###-####`,\n            [TuiCountryIsoCode.BD]: `+880##-###-###`,\n            [TuiCountryIsoCode.BE]: `+32(###) ###-###`,\n            [TuiCountryIsoCode.BF]: `+226##-##-####`,\n            [TuiCountryIsoCode.BG]: `+359(###) ###-###`,\n            [TuiCountryIsoCode.BH]: `+973####-####`,\n            [TuiCountryIsoCode.BI]: `+257##-##-####`,\n            [TuiCountryIsoCode.BJ]: `+229##-##-####`,\n            [TuiCountryIsoCode.BL]: `+590 ## ## ## ## ##`,\n            [TuiCountryIsoCode.BM]: `+1(441) ###-####`,\n            [TuiCountryIsoCode.BN]: `+673###-####`,\n            [TuiCountryIsoCode.BO]: `+591#-###-####`,\n            [TuiCountryIsoCode.BQ]: `+599-###-####`,\n            [TuiCountryIsoCode.BR]: `+55(##) ####-####`,\n            [TuiCountryIsoCode.BS]: `+1(242) ###-####`,\n            [TuiCountryIsoCode.BT]: `+975#-###-###`,\n            [TuiCountryIsoCode.BW]: `+267##-###-###`,\n            [TuiCountryIsoCode.BY]: `+375(##) ###-##-##`,\n            [TuiCountryIsoCode.BZ]: `+501###-####`,\n            [TuiCountryIsoCode.CA]: `+1(###) ###-####`,\n            [TuiCountryIsoCode.CD]: `+243(###) ###-###`,\n            [TuiCountryIsoCode.CF]: `+236-##-##-####`,\n            [TuiCountryIsoCode.CG]: `+242##-###-####`,\n            [TuiCountryIsoCode.CH]: `+41##-###-####`,\n            [TuiCountryIsoCode.CI]: `+225##-##-###-###`,\n            [TuiCountryIsoCode.CL]: `+56#-####-####`,\n            [TuiCountryIsoCode.CM]: `+237#####-####`,\n            [TuiCountryIsoCode.CN]: `+86(###) ####-####`,\n            [TuiCountryIsoCode.CO]: `+57(###) ###-####`,\n            [TuiCountryIsoCode.CR]: `+506####-####`,\n            [TuiCountryIsoCode.CU]: `+53#-###-####`,\n            [TuiCountryIsoCode.CV]: `+238(###) ##-##`,\n            [TuiCountryIsoCode.CW]: `+5999-###-####`,\n            [TuiCountryIsoCode.CY]: `+357##-###-###`,\n            [TuiCountryIsoCode.CZ]: `+420(###) ###-###`,\n            [TuiCountryIsoCode.DE]: `+49(###) ###-###-##`,\n            [TuiCountryIsoCode.DJ]: `+253##-##-##-##`,\n            [TuiCountryIsoCode.DK]: `+45##-##-##-##`,\n            [TuiCountryIsoCode.DM]: `+1(767) ###-####`,\n            [TuiCountryIsoCode.DO]: `+1(###) ###-####`,\n            [TuiCountryIsoCode.DZ]: `+213##-###-####`,\n            [TuiCountryIsoCode.EC]: `+593##-###-####`,\n            [TuiCountryIsoCode.EE]: `+372####-####`,\n            [TuiCountryIsoCode.EG]: `+20(###) ###-####`,\n            [TuiCountryIsoCode.ER]: `+291#-###-###`,\n            [TuiCountryIsoCode.ES]: `+34(###) ###-###`,\n            [TuiCountryIsoCode.ET]: `+251##-###-####`,\n            [TuiCountryIsoCode.FI]: `+358(###) ###-##-##`,\n            [TuiCountryIsoCode.FJ]: `+679##-#####`,\n            [TuiCountryIsoCode.FK]: `+500#####`,\n            [TuiCountryIsoCode.FM]: `+691###-####`,\n            [TuiCountryIsoCode.FR]: `+33 ## ## ## ## ##`,\n            [TuiCountryIsoCode.GA]: `+241##-##-##-##`,\n            [TuiCountryIsoCode.GB]: `+44##-####-####`,\n            [TuiCountryIsoCode.GD]: `+1(473) ###-####`,\n            [TuiCountryIsoCode.GE]: `+995(###) ###-###`,\n            [TuiCountryIsoCode.GF]: `+594 ## ## ## ## ##`,\n            [TuiCountryIsoCode.GH]: `+233(###) ###-###`,\n            [TuiCountryIsoCode.GI]: `+350###-#####`,\n            [TuiCountryIsoCode.GL]: `+299##-##-##`,\n            [TuiCountryIsoCode.GM]: `+220(###) ##-##`,\n            [TuiCountryIsoCode.GN]: `+224##-###-###`,\n            [TuiCountryIsoCode.GP]: `+590 ## ## ## ## ##`,\n            [TuiCountryIsoCode.GQ]: `+240##-###-####`,\n            [TuiCountryIsoCode.GR]: `+30(###) ###-####`,\n            [TuiCountryIsoCode.GT]: `+502#-###-####`,\n            [TuiCountryIsoCode.GW]: `+245#-######`,\n            [TuiCountryIsoCode.GY]: `+592###-####`,\n            [TuiCountryIsoCode.HK]: `+852####-####`,\n            [TuiCountryIsoCode.HN]: `+504####-####`,\n            [TuiCountryIsoCode.HR]: `+385##-###-####`,\n            [TuiCountryIsoCode.HT]: `+509##-##-####`,\n            [TuiCountryIsoCode.HU]: `+36(###) ###-###`,\n            [TuiCountryIsoCode.ID]: `+62(###) ###-##-###`,\n            [TuiCountryIsoCode.IE]: `+353(###) ###-###`,\n            [TuiCountryIsoCode.IL]: `+972##-###-####`,\n            [TuiCountryIsoCode.IN]: `+91(####) ###-###`,\n            [TuiCountryIsoCode.IQ]: `+964(###) ###-####`,\n            [TuiCountryIsoCode.IR]: `+98(###) ###-####`,\n            [TuiCountryIsoCode.IS]: `+354###-####`,\n            [TuiCountryIsoCode.IT]: `+39(###) ####-###`,\n            [TuiCountryIsoCode.JM]: `+1(876) ###-####`,\n            [TuiCountryIsoCode.JO]: `+962#-####-####`,\n            [TuiCountryIsoCode.JP]: `+81-##-####-####`,\n            [TuiCountryIsoCode.KE]: `+254###-######`,\n            [TuiCountryIsoCode.KG]: `+996(###) ###-###`,\n            [TuiCountryIsoCode.KH]: `+855##-###-###`,\n            [TuiCountryIsoCode.KM]: `+269##-#####`,\n            [TuiCountryIsoCode.KN]: `+1(869) ###-####`,\n            [TuiCountryIsoCode.KP]: `+850####-#############`,\n            [TuiCountryIsoCode.KR]: `+82##-###-####`,\n            [TuiCountryIsoCode.KW]: `+965####-####`,\n            [TuiCountryIsoCode.KY]: `+1(345) ###-####`,\n            [TuiCountryIsoCode.KZ]: `+7(###) ###-##-##`,\n            [TuiCountryIsoCode.LA]: `+856##-##-###-###`,\n            [TuiCountryIsoCode.LB]: `+961##-###-###`,\n            [TuiCountryIsoCode.LC]: `+1(758) ###-####`,\n            [TuiCountryIsoCode.LI]: `+423(###) ###-####`,\n            [TuiCountryIsoCode.LK]: `+94##-###-####`,\n            [TuiCountryIsoCode.LR]: `+231##-###-###`,\n            [TuiCountryIsoCode.LS]: `+266#-###-####`,\n            [TuiCountryIsoCode.LT]: `+370(###) ##-###`,\n            [TuiCountryIsoCode.LU]: `+352(###) ###-###`,\n            [TuiCountryIsoCode.LV]: `+371##-###-###`,\n            [TuiCountryIsoCode.LY]: `+218##-###-####`,\n            [TuiCountryIsoCode.MA]: `+212##-####-###`,\n            [TuiCountryIsoCode.MC]: `+377###-###-###`,\n            [TuiCountryIsoCode.MD]: `+373####-####`,\n            [TuiCountryIsoCode.ME]: `+382##-###-###`,\n            [TuiCountryIsoCode.MF]: `+590 ## ## ## ## ##`,\n            [TuiCountryIsoCode.MG]: `+261##-##-#####`,\n            [TuiCountryIsoCode.MK]: `+389##-###-###`,\n            [TuiCountryIsoCode.ML]: `+223##-##-####`,\n            [TuiCountryIsoCode.MM]: `+95##-###-###`,\n            [TuiCountryIsoCode.MN]: `+976##-##-####`,\n            [TuiCountryIsoCode.MO]: `+853####-####`,\n            [TuiCountryIsoCode.MQ]: `+596 ## ## ## ## ##`,\n            [TuiCountryIsoCode.MR]: `+222##-##-####`,\n            [TuiCountryIsoCode.MS]: `+1(664) ###-####`,\n            [TuiCountryIsoCode.MT]: `+356####-####`,\n            [TuiCountryIsoCode.MU]: `+230####-####`,\n            [TuiCountryIsoCode.MV]: `+960###-####`,\n            [TuiCountryIsoCode.MW]: `+265#-####-####`,\n            [TuiCountryIsoCode.MX]: `+52(###) ###-####`,\n            [TuiCountryIsoCode.MY]: `+60(###) ###-###`,\n            [TuiCountryIsoCode.MZ]: `+258##-###-###`,\n            [TuiCountryIsoCode.NA]: `+264##-###-####`,\n            [TuiCountryIsoCode.NC]: `+687 ### ###`,\n            [TuiCountryIsoCode.NE]: `+227##-##-####`,\n            [TuiCountryIsoCode.NG]: `+234(###) ###-####`,\n            [TuiCountryIsoCode.NI]: `+505####-####`,\n            [TuiCountryIsoCode.NL]: `+31##-###-####`,\n            [TuiCountryIsoCode.NO]: `+47(###) ##-###`,\n            [TuiCountryIsoCode.NP]: `+977##-###-###`,\n            [TuiCountryIsoCode.NZ]: `+64(###) ###-####`,\n            [TuiCountryIsoCode.OM]: `+968##-###-###`,\n            [TuiCountryIsoCode.PA]: `+507###-####`,\n            [TuiCountryIsoCode.PE]: `+51(###) ###-###`,\n            [TuiCountryIsoCode.PF]: `+689 ## ## ## ##`,\n            [TuiCountryIsoCode.PG]: `+675(###) ##-###`,\n            [TuiCountryIsoCode.PH]: `+63(###) ###-####`,\n            [TuiCountryIsoCode.PK]: `+92(###) ###-####`,\n            [TuiCountryIsoCode.PL]: `+48(###) ###-###`,\n            [TuiCountryIsoCode.PT]: `+351##-###-####`,\n            [TuiCountryIsoCode.PW]: `+680###-####`,\n            [TuiCountryIsoCode.PY]: `+595(###) ###-###`,\n            [TuiCountryIsoCode.QA]: `+974####-####`,\n            [TuiCountryIsoCode.RE]: `+262 ## ## ## ## ##`,\n            [TuiCountryIsoCode.RO]: `+40##-###-####`,\n            [TuiCountryIsoCode.RS]: `+381##-###-####`,\n            [TuiCountryIsoCode.RU]: `+7### ###-##-##`,\n            [TuiCountryIsoCode.RW]: `+250(###) ###-###`,\n            [TuiCountryIsoCode.SA]: `+966#-####-####`,\n            [TuiCountryIsoCode.SB]: `+677###-####`,\n            [TuiCountryIsoCode.SC]: `+248#-###-###`,\n            [TuiCountryIsoCode.SD]: `+249##-###-####`,\n            [TuiCountryIsoCode.SE]: `+46##-###-####`,\n            [TuiCountryIsoCode.SG]: `+65####-####`,\n            [TuiCountryIsoCode.SH]: `+290####`,\n            [TuiCountryIsoCode.SI]: `+386##-###-###`,\n            [TuiCountryIsoCode.SK]: `+421(###) ###-###`,\n            [TuiCountryIsoCode.SL]: `+232##-######`,\n            [TuiCountryIsoCode.SM]: `+378####-######`,\n            [TuiCountryIsoCode.SN]: `+221##-###-####`,\n            [TuiCountryIsoCode.SO]: `+252##-###-###`,\n            [TuiCountryIsoCode.SR]: `+597###-####`,\n            [TuiCountryIsoCode.ST]: `+239##-#####`,\n            [TuiCountryIsoCode.SV]: `+503##-##-####`,\n            [TuiCountryIsoCode.SX]: `+1(721) ###-####`,\n            [TuiCountryIsoCode.SY]: `+963##-####-###`,\n            [TuiCountryIsoCode.SZ]: `+268##-##-####`,\n            [TuiCountryIsoCode.TC]: `+1(649) ###-####`,\n            [TuiCountryIsoCode.TD]: `+235##-##-##-##`,\n            [TuiCountryIsoCode.TG]: `+228##-###-###`,\n            [TuiCountryIsoCode.TH]: `+66##-###-####`,\n            [TuiCountryIsoCode.TJ]: `+992##-###-####`,\n            [TuiCountryIsoCode.TL]: `+670###-#####`,\n            [TuiCountryIsoCode.TM]: `+993#-###-####`,\n            [TuiCountryIsoCode.TN]: `+216##-###-###`,\n            [TuiCountryIsoCode.TO]: `+676#####`,\n            [TuiCountryIsoCode.TR]: `+90(###) ###-####`,\n            [TuiCountryIsoCode.TT]: `+1(868) ###-####`,\n            [TuiCountryIsoCode.TW]: `+886#-####-####`,\n            [TuiCountryIsoCode.TZ]: `+255##-###-####`,\n            [TuiCountryIsoCode.UA]: `+380(##) ###-##-##`,\n            [TuiCountryIsoCode.UG]: `+256(###) ###-###`,\n            [TuiCountryIsoCode.US]: `+1(###) ###-####`,\n            [TuiCountryIsoCode.UY]: `+598#-###-##-##`,\n            [TuiCountryIsoCode.UZ]: `+998##-###-####`,\n            [TuiCountryIsoCode.VC]: `+1(784) ###-####`,\n            [TuiCountryIsoCode.VE]: `+58(###) ###-####`,\n            [TuiCountryIsoCode.VG]: `+1(284)###-####`,\n            [TuiCountryIsoCode.VN]: `+84(###) ####-###`,\n            [TuiCountryIsoCode.VU]: `+678##-#####`,\n            [TuiCountryIsoCode.WS]: `+685##-####`,\n            [TuiCountryIsoCode.XK]: `+383##-###-###`,\n            [TuiCountryIsoCode.YE]: `+967###-###-###`,\n            [TuiCountryIsoCode.YT]: `+262 ## ## ## ## ##`,\n            [TuiCountryIsoCode.ZA]: `+27##-###-####`,\n            [TuiCountryIsoCode.ZM]: `+260##-###-####`,\n            [TuiCountryIsoCode.ZW]: `+263#-######`,\n        }),\n    });\n","import {tuiGetClipboardDataText} from '@taiga-ui/cdk';\n\nexport function tuiExtractValueFromEvent(event: ClipboardEvent | DragEvent): string {\n    return `dataTransfer` in event\n        ? event.dataTransfer?.getData(`text/plain`) || ``\n        : tuiGetClipboardDataText(event);\n}\n","export function tuiNotKzRegion(value: string): boolean {\n    const region = Number(value.slice(1, 4));\n\n    return region < 600 || region > 799;\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    CHAR_PLUS,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    TuiContextWithImplicit,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiMapper,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_MASK_SYMBOLS_REGEXP,\n    TUI_NON_DIGITS_REGEXP,\n    TuiFlagPipe,\n    TuiPrimitiveTextfieldComponent,\n    TuiSizeL,\n    TuiSizeM,\n    TuiSizeS,\n} from '@taiga-ui/core';\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\nimport {TUI_ARROW} from '@taiga-ui/kit/components/arrow';\nimport {TuiInputPhoneComponent} from '@taiga-ui/kit/components/input-phone';\nimport {FIXED_DROPDOWN_CONTROLLER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {TUI_COUNTRIES} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\n\nimport {MASK_AFTER_CODE_REGEXP} from './const/mask-after-code-regexp';\nimport {\n    TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS,\n    TuiInputPhoneInternationalOptions,\n} from './input-phone-international.options';\nimport {TUI_COUNTRIES_MASKS} from './tokens/countries-masks';\nimport {tuiExtractValueFromEvent} from './utils/extract-value-from-event';\nimport {tuiNotKzRegion} from './utils/not-kz-region';\n\n@Component({\n    selector: 'tui-input-phone-international',\n    templateUrl: './input-phone-international.template.html',\n    styleUrls: ['./input-phone-international.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputPhoneInternationalComponent),\n        tuiAsControl(TuiInputPhoneInternationalComponent),\n        // TODO: for backward compatibility only. Drop in v4.0\n        TuiFlagPipe,\n    ],\n    viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER],\n})\nexport class TuiInputPhoneInternationalComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiInputPhoneComponent)\n    private readonly inputPhoneComponent?: TuiInputPhoneComponent;\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly primitiveTextfield?: TuiPrimitiveTextfieldComponent;\n\n    @Input('countryIsoCode')\n    @tuiDefaultProp()\n    set isoCode(code: TuiCountryIsoCode) {\n        if (this.countryIsoCode === code) {\n            return;\n        }\n\n        this.inputPhoneComponent?.writeValue(this.value);\n        this.countryIsoCode = code;\n    }\n\n    @Input()\n    countries = this.options.countries;\n\n    @Output()\n    readonly countryIsoCodeChange = new EventEmitter<TuiCountryIsoCode>();\n\n    countryIsoCode = this.options.countryIsoCode;\n\n    open = false;\n\n    readonly arrow: PolymorpheusContent<\n        TuiContextWithImplicit<TuiSizeL | TuiSizeM | TuiSizeS>\n    > = TUI_ARROW;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(TUI_COUNTRIES)\n        readonly countriesNames$: Observable<Record<TuiCountryIsoCode, string>>,\n        @Inject(TUI_COUNTRIES_MASKS)\n        readonly countriesMasks: Record<TuiCountryIsoCode, string>,\n        @Inject(TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS)\n        private readonly options: TuiInputPhoneInternationalOptions,\n        @Inject(TuiFlagPipe)\n        private readonly flagPipe: TuiFlagPipe,\n    ) {\n        super(control, cdr);\n    }\n\n    get nativeFocusableElement(): HTMLElement | null {\n        return this.inputPhoneComponent && !this.computedDisabled\n            ? this.inputPhoneComponent.nativeFocusableElement\n            : null;\n    }\n\n    get focused(): boolean {\n        return (\n            (!!this.primitiveTextfield && this.primitiveTextfield.focused) ||\n            (!!this.inputPhoneComponent && this.inputPhoneComponent.focused)\n        );\n    }\n\n    get inputPhoneCountryCode(): string {\n        return this.isoToCountryCode(this.countryIsoCode);\n    }\n\n    get phoneMaskAfterCountryCode(): string {\n        const countryCode = this.isoToCountryCode(this.countryIsoCode);\n\n        return this.calculateMaskAfterCountryCode(\n            this.countriesMasks[this.countryIsoCode],\n            countryCode,\n        );\n    }\n\n    /**\n     * @deprecated use `<img [src]=\"countryIsoCode | tuiFlagPipe\" />`\n     * TODO drop in v4.0\n     */\n    get countryFlagPath(): string {\n        return this.getFlagPath(this.countryIsoCode);\n    }\n\n    @HostListener('paste.capture.prevent.stop', ['$event'])\n    @HostListener('drop.capture.prevent.stop', ['$event'])\n    onPaste(event: ClipboardEvent | DragEvent): void {\n        let value = tuiExtractValueFromEvent(event).replace(TUI_NON_DIGITS_REGEXP, '');\n        const countryIsoCode = this.extractCountryCode(value);\n\n        if (!countryIsoCode) {\n            this.value = `${this.inputPhoneCountryCode}${value}`\n                .replace(TUI_MASK_SYMBOLS_REGEXP, '')\n                .slice(0, this.getMaxAllowedLength(this.countryIsoCode));\n\n            return;\n        }\n\n        if (countryIsoCode === TuiCountryIsoCode.RU) {\n            value = value.replace(/^8/, '7');\n        }\n\n        this.updateCountryIsoCode(countryIsoCode);\n        this.value = `${CHAR_PLUS}${value}`;\n    }\n\n    readonly isoToCountryCodeMapper: TuiMapper<TuiCountryIsoCode, string> = item =>\n        this.isoToCountryCode(item);\n\n    /**\n     * @deprecated use `<img [src]=\"countryIsoCode | tuiFlagPipe\" />`\n     * TODO drop in v4.0\n     */\n    getFlagPath(code: TuiCountryIsoCode): string {\n        return this.flagPipe.transform(code);\n    }\n\n    onItemClick(isoCode: TuiCountryIsoCode): void {\n        this.open = false;\n        this.updateCountryIsoCode(isoCode);\n        // recalculates mask inside inputPhone to prevent isoCode conflict\n        this.cdr.detectChanges();\n\n        const maxLength = this.getMaxAllowedLength(isoCode);\n\n        if (this.value.length > maxLength) {\n            this.value = this.value.slice(0, maxLength);\n        }\n\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.focus();\n        }\n    }\n\n    override setDisabledState(): void {\n        super.setDisabledState();\n        this.close();\n    }\n\n    isoToCountryCode(isoCode: TuiCountryIsoCode): string {\n        return this.countriesMasks[isoCode].replace(MASK_AFTER_CODE_REGEXP, '');\n    }\n\n    /** @deprecated use 'value' setter */\n    onModelChange(value: string): void {\n        this.value = value;\n    }\n\n    onActiveZone(active: boolean): void {\n        this.updateFocused(active);\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    @tuiPure\n    private calculateMaskAfterCountryCode(mask: string, countryCode: string): string {\n        return mask.replace(countryCode, '').trim();\n    }\n\n    private close(): void {\n        this.open = false;\n    }\n\n    private getMaxAllowedLength(isoCode: TuiCountryIsoCode): number {\n        return this.countriesMasks[isoCode].replace(/[()\\- ]/g, '').length;\n    }\n\n    private updateCountryIsoCode(code: TuiCountryIsoCode): void {\n        this.countryIsoCode = code;\n        this.countryIsoCodeChange.emit(code);\n    }\n\n    private extractCountryCode(value: string): TuiCountryIsoCode | undefined {\n        return this.countries.find(countryIsoCode => {\n            const ruCodeTest =\n                countryIsoCode === TuiCountryIsoCode.RU &&\n                /^[7 | 8]/.test(value) &&\n                /^(?!880[1-9 ])/.test(value) &&\n                value.length + 1 === this.getMaxAllowedLength(TuiCountryIsoCode.RU);\n\n            const matched =\n                ruCodeTest ||\n                (value.startsWith(\n                    this.isoToCountryCode(countryIsoCode).replace(CHAR_PLUS, ''),\n                ) &&\n                    value.length + 1 === this.getMaxAllowedLength(countryIsoCode));\n\n            return matched && countryIsoCode === TuiCountryIsoCode.RU\n                ? tuiNotKzRegion(value)\n                : matched;\n        });\n    }\n}\n","<tui-hosted-dropdown\n    *ngIf=\"countriesNames$ | async as countriesNames\"\n    class=\"t-hosted-dropdown\"\n    [content]=\"dropdown\"\n    [canOpen]=\"!readOnly\"\n    [(open)]=\"open\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <div tuiGroup>\n        <tui-primitive-textfield\n            tuiHintContent=\"\"\n            tuiTextfieldPrefix=\"\"\n            tuiTextfieldPostfix=\"\"\n            class=\"t-country-select tui-group__auto-width-item\"\n            [tuiTextfieldCustomContent]=\"countryValueContent\"\n            [tuiTextfieldLabelOutside]=\"true\"\n            [tuiTextfieldIcon]=\"icon\"\n            [disabled]=\"disabled\"\n            [focusable]=\"focusable\"\n            [editable]=\"false\"\n            [pseudoFocus]=\"open || null\"\n            [readOnly]=\"readOnly\"\n        ></tui-primitive-textfield>\n        <tui-input-phone\n            class=\"t-input-phone tui-group__auto-width-item\"\n            [disabled]=\"disabled\"\n            [focusable]=\"focusable\"\n            [countryCode]=\"inputPhoneCountryCode\"\n            [phoneMaskAfterCountryCode]=\"phoneMaskAfterCountryCode\"\n            [readOnly]=\"readOnly\"\n            [pseudoInvalid]=\"computedInvalid\"\n            [pseudoFocus]=\"pseudoFocus\"\n            [pseudoHover]=\"pseudoHover\"\n            [(ngModel)]=\"value\"\n        >\n            <ng-content></ng-content>\n            <input\n                tuiTextfield\n                autocomplete=\"new-password\"\n            />\n        </tui-input-phone>\n    </div>\n\n    <ng-template #dropdown>\n        <tui-data-list>\n            <button\n                *ngFor=\"let item of countries\"\n                tuiOption\n                (click)=\"onItemClick(item)\"\n            >\n                <img\n                    alt=\"\"\n                    class=\"t-country-item-flag\"\n                    [src]=\"item | tuiFlag\"\n                />\n                <span class=\"t-country-item-name\">\n                    {{ countriesNames[item] }}\n                </span>\n                <span class=\"t-country-item-code\">\n                    {{ item | tuiMapper : isoToCountryCodeMapper }}\n                </span>\n            </button>\n        </tui-data-list>\n    </ng-template>\n\n    <ng-template #countryValueContent>\n        <!-- eslint-disable @html-eslint/require-img-alt -->\n        <img\n            class=\"t-flag\"\n            [alt]=\"countriesNames[countryIsoCode]\"\n            [src]=\"countryIsoCode | tuiFlag\"\n        />\n    </ng-template>\n\n    <ng-template #icon>\n        <div\n            tuiWrapper\n            appearance=\"icon\"\n        >\n            <ng-container *polymorpheusOutlet=\"arrow\"></ng-container>\n        </div>\n    </ng-template>\n</tui-hosted-dropdown>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiActiveZoneModule, TuiLetModule, TuiMapperPipeModule} from '@taiga-ui/cdk';\nimport {\n    TuiDataListModule,\n    TuiFlagPipeModule,\n    TuiGroupModule,\n    TuiHintModule,\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldControllerModule,\n    TuiWrapperModule,\n} from '@taiga-ui/core';\nimport {TuiArrowModule} from '@taiga-ui/kit/components/arrow';\nimport {TuiInputPhoneModule} from '@taiga-ui/kit/components/input-phone';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputPhoneInternationalComponent} from './input-phone-international.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PolymorpheusModule,\n        TuiSvgModule,\n        TuiInputPhoneModule,\n        TuiGroupModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiHintModule,\n        TuiHostedDropdownModule,\n        TuiDataListModule,\n        TuiArrowModule,\n        TuiWrapperModule,\n        TuiLetModule,\n        TuiMapperPipeModule,\n        TuiActiveZoneModule,\n        TuiFlagPipeModule,\n    ],\n    declarations: [TuiInputPhoneInternationalComponent],\n    exports: [TuiInputPhoneInternationalComponent],\n})\nexport class TuiInputPhoneInternationalModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,sBAAsB,GAAG;;ACQzB,MAAA,6CAA6C,GACtD;AACI,IAAA,SAAS,EAAE,EAAE;IACb,cAAc,EAAE,iBAAiB,CAAC,EAAE;EACtC;AAEN;;AAEG;MACU,qCAAqC,GAC9C,IAAI,cAAc,CACd,yCAAyC,EACzC;AACI,IAAA,OAAO,EAAE,MAAM,6CAA6C;AAC/D,CAAA,EACH;MAEO,yCAAyC,GAEjC,CAAC,OAAmD,MAAM;AAC3E,IAAA,OAAO,EAAE,qCAAqC;AAC9C,IAAA,QAAQ,EAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,6CAA6C,CAAK,EAAA,OAAO,CAAC;AAC3E,CAAA;;MC3BY,mBAAmB,GAC5B,IAAI,cAAc,CAAoC,uBAAuB,EAAE;AAC3E,IAAA,OAAO,EAAE,OAAO;AACZ,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAa,WAAA,CAAA;AACrC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAoB,kBAAA,CAAA;AAC5C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAoB,kBAAA,CAAA;AAC5C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAW,SAAA,CAAA;AACnC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAoB,kBAAA,CAAA;AAC5C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAoB,kBAAA,CAAA;AAC5C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAwB,sBAAA,CAAA;AAChD,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAoB,kBAAA,CAAA;AAC5C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAoB,kBAAA,CAAA;AAC5C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAU,QAAA,CAAA;AAClC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAe,aAAA,CAAA;AACvC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAW,SAAA,CAAA;AACnC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAoB,kBAAA,CAAA;AAC5C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAkB,gBAAA,CAAA;AAC1C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAmB,iBAAA,CAAA;AAC3C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;AACtC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAa,WAAA,CAAA;AACrC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAqB,mBAAA,CAAA;AAC7C,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAgB,cAAA,CAAA;AACxC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAiB,eAAA,CAAA;AACzC,QAAA,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAc,YAAA,CAAA;KACzC,CAAC;AACL,CAAA;;AC5NC,SAAU,wBAAwB,CAAC,KAAiC,EAAA;;IACtE,OAAO,CAAA,YAAA,CAAc,IAAI,KAAK;AAC1B,UAAE,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAAC,CAAA,UAAA,CAAY,CAAC,KAAI,CAAE,CAAA;AACjD,UAAE,uBAAuB,CAAC,KAAK,CAAC,CAAC;AACzC;;ACNM,SAAU,cAAc,CAAC,KAAa,EAAA;AACxC,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAEzC,IAAA,OAAO,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC;AACxC;;AC4DM,MAAO,mCACT,SAAQ,kBAA0B,CAAA;IAkClC,WAII,CAAA,OAAyB,EACE,GAAsB,EAExC,eAA8D,EAE9D,cAAiD,EAEzC,OAA0C,EAE1C,QAAqB,EAAA;AAEtC,QAAA,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QARX,IAAe,CAAA,eAAA,GAAf,eAAe,CAA+C;QAE9D,IAAc,CAAA,cAAA,GAAd,cAAc,CAAmC;QAEzC,IAAO,CAAA,OAAA,GAAP,OAAO,CAAmC;QAE1C,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAa;AA1B1C,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;AAG1B,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,YAAY,EAAqB,CAAC;AAEtE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;QAE7C,IAAI,CAAA,IAAA,GAAG,KAAK,CAAC;QAEJ,IAAK,CAAA,KAAA,GAEV,SAAS,CAAC;QA4EL,IAAsB,CAAA,sBAAA,GAAyC,IAAI,IACxE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;KA3D/B;IAvCD,IAAI,OAAO,CAAC,IAAuB,EAAA;;AAC/B,QAAA,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAC9B,OAAO;AACV,SAAA;QAED,CAAA,EAAA,GAAA,IAAI,CAAC,mBAAmB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjD,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC9B;AAkCD,IAAA,IAAI,sBAAsB,GAAA;AACtB,QAAA,OAAO,IAAI,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,gBAAgB;AACrD,cAAE,IAAI,CAAC,mBAAmB,CAAC,sBAAsB;cAC/C,IAAI,CAAC;KACd;AAED,IAAA,IAAI,OAAO,GAAA;AACP,QAAA,QACI,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO;AAC7D,aAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAClE;KACL;AAED,IAAA,IAAI,qBAAqB,GAAA;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACrD;AAED,IAAA,IAAI,yBAAyB,GAAA;QACzB,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE/D,QAAA,OAAO,IAAI,CAAC,6BAA6B,CACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,EACxC,WAAW,CACd,CAAC;KACL;AAED;;;AAGG;AACH,IAAA,IAAI,eAAe,GAAA;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAChD;AAID,IAAA,OAAO,CAAC,KAAiC,EAAA;AACrC,QAAA,IAAI,KAAK,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;QAC/E,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAEtD,IAAI,CAAC,cAAc,EAAE;YACjB,IAAI,CAAC,KAAK,GAAG,CAAA,EAAG,IAAI,CAAC,qBAAqB,CAAG,EAAA,KAAK,CAAE,CAAA;AAC/C,iBAAA,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC;AACpC,iBAAA,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAE7D,OAAO;AACV,SAAA;AAED,QAAA,IAAI,cAAc,KAAK,iBAAiB,CAAC,EAAE,EAAE;YACzC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACpC,SAAA;AAED,QAAA,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,CAAA,EAAG,SAAS,CAAG,EAAA,KAAK,EAAE,CAAC;KACvC;AAKD;;;AAGG;AACH,IAAA,WAAW,CAAC,IAAuB,EAAA;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACxC;AAED,IAAA,WAAW,CAAC,OAA0B,EAAA;AAClC,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,QAAA,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;;AAEnC,QAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAEzB,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;AAEpD,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,EAAE;AAC/B,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AAC/C,SAAA;QAED,IAAI,IAAI,CAAC,sBAAsB,EAAE;AAC7B,YAAA,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;AACvC,SAAA;KACJ;IAEQ,gBAAgB,GAAA;QACrB,KAAK,CAAC,gBAAgB,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,EAAE,CAAC;KAChB;AAED,IAAA,gBAAgB,CAAC,OAA0B,EAAA;AACvC,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC,CAAC;KAC3E;;AAGD,IAAA,aAAa,CAAC,KAAa,EAAA;AACvB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;AAED,IAAA,YAAY,CAAC,MAAe,EAAA;AACxB,QAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;KAC9B;IAES,gBAAgB,GAAA;AACtB,QAAA,OAAO,EAAE,CAAC;KACb;IAGO,6BAA6B,CAAC,IAAY,EAAE,WAAmB,EAAA;QACnE,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;KAC/C;IAEO,KAAK,GAAA;AACT,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACrB;AAEO,IAAA,mBAAmB,CAAC,OAA0B,EAAA;AAClD,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC;KACtE;AAEO,IAAA,oBAAoB,CAAC,IAAuB,EAAA;AAChD,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxC;AAEO,IAAA,kBAAkB,CAAC,KAAa,EAAA;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,IAAG;AACxC,YAAA,MAAM,UAAU,GACZ,cAAc,KAAK,iBAAiB,CAAC,EAAE;AACvC,gBAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AACtB,gBAAA,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5B,gBAAA,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YAExE,MAAM,OAAO,GACT,UAAU;AACV,iBAAC,KAAK,CAAC,UAAU,CACb,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAC/D;AACG,oBAAA,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC;AAEvE,YAAA,OAAO,OAAO,IAAI,cAAc,KAAK,iBAAiB,CAAC,EAAE;AACrD,kBAAE,cAAc,CAAC,KAAK,CAAC;kBACrB,OAAO,CAAC;AAClB,SAAC,CAAC,CAAC;KACN;;iIApMQ,mCAAmC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAsChC,SAAS,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAET,iBAAiB,EAAA,EAAA,EAAA,KAAA,EACjB,aAAa,EAAA,EAAA,EAAA,KAAA,EAEb,mBAAmB,EAAA,EAAA,EAAA,KAAA,EAEnB,qCAAqC,EAAA,EAAA,EAAA,KAAA,EAErC,WAAW,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA/Cd,mCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mCAAmC,EARjC,QAAA,EAAA,+BAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,EAAA,SAAA,CAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,OAAA,EAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,4BAAA,EAAA,iBAAA,EAAA,2BAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,SAAA,EAAA;QACP,0BAA0B,CAAC,mCAAmC,CAAC;QAC/D,YAAY,CAAC,mCAAmC,CAAC;;QAEjD,WAAW;KACd,EAOU,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,sBAAsB,qFAGtB,8BAA8B,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECvE7C,8vFAmFA,EDrBmB,MAAA,EAAA,CAAA,2hCAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,8BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,2BAAA,EAAA,WAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,6CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,cAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,qHAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,8BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,kBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,2BAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kCAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iCAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,2BAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,2BAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,EAAA,CAAA,aAAA,EAAA,EAAA,aAAA,EAAA,CAAC,kCAAkC,CAAC,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;AAcnD,UAAA,CAAA;AADC,IAAA,cAAc,EAAE;AAQhB,CAAA,EAAA,mCAAA,CAAA,SAAA,EAAA,SAAA,EAAA,IAAA,CAAA,CAAA;AA6ID,UAAA,CAAA;IADC,OAAO;AAGP,CAAA,EAAA,mCAAA,CAAA,SAAA,EAAA,+BAAA,EAAA,IAAA,CAAA,CAAA;4FAlKQ,mCAAmC,EAAA,UAAA,EAAA,CAAA;kBAb/C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,+BAA+B;AACzC,oBAAA,WAAW,EAAE,2CAA2C;oBACxD,SAAS,EAAE,CAAC,wCAAwC,CAAC;oBACrD,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,oBAAA,SAAS,EAAE;AACP,wBAAA,0BAA0B,CAAqC,mCAAA,CAAA;AAC/D,wBAAA,YAAY,CAAqC,mCAAA,CAAA;;wBAEjD,WAAW;AACd,qBAAA;oBACD,aAAa,EAAE,CAAC,kCAAkC,CAAC;AACtD,iBAAA,CAAA;;0BAqCQ,QAAQ;;0BACR,IAAI;;0BACJ,MAAM;2BAAC,SAAS,CAAA;;0BAEhB,MAAM;2BAAC,iBAAiB,CAAA;;0BACxB,MAAM;2BAAC,aAAa,CAAA;;0BAEpB,MAAM;2BAAC,mBAAmB,CAAA;;0BAE1B,MAAM;2BAAC,qCAAqC,CAAA;;0BAE5C,MAAM;2BAAC,WAAW,CAAA;4CA1CN,mBAAmB,EAAA,CAAA;sBADnC,SAAS;uBAAC,sBAAsB,CAAA;gBAIhB,kBAAkB,EAAA,CAAA;sBADlC,SAAS;uBAAC,8BAA8B,CAAA;gBAKrC,OAAO,EAAA,CAAA;sBAFV,KAAK;uBAAC,gBAAgB,CAAA;gBAYvB,SAAS,EAAA,CAAA;sBADR,KAAK;gBAIG,oBAAoB,EAAA,CAAA;sBAD5B,MAAM;gBAiEP,OAAO,EAAA,CAAA;sBAFN,YAAY;uBAAC,4BAA4B,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBACrD,YAAY;uBAAC,2BAA2B,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAwE7C,6BAA6B,EAAA,EAAA,EAAA,EAAA,CAAA;;MEpL5B,gCAAgC,CAAA;;8HAAhC,gCAAgC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+HAAhC,gCAAgC,EAAA,YAAA,EAAA,CAH1B,mCAAmC,CAAA,EAAA,OAAA,EAAA,CAlB9C,YAAY;QACZ,WAAW;QACX,kBAAkB;QAClB,YAAY;QACZ,mBAAmB;QACnB,cAAc;QACd,2BAA2B;QAC3B,4BAA4B;QAC5B,aAAa;QACb,uBAAuB;QACvB,iBAAiB;QACjB,cAAc;QACd,gBAAgB;QAChB,YAAY;QACZ,mBAAmB;QACnB,mBAAmB;AACnB,QAAA,iBAAiB,aAGX,mCAAmC,CAAA,EAAA,CAAA,CAAA;AAEpC,gCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gCAAgC,EAtBhC,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,kBAAkB;YAClB,YAAY;YACZ,mBAAmB;YACnB,cAAc;YACd,2BAA2B;YAC3B,4BAA4B;YAC5B,aAAa;YACb,uBAAuB;YACvB,iBAAiB;YACjB,cAAc;YACd,gBAAgB;YAChB,YAAY;YACZ,mBAAmB;YACnB,mBAAmB;YACnB,iBAAiB;AACpB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAIQ,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAvB5C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,kBAAkB;wBAClB,YAAY;wBACZ,mBAAmB;wBACnB,cAAc;wBACd,2BAA2B;wBAC3B,4BAA4B;wBAC5B,aAAa;wBACb,uBAAuB;wBACvB,iBAAiB;wBACjB,cAAc;wBACd,gBAAgB;wBAChB,YAAY;wBACZ,mBAAmB;wBACnB,mBAAmB;wBACnB,iBAAiB;AACpB,qBAAA;oBACD,YAAY,EAAE,CAAC,mCAAmC,CAAC;oBACnD,OAAO,EAAE,CAAC,mCAAmC,CAAC;AACjD,iBAAA,CAAA;;;AC3CD;;AAEG;;;;"}