{"version":3,"file":"taiga-ui-kit-tokens.js","sources":["../../../projects/kit/tokens/calendar-date-stream.ts","../../../projects/kit/tokens/date-inputs-value-transformers.ts","../../../projects/kit/tokens/i18n.ts","../../../projects/kit/tokens/input-date-options.ts","../../../projects/kit/tokens/items-handlers.ts","../../../projects/kit/tokens/mobile-calendar.ts","../../../projects/kit/tokens/month-formatter.ts","../../../projects/kit/tokens/tab-margin.ts","../../../projects/kit/tokens/validation-errors.ts","../../../projects/kit/tokens/taiga-ui-kit-tokens.ts"],"sourcesContent":["import {InjectionToken, Optional, Provider, Self} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {TuiControlValueTransformer, TuiDay, TuiDayRange} from '@taiga-ui/cdk';\nimport {tuiControlValueFactory} from '@taiga-ui/kit/utils';\nimport {Observable} from 'rxjs';\n\n/**\n * Stream that emits calendar data change\n */\nexport const TUI_CALENDAR_DATE_STREAM = new InjectionToken<\n    Observable<TuiDay | TuiDayRange | null>\n>(`[TUI_CALENDAR_DATE_STREAM]`);\n\nexport function tuiDateStreamWithTransformer(\n    transformer: InjectionToken<TuiControlValueTransformer<any>>,\n): Provider {\n    return {\n        provide: TUI_CALENDAR_DATE_STREAM,\n        deps: [\n            [new Optional(), new Self(), NgControl],\n            [new Optional(), transformer],\n        ],\n        useFactory: tuiControlValueFactory,\n    };\n}\n","import {InjectionToken} from '@angular/core';\nimport {TuiControlValueTransformer, TuiDay, TuiDayRange, TuiTime} from '@taiga-ui/cdk';\n\n// TODO: Refactor to use `AbstractTuiValueTransformer` and add ability to provide it for all controls\n\n/**\n * Control value transformer of TuiDay to custom value format for InputDate* components\n */\nexport const TUI_DATE_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<TuiDay | null>\n>(`[TUI_DATE_VALUE_TRANSFORMER]`);\n\n/**\n * Control value transformer for InputDateRange component\n */\nexport const TUI_DATE_RANGE_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<TuiDayRange | null>\n>(`[TUI_DATE_RANGE_VALUE_TRANSFORMER]`);\n\n/**\n * Control value transformer for InputDateTime component\n */\nexport const TUI_DATE_TIME_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<[TuiDay | null, TuiTime | null]>\n>(`[TUI_DATE_TIME_VALUE_TRANSFORMER]`);\n","import {InjectionToken} from '@angular/core';\nimport {TuiDateMode} from '@taiga-ui/cdk';\nimport {TuiCountryIsoCode, tuiExtractI18n} from '@taiga-ui/i18n';\nimport {Observable} from 'rxjs';\n\nexport const TUI_PROMPT_WORDS = new InjectionToken(`[TUI_PROMPT_WORDS]`, {\n    factory: tuiExtractI18n(`prompt`),\n});\n\nexport const TUI_CANCEL_WORD = new InjectionToken(`[TUI_CANCEL_WORD]`, {\n    factory: tuiExtractI18n(`cancel`),\n});\n\nexport const TUI_DONE_WORD = new InjectionToken(`[TUI_DONE_WORD]`, {\n    factory: tuiExtractI18n(`done`),\n});\n\nexport const TUI_MORE_WORD = new InjectionToken(`[TUI_MORE_WORD]`, {\n    factory: tuiExtractI18n(`more`),\n});\n\nexport const TUI_HIDE_TEXT = new InjectionToken(`[TUI_HIDE_TEXT]`, {\n    factory: tuiExtractI18n(`hide`),\n});\n\nexport const TUI_SHOW_ALL_TEXT = new InjectionToken(`[TUI_SHOW_ALL_TEXT]`, {\n    factory: tuiExtractI18n(`showAll`),\n});\n\nexport const TUI_OTHER_DATE_TEXT = new InjectionToken(`[TUI_OTHER_DATE_TEXT]`, {\n    factory: tuiExtractI18n(`otherDate`),\n});\n\nexport const TUI_CHOOSE_DAY_OR_RANGE_TEXTS = new InjectionToken(\n    `[TUI_CHOOSE_DAY_OR_RANGE_TEXTS]`,\n    {\n        factory: tuiExtractI18n(`mobileCalendarTexts`),\n    },\n);\n\nexport const TUI_FROM_TO_TEXTS = new InjectionToken(`[TUI_FROM_TO_TEXTS]`, {\n    factory: tuiExtractI18n(`range`),\n});\n\nexport const TUI_PLUS_MINUS_TEXTS = new InjectionToken(`[TUI_PLUS_MINUS_TEXTS]`, {\n    factory: tuiExtractI18n(`countTexts`),\n});\n\nexport const TUI_TIME_TEXTS = new InjectionToken(`[TUI_TIME_TEXTS]`, {\n    factory: tuiExtractI18n(`time`),\n});\n\nexport const TUI_DATE_TEXTS = new InjectionToken<Observable<Record<TuiDateMode, string>>>(\n    `[TUI_DATE_TEXTS]`,\n    {\n        factory: tuiExtractI18n(`dateTexts`),\n    },\n);\n\nexport const TUI_DIGITAL_INFORMATION_UNITS = new InjectionToken(\n    `[TUI_DIGITAL_INFORMATION_UNITS]`,\n    {\n        factory: tuiExtractI18n(`digitalInformationUnits`),\n    },\n);\n\nexport const TUI_COPY_TEXTS = new InjectionToken(`[TUI_COPY_TEXTS]`, {\n    factory: tuiExtractI18n(`copyTexts`),\n});\n\nexport const TUI_PASSWORD_TEXTS = new InjectionToken(`[TUI_PASSWORD_TEXTS]`, {\n    factory: tuiExtractI18n(`passwordTexts`),\n});\n\nexport const TUI_CALENDAR_MONTHS = new InjectionToken(`[TUI_CALENDAR_MONTHS]`, {\n    factory: tuiExtractI18n(`shortCalendarMonths`),\n});\n\nexport const TUI_FILE_TEXTS = new InjectionToken(`[TUI_FILE_TEXTS]`, {\n    factory: tuiExtractI18n(`fileTexts`),\n});\n\nexport const TUI_PAGINATION_TEXTS = new InjectionToken(`[TUI_PAGINATION_TEXTS]`, {\n    factory: tuiExtractI18n(`pagination`),\n});\n\nexport const TUI_INPUT_FILE_TEXTS = new InjectionToken(`[TUI_INPUT_FILE_TEXTS]`, {\n    factory: tuiExtractI18n(`inputFileTexts`),\n});\n\nexport const TUI_MULTI_SELECT_TEXTS = new InjectionToken(`[TUI_MULTI_SELECT_TEXTS]`, {\n    factory: tuiExtractI18n(`multiSelectTexts`),\n});\n\nexport const TUI_COUNTRIES = new InjectionToken<\n    Observable<Record<TuiCountryIsoCode, string>>\n>(`[TUI_COUNTRIES]`, {\n    factory: tuiExtractI18n(`countries`),\n});\n","import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TUI_FIRST_DAY, TUI_LAST_DAY, TuiContextWithImplicit, TuiDay} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiInputDateOptions {\n    readonly icon: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>>;\n    readonly min: TuiDay;\n    readonly max: TuiDay;\n    readonly nativePicker: boolean;\n}\n\nexport const TUI_INPUT_DATE_DEFAULT_OPTIONS: TuiInputDateOptions = {\n    icon: ({$implicit}) =>\n        $implicit === `s` ? `tuiIconCalendar` : `tuiIconCalendarLarge`,\n    min: TUI_FIRST_DAY,\n    max: TUI_LAST_DAY,\n    nativePicker: false,\n};\n\n/**\n * Default parameters for InputDate component\n */\nexport const TUI_INPUT_DATE_OPTIONS = new InjectionToken<TuiInputDateOptions>(\n    `[TUI_INPUT_DATE_OPTIONS]`,\n    {\n        factory: () => TUI_INPUT_DATE_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiInputDateOptionsProvider: (\n    options: Partial<TuiInputDateOptions>,\n) => ValueProvider = (options: Partial<TuiInputDateOptions>) => ({\n    provide: TUI_INPUT_DATE_OPTIONS,\n    useValue: {...TUI_INPUT_DATE_DEFAULT_OPTIONS, ...options},\n});\n","import {InjectionToken, ValueProvider} from '@angular/core';\nimport {\n    ALWAYS_FALSE_HANDLER,\n    TUI_DEFAULT_IDENTITY_MATCHER,\n    TUI_DEFAULT_STRINGIFY,\n    TuiBooleanHandler,\n    TuiIdentityMatcher,\n    TuiStringHandler,\n} from '@taiga-ui/cdk';\n\nexport interface TuiItemsHandlers<T> {\n    readonly stringify: TuiStringHandler<T>;\n    readonly identityMatcher: TuiIdentityMatcher<T>;\n    readonly disabledItemHandler: TuiBooleanHandler<T>;\n}\n\nexport const TUI_DEFAULT_ITEMS_HANDLERS: TuiItemsHandlers<unknown> = {\n    stringify: TUI_DEFAULT_STRINGIFY,\n    identityMatcher: TUI_DEFAULT_IDENTITY_MATCHER,\n    disabledItemHandler: ALWAYS_FALSE_HANDLER,\n};\n\n/**\n * Default items handlers for components\n */\nexport const TUI_ITEMS_HANDLERS = new InjectionToken<TuiItemsHandlers<unknown>>(\n    `[TUI_ITEMS_HANDLERS]`,\n    {\n        factory: () => TUI_DEFAULT_ITEMS_HANDLERS,\n    },\n);\n\nexport const tuiItemsHandlersProvider: <T>(\n    options: Partial<TuiItemsHandlers<T>>,\n) => ValueProvider = <T>(options: Partial<TuiItemsHandlers<T>>) => ({\n    provide: TUI_ITEMS_HANDLERS,\n    useValue: {...TUI_DEFAULT_ITEMS_HANDLERS, ...options},\n});\n","import {InjectionToken, Type} from '@angular/core';\n\n/**\n * A component for mobile data picker\n */\nexport const TUI_MOBILE_CALENDAR = new InjectionToken<Type<unknown>>(\n    `[TUI_MOBILE_CALENDAR]`,\n);\n","import {InjectionToken} from '@angular/core';\nimport {TuiHandler, TuiMonth} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\n\n/**\n * A function to get localized formatted month\n */\nexport const TUI_MONTH_FORMATTER = new InjectionToken<\n    TuiHandler<TuiMonth | null, Observable<string>>\n>(`[TUI_MONTH_FORMATTER]`);\n","import {InjectionToken} from '@angular/core';\n\n/**\n * Margin between tabs\n */\nexport const TUI_TAB_MARGIN = new InjectionToken<number>(`[TUI_TAB_MARGIN]`, {\n    factory: () => 24,\n});\n","import {InjectionToken} from '@angular/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\n\n/**\n * Validation errors\n */\nexport const TUI_VALIDATION_ERRORS = new InjectionToken<\n    Record<string, Observable<PolymorpheusContent> | PolymorpheusContent>\n>(`[TUI_VALIDATION_ERRORS]`, {\n    factory: () => ({}),\n});\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;AAMA;;AAEG;MACU,wBAAwB,GAAG,IAAI,cAAc,CAExD,CAA4B,0BAAA,CAAA,EAAE;AAE1B,SAAU,4BAA4B,CACxC,WAA4D,EAAA;IAE5D,OAAO;AACH,QAAA,OAAO,EAAE,wBAAwB;AACjC,QAAA,IAAI,EAAE;YACF,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,SAAS,CAAC;AACvC,YAAA,CAAC,IAAI,QAAQ,EAAE,EAAE,WAAW,CAAC;AAChC,SAAA;AACD,QAAA,UAAU,EAAE,sBAAsB;KACrC,CAAC;AACN;;ACrBA;AAEA;;AAEG;MACU,0BAA0B,GAAG,IAAI,cAAc,CAE1D,CAA8B,4BAAA,CAAA,EAAE;AAElC;;AAEG;MACU,gCAAgC,GAAG,IAAI,cAAc,CAEhE,CAAoC,kCAAA,CAAA,EAAE;AAExC;;AAEG;MACU,+BAA+B,GAAG,IAAI,cAAc,CAE/D,CAAmC,iCAAA,CAAA;;MCnBxB,gBAAgB,GAAG,IAAI,cAAc,CAAC,oBAAoB,EAAE;AACrE,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,MAAA,CAAQ,CAAC;AACpC,CAAA,EAAE;MAEU,eAAe,GAAG,IAAI,cAAc,CAAC,mBAAmB,EAAE;AACnE,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,MAAA,CAAQ,CAAC;AACpC,CAAA,EAAE;MAEU,aAAa,GAAG,IAAI,cAAc,CAAC,iBAAiB,EAAE;AAC/D,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,IAAA,CAAM,CAAC;AAClC,CAAA,EAAE;MAEU,aAAa,GAAG,IAAI,cAAc,CAAC,iBAAiB,EAAE;AAC/D,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,IAAA,CAAM,CAAC;AAClC,CAAA,EAAE;MAEU,aAAa,GAAG,IAAI,cAAc,CAAC,iBAAiB,EAAE;AAC/D,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,IAAA,CAAM,CAAC;AAClC,CAAA,EAAE;MAEU,iBAAiB,GAAG,IAAI,cAAc,CAAC,qBAAqB,EAAE;AACvE,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,OAAA,CAAS,CAAC;AACrC,CAAA,EAAE;MAEU,mBAAmB,GAAG,IAAI,cAAc,CAAC,uBAAuB,EAAE;AAC3E,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,SAAA,CAAW,CAAC;AACvC,CAAA,EAAE;MAEU,6BAA6B,GAAG,IAAI,cAAc,CAC3D,iCAAiC,EACjC;AACI,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,mBAAA,CAAqB,CAAC;AACjD,CAAA,EACH;MAEW,iBAAiB,GAAG,IAAI,cAAc,CAAC,qBAAqB,EAAE;AACvE,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,KAAA,CAAO,CAAC;AACnC,CAAA,EAAE;MAEU,oBAAoB,GAAG,IAAI,cAAc,CAAC,wBAAwB,EAAE;AAC7E,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,UAAA,CAAY,CAAC;AACxC,CAAA,EAAE;MAEU,cAAc,GAAG,IAAI,cAAc,CAAC,kBAAkB,EAAE;AACjE,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,IAAA,CAAM,CAAC;AAClC,CAAA,EAAE;MAEU,cAAc,GAAG,IAAI,cAAc,CAC5C,kBAAkB,EAClB;AACI,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,SAAA,CAAW,CAAC;AACvC,CAAA,EACH;MAEW,6BAA6B,GAAG,IAAI,cAAc,CAC3D,iCAAiC,EACjC;AACI,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,uBAAA,CAAyB,CAAC;AACrD,CAAA,EACH;MAEW,cAAc,GAAG,IAAI,cAAc,CAAC,kBAAkB,EAAE;AACjE,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,SAAA,CAAW,CAAC;AACvC,CAAA,EAAE;MAEU,kBAAkB,GAAG,IAAI,cAAc,CAAC,sBAAsB,EAAE;AACzE,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,aAAA,CAAe,CAAC;AAC3C,CAAA,EAAE;MAEU,mBAAmB,GAAG,IAAI,cAAc,CAAC,uBAAuB,EAAE;AAC3E,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,mBAAA,CAAqB,CAAC;AACjD,CAAA,EAAE;MAEU,cAAc,GAAG,IAAI,cAAc,CAAC,kBAAkB,EAAE;AACjE,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,SAAA,CAAW,CAAC;AACvC,CAAA,EAAE;MAEU,oBAAoB,GAAG,IAAI,cAAc,CAAC,wBAAwB,EAAE;AAC7E,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,UAAA,CAAY,CAAC;AACxC,CAAA,EAAE;MAEU,oBAAoB,GAAG,IAAI,cAAc,CAAC,wBAAwB,EAAE;AAC7E,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,cAAA,CAAgB,CAAC;AAC5C,CAAA,EAAE;MAEU,sBAAsB,GAAG,IAAI,cAAc,CAAC,0BAA0B,EAAE;AACjF,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,gBAAA,CAAkB,CAAC;AAC9C,CAAA,EAAE;MAEU,aAAa,GAAG,IAAI,cAAc,CAE7C,iBAAiB,EAAE;AACjB,IAAA,OAAO,EAAE,cAAc,CAAC,CAAA,SAAA,CAAW,CAAC;AACvC,CAAA;;ACtFY,MAAA,8BAA8B,GAAwB;AAC/D,IAAA,IAAI,EAAE,CAAC,EAAC,SAAS,EAAC,KACd,SAAS,KAAK,CAAA,CAAA,CAAG,GAAG,iBAAiB,GAAG,CAAsB,oBAAA,CAAA;AAClE,IAAA,GAAG,EAAE,aAAa;AAClB,IAAA,GAAG,EAAE,YAAY;AACjB,IAAA,YAAY,EAAE,KAAK;EACrB;AAEF;;AAEG;MACU,sBAAsB,GAAG,IAAI,cAAc,CACpD,0BAA0B,EAC1B;AACI,IAAA,OAAO,EAAE,MAAM,8BAA8B;AAChD,CAAA,EACH;MAEW,2BAA2B,GAEnB,CAAC,OAAqC,MAAM;AAC7D,IAAA,OAAO,EAAE,sBAAsB;AAC/B,IAAA,QAAQ,EAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,8BAA8B,CAAK,EAAA,OAAO,CAAC;AAC5D,CAAA;;ACnBY,MAAA,0BAA0B,GAA8B;AACjE,IAAA,SAAS,EAAE,qBAAqB;AAChC,IAAA,eAAe,EAAE,4BAA4B;AAC7C,IAAA,mBAAmB,EAAE,oBAAoB;EAC3C;AAEF;;AAEG;MACU,kBAAkB,GAAG,IAAI,cAAc,CAChD,sBAAsB,EACtB;AACI,IAAA,OAAO,EAAE,MAAM,0BAA0B;AAC5C,CAAA,EACH;MAEW,wBAAwB,GAEhB,CAAI,OAAqC,MAAM;AAChE,IAAA,OAAO,EAAE,kBAAkB;AAC3B,IAAA,QAAQ,EAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,0BAA0B,CAAK,EAAA,OAAO,CAAC;AACxD,CAAA;;ACnCD;;AAEG;MACU,mBAAmB,GAAG,IAAI,cAAc,CACjD,CAAuB,qBAAA,CAAA;;ACF3B;;AAEG;MACU,mBAAmB,GAAG,IAAI,cAAc,CAEnD,CAAuB,qBAAA,CAAA;;ACPzB;;AAEG;MACU,cAAc,GAAG,IAAI,cAAc,CAAS,kBAAkB,EAAE;AACzE,IAAA,OAAO,EAAE,MAAM,EAAE;AACpB,CAAA;;ACHD;;AAEG;MACU,qBAAqB,GAAG,IAAI,cAAc,CAErD,yBAAyB,EAAE;AACzB,IAAA,OAAO,EAAE,OAAO,EAAE,CAAC;AACtB,CAAA;;ACXD;;AAEG;;;;"}