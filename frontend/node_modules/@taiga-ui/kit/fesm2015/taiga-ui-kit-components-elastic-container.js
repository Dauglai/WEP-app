import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { ElementRef, Directive, Inject, Output, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';
import { shouldCall } from '@tinkoff/ng-event-plugins';
import { MutationObserverService, MUTATION_OBSERVER_INIT } from '@ng-web-apis/mutation-observer';
import { ResizeObserverService } from '@ng-web-apis/resize-observer';
import * as i1 from 'rxjs';
import { merge } from 'rxjs';
import { debounceTime, map, distinctUntilChanged } from 'rxjs/operators';

class TuiElasticContainerDirective {
    constructor(el, resize$, mutation$) {
        this.el = el;
        this.resize$ = resize$;
        this.mutation$ = mutation$;
        this.tuiElasticContainer = merge(this.resize$, this.mutation$).pipe(debounceTime(0), map(() => this.el.nativeElement.clientHeight - 1), distinctUntilChanged());
    }
}
TuiElasticContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiElasticContainerDirective, deps: [{ token: ElementRef }, { token: ResizeObserverService }, { token: MutationObserverService }], target: i0.ɵɵFactoryTarget.Directive });
TuiElasticContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiElasticContainerDirective, selector: "[tuiElasticContainer]", outputs: { tuiElasticContainer: "tuiElasticContainer" }, providers: [
        ResizeObserverService,
        MutationObserverService,
        {
            provide: MUTATION_OBSERVER_INIT,
            useValue: {
                childList: true,
                characterData: true,
                subtree: true,
            },
        },
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiElasticContainerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiElasticContainer]',
                    providers: [
                        ResizeObserverService,
                        MutationObserverService,
                        {
                            provide: MUTATION_OBSERVER_INIT,
                            useValue: {
                                childList: true,
                                characterData: true,
                                subtree: true,
                            },
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [ResizeObserverService]
                }] }, { type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [MutationObserverService]
                }] }]; }, propDecorators: { tuiElasticContainer: [{
                type: Output
            }] } });

class TuiElasticContainerComponent {
    constructor() {
        this.height = NaN;
        this.transitions = 0;
    }
    onAnimation(_name, count) {
        this.transitions += count;
    }
}
TuiElasticContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiElasticContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiElasticContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiElasticContainerComponent, selector: "tui-elastic-container", host: { properties: { "style.height.px": "this.height", "class._transitioning": "this.transitions" } }, ngImport: i0, template: "<div\n    class=\"t-wrapper\"\n    (transitionstart.silent)=\"onAnimation($any($event).propertyName, 1)\"\n    (transitionend.silent)=\"onAnimation($any($event).propertyName, -1)\"\n    (transitioncancel.silent)=\"onAnimation($any($event).propertyName, -1)\"\n    (tuiElasticContainer)=\"height = $event\"\n>\n    <ng-content></ng-content>\n</div>\n", styles: [":host{transition-property:height;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:block;overflow:hidden}:host._transitioning{height:auto!important}.t-wrapper{padding-top:1px;margin-top:-1px}\n"], directives: [{ type: TuiElasticContainerDirective, selector: "[tuiElasticContainer]", outputs: ["tuiElasticContainer"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    shouldCall(name => name === 'height')
], TuiElasticContainerComponent.prototype, "onAnimation", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiElasticContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-elastic-container',
                    templateUrl: './elastic-container.component.html',
                    styleUrls: ['./elastic-container.component.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { height: [{
                type: HostBinding,
                args: ['style.height.px']
            }], transitions: [{
                type: HostBinding,
                args: ['class._transitioning']
            }], onAnimation: [] } });

class TuiElasticContainerModule {
}
TuiElasticContainerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiElasticContainerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiElasticContainerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiElasticContainerModule, declarations: [TuiElasticContainerComponent, TuiElasticContainerDirective], exports: [TuiElasticContainerComponent] });
TuiElasticContainerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiElasticContainerModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiElasticContainerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiElasticContainerComponent, TuiElasticContainerDirective],
                    exports: [TuiElasticContainerComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiElasticContainerComponent, TuiElasticContainerDirective, TuiElasticContainerModule };
//# sourceMappingURL=taiga-ui-kit-components-elastic-container.js.map
