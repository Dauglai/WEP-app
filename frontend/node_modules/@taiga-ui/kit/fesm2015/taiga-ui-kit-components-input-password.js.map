{"version":3,"file":"taiga-ui-kit-components-input-password.js","sources":["../../../projects/kit/components/input-password/input-password-options.ts","../../../projects/kit/components/input-password/input-password.component.ts","../../../projects/kit/components/input-password/input-password.template.html","../../../projects/kit/components/input-password/input-password.directive.ts","../../../projects/kit/components/input-password/input-password.module.ts","../../../projects/kit/components/input-password/taiga-ui-kit-components-input-password.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiInputPasswordOptions {\n    readonly icons: Readonly<{\n        hide: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>>;\n        show: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>>;\n    }>;\n}\n\n/** Default values for the input password options. */\nexport const TUI_INPUT_PASSWORD_DEFAULT_OPTIONS: TuiInputPasswordOptions = {\n    icons: {\n        hide: ({$implicit}) =>\n            $implicit === `s` ? `tuiIconEyeOff` : `tuiIconEyeOffLarge`,\n        show: ({$implicit}) => ($implicit === `s` ? `tuiIconEye` : `tuiIconEyeLarge`),\n    },\n};\n\n/**\n * Default parameters for input password component\n */\nexport const TUI_INPUT_PASSWORD_OPTIONS = new InjectionToken<TuiInputPasswordOptions>(\n    `[TUI_INPUT_PASSWORD_OPTIONS]`,\n    {\n        factory: () => TUI_INPUT_PASSWORD_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiInputPasswordOptionsProvider: (\n    options: Partial<TuiInputPasswordOptions>,\n) => ValueProvider = (options: Partial<TuiInputPasswordOptions>) => ({\n    provide: TUI_INPUT_PASSWORD_OPTIONS,\n    useValue: {...TUI_INPUT_PASSWORD_DEFAULT_OPTIONS, ...options},\n});\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    TuiContextWithImplicit,\n    TuiFocusableElementAccessor,\n    TuiInputType,\n    TuiNativeFocusableElement,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    MODE_PROVIDER,\n    TUI_MODE,\n    TUI_TEXTFIELD_SIZE,\n    TuiBrightness,\n    TuiHintOptionsDirective,\n    TuiPrimitiveTextfieldComponent,\n    TuiSizeL,\n    TuiSizeS,\n    TuiTextfieldSizeDirective,\n} from '@taiga-ui/core';\nimport {TUI_PASSWORD_TEXTS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {combineLatest, EMPTY, Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\nimport {\n    TUI_INPUT_PASSWORD_OPTIONS,\n    TuiInputPasswordOptions,\n} from './input-password-options';\n\n@Component({\n    selector: 'tui-input-password',\n    templateUrl: './input-password.template.html',\n    styleUrls: ['./input-password.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputPasswordComponent),\n        tuiAsControl(TuiInputPasswordComponent),\n        MODE_PROVIDER,\n    ],\n})\nexport class TuiInputPasswordComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    private readonly directive$: Observable<any> = this.hintOptions?.change$ || EMPTY;\n\n    isPasswordHidden = true;\n\n    readonly computedAppearance$: Observable<string> = combineLatest([\n        this.mode$.pipe(map(val => (val === 'onDark' ? 'onDark' : ''))),\n        this.directive$.pipe(\n            startWith(null),\n            map(() => this.hintOptions?.appearance || ''),\n        ),\n    ]).pipe(\n        map(([mode, controller]) => controller || mode),\n        startWith(''),\n    );\n\n    readonly type!: TuiContextWithImplicit<TuiSizeL | TuiSizeS>;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_PASSWORD_TEXTS)\n        readonly passwordTexts$: Observable<[string, string]>,\n        @Inject(TUI_INPUT_PASSWORD_OPTIONS)\n        readonly options: TuiInputPasswordOptions,\n        @Optional()\n        @Inject(TuiHintOptionsDirective)\n        readonly hintOptions: TuiHintOptionsDirective | null,\n        @Inject(TUI_MODE)\n        private readonly mode$: Observable<TuiBrightness | null>,\n    ) {\n        super(control, cdr);\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get icon(): PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>> {\n        return this.isPasswordHidden ? this.options.icons.hide : this.options.icons.show;\n    }\n\n    get context(): TuiContextWithImplicit<TuiSizeL | TuiSizeS> {\n        return this.getContext(this.textfieldSize.size);\n    }\n\n    get inputType(): TuiInputType {\n        return this.isPasswordHidden || !this.interactive ? 'password' : 'text';\n    }\n\n    onValueChange(textValue: string): void {\n        this.value = textValue;\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    togglePasswordVisibility(): void {\n        this.isPasswordHidden = !this.isPasswordHidden;\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    @tuiPure\n    private getContext(\n        $implicit: TuiSizeL | TuiSizeS,\n    ): TuiContextWithImplicit<TuiSizeL | TuiSizeS> {\n        return {$implicit};\n    }\n}\n","<tui-primitive-textfield\n    class=\"t-textfield\"\n    [pseudoFocus]=\"pseudoFocus\"\n    [pseudoHover]=\"pseudoHover\"\n    [pseudoActive]=\"pseudoActive\"\n    [invalid]=\"computedInvalid\"\n    [focusable]=\"focusable\"\n    [nativeId]=\"nativeId\"\n    [disabled]=\"computedDisabled\"\n    [readOnly]=\"readOnly\"\n    [tuiTextfieldIcon]=\"interactive ? iconContent : ''\"\n    [(value)]=\"value\"\n    (focusedChange)=\"onFocused($event)\"\n>\n    <ng-content></ng-content>\n    <ng-content\n        select=\"input\"\n        ngProjectAs=\"input\"\n    ></ng-content>\n</tui-primitive-textfield>\n\n<ng-template\n    #iconContent=\"polymorpheus\"\n    [polymorpheus]=\"type\"\n>\n    <ng-container *ngIf=\"passwordTexts$ | async as texts\">\n        <tui-svg\n            *polymorpheusOutlet=\"icon as src; context: context\"\n            tuiWrapper\n            appearance=\"icon\"\n            automation-id=\"tui-password__icon\"\n            class=\"t-icon\"\n            [tuiHint]=\"texts[0] && texts[1] && hintContent\"\n            [tuiHintDirection]=\"hintOptions?.direction || 'bottom-left'\"\n            [tuiHintAppearance]=\"(computedAppearance$ | async) || ''\"\n            [src]=\"src\"\n            (click)=\"togglePasswordVisibility()\"\n        ></tui-svg>\n\n        <ng-template\n            #hintContent=\"polymorpheus\"\n            polymorpheus\n        >\n            {{ isPasswordHidden ? texts[0] : texts[1] }}\n        </ng-template>\n    </ng-container>\n</ng-template>\n","import {Directive, DoCheck} from '@angular/core';\nimport {tuiIsInput} from '@taiga-ui/cdk';\nimport {AbstractTuiTextfieldHost, tuiAsTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputPasswordComponent} from './input-password.component';\n\n@Directive({\n    selector: 'tui-input-password',\n    providers: [tuiAsTextfieldHost(TuiInputPasswordDirective)],\n})\nexport class TuiInputPasswordDirective\n    extends AbstractTuiTextfieldHost<TuiInputPasswordComponent>\n    implements DoCheck\n{\n    input?: HTMLInputElement;\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    override process(input: HTMLInputElement): void {\n        this.input = input;\n    }\n\n    ngDoCheck(): void {\n        if (\n            this.host.nativeFocusableElement &&\n            tuiIsInput(this.host.nativeFocusableElement)\n        ) {\n            this.host.nativeFocusableElement.type = this.host.inputType;\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {\n    TuiHintModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n    TuiWrapperModule,\n} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputPasswordComponent} from './input-password.component';\nimport {TuiInputPasswordDirective} from './input-password.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PolymorpheusModule,\n        TuiWrapperModule,\n        TuiSvgModule,\n        TuiHintModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputPasswordComponent, TuiInputPasswordDirective],\n    exports: [\n        TuiInputPasswordComponent,\n        TuiInputPasswordDirective,\n        TuiTextfieldComponent,\n    ],\n})\nexport class TuiInputPasswordModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}