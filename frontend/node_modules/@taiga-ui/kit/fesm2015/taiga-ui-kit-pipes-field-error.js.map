{"version":3,"file":"taiga-ui-kit-pipes-field-error.js","sources":["../../../projects/kit/pipes/field-error/field-error-pipe.ts","../../../projects/kit/pipes/field-error/field-error-content-pipe.ts","../../../projects/kit/pipes/field-error/field-error.module.ts","../../../projects/kit/pipes/field-error/taiga-ui-kit-pipes-field-error.ts"],"sourcesContent":["import {Inject, Optional, Pipe, PipeTransform, Self, SkipSelf} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlContainer,\n    ControlValueAccessor,\n    NgControl,\n} from '@angular/forms';\nimport {tuiIsString, tuiPure, TuiValidationError} from '@taiga-ui/cdk';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {isObservable, Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nconst EMPTY_RECORD = {};\n\n@Pipe({\n    name: `tuiFieldError`,\n    pure: false,\n})\nexport class TuiFieldErrorPipe implements PipeTransform, ControlValueAccessor {\n    private order: readonly string[] = [];\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n        @Inject(NgControl)\n        private readonly parent: NgControl | null,\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        private readonly self: NgControl | null,\n        @Optional()\n        @Inject(ControlContainer)\n        private readonly container: ControlContainer | null,\n        @Inject(TUI_VALIDATION_ERRORS)\n        private readonly validationErrors: Record<\n            string,\n            Observable<PolymorpheusContent> | PolymorpheusContent\n        >,\n    ) {\n        if (this.self && !this.self.valueAccessor) {\n            this.self.valueAccessor = this;\n        }\n    }\n\n    transform(order: readonly string[]): Observable<TuiValidationError | null> {\n        this.order = order;\n\n        return this.computedError;\n    }\n\n    get computedError(): Observable<TuiValidationError | null> {\n        return (this.invalid && this.touched && this.error) || of(null);\n    }\n\n    registerOnChange(): void {}\n\n    registerOnTouched(): void {}\n\n    setDisabledState(): void {}\n\n    writeValue(): void {}\n\n    private get error(): Observable<TuiValidationError> | null {\n        const {errorId} = this;\n\n        if (!errorId) {\n            return null;\n        }\n\n        const firstError = this.controlErrors[errorId];\n        const errorContent = this.validationErrors[errorId];\n\n        return this.getError(firstError, errorContent);\n    }\n\n    private get invalid(): boolean {\n        return !!this.control?.invalid;\n    }\n\n    private get touched(): boolean {\n        return !!this.control?.touched;\n    }\n\n    private get control(): AbstractControl | null | undefined {\n        return this.self?.control || this.parent?.control || this.container?.control;\n    }\n\n    private get errorId(): string {\n        return this.getErrorId(this.order, this.controlErrors);\n    }\n\n    private get controlErrors(): Record<string, unknown> {\n        return this.control?.errors || EMPTY_RECORD;\n    }\n\n    @tuiPure\n    private getErrorId(\n        order: readonly string[],\n        controlErrors: Record<string, unknown>,\n    ): string {\n        const id = order?.find(errorId => controlErrors[errorId]);\n        const fallback = Object.keys(controlErrors)[0];\n\n        return id || fallback || ``;\n    }\n\n    @tuiPure\n    private getError(\n        context: any,\n        content?: Observable<PolymorpheusContent> | PolymorpheusContent,\n    ): Observable<TuiValidationError> {\n        if (context instanceof TuiValidationError) {\n            return of(context);\n        }\n\n        if (content === undefined && tuiIsString(context)) {\n            return of(new TuiValidationError(context));\n        }\n\n        if (isObservable(content)) {\n            return unwrapObservable(content, context);\n        }\n\n        if (content instanceof Function) {\n            const message = content(context) as\n                | Observable<PolymorpheusContent>\n                | PolymorpheusContent;\n\n            return isObservable(message)\n                ? unwrapObservable(message, context)\n                : defaultError(message, context);\n        }\n\n        return defaultError(content, context);\n    }\n}\n\nfunction unwrapObservable(\n    content: Observable<PolymorpheusContent>,\n    context: any,\n): Observable<TuiValidationError> {\n    return content.pipe(map(error => new TuiValidationError(error || ``, context)));\n}\n\nfunction defaultError(\n    content: PolymorpheusContent,\n    context: any,\n): Observable<TuiValidationError> {\n    return of(new TuiValidationError(content || ``, context));\n}\n","import {AsyncPipe} from '@angular/common';\nimport {Inject, Injector, OnDestroy, Pipe, PipeTransform} from '@angular/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiFieldErrorPipe} from './field-error-pipe';\n\n@Pipe({\n    name: `tuiFieldErrorContent`,\n    pure: false,\n})\nexport class TuiFieldErrorContentPipe implements PipeTransform, OnDestroy {\n    private readonly localInjector = Injector.create({\n        providers: [{provide: AsyncPipe}, {provide: TuiFieldErrorPipe}],\n        parent: this.injector,\n    });\n\n    private readonly asyncPipe = this.localInjector.get(AsyncPipe);\n    private readonly fieldErrorPipe = this.localInjector.get(TuiFieldErrorPipe);\n\n    constructor(@Inject(Injector) private readonly injector: Injector) {}\n\n    transform(order: readonly string[]): PolymorpheusContent {\n        return this.getErrorContent(order);\n    }\n\n    ngOnDestroy(): void {\n        this.asyncPipe.ngOnDestroy();\n    }\n\n    private getErrorContent(order: readonly string[]): PolymorpheusContent {\n        const error = this.asyncPipe.transform(this.fieldErrorPipe.transform(order));\n\n        if (!error) {\n            return ``;\n        }\n\n        return typeof error.message === `function`\n            ? error.message(error.context)\n            : error.message;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiFieldErrorContentPipe} from './field-error-content-pipe';\nimport {TuiFieldErrorPipe} from './field-error-pipe';\n\n@NgModule({\n    declarations: [TuiFieldErrorPipe, TuiFieldErrorContentPipe],\n    exports: [TuiFieldErrorPipe, TuiFieldErrorContentPipe],\n})\nexport class TuiFieldErrorPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}