import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { ChangeDetectorRef, ElementRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChildren, Input, HostBinding, NgModule } from '@angular/core';
import * as i4 from '@angular/forms';
import { NgControl, FormsModule } from '@angular/forms';
import { AbstractTuiNullableControl, EMPTY_QUERY, TUI_DEFAULT_IDENTITY_MATCHER, ALWAYS_FALSE_HANDLER, tuiIsNativeFocusedIn, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp } from '@taiga-ui/cdk';
import * as i2 from '@taiga-ui/kit/components/radio-labeled';
import { TuiRadioLabeledComponent, TuiRadioLabeledModule } from '@taiga-ui/kit/components/radio-labeled';
import * as i1 from '@taiga-ui/kit/components/radio-group';
import { TuiRadioGroupModule } from '@taiga-ui/kit/components/radio-group';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i5 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';

class TuiRadioListComponent extends AbstractTuiNullableControl {
    constructor(control, cdr, el) {
        super(control, cdr);
        this.el = el;
        this.radioButtons = EMPTY_QUERY;
        this.items = [];
        this.size = 'm';
        this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;
        this.orientation = 'vertical';
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        // @bad TODO: Remove & { index: number }
        this.itemContent = ({ $implicit, }) => String($implicit);
    }
    get nativeFocusableElement() {
        const focusableRadioButton = this.radioButtons.find(radioButton => radioButton.nativeFocusableElement !== null);
        return focusableRadioButton ? focusableRadioButton.nativeFocusableElement : null;
    }
    get focused() {
        return tuiIsNativeFocusedIn(this.el.nativeElement);
    }
    computeId(index) {
        return `${this.id}-${index}`;
    }
    itemIsDisabled(item) {
        return this.disabledItemHandler(item);
    }
    /** @deprecated use 'value' setter */
    onModelChange(value) {
        this.value = value;
    }
    itemIsActive(item) {
        return this.value === null
            ? item === null
            : this.identityMatcher(this.value, item);
    }
}
TuiRadioListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioListComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Component });
TuiRadioListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiRadioListComponent, selector: "tui-radio-list", inputs: { items: "items", size: "size", identityMatcher: "identityMatcher", orientation: "orientation", disabledItemHandler: "disabledItemHandler", itemContent: "itemContent" }, host: { properties: { "attr.data-size": "this.size", "attr.data-orientation": "this.orientation" } }, providers: [
        tuiAsFocusableItemAccessor(TuiRadioListComponent),
        tuiAsControl(TuiRadioListComponent),
    ], viewQueries: [{ propertyName: "radioButtons", predicate: TuiRadioLabeledComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<tui-radio-group class=\"t-group\">\n    <tui-radio-labeled\n        *ngFor=\"let item of items; index as index\"\n        class=\"t-item\"\n        [readOnly]=\"readOnly\"\n        [nativeId]=\"computeId(index)\"\n        [disabled]=\"disabled\"\n        [item]=\"item\"\n        [size]=\"size\"\n        [pseudoInvalid]=\"computedInvalid\"\n        [pseudoDisabled]=\"itemIsDisabled(item)\"\n        [(ngModel)]=\"value\"\n    >\n        <ng-container\n            *polymorpheusOutlet=\"\n                itemContent as text;\n                context: {$implicit: item, index: index, active: itemIsActive(item)}\n            \"\n        >\n            {{ text }}\n        </ng-container>\n    </tui-radio-labeled>\n</tui-radio-group>\n", styles: [":host{display:block}:host._readonly{pointer-events:none}:host[data-orientation=horizontal] .t-group{display:flex;justify-content:inherit}:host[data-orientation=horizontal] .t-item:nth-child(n + 2){margin-left:1.5rem}:host[data-orientation=vertical] .t-item:nth-child(n + 2){margin-top:.75rem}:host[data-size=l][data-orientation=horizontal] .t-item:nth-child(n + 2){margin-left:2.5rem}:host[data-size=l][data-orientation=vertical] .t-item:nth-child(n + 2){margin-top:1rem}\n"], components: [{ type: i1.TuiRadioGroupComponent, selector: "tui-radio-group", inputs: ["name"] }, { type: i2.TuiRadioLabeledComponent, selector: "tui-radio-labeled", inputs: ["item", "size", "identityMatcher", "pseudoDisabled"] }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i5.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiRadioListComponent.prototype, "items", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioListComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioListComponent.prototype, "identityMatcher", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioListComponent.prototype, "orientation", void 0);
__decorate([
    tuiDefaultProp()
], TuiRadioListComponent.prototype, "disabledItemHandler", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-radio-list',
                    templateUrl: './radio-list.template.html',
                    styleUrls: ['./radio-list.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiRadioListComponent),
                        tuiAsControl(TuiRadioListComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i4.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; }, propDecorators: { radioButtons: [{
                type: ViewChildren,
                args: [TuiRadioLabeledComponent]
            }], items: [{
                type: Input
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], identityMatcher: [{
                type: Input
            }], orientation: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-orientation']
            }], disabledItemHandler: [{
                type: Input
            }], itemContent: [{
                type: Input
            }] } });

class TuiRadioListModule {
}
TuiRadioListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiRadioListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioListModule, declarations: [TuiRadioListComponent], imports: [CommonModule,
        FormsModule,
        PolymorpheusModule,
        TuiRadioGroupModule,
        TuiRadioLabeledModule], exports: [TuiRadioListComponent] });
TuiRadioListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioListModule, imports: [[
            CommonModule,
            FormsModule,
            PolymorpheusModule,
            TuiRadioGroupModule,
            TuiRadioLabeledModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioListModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        PolymorpheusModule,
                        TuiRadioGroupModule,
                        TuiRadioLabeledModule,
                    ],
                    declarations: [TuiRadioListComponent],
                    exports: [TuiRadioListComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiRadioListComponent, TuiRadioListModule };
//# sourceMappingURL=taiga-ui-kit-components-radio-list.js.map
