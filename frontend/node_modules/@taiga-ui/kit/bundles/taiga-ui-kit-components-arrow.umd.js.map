{"version":3,"file":"taiga-ui-kit-components-arrow.umd.js","sources":["../../../projects/kit/components/arrow/arrow-options.ts","../../../projects/kit/components/arrow/arrow.component.ts","../../../projects/kit/components/arrow/arrow.template.html","../../../projects/kit/components/arrow/arrow.module.ts","../../../projects/kit/components/arrow/taiga-ui-kit-components-arrow.ts"],"sourcesContent":["import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeM, TuiSizeS} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n// TODO: find the best way for prevent cycle\n// eslint-disable-next-line import/no-cycle\nimport {TUI_ARROW} from './arrow.component';\n\nexport interface TuiArrowOptions {\n    readonly iconSmall: PolymorpheusContent;\n    readonly iconLarge: PolymorpheusContent;\n}\n\n/** Default values for arrow options */\nexport const TUI_ARROW_DEFAULT_OPTIONS: TuiArrowOptions = {\n    iconSmall: `tuiIconChevronDown`,\n    iconLarge: `tuiIconChevronDownLarge`,\n};\n\n/**\n * Default parameters for arrow component\n */\nexport const TUI_ARROW_OPTIONS = new InjectionToken<TuiArrowOptions>(\n    `[TUI_ARROW_OPTIONS]`,\n    {\n        factory: () => TUI_ARROW_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiArrowOptionsProvider: (\n    options: Partial<TuiArrowOptions>,\n) => ValueProvider = (options: Partial<TuiArrowOptions>) => ({\n    provide: TUI_ARROW_OPTIONS,\n    useValue: {...TUI_ARROW_DEFAULT_OPTIONS, ...options},\n});\n\nexport interface TuiArrowMode {\n    readonly interactive: PolymorpheusContent<\n        TuiContextWithImplicit<TuiSizeL | TuiSizeM | TuiSizeS>\n    >;\n    readonly disabled: PolymorpheusContent<\n        TuiContextWithImplicit<TuiSizeL | TuiSizeM | TuiSizeS>\n    >;\n}\n\n/**\n * Type of icon in dropdowns for interactive or disable mode\n */\nexport const TUI_ARROW_MODE = new InjectionToken<TuiArrowMode>(`[TUI_ARROW_MODE]`, {\n    factory: () => ({\n        interactive: TUI_ARROW,\n        disabled: TUI_ARROW,\n    }),\n});\n\nexport const tuiArrowModeProvider: (options: Partial<TuiArrowMode>) => ValueProvider = (\n    options: Partial<TuiArrowMode>,\n) => ({\n    provide: TUI_ARROW_MODE,\n    useValue: {\n        interactive: TUI_ARROW,\n        disabled: TUI_ARROW,\n        ...options,\n    },\n});\n","import {ChangeDetectionStrategy, Component, HostBinding, Inject} from '@angular/core';\nimport {\n    TUI_TEXTFIELD_SIZE,\n    TuiHostedDropdownComponent,\n    tuiSizeBigger,\n    TuiTextfieldSizeDirective,\n} from '@taiga-ui/core';\nimport {PolymorpheusComponent, PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n// TODO: find the best way for prevent cycle\n// eslint-disable-next-line import/no-cycle\nimport {TUI_ARROW_OPTIONS, TuiArrowOptions} from './arrow-options';\n\n@Component({\n    selector: 'tui-arrow',\n    templateUrl: './arrow.template.html',\n    styleUrls: ['./arrow.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiArrowComponent {\n    constructor(\n        @Inject(TuiHostedDropdownComponent)\n        readonly dropdown: TuiHostedDropdownComponent,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_ARROW_OPTIONS) private readonly options: TuiArrowOptions,\n    ) {}\n\n    @HostBinding('class._rotated')\n    get rotated(): boolean {\n        return this.dropdown.open;\n    }\n\n    get arrowIcon(): PolymorpheusContent {\n        return tuiSizeBigger(this.textfieldSize.size)\n            ? this.options.iconLarge\n            : this.options.iconSmall;\n    }\n}\n\nexport const TUI_ARROW = new PolymorpheusComponent(TuiArrowComponent);\n","<tui-svg\n    *polymorpheusOutlet=\"arrowIcon as src\"\n    [src]=\"src\"\n></tui-svg>\n<ng-container *ngIf=\"dropdown.openChange | async\"></ng-container>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiSvgModule} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiArrowComponent} from './arrow.component';\n\n@NgModule({\n    imports: [CommonModule, TuiSvgModule, PolymorpheusModule],\n    declarations: [TuiArrowComponent],\n    exports: [TuiArrowComponent],\n})\nexport class TuiArrowModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["InjectionToken","tuiSizeBigger","i0","TuiHostedDropdownComponent","TUI_TEXTFIELD_SIZE","i1","i2","i3","Component","ChangeDetectionStrategy","Inject","HostBinding","PolymorpheusComponent","CommonModule","TuiSvgModule","PolymorpheusModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcA;AACa,QAAA,yBAAyB,GAAoB;IACtD,IAAA,SAAS,EAAE,oBAAoB;IAC/B,IAAA,SAAS,EAAE,yBAAyB;MACtC;IAEF;;IAEG;QACU,iBAAiB,GAAG,IAAIA,iBAAc,CAC/C,qBAAqB,EACrB;IACI,IAAA,OAAO,EAAE,YAAA,EAAM,OAAA,yBAAyB,GAAA;IAC3C,CAAA,EACH;QAEW,uBAAuB,GAEf,UAAC,OAAiC,EAAA,EAAK,QAAC;IACzD,IAAA,OAAO,EAAE,iBAAiB;IAC1B,IAAA,QAAQ,EAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,yBAAyB,CAAK,EAAA,OAAO,CAAC;KACvD,EAAC,GAAC;IAWH;;IAEG;QACU,cAAc,GAAG,IAAIA,iBAAc,CAAe,kBAAkB,EAAE;QAC/E,OAAO,EAAE,YAAM,EAAA,QAAC;IACZ,QAAA,WAAW,EAAE,SAAS;IACtB,QAAA,QAAQ,EAAE,SAAS;IACtB,KAAA,IAAC;IACL,CAAA,EAAE;QAEU,oBAAoB,GAAsD,UACnF,OAA8B,EAAA,EAC7B,QAAC;IACF,IAAA,OAAO,EAAE,cAAc;IACvB,IAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EACJ,WAAW,EAAE,SAAS,EACtB,QAAQ,EAAE,SAAS,EAChB,EAAA,OAAO,CACb;KACJ,EAAC;;AC9CF,QAAA,iBAAA,kBAAA,YAAA;IACI,IAAA,SAAA,iBAAA,CAEa,QAAoC,EAE5B,aAAwC,EACb,OAAwB,EAAA;IAH3D,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA4B;IAE5B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAA2B;IACb,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAiB;SACpE;IAEJ,IAAA,MAAA,CAAA,cAAA,CACI,iBAAO,CAAA,SAAA,EAAA,SAAA,EAAA;IADX,QAAA,GAAA,EAAA,YAAA;IAEI,YAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;aAC7B;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,iBAAS,CAAA,SAAA,EAAA,WAAA,EAAA;IAAb,QAAA,GAAA,EAAA,YAAA;IACI,YAAA,OAAOC,gBAAa,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACzC,kBAAE,IAAI,CAAC,OAAO,CAAC,SAAS;IACxB,kBAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;;;IAAA,KAAA,CAAA,CAAA;;;IAlBQ,iBAAA,CAAA,IAAA,GAAAC,aAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,iBAAiB,EAEd,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,6BAA0B,EAE1B,EAAA,EAAA,KAAA,EAAAC,qBAAkB,aAElB,iBAAiB,EAAA,CAAA,EAAA,MAAA,EAAAF,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IANpB,iBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,wHCnB9B,+JAKA,EAAA,MAAA,EAAA,CAAA,qNAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAG,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,KAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,2BAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,2BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,aAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAAL,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDca,iBAAiB,EAAA,UAAA,EAAA,CAAA;sBAN7BM,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACP,oBAAA,QAAQ,EAAE,WAAW;IACrB,oBAAA,WAAW,EAAE,uBAAuB;wBACpC,SAAS,EAAE,CAAC,oBAAoB,CAAC;wBACjC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAClD,CAAA;;;kCAGQC,SAAM;mCAACP,6BAA0B,CAAA;;kCAEjCO,SAAM;mCAACN,qBAAkB,CAAA;;kCAEzBM,SAAM;mCAAC,iBAAiB,CAAA;;6BAIzB,OAAO,EAAA,CAAA;0BADVC,cAAW;2BAAC,gBAAgB,CAAA;;QAYpB,SAAS,GAAG,IAAIC,wBAAqB,CAAC,iBAAiB;;AE5BpE,QAAA,cAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,cAAA,GAAA;;;;sIAAa,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAV,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uIAAd,cAAc,EAAA,YAAA,EAAA,CAHR,iBAAiB,CADtB,EAAA,OAAA,EAAA,CAAAW,eAAY,EAAEC,eAAY,EAAEC,qBAAkB,CAAA,EAAA,OAAA,EAAA,CAE9C,iBAAiB,CAAA,EAAA,CAAA,CAAA;IAElB,cAAA,CAAA,IAAA,GAAAb,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,cAAc,YAJd,CAACW,eAAY,EAAEC,eAAY,EAAEC,qBAAkB,CAAC,CAAA,EAAA,CAAA,CAAA;sHAIhD,cAAc,EAAA,UAAA,EAAA,CAAA;sBAL1BC,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;IACN,oBAAA,OAAO,EAAE,CAACH,eAAY,EAAEC,eAAY,EAAEC,qBAAkB,CAAC;wBACzD,YAAY,EAAE,CAAC,iBAAiB,CAAC;wBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;qBAC/B,CAAA;;;ICXD;;IAEG;;;;;;;;;;;;;;;;;"}