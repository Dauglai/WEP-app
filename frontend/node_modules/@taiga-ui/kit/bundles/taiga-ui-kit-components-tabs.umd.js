(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit/tokens'), require('@ng-web-apis/mutation-observer'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@tinkoff/ng-polymorpheus'), require('@ng-web-apis/common'), require('@tinkoff/ng-event-plugins')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/tabs', ['exports', '@angular/core', '@angular/router', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit/tokens', '@ng-web-apis/mutation-observer', 'rxjs', 'rxjs/operators', '@angular/common', '@tinkoff/ng-polymorpheus', '@ng-web-apis/common', '@tinkoff/ng-event-plugins'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.components = global["taiga-ui"].kit.components || {}, global["taiga-ui"].kit.components.tabs = {}), global.ng.core, global.ng.router, global.i4, global.i2, global["taiga-ui"].kit.tokens, global.mutationObserver, global.rxjs, global.rxjs.operators, global.ng.common, global.i8, global.common, global.ngEventPlugins));
})(this, (function (exports, i0, i2$1, i4, i2, tokens, mutationObserver, i3, operators, i5, i8, common, ngEventPlugins) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2$1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);

    /**
     * Stream of tab activation events
     */
    var TUI_TAB_EVENT = new i0.InjectionToken("[TUI_TAB_EVENT]");
    var TUI_TAB_ACTIVATE = "tui-tab-activate";
    var TUI_TAB_PROVIDERS = [
        i4.TuiDestroyService,
        i4.TuiFocusVisibleService,
        i2.TuiRouterLinkActiveService,
        {
            provide: TUI_TAB_EVENT,
            deps: [
                i0.ElementRef,
                i2.TuiRouterLinkActiveService,
                [new i0.Optional(), mutationObserver.MutationObserverService],
                [new i0.Optional(), i2$1.RouterLinkActive],
            ],
            useFactory: function (_a, routerLinkActiveService, mutationObserverService, routerLinkActive) {
                var nativeElement = _a.nativeElement;
                var mutationObserver = routerLinkActive && mutationObserverService
                    ? mutationObserverService.pipe(operators.filter(function () { return routerLinkActive.isActive; }))
                    : i3.EMPTY;
                return i3.merge(mutationObserver, routerLinkActiveService.pipe(operators.filter(i3.identity)), nativeElement.matches("button")
                    ? i4.tuiTypedFromEvent(nativeElement, "click")
                    : i3.EMPTY).pipe(operators.map(function () { return nativeElement.dispatchEvent(new CustomEvent(TUI_TAB_ACTIVATE, { bubbles: true })); }));
            },
        },
        i2.MODE_PROVIDER,
    ];

    var TuiTabComponent = /** @class */ (function () {
        function TuiTabComponent(routerLinkActive, el, mode$, event$, margin, focusVisible$) {
            var _this = this;
            this.routerLinkActive = routerLinkActive;
            this.el = el;
            this.mode$ = mode$;
            this.event$ = event$;
            this.margin = margin;
            this.focusVisible = false;
            focusVisible$.subscribe(function (visible) {
                _this.focusVisible = visible;
            });
        }
        Object.defineProperty(TuiTabComponent.prototype, "isActive", {
            get: function () {
                return !!this.routerLinkActive && this.routerLinkActive.isActive;
            },
            enumerable: false,
            configurable: true
        });
        TuiTabComponent.prototype.ngOnDestroy = function () {
            if (i4.tuiIsNativeFocused(this.el.nativeElement)) {
                this.el.nativeElement.blur();
            }
        };
        return TuiTabComponent;
    }());
    TuiTabComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabComponent, deps: [{ token: i2$1.RouterLinkActive, optional: true }, { token: i0.ElementRef }, { token: i2.TUI_MODE }, { token: TUI_TAB_EVENT }, { token: tokens.TUI_TAB_MARGIN }, { token: i4.TuiFocusVisibleService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTabComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabComponent, selector: "a[tuiTab]:not([routerLink]), a[tuiTab][routerLink][routerLinkActive], button[tuiTab]", host: { attributes: { "type": "button" }, listeners: { "$.data-mode.attr": "mode$" }, properties: { "style.cursor": "\"pointer\"", "style.--tui-tab-margin.px": "margin", "class._focus-visible": "this.focusVisible", "class._active": "this.isActive" } }, providers: TUI_TAB_PROVIDERS, ngImport: i0__namespace, template: "<ng-container *ngIf=\"event$ | async\"></ng-container>\n<span class=\"t-highlight\">\n    <ng-content></ng-content>\n</span>\n", styles: [":host-context(._underline):hover{box-shadow:inset 0 -2px var(--tui-base-03)}:host-context(tui-tabs >):first-child,:host-context([tuiTabs] >):first-child,:host-context(tui-tabs > :first-child),:host-context([tuiTabs] > :first-child){margin-left:0}:host{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;position:relative;display:flex;flex-shrink:0;height:100%;box-sizing:border-box;justify-content:space-between;align-items:center;white-space:nowrap;cursor:pointer;outline:none;text-decoration:none;color:inherit;transition-property:color,box-shadow,opacity;margin-left:var(--tui-tab-margin, 1.5rem)}:host:disabled{opacity:var(--tui-disabled-opacity);pointer-events:none}:host:not([data-mode])._active{opacity:1;color:var(--tui-text-01);box-shadow:none}:host[data-mode=onDark]{color:#ffffffb8}:host[data-mode=onDark]:hover,:host[data-mode=onDark]._active{color:#fff}:host[data-mode=onDark]._focus-visible .t-highlight{background:var(--tui-clear-inverse);color:var(--tui-text-01)}:host[data-mode=onLight]{color:var(--tui-text-02)}:host[data-mode=onLight]:hover,:host[data-mode=onLight]._active{color:var(--tui-text-01)}:host[data-mode=onLight]._focus-visible .t-highlight{background:var(--tui-text-01);color:#fff}:host._focus-visible .t-highlight{background:var(--tui-selection)}:host._android{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;height:3rem;flex:1;flex-shrink:0;justify-content:center;margin:0;text-transform:uppercase;color:var(--tui-base-09);opacity:.5;font-size:.875rem;font-weight:500;letter-spacing:-.008125rem;font-family:-apple-system,BlinkMacSystemFont,Roboto,\"Helvetica Neue\",sans-serif}:host._android:hover{box-shadow:none}:host._android._active{opacity:1;color:var(--tui-base-09)}:host._android .t-highlight{width:auto}:host._ios{height:1.75rem;flex:1;flex-shrink:0;justify-content:center;margin:0;color:var(--tui-base-01);opacity:1;font-size:.8125rem;font-weight:500;letter-spacing:-.005rem;font-family:-apple-system,BlinkMacSystemFont,Roboto,\"Helvetica Neue\",sans-serif}:host._ios:hover{box-shadow:none}:host._ios._active{font-size:.875rem;font-weight:600;color:var(--tui-link)}:host._ios .t-highlight{width:auto}@media (hover: hover){:host:hover{color:var(--tui-text-01)}}.t-highlight{display:inline-flex;width:100%;align-items:center;justify-content:inherit}.t-highlight ::ng-deep>*{flex-shrink:0}:host-context(tui-tabs[data-vertical]),:host-context([tuiTabs][data-vertical]){min-height:2.75rem;height:auto;white-space:normal;margin:0;text-align:left;padding:.25rem 1.25rem .25rem 0}:host-context(tui-tabs[data-vertical]):after,:host-context([tuiTabs][data-vertical]):after{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;content:\"\";position:absolute;top:0;bottom:0;right:0;width:2px;background:var(--tui-primary);transform:scaleX(0);transform-origin:right}:host-context(tui-tabs[data-vertical]):hover,:host-context([tuiTabs][data-vertical]):hover{box-shadow:inset -2px 0 var(--tui-base-03)}:host-context(tui-tabs[data-vertical])._active:after,:host-context([tuiTabs][data-vertical])._active:after{transform:none}:host-context(tui-tabs[data-vertical=\"right\"]),:host-context([tuiTabs][data-vertical=\"right\"]){text-align:right;padding:.25rem 0 .25rem 1.25rem}:host-context(tui-tabs[data-vertical=\"right\"]):after,:host-context([tuiTabs][data-vertical=\"right\"]):after{right:auto;left:0;transform-origin:left}:host-context(tui-tabs[data-vertical=\"right\"]):hover,:host-context([tuiTabs][data-vertical=\"right\"]):hover{box-shadow:inset 2px 0 var(--tui-base-03)}\n"], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'a[tuiTab]:not([routerLink]), a[tuiTab][routerLink][routerLinkActive], button[tuiTab]',
                        templateUrl: './tab.template.html',
                        styleUrls: ['./tab.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: TUI_TAB_PROVIDERS,
                        host: {
                            '($.data-mode.attr)': 'mode$',
                            /**
                             * SSR hack - problem with the Domino renderer that Angular uses for its server-side DOM implementation.
                             * Domino doesn't support CSS variables and some CSS properties like clip-path.
                             * Read more: https://github.com/Tinkoff/taiga-ui/issues/3210#issuecomment-1375788017
                             * ___
                             * TODO: drop this line after Angular team switch over to a new JavaScript DOM API
                             * https://github.com/angular/angular/issues/42170
                             */
                            '[style.cursor]': '"pointer"',
                            '[style.--tui-tab-margin.px]': 'margin',
                            type: 'button',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i2__namespace.RouterLinkActive, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i2$1.RouterLinkActive]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i2.TUI_MODE]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TAB_EVENT]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_TAB_MARGIN]
                        }] }, { type: i4__namespace.TuiFocusVisibleService, decorators: [{
                            type: i0.Inject,
                            args: [i4.TuiFocusVisibleService]
                        }] }];
        }, propDecorators: { focusVisible: [{
                    type: i0.HostBinding,
                    args: ['class._focus-visible']
                }], isActive: [{
                    type: i0.HostBinding,
                    args: ['class._active']
                }] } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var TuiTabsDirective = /** @class */ (function () {
        function TuiTabsDirective(el) {
            this.el = el;
            this.activeItemIndex = 0;
            this.activeItemIndexChange = new i0.EventEmitter();
        }
        Object.defineProperty(TuiTabsDirective.prototype, "tabs", {
            get: function () {
                return Array.from(this.el.nativeElement.querySelectorAll('[tuiTab]'));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTabsDirective.prototype, "activeElement", {
            get: function () {
                return this.tabs[this.activeItemIndex] || null;
            },
            enumerable: false,
            configurable: true
        });
        TuiTabsDirective.prototype.onActivate = function (event, element) {
            var index = this.tabs.findIndex(function (tab) { return tab === element; });
            event.stopPropagation();
            if (index === this.activeItemIndex) {
                return;
            }
            this.activeItemIndexChange.emit(index);
            this.activeItemIndex = index;
        };
        TuiTabsDirective.prototype.moveFocus = function (current, step) {
            var tabs = this.tabs;
            i4.tuiMoveFocus(tabs.indexOf(current), tabs, step);
        };
        TuiTabsDirective.prototype.ngAfterViewChecked = function () {
            var _a = this, tabs = _a.tabs, activeElement = _a.activeElement;
            tabs.forEach(function (nativeElement) {
                var active = nativeElement === activeElement;
                nativeElement.classList.toggle('_active', active);
                nativeElement.setAttribute('tabIndex', active ? '0' : '-1');
            });
        };
        return TuiTabsDirective;
    }());
    TuiTabsDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsDirective, deps: [{ token: i0.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiTabsDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabsDirective, selector: "tui-tabs, nav[tuiTabs]", inputs: { activeItemIndex: "activeItemIndex" }, outputs: { activeItemIndexChange: "activeItemIndexChange" }, host: { listeners: { "tui-tab-activate": "onActivate($event,$event.target)" } }, ngImport: i0__namespace });
    __decorate([
        i4.tuiDefaultProp()
    ], TuiTabsDirective.prototype, "activeItemIndex", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'tui-tabs, nav[tuiTabs]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }];
        }, propDecorators: { activeItemIndex: [{
                    type: i0.Input
                }], activeItemIndexChange: [{
                    type: i0.Output
                }], onActivate: [{
                    type: i0.HostListener,
                    args: [TUI_TAB_ACTIVATE, ['$event', '$event.target']]
                }] } });

    var TUI_TABS_DEFAULT_OPTIONS = {
        underline: true,
        exposeActive: true,
        itemsLimit: Infinity,
        minMoreWidth: 0,
    };
    /**
     * Default parameters for Tabs component
     */
    var TUI_TABS_OPTIONS = new i0.InjectionToken("[TUI_TABS_OPTIONS]", {
        factory: function () { return TUI_TABS_DEFAULT_OPTIONS; },
    });
    var tuiTabsOptionsProvider = function (options) { return ({
        provide: TUI_TABS_OPTIONS,
        useValue: Object.assign(Object.assign({}, TUI_TABS_DEFAULT_OPTIONS), options),
    }); };

    var TuiUnderlineComponent = /** @class */ (function () {
        function TuiUnderlineComponent(_a, ngZone, animationFrame$, mode$) {
            var _this = this;
            var nativeElement = _a.nativeElement;
            this.ngZone = ngZone;
            this.animationFrame$ = animationFrame$;
            this.mode$ = mode$;
            this.el$ = new i3.ReplaySubject(1);
            this.refresh$ = this.el$.pipe(operators.switchMap(function (element) { return element
                ? _this.animationFrame$.pipe(operators.map(function () { return element; }), i4.tuiZonefree(_this.ngZone))
                : i3.of(null); }), operators.share());
            this.transition$ = ngEventPlugins.asCallable(this.el$.pipe(operators.map(function (element) { return element && 'all'; }), operators.debounceTime(50)));
            this.transform$ = ngEventPlugins.asCallable(this.refresh$.pipe(operators.map(function (element) { return element ? "translate3d(" + element.offsetLeft + "px, 0, 0)" : null; })));
            this.width$ = ngEventPlugins.asCallable(this.refresh$.pipe(operators.map(function (element) { return (element === null || element === void 0 ? void 0 : element.clientWidth) || 0; })));
            nativeElement['$.style.transitionProperty'] = this.transition$;
            nativeElement['$.style.transform'] = this.transform$;
            nativeElement['$.style.width.px'] = this.width$;
        }
        Object.defineProperty(TuiUnderlineComponent.prototype, "element", {
            set: function (element) {
                this.el$.next(element);
            },
            enumerable: false,
            configurable: true
        });
        return TuiUnderlineComponent;
    }());
    TuiUnderlineComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiUnderlineComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: common.ANIMATION_FRAME }, { token: i2.TUI_MODE }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiUnderlineComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiUnderlineComponent, selector: "tui-underline", inputs: { element: "element" }, host: { listeners: { "$.data-mode.attr": "mode$", "$.style.transitionProperty": "transition$()", "$.style.transform": "transform$()", "$.style.width.px": "width$()" } }, providers: [i2.MODE_PROVIDER], ngImport: i0__namespace, template: '', isInline: true, styles: [":host{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;left:0;height:100%;color:var(--tui-primary);transform:scale(0);box-shadow:inset 0 -.1875rem 0 -.0625rem;transition-property:none;pointer-events:none}:host[data-mode=onDark]{color:var(--tui-text-01-night)}:host[data-mode=onLight]{color:var(--tui-text-02)}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i4.tuiDefaultProp()
    ], TuiUnderlineComponent.prototype, "element", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiUnderlineComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-underline',
                        template: '',
                        styleUrls: ['./underline.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [i2.MODE_PROVIDER],
                        host: {
                            '($.data-mode.attr)': 'mode$',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.NgZone, decorators: [{
                            type: i0.Inject,
                            args: [i0.NgZone]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [common.ANIMATION_FRAME]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i2.TUI_MODE]
                        }] }];
        }, propDecorators: { element: [{
                    type: i0.Input
                }], transition$: [{
                    type: i0.HostListener,
                    args: ['$.style.transitionProperty']
                }], transform$: [{
                    type: i0.HostListener,
                    args: ['$.style.transform']
                }], width$: [{
                    type: i0.HostListener,
                    args: ['$.style.width.px']
                }] } });

    var TuiTabsComponent = /** @class */ (function () {
        function TuiTabsComponent(options, el, tabs, cdr, resize$) {
            var _this = this;
            this.options = options;
            this.el = el;
            this.tabs = tabs;
            this.children = i4.EMPTY_QUERY;
            this.underline = this.options.underline;
            resize$.pipe(operators.filter(function () { return _this.underline; })).subscribe(function () {
                cdr.detectChanges();
            });
        }
        Object.defineProperty(TuiTabsComponent.prototype, "activeItemIndex", {
            /** @deprecated use `activeItemIndex` from {@link TuiTabsDirective} instead */
            get: function () {
                return this.tabs.activeItemIndex;
            },
            /** @deprecated use `activeItemIndex` from {@link TuiTabsDirective} instead */
            set: function (index) {
                this.tabs.activeItemIndex = index;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTabsComponent.prototype, "activeElement", {
            get: function () {
                return this.tabs.activeElement;
            },
            enumerable: false,
            configurable: true
        });
        TuiTabsComponent.prototype.onKeyDownArrow = function (current, step) {
            this.tabs.moveFocus(current, step);
        };
        TuiTabsComponent.prototype.ngAfterViewChecked = function () {
            this.scrollTo(this.tabs.activeItemIndex);
        };
        TuiTabsComponent.prototype.scrollTo = function (index) {
            var element = this.tabs.tabs[index];
            if (!element) {
                return;
            }
            var offsetLeft = element.offsetLeft, offsetWidth = element.offsetWidth;
            var nativeElement = this.el.nativeElement;
            if (offsetLeft < nativeElement.scrollLeft) {
                nativeElement.scrollLeft = offsetLeft;
            }
            if (offsetLeft + offsetWidth >
                nativeElement.scrollLeft + nativeElement.offsetWidth) {
                nativeElement.scrollLeft =
                    offsetLeft + offsetWidth - nativeElement.offsetWidth;
            }
        };
        return TuiTabsComponent;
    }());
    TuiTabsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsComponent, deps: [{ token: TUI_TABS_OPTIONS }, { token: i0.ElementRef }, { token: TuiTabsDirective }, { token: i0.ChangeDetectorRef }, { token: i4.TuiResizeService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTabsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabsComponent, selector: "tui-tabs:not([vertical]), nav[tuiTabs]:not([vertical])", inputs: { underline: "underline" }, host: { listeners: { "keydown.arrowRight.prevent": "onKeyDownArrow($event.target,1)", "keydown.arrowLeft.prevent": "onKeyDownArrow($event.target,-1)" }, properties: { "class._underline": "this.underline" } }, providers: [
            i4.TuiDestroyService,
            i4.TuiResizeService,
            mutationObserver.MutationObserverService,
            {
                provide: mutationObserver.MUTATION_OBSERVER_INIT,
                useValue: {
                    childList: true,
                },
            },
        ], queries: [{ propertyName: "children", predicate: i0__namespace.forwardRef(function () { return TuiTabComponent; }) }], ngImport: i0__namespace, template: "<ng-container *ngIf=\"children.changes | async\"></ng-container>\n<ng-content></ng-content>\n<tui-underline\n    *ngIf=\"underline\"\n    class=\"t-underline\"\n    [element]=\"activeElement\"\n></tui-underline>\n", styles: [":host{scrollbar-width:none;-ms-overflow-style:none;position:relative;z-index:0;display:flex;font:var(--tui-font-text-m);height:var(--tui-height-l);color:var(--tui-text-02);box-shadow:inset 0 -1px var(--tui-base-03);overflow:auto}:host::-webkit-scrollbar,:host::-webkit-scrollbar-thumb{background:transparent;width:0;height:0}.t-underline{z-index:-1}\n"], components: [{ type: TuiUnderlineComponent, selector: "tui-underline", inputs: ["element"] }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i4.tuiDefaultProp()
    ], TuiTabsComponent.prototype, "underline", void 0);
    __decorate([
        i4.tuiPure
    ], TuiTabsComponent.prototype, "scrollTo", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-tabs:not([vertical]), nav[tuiTabs]:not([vertical])',
                        templateUrl: './tabs.template.html',
                        styleUrls: ['./tabs.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            i4.TuiDestroyService,
                            i4.TuiResizeService,
                            mutationObserver.MutationObserverService,
                            {
                                provide: mutationObserver.MUTATION_OBSERVER_INIT,
                                useValue: {
                                    childList: true,
                                },
                            },
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TABS_OPTIONS]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: TuiTabsDirective, decorators: [{
                            type: i0.Inject,
                            args: [TuiTabsDirective]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i4.TuiResizeService]
                        }] }];
        }, propDecorators: { children: [{
                    type: i0.ContentChildren,
                    args: [i0.forwardRef(function () { return TuiTabComponent; })]
                }], underline: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class._underline']
                }], onKeyDownArrow: [{
                    type: i0.HostListener,
                    args: ['keydown.arrowRight.prevent', ['$event.target', '1']]
                }, {
                    type: i0.HostListener,
                    args: ['keydown.arrowLeft.prevent', ['$event.target', '-1']]
                }], scrollTo: [] } });

    var TuiTabsVerticalComponent = /** @class */ (function () {
        function TuiTabsVerticalComponent(tabs) {
            this.tabs = tabs;
            this.vertical = 'left';
        }
        TuiTabsVerticalComponent.prototype.onKeyDownArrow = function (current, step) {
            this.tabs.moveFocus(current, step);
        };
        return TuiTabsVerticalComponent;
    }());
    TuiTabsVerticalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsVerticalComponent, deps: [{ token: TuiTabsDirective }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTabsVerticalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabsVerticalComponent, selector: "tui-tabs[vertical], nav[tuiTabs][vertical]", inputs: { vertical: "vertical" }, host: { listeners: { "keydown.arrowDown.prevent": "onKeyDownArrow($event.target,1)", "keydown.arrowUp.prevent": "onKeyDownArrow($event.target,-1)" }, properties: { "attr.data-vertical": "this.vertical" } }, ngImport: i0__namespace, template: "\n        <ng-content></ng-content>\n    ", isInline: true, styles: [":host{display:flex;flex-direction:column;font:var(--tui-font-text-m);color:var(--tui-text-02);box-shadow:inset -1px 0 var(--tui-base-03)}:host[data-vertical=right]{box-shadow:inset 1px 0 var(--tui-base-03)}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i4.tuiDefaultProp()
    ], TuiTabsVerticalComponent.prototype, "vertical", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsVerticalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-tabs[vertical], nav[tuiTabs][vertical]',
                        template: "\n        <ng-content></ng-content>\n    ",
                        styleUrls: ['./tabs-vertical.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiTabsDirective, decorators: [{
                            type: i0.Inject,
                            args: [TuiTabsDirective]
                        }] }];
        }, propDecorators: { vertical: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['attr.data-vertical']
                }], onKeyDownArrow: [{
                    type: i0.HostListener,
                    args: ['keydown.arrowDown.prevent', ['$event.target', '1']]
                }, {
                    type: i0.HostListener,
                    args: ['keydown.arrowUp.prevent', ['$event.target', '-1']]
                }] } });

    var TUI_TABS_REFRESH = new i0.InjectionToken("[TUI_TABS_REFRESH]");
    var TUI_TABS_PROVIDERS = [
        i4.TuiResizeService,
        i4.TuiDestroyService,
        mutationObserver.MutationObserverService,
        {
            provide: mutationObserver.MUTATION_OBSERVER_INIT,
            useValue: {
                childList: true,
                subtree: true,
                characterData: true,
            },
        },
        {
            provide: TUI_TABS_REFRESH,
            deps: [
                i4.TuiResizeService,
                mutationObserver.MutationObserverService,
                i4.TuiDestroyService,
                i5.DOCUMENT,
                i0.ElementRef,
                i0.ChangeDetectorRef,
            ],
            useFactory: function (resize$, mutations$, destroy$, _a, _b, cdr) {
                var body = _a.body;
                var nativeElement = _b.nativeElement;
                return i3.merge(resize$, mutations$.pipe(operators.tap(function () { return cdr.detectChanges(); }))).pipe(
                // Ignoring cases when host is detached from DOM
                operators.filter(function () { return body.contains(nativeElement); }), operators.debounceTime(0), operators.startWith(null), operators.takeUntil(destroy$));
            },
        },
    ];

    var TuiTabsWithMoreComponent = /** @class */ (function () {
        function TuiTabsWithMoreComponent(options, margin, refresh$, el, cdr, moreWord$) {
            this.options = options;
            this.margin = margin;
            this.refresh$ = refresh$;
            this.el = el;
            this.cdr = cdr;
            this.moreWord$ = moreWord$;
            this.maxIndex = Infinity;
            this.underline = this.options.underline;
            this.activeItemIndex = 0;
            this.itemsLimit = this.options.itemsLimit;
            this.activeItemIndexChange = new i0.EventEmitter();
            this.items = i4.EMPTY_QUERY;
            this.open = false;
        }
        Object.defineProperty(TuiTabsWithMoreComponent.prototype, "tabs", {
            // TODO: Improve performance
            get: function () {
                return Array.from(this.el.nativeElement.querySelectorAll('[tuiTab]'));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTabsWithMoreComponent.prototype, "activeElement", {
            get: function () {
                var _a;
                var tabs = this.tabs;
                var safeActiveIndex = i4.tuiClamp(this.activeItemIndex || 0, 0, tabs.length - 2);
                return this.options.exposeActive || this.lastVisibleIndex >= safeActiveIndex
                    ? tabs[safeActiveIndex] || null
                    : ((_a = this.moreButton) === null || _a === void 0 ? void 0 : _a.nativeElement) || null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTabsWithMoreComponent.prototype, "isMoreAlone", {
            get: function () {
                return this.lastVisibleIndex < 0 && !this.options.exposeActive;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTabsWithMoreComponent.prototype, "isMoreVisible", {
            get: function () {
                return this.lastVisibleIndex < this.items.length - 1;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTabsWithMoreComponent.prototype, "isMoreFocusable", {
            get: function () {
                return !!this.moreButton && i4.tuiIsNativeFocused(this.moreButton.nativeElement);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTabsWithMoreComponent.prototype, "isMoreActive", {
            get: function () {
                return (this.open ||
                    (!this.options.exposeActive && this.lastVisibleIndex < this.activeItemIndex));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTabsWithMoreComponent.prototype, "lastVisibleIndex", {
            get: function () {
                if (this.itemsLimit + 1 >= this.items.length) {
                    return this.maxIndex;
                }
                var offset = this.itemsLimit - 1 > this.activeItemIndex || !this.options.exposeActive
                    ? 1
                    : 2;
                return Math.min(this.itemsLimit - offset, this.maxIndex);
            },
            enumerable: false,
            configurable: true
        });
        TuiTabsWithMoreComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.refresh$
                .pipe(operators.map(function () { return _this.getMaxIndex(); }), operators.filter(function (maxIndex) { return _this.maxIndex !== maxIndex; }))
                .subscribe(function (maxIndex) {
                _this.maxIndex = maxIndex;
                _this.cdr.detectChanges();
            });
        };
        TuiTabsWithMoreComponent.prototype.onActiveItemIndexChange = function (activeItemIndex) {
            this.updateActiveItemIndex(activeItemIndex);
        };
        TuiTabsWithMoreComponent.prototype.onClick = function (index) {
            this.open = false;
            this.focusMore();
            this.updateActiveItemIndex(index);
        };
        TuiTabsWithMoreComponent.prototype.onArrowRight = function (event) {
            if (i4.tuiIsElement(event.target) && i4.tuiIsNativeFocused(event.target)) {
                this.focusMore();
            }
        };
        TuiTabsWithMoreComponent.prototype.onArrowLeft = function () {
            var tabs = this.tabs;
            var index = tabs.length - 2;
            while (index >= 0) {
                tabs[index].focus();
                if (i4.tuiIsNativeFocused(tabs[index])) {
                    return;
                }
                index--;
            }
        };
        TuiTabsWithMoreComponent.prototype.onWrapperArrow = function (event, wrapper, previous) {
            var button = event.target;
            var target = i4.tuiGetClosestFocusable({ initial: button, root: wrapper, previous: previous });
            if (target) {
                target.focus();
            }
        };
        TuiTabsWithMoreComponent.prototype.isOverflown = function (index) {
            return index !== this.activeItemIndex || !this.options.exposeActive;
        };
        TuiTabsWithMoreComponent.prototype.shouldShow = function (index) {
            return index > this.lastVisibleIndex && this.isOverflown(index);
        };
        TuiTabsWithMoreComponent.prototype.focusMore = function () {
            if (this.moreButton) {
                this.moreButton.nativeElement.focus();
            }
        };
        TuiTabsWithMoreComponent.prototype.getMaxIndex = function () {
            var _b = this, tabs = _b.tabs, activeItemIndex = _b.activeItemIndex, margin = _b.margin;
            if (tabs.length < 2) {
                return 0;
            }
            var _c = this.options, exposeActive = _c.exposeActive, minMoreWidth = _c.minMoreWidth;
            var clientWidth = this.el.nativeElement.clientWidth;
            var activeWidth = tabs[activeItemIndex] ? tabs[activeItemIndex].scrollWidth : 0;
            var moreWidth = Math.max(tabs[tabs.length - 1].scrollWidth, minMoreWidth);
            var maxIndex = tabs.length - 2;
            var total = tabs.reduce(function (acc, _b) {
                var scrollWidth = _b.scrollWidth;
                return acc + scrollWidth;
            }, 0) +
                maxIndex * margin -
                tabs[tabs.length - 1].scrollWidth;
            if (total <= clientWidth) {
                return Infinity;
            }
            while (maxIndex) {
                total -= tabs[maxIndex].scrollWidth + margin;
                maxIndex--;
                var activeDisplaced = exposeActive && activeItemIndex > maxIndex;
                var activeOffset = activeDisplaced ? activeWidth + margin : 0;
                var currentWidth = total + activeOffset + moreWidth + margin;
                // Needed for different rounding of visible and hidden elements scrollWidth
                var safetyOffset = i4.tuiToInt(this.maxIndex === maxIndex - 1);
                if (currentWidth + safetyOffset < clientWidth) {
                    return maxIndex;
                }
            }
            return -1;
        };
        TuiTabsWithMoreComponent.prototype.updateActiveItemIndex = function (activeItemIndex) {
            this.activeItemIndex = activeItemIndex;
            this.activeItemIndexChange.emit(activeItemIndex);
            this.maxIndex = this.getMaxIndex();
        };
        return TuiTabsWithMoreComponent;
    }());
    TuiTabsWithMoreComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsWithMoreComponent, deps: [{ token: TUI_TABS_OPTIONS }, { token: tokens.TUI_TAB_MARGIN }, { token: TUI_TABS_REFRESH }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: tokens.TUI_MORE_WORD }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTabsWithMoreComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabsWithMoreComponent, selector: "tui-tabs-with-more, nav[tuiTabsWithMore]", inputs: { moreContent: "moreContent", dropdownContent: "dropdownContent", underline: "underline", activeItemIndex: "activeItemIndex", itemsLimit: "itemsLimit" }, outputs: { activeItemIndexChange: "activeItemIndexChange" }, host: { properties: { "class._underline": "this.underline" } }, providers: TUI_TABS_PROVIDERS, queries: [{ propertyName: "items", predicate: i4.TuiItemDirective, read: i0.TemplateRef }], viewQueries: [{ propertyName: "moreButton", first: true, predicate: TuiTabComponent, descendants: true, read: i0.ElementRef }], ngImport: i0__namespace, template: "<ng-container *ngIf=\"items.changes | async\"></ng-container>\n<div class=\"t-wrapper\">\n    <tui-tabs\n        class=\"t-tabs\"\n        [underline]=\"false\"\n        [activeItemIndex]=\"activeItemIndex\"\n        (activeItemIndexChange)=\"onActiveItemIndexChange($event)\"\n        (keydown.arrowRight)=\"onArrowRight($event)\"\n    >\n        <ng-container *ngFor=\"let item of items; let index = index\">\n            <ng-container\n                *ngIf=\"index <= lastVisibleIndex; else hidden\"\n                [ngTemplateOutlet]=\"item\"\n            ></ng-container>\n            <ng-template #hidden>\n                <div [class.t-overflown]=\"isOverflown(index)\">\n                    <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n                </div>\n            </ng-template>\n        </ng-container>\n    </tui-tabs>\n    <tui-hosted-dropdown\n        class=\"t-more_wrapper\"\n        [class.t-overflown]=\"!isMoreVisible\"\n        [content]=\"dropdownContent || dropdown\"\n        [(open)]=\"open\"\n    >\n        <button\n            tuiTab\n            [class._active]=\"isMoreActive\"\n            [class.t-no-margin]=\"isMoreAlone\"\n            [tuiFocusable]=\"isMoreFocusable\"\n            (keydown.arrowLeft.prevent)=\"onArrowLeft()\"\n        >\n            <ng-container *polymorpheusOutlet=\"moreContent || more as text\">\n                {{ text }}\n            </ng-container>\n        </button>\n        <ng-template #more>\n            {{ moreWord$ | async }}\n            <tui-svg\n                src=\"tuiIconChevronDown\"\n                class=\"t-icon\"\n                [class.t-icon_rotated]=\"open\"\n            ></tui-svg>\n        </ng-template>\n    </tui-hosted-dropdown>\n    <ng-template #dropdown>\n        <div\n            #element\n            class=\"t-dropdown\"\n            (keydown.arrowUp.prevent)=\"onWrapperArrow($event, element, true)\"\n            (keydown.arrowDown.prevent)=\"onWrapperArrow($event, element, false)\"\n        >\n            <div\n                *ngFor=\"let item of items; let index = index\"\n                (tui-tab-activate)=\"onClick(index)\"\n            >\n                <ng-container\n                    *ngIf=\"shouldShow(index)\"\n                    [ngTemplateOutlet]=\"item\"\n                ></ng-container>\n            </div>\n        </div>\n    </ng-template>\n    <tui-underline\n        *ngIf=\"underline\"\n        [element]=\"activeElement\"\n    ></tui-underline>\n</div>\n", styles: [":host{position:relative;display:flex;font:var(--tui-font-text-m);height:var(--tui-height-l);box-sizing:border-box;color:var(--tui-text-02);box-shadow:inset 0 -1px var(--tui-base-03);overflow:hidden}.t-wrapper{position:relative;display:flex}.t-tabs{height:inherit;font-size:inherit;font-weight:inherit;overflow:visible;box-shadow:none;color:inherit}.t-overflown{display:flex;margin:0;width:0;max-width:0;overflow:hidden;visibility:hidden}.t-more_wrapper{height:100%;pointer-events:none}.t-more_wrapper button{pointer-events:auto}.t-icon{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;margin-right:-.25rem;vertical-align:bottom}.t-icon_rotated{transform:rotate(180deg)}.t-dropdown{padding:.5rem 0}.t-dropdown ::ng-deep *[tuiTab]{width:100%;height:2.75rem;justify-content:flex-start;margin:0;padding:0 1rem;color:var(--tui-text-02)}.t-dropdown ::ng-deep *[tuiTab]:before{display:none}.t-dropdown ::ng-deep *[tuiTab]:hover,.t-dropdown ::ng-deep *[tuiTab]:focus,.t-dropdown ::ng-deep *[tuiTab]._active{box-shadow:none;color:var(--tui-base-08);background:var(--tui-base-02)}.t-no-margin{margin-left:0}\n"], components: [{ type: TuiTabsComponent, selector: "tui-tabs:not([vertical]), nav[tuiTabs]:not([vertical])", inputs: ["underline"] }, { type: i2__namespace$1.TuiHostedDropdownComponent, selector: "tui-hosted-dropdown", inputs: ["content", "sided", "canOpen", "open"], outputs: ["openChange", "focusedChange"] }, { type: TuiTabComponent, selector: "a[tuiTab]:not([routerLink]), a[tuiTab][routerLink][routerLinkActive], button[tuiTab]" }, { type: i2__namespace$1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: TuiUnderlineComponent, selector: "tui-underline", inputs: ["element"] }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: TuiTabsDirective, selector: "tui-tabs, nav[tuiTabs]", inputs: ["activeItemIndex"], outputs: ["activeItemIndexChange"] }, { type: i5__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4__namespace.TuiFocusableDirective, selector: "[tuiFocusable]", inputs: ["tuiFocusable"] }, { type: i8__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i5__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i4.tuiDefaultProp()
    ], TuiTabsWithMoreComponent.prototype, "underline", void 0);
    __decorate([
        i4.tuiDefaultProp()
    ], TuiTabsWithMoreComponent.prototype, "activeItemIndex", void 0);
    __decorate([
        i4.tuiDefaultProp()
    ], TuiTabsWithMoreComponent.prototype, "itemsLimit", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsWithMoreComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-tabs-with-more, nav[tuiTabsWithMore]',
                        templateUrl: './tabs-with-more.template.html',
                        styleUrls: ['./tabs-with-more.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: TUI_TABS_PROVIDERS,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TABS_OPTIONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_TAB_MARGIN]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TABS_REFRESH]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_MORE_WORD]
                        }] }];
        }, propDecorators: { moreButton: [{
                    type: i0.ViewChild,
                    args: [TuiTabComponent, { read: i0.ElementRef }]
                }], moreContent: [{
                    type: i0.Input
                }], dropdownContent: [{
                    type: i0.Input
                }], underline: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class._underline']
                }], activeItemIndex: [{
                    type: i0.Input
                }], itemsLimit: [{
                    type: i0.Input
                }], activeItemIndexChange: [{
                    type: i0.Output
                }], items: [{
                    type: i0.ContentChildren,
                    args: [i4.TuiItemDirective, { read: i0.TemplateRef }]
                }] } });

    var TuiTabsModule = /** @class */ (function () {
        function TuiTabsModule() {
        }
        return TuiTabsModule;
    }());
    TuiTabsModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiTabsModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsModule, declarations: [TuiTabsWithMoreComponent,
            TuiTabsComponent,
            TuiTabsDirective,
            TuiTabsVerticalComponent,
            TuiTabComponent,
            TuiUnderlineComponent], imports: [i5.CommonModule,
            i8.PolymorpheusModule,
            i2.TuiHostedDropdownModule,
            i2.TuiSvgModule,
            i4.TuiFocusableModule,
            i4.TuiItemModule], exports: [TuiTabsWithMoreComponent,
            TuiTabsComponent,
            TuiTabsDirective,
            TuiTabsVerticalComponent,
            TuiTabComponent,
            i4.TuiItemDirective] });
    TuiTabsModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsModule, imports: [[
                i5.CommonModule,
                i8.PolymorpheusModule,
                i2.TuiHostedDropdownModule,
                i2.TuiSvgModule,
                i4.TuiFocusableModule,
                i4.TuiItemModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabsModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i5.CommonModule,
                            i8.PolymorpheusModule,
                            i2.TuiHostedDropdownModule,
                            i2.TuiSvgModule,
                            i4.TuiFocusableModule,
                            i4.TuiItemModule,
                        ],
                        declarations: [
                            TuiTabsWithMoreComponent,
                            TuiTabsComponent,
                            TuiTabsDirective,
                            TuiTabsVerticalComponent,
                            TuiTabComponent,
                            TuiUnderlineComponent,
                        ],
                        exports: [
                            TuiTabsWithMoreComponent,
                            TuiTabsComponent,
                            TuiTabsDirective,
                            TuiTabsVerticalComponent,
                            TuiTabComponent,
                            i4.TuiItemDirective,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_TABS_DEFAULT_OPTIONS = TUI_TABS_DEFAULT_OPTIONS;
    exports.TUI_TABS_OPTIONS = TUI_TABS_OPTIONS;
    exports.TUI_TABS_PROVIDERS = TUI_TABS_PROVIDERS;
    exports.TUI_TABS_REFRESH = TUI_TABS_REFRESH;
    exports.TUI_TAB_ACTIVATE = TUI_TAB_ACTIVATE;
    exports.TUI_TAB_EVENT = TUI_TAB_EVENT;
    exports.TUI_TAB_PROVIDERS = TUI_TAB_PROVIDERS;
    exports.TuiTabComponent = TuiTabComponent;
    exports.TuiTabsComponent = TuiTabsComponent;
    exports.TuiTabsDirective = TuiTabsDirective;
    exports.TuiTabsModule = TuiTabsModule;
    exports.TuiTabsVerticalComponent = TuiTabsVerticalComponent;
    exports.TuiTabsWithMoreComponent = TuiTabsWithMoreComponent;
    exports.TuiUnderlineComponent = TuiUnderlineComponent;
    exports.tuiTabsOptionsProvider = tuiTabsOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-components-tabs.umd.js.map
