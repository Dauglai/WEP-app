(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@taiga-ui/cdk'), require('@tinkoff/ng-polymorpheus'), require('@taiga-ui/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/tree', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@taiga-ui/cdk', '@tinkoff/ng-polymorpheus', '@taiga-ui/core', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.components = global["taiga-ui"].kit.components || {}, global["taiga-ui"].kit.components.tree = {}), global.ng.core, global.rxjs, global.rxjs.operators, global.i2, global.i2$1, global.i1, global.ng.common));
})(this, (function (exports, i0, rxjs, operators, i2, i2$1, i1, i4) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var TuiTreeChildrenDirective = /** @class */ (function () {
        function TuiTreeChildrenDirective() {
            this.childrenHandler = TuiTreeChildrenDirective.defaultHandler;
        }
        TuiTreeChildrenDirective.defaultHandler = function (item) {
            return Array.isArray(item) ? item : i2.EMPTY_ARRAY;
        };
        return TuiTreeChildrenDirective;
    }());
    TuiTreeChildrenDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeChildrenDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiTreeChildrenDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTreeChildrenDirective, selector: "tui-tree[childrenHandler]", inputs: { childrenHandler: "childrenHandler" }, ngImport: i0__namespace });
    __decorate([
        i2.tuiDefaultProp()
    ], TuiTreeChildrenDirective.prototype, "childrenHandler", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeChildrenDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'tui-tree[childrenHandler]',
                    }]
            }], propDecorators: { childrenHandler: [{
                    type: i0.Input
                }] } });

    var TuiTreeItemContentComponent = /** @class */ (function () {
        function TuiTreeItemContentComponent(context, controller) {
            this.context = context;
            this.controller = controller;
        }
        Object.defineProperty(TuiTreeItemContentComponent.prototype, "isExpanded", {
            get: function () {
                return this.context.$implicit.isExpanded;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTreeItemContentComponent.prototype, "isExpandable", {
            get: function () {
                return (this.context.$implicit.isExpandable &&
                    this.controller !== TUI_DEFAULT_TREE_CONTROLLER);
            },
            enumerable: false,
            configurable: true
        });
        TuiTreeItemContentComponent.prototype.onClick = function () {
            this.controller.toggle(this.context.$implicit);
        };
        return TuiTreeItemContentComponent;
    }());
    TuiTreeItemContentComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeItemContentComponent, deps: [{ token: i2$1.POLYMORPHEUS_CONTEXT }, { token: i0.forwardRef(function () { return TUI_TREE_CONTROLLER; }) }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTreeItemContentComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTreeItemContentComponent, selector: "tui-tree-item-content", host: { properties: { "class._expandable": "this.isExpandable" } }, ngImport: i0__namespace, template: "<button\n    *ngIf=\"isExpandable\"\n    tuiIconButton\n    size=\"xs\"\n    appearance=\"flat\"\n    icon=\"tuiIconChevronRight\"\n    shape=\"rounded\"\n    type=\"button\"\n    class=\"t-button\"\n    [class.t-button_expanded]=\"isExpanded\"\n    (click)=\"onClick()\"\n></button>\n<ng-container [ngTemplateOutlet]=\"context.template\"></ng-container>\n", styles: [":host{display:flex;align-items:center}:host :host-context(tui-tree-item._expandable):not(._expandable){padding-left:2rem}.t-button{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;margin-right:.5rem}.t-button_expanded{transform:rotate(90deg)}\n"], components: [{ type: i1__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeItemContentComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-tree-item-content',
                        templateUrl: './tree-item-content.template.html',
                        styleUrls: ['./tree-item-content.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i2$1.POLYMORPHEUS_CONTEXT]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TUI_TREE_CONTROLLER; })]
                        }] }];
        }, propDecorators: { isExpandable: [{
                    type: i0.HostBinding,
                    args: ['class._expandable']
                }] } });

    var TUI_TREE_ITEM_CONTENT = new i2$1.PolymorpheusComponent(TuiTreeItemContentComponent);
    var TUI_DEFAULT_TREE_CONTROLLER = {
        isExpanded: i2.ALWAYS_TRUE_HANDLER,
        toggle: i2.EMPTY_FUNCTION,
    };

    /**
     * Controller for tracking value - TuiTreeItemComponent pairs
     */
    var TUI_TREE_ACCESSOR = new i0.InjectionToken("[TUI_TREE_ACCESSOR]");
    /**
     * Controller for expanding the tree
     */
    var TUI_TREE_CONTROLLER = new i0.InjectionToken("[TUI_TREE_CONTROLLER]", {
        factory: function () { return TUI_DEFAULT_TREE_CONTROLLER; },
    });
    /**
     * A node of a tree view
     */
    var TUI_TREE_NODE = new i0.InjectionToken("[TUI_TREE_NODE]");
    /**
     * A tree node placeholder for loading
     */
    var TUI_TREE_LOADING = new i0.InjectionToken("[TUI_TREE_LOADING]", {
        factory: function () { return ({}); },
    });
    /**
     * A tree node starting point
     */
    var TUI_TREE_START = new i0.InjectionToken("[TUI_TREE_START]");
    /**
     * A service to load tree progressively
     */
    var TUI_TREE_LOADER = new i0.InjectionToken("[TUI_TREE_LOADER]");
    /**
     * Content for a tree item
     */
    var TUI_TREE_CONTENT = new i0.InjectionToken("[TUI_TREE_CONTENT]", {
        factory: function () { return TUI_TREE_ITEM_CONTENT; },
    });
    /**
     * Nesting level of current TreeView node
     */
    var TUI_TREE_LEVEL = new i0.InjectionToken("[TUI_TREE_LEVEL]", {
        factory: function () { return -1; },
    });

    var TUI_TREE_ITEM_PROVIDERS = [
        {
            provide: TUI_TREE_LEVEL,
            deps: [[new i0.SkipSelf(), TUI_TREE_LEVEL]],
            useFactory: function (level) { return ++level; },
        },
        {
            provide: TUI_TREE_NODE,
            useExisting: i0.forwardRef(function () { return TuiTreeItemComponent; }),
        },
    ];

    var TuiTreeItemComponent = /** @class */ (function () {
        function TuiTreeItemComponent(el, controller, level, content) {
            var _this = this;
            this.el = el;
            this.controller = controller;
            this.level = level;
            this.content = content;
            this.nested = i2.EMPTY_QUERY;
            this.change$ = new rxjs.Subject();
            this.expanded$ = this.change$.pipe(operators.startWith(null), operators.map(function () { return _this.isExpanded; }), operators.distinctUntilChanged());
            this.attached$ = this.change$.pipe(operators.map(function () { return _this.el.nativeElement.isConnected; }), operators.distinctUntilChanged());
        }
        Object.defineProperty(TuiTreeItemComponent.prototype, "isExpandable", {
            get: function () {
                return !!this.nested.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTreeItemComponent.prototype, "isExpanded", {
            get: function () {
                return this.controller.isExpanded(this);
            },
            enumerable: false,
            configurable: true
        });
        TuiTreeItemComponent.prototype.ngDoCheck = function () {
            this.checkChanges();
        };
        TuiTreeItemComponent.prototype.checkChanges = function () {
            this.change$.next();
        };
        return TuiTreeItemComponent;
    }());
    TuiTreeItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeItemComponent, deps: [{ token: i0.ElementRef }, { token: i0.forwardRef(function () { return TUI_TREE_CONTROLLER; }) }, { token: i0.forwardRef(function () { return TUI_TREE_LEVEL; }) }, { token: i0.forwardRef(function () { return TUI_TREE_CONTENT; }) }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTreeItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTreeItemComponent, selector: "tui-tree-item", host: { attributes: { "role": "treeitem" }, properties: { "class._expandable": "this.isExpandable" } }, providers: TUI_TREE_ITEM_PROVIDERS, queries: [{ propertyName: "nested", predicate: TUI_TREE_NODE }], ngImport: i0__namespace, template: "<ng-template #template>\n    <ng-content></ng-content>\n</ng-template>\n<ng-container *polymorpheusOutlet=\"content as text; context: {$implicit: this, template: template}\">\n    {{ text }}\n</ng-container>\n<tui-expand\n    *ngIf=\"isExpandable\"\n    role=\"group\"\n    class=\"t-children\"\n    [expanded]=\"expanded$ | async\"\n>\n    <div>\n        <ng-content select=\"tui-tree-item\"></ng-content>\n        <ng-content select=\"tui-tree\"></ng-content>\n    </div>\n</tui-expand>\n<ng-container *ngIf=\"attached$ | async\"></ng-container>\n", styles: [":host{display:block}.t-children{position:relative;margin-left:var(--tui-tree-item-indent, 1.5rem)}\n"], components: [{ type: i1__namespace.TuiExpandComponent, selector: "tui-expand", inputs: ["async", "expanded"] }], directives: [{ type: i2__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-tree-item',
                        templateUrl: './tree-item.template.html',
                        styleUrls: ['./tree-item.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: TUI_TREE_ITEM_PROVIDERS,
                        host: {
                            role: 'treeitem',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TUI_TREE_CONTROLLER; })]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TUI_TREE_LEVEL; })]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TUI_TREE_CONTENT; })]
                        }] }];
        }, propDecorators: { nested: [{
                    type: i0.ContentChildren,
                    args: [TUI_TREE_NODE]
                }], isExpandable: [{
                    type: i0.HostBinding,
                    args: ['class._expandable']
                }] } });

    var TuiTreeNodeDirective = /** @class */ (function () {
        function TuiTreeNodeDirective(directive, component) {
            this.directive = directive;
            this.component = component;
        }
        Object.defineProperty(TuiTreeNodeDirective.prototype, "value", {
            set: function (value) {
                var _a;
                (_a = this.directive) === null || _a === void 0 ? void 0 : _a.register(this.component, value);
            },
            enumerable: false,
            configurable: true
        });
        TuiTreeNodeDirective.prototype.ngOnDestroy = function () {
            var _a;
            (_a = this.directive) === null || _a === void 0 ? void 0 : _a.unregister(this.component);
        };
        return TuiTreeNodeDirective;
    }());
    TuiTreeNodeDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeNodeDirective, deps: [{ token: TUI_TREE_ACCESSOR, optional: true }, { token: TuiTreeItemComponent }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiTreeNodeDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTreeNodeDirective, selector: "tui-tree-item[tuiTreeNode]", inputs: { value: ["tuiTreeNode", "value"] }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeNodeDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'tui-tree-item[tuiTreeNode]',
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [TUI_TREE_ACCESSOR]
                        }] }, { type: TuiTreeItemComponent, decorators: [{
                            type: i0.Inject,
                            args: [TuiTreeItemComponent]
                        }] }];
        }, propDecorators: { value: [{
                    type: i0.Input,
                    args: ['tuiTreeNode']
                }] } });

    var TuiTreeComponent = /** @class */ (function () {
        function TuiTreeComponent(directive) {
            var _this = this;
            this.directive = directive;
            this.check$ = new rxjs.Subject();
            this.children$ = this.check$.pipe(operators.startWith(null), operators.map(function () { return _this.handler(_this.value); }), operators.distinctUntilChanged());
            this.content = function (_c) {
                var $implicit = _c.$implicit;
                return String($implicit);
            };
        }
        TuiTreeComponent.prototype.ngDoCheck = function () {
            this.checkChanges();
        };
        TuiTreeComponent.prototype.checkChanges = function () {
            var _a, _b;
            this.check$.next();
            (_a = this.item) === null || _a === void 0 ? void 0 : _a.checkChanges();
            (_b = this.child) === null || _b === void 0 ? void 0 : _b.checkChanges();
        };
        Object.defineProperty(TuiTreeComponent.prototype, "handler", {
            get: function () {
                var _a;
                return ((_a = this.directive) === null || _a === void 0 ? void 0 : _a.childrenHandler) || TuiTreeChildrenDirective.defaultHandler;
            },
            enumerable: false,
            configurable: true
        });
        return TuiTreeComponent;
    }());
    TuiTreeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeComponent, deps: [{ token: TuiTreeChildrenDirective, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTreeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTreeComponent, selector: "tui-tree[value]", inputs: { value: "value", content: "content" }, host: { attributes: { "role": "tree" } }, providers: [
            {
                provide: TUI_TREE_NODE,
                useExisting: TuiTreeComponent,
            },
        ], viewQueries: [{ propertyName: "item", first: true, predicate: TuiTreeItemComponent, descendants: true }, { propertyName: "child", first: true, predicate: TuiTreeComponent, descendants: true }], ngImport: i0__namespace, template: "<tui-tree-item\n    *tuiLet=\"children$ | async as children\"\n    #view\n    [tuiTreeNode]=\"value\"\n>\n    <ng-container *ngIf=\"$any(value) !== children\">\n        <ng-container *polymorpheusOutlet=\"content as text; context: {$implicit: value, node: view}\">\n            {{ text }}\n        </ng-container>\n    </ng-container>\n    <tui-tree\n        *ngFor=\"let child of children\"\n        [value]=\"child\"\n        [content]=\"content\"\n    ></tui-tree>\n</tui-tree-item>\n", styles: [":host{position:relative;display:block}\n"], components: [{ type: TuiTreeItemComponent, selector: "tui-tree-item" }, { type: TuiTreeComponent, selector: "tui-tree[value]", inputs: ["value", "content"] }], directives: [{ type: i2__namespace$1.TuiLetDirective, selector: "[tuiLet]", inputs: ["tuiLet"] }, { type: TuiTreeNodeDirective, selector: "tui-tree-item[tuiTreeNode]", inputs: ["tuiTreeNode"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-tree[value]',
                        templateUrl: './tree.template.html',
                        styleUrls: ['./tree.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            {
                                provide: TUI_TREE_NODE,
                                useExisting: TuiTreeComponent,
                            },
                        ],
                        host: {
                            role: 'tree',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiTreeChildrenDirective, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [TuiTreeChildrenDirective]
                        }] }];
        }, propDecorators: { value: [{
                    type: i0.Input
                }], item: [{
                    type: i0.ViewChild,
                    args: [TuiTreeItemComponent]
                }], child: [{
                    type: i0.ViewChild,
                    args: [TuiTreeComponent]
                }], content: [{
                    type: i0.Input
                }] } });

    var TuiTreeControllerDirective = /** @class */ (function () {
        function TuiTreeControllerDirective() {
            this.fallback = true;
            this.map = new Map();
            this.toggled = new i0.EventEmitter();
            this.items = new Map();
        }
        TuiTreeControllerDirective.prototype.register = function (item, value) {
            this.items.set(item, value);
        };
        TuiTreeControllerDirective.prototype.unregister = function (item) {
            this.items.delete(item);
        };
        TuiTreeControllerDirective.prototype.isExpanded = function (item) {
            var _a;
            var value = this.items.get(item);
            return (_a = (value && this.map.get(value))) !== null && _a !== void 0 ? _a : this.fallback;
        };
        TuiTreeControllerDirective.prototype.toggle = function (item) {
            var value = this.items.get(item);
            var expanded = this.isExpanded(item);
            if (!i2.tuiIsPresent(value)) {
                return;
            }
            this.toggled.emit(value);
            this.map.set(value, !expanded);
        };
        return TuiTreeControllerDirective;
    }());
    TuiTreeControllerDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeControllerDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiTreeControllerDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTreeControllerDirective, selector: "[tuiTreeController][map]", inputs: { fallback: ["tuiTreeController", "fallback"], map: "map" }, outputs: { toggled: "toggled" }, providers: [
            {
                provide: TUI_TREE_ACCESSOR,
                useExisting: TuiTreeControllerDirective,
            },
            {
                provide: TUI_TREE_CONTROLLER,
                useExisting: TuiTreeControllerDirective,
            },
        ], exportAs: ["tuiTreeController"], ngImport: i0__namespace });
    __decorate([
        i2.tuiDefaultProp()
    ], TuiTreeControllerDirective.prototype, "fallback", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiTreeControllerDirective.prototype, "map", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeControllerDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiTreeController][map]',
                        exportAs: 'tuiTreeController',
                        providers: [
                            {
                                provide: TUI_TREE_ACCESSOR,
                                useExisting: TuiTreeControllerDirective,
                            },
                            {
                                provide: TUI_TREE_CONTROLLER,
                                useExisting: TuiTreeControllerDirective,
                            },
                        ],
                    }]
            }], propDecorators: { fallback: [{
                    type: i0.Input,
                    args: ['tuiTreeController']
                }], map: [{
                    type: i0.Input
                }], toggled: [{
                    type: i0.Output
                }] } });

    var TuiTreeItemControllerDirective = /** @class */ (function () {
        function TuiTreeItemControllerDirective() {
            this.map = new WeakMap();
            this.fallback = true;
        }
        TuiTreeItemControllerDirective.prototype.isExpanded = function (item) {
            var _a;
            return (_a = this.map.get(item)) !== null && _a !== void 0 ? _a : this.fallback;
        };
        TuiTreeItemControllerDirective.prototype.toggle = function (item) {
            this.map.set(item, !this.isExpanded(item));
        };
        return TuiTreeItemControllerDirective;
    }());
    TuiTreeItemControllerDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeItemControllerDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiTreeItemControllerDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTreeItemControllerDirective, selector: "[tuiTreeController]:not([map])", inputs: { fallback: ["tuiTreeController", "fallback"] }, providers: [
            {
                provide: TUI_TREE_CONTROLLER,
                useExisting: TuiTreeItemControllerDirective,
            },
        ], exportAs: ["tuiTreeController"], ngImport: i0__namespace });
    __decorate([
        i2.tuiDefaultProp()
    ], TuiTreeItemControllerDirective.prototype, "fallback", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeItemControllerDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiTreeController]:not([map])',
                        exportAs: 'tuiTreeController',
                        providers: [
                            {
                                provide: TUI_TREE_CONTROLLER,
                                useExisting: TuiTreeItemControllerDirective,
                            },
                        ],
                    }]
            }], propDecorators: { fallback: [{
                    type: i0.Input,
                    args: ['tuiTreeController']
                }] } });

    var TuiTreeService = /** @class */ (function () {
        function TuiTreeService(loading, start, loader) {
            var _this = this;
            this.loading = loading;
            this.start = start;
            this.loader = loader;
            this.map = new Map([[this.loading, []]]);
            this.load$ = new rxjs.Subject();
            this.data$ = this.load$.pipe(operators.switchMap(function (item) { return _this.loader.loadChildren(item).pipe(operators.tap(function (children) { return _this.map.set(item, children); }), operators.map(function (children) { return children.filter(function (item) { return !_this.loader.hasChildren(item); }); }), operators.tap(function (children) { return children.forEach(function (child) { return _this.map.set(child, []); }); })); }), operators.startWith(null), operators.map(function () { return _this.start; }));
        }
        TuiTreeService.prototype.getChildren = function (item) {
            return this.map.get(item) || [this.loading];
        };
        TuiTreeService.prototype.loadChildren = function (item) {
            if (this.map.get(item)) {
                return;
            }
            this.map.set(item, [this.loading]);
            this.load$.next(item);
        };
        return TuiTreeService;
    }());
    TuiTreeService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeService, deps: [{ token: TUI_TREE_LOADING }, { token: TUI_TREE_START }, { token: TUI_TREE_LOADER }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiTreeService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TREE_LOADING]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TREE_START]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TREE_LOADER]
                        }] }];
        } });

    var TuiTreeModule = /** @class */ (function () {
        function TuiTreeModule() {
        }
        return TuiTreeModule;
    }());
    TuiTreeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiTreeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeModule, declarations: [TuiTreeComponent,
            TuiTreeItemComponent,
            TuiTreeItemContentComponent,
            TuiTreeChildrenDirective,
            TuiTreeItemControllerDirective,
            TuiTreeControllerDirective,
            TuiTreeNodeDirective], imports: [i4.CommonModule,
            i2$1.PolymorpheusModule,
            i1.TuiExpandModule,
            i2.TuiLetModule,
            i1.TuiButtonModule], exports: [TuiTreeComponent,
            TuiTreeItemComponent,
            TuiTreeChildrenDirective,
            TuiTreeItemControllerDirective,
            TuiTreeControllerDirective] });
    TuiTreeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeModule, imports: [[
                i4.CommonModule,
                i2$1.PolymorpheusModule,
                i1.TuiExpandModule,
                i2.TuiLetModule,
                i1.TuiButtonModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTreeModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i2$1.PolymorpheusModule,
                            i1.TuiExpandModule,
                            i2.TuiLetModule,
                            i1.TuiButtonModule,
                        ],
                        declarations: [
                            TuiTreeComponent,
                            TuiTreeItemComponent,
                            TuiTreeItemContentComponent,
                            TuiTreeChildrenDirective,
                            TuiTreeItemControllerDirective,
                            TuiTreeControllerDirective,
                            TuiTreeNodeDirective,
                        ],
                        exports: [
                            TuiTreeComponent,
                            TuiTreeItemComponent,
                            TuiTreeChildrenDirective,
                            TuiTreeItemControllerDirective,
                            TuiTreeControllerDirective,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_DEFAULT_TREE_CONTROLLER = TUI_DEFAULT_TREE_CONTROLLER;
    exports.TUI_TREE_ACCESSOR = TUI_TREE_ACCESSOR;
    exports.TUI_TREE_CONTENT = TUI_TREE_CONTENT;
    exports.TUI_TREE_CONTROLLER = TUI_TREE_CONTROLLER;
    exports.TUI_TREE_ITEM_CONTENT = TUI_TREE_ITEM_CONTENT;
    exports.TUI_TREE_ITEM_PROVIDERS = TUI_TREE_ITEM_PROVIDERS;
    exports.TUI_TREE_LEVEL = TUI_TREE_LEVEL;
    exports.TUI_TREE_LOADER = TUI_TREE_LOADER;
    exports.TUI_TREE_LOADING = TUI_TREE_LOADING;
    exports.TUI_TREE_NODE = TUI_TREE_NODE;
    exports.TUI_TREE_START = TUI_TREE_START;
    exports.TuiTreeChildrenDirective = TuiTreeChildrenDirective;
    exports.TuiTreeComponent = TuiTreeComponent;
    exports.TuiTreeControllerDirective = TuiTreeControllerDirective;
    exports.TuiTreeItemComponent = TuiTreeItemComponent;
    exports.TuiTreeItemContentComponent = TuiTreeItemContentComponent;
    exports.TuiTreeItemControllerDirective = TuiTreeItemControllerDirective;
    exports.TuiTreeModule = TuiTreeModule;
    exports.TuiTreeNodeDirective = TuiTreeNodeDirective;
    exports.TuiTreeService = TuiTreeService;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-components-tree.umd.js.map
