(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/kit/utils'), require('@angular/forms'), require('@taiga-ui/core'), require('@taiga-ui/kit/classes'), require('@taiga-ui/kit/components/arrow'), require('@taiga-ui/kit/components/input-tag'), require('@taiga-ui/kit/providers'), require('@taiga-ui/kit/tokens'), require('@taiga-ui/kit/abstract'), require('@angular/common'), require('@tinkoff/ng-polymorpheus'), require('@taiga-ui/kit/components/data-list-wrapper'), require('@taiga-ui/kit/components/multi-select-option'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/multi-select', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/kit/utils', '@angular/forms', '@taiga-ui/core', '@taiga-ui/kit/classes', '@taiga-ui/kit/components/arrow', '@taiga-ui/kit/components/input-tag', '@taiga-ui/kit/providers', '@taiga-ui/kit/tokens', '@taiga-ui/kit/abstract', '@angular/common', '@tinkoff/ng-polymorpheus', '@taiga-ui/kit/components/data-list-wrapper', '@taiga-ui/kit/components/multi-select-option', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.components = global["taiga-ui"].kit.components || {}, global["taiga-ui"].kit.components["multi-select"] = {}), global.ng.core, global.i3, global["taiga-ui"].kit.utils, global.ng.forms, global.i1, global["taiga-ui"].kit.classes, global["taiga-ui"].kit.components.arrow, global["taiga-ui"].kit.components["input-tag"], global["taiga-ui"].kit.providers, global["taiga-ui"].kit.tokens, global["taiga-ui"].kit.abstract, global.ng.common, global.i6, global["taiga-ui"].kit.components["data-list-wrapper"], global["taiga-ui"].kit.components["multi-select-option"], global.rxjs, global.rxjs.operators));
})(this, (function (exports, i0, i3, utils, i4, i1, classes, arrow, i2, providers, tokens, abstract, i2$1, i6, i1$1, multiSelectOption, rxjs, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var TUI_MULTI_SELECT_DEFAULT_OPTIONS = {
        expandable: true,
        valueContent: "",
    };
    /**
     * Default parameters for MultiSelect component
     */
    var TUI_MULTI_SELECT_OPTIONS = new i0.InjectionToken("[TUI_MULTI_SELECT_OPTIONS]", {
        factory: function () { return TUI_MULTI_SELECT_DEFAULT_OPTIONS; },
    });
    var tuiMultiSelectOptionsProvider = function (options) { return ({
        provide: TUI_MULTI_SELECT_OPTIONS,
        useValue: Object.assign(Object.assign({}, TUI_MULTI_SELECT_DEFAULT_OPTIONS), options),
    }); };

    var AbstractTuiNativeMultiSelect = /** @class */ (function (_super) {
        __extends(AbstractTuiNativeMultiSelect, _super);
        function AbstractTuiNativeMultiSelect() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.selectedMapper = function (option, value) { return value.includes(option); };
            return _this;
        }
        AbstractTuiNativeMultiSelect.prototype.onValueChange = function () {
            this.host.onSelectionChange(Array.from(this.el.nativeElement.selectedOptions).map(function (option) { return option.value; }));
        };
        return AbstractTuiNativeMultiSelect;
    }(abstract.AbstractTuiNativeSelect));
    AbstractTuiNativeMultiSelect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: AbstractTuiNativeMultiSelect, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    AbstractTuiNativeMultiSelect.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: AbstractTuiNativeMultiSelect, usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: AbstractTuiNativeMultiSelect, decorators: [{
                type: i0.Directive
            }] });

    var TuiMultiSelectComponent = /** @class */ (function (_super) {
        __extends(TuiMultiSelectComponent, _super);
        function TuiMultiSelectComponent(control, cdr, arrowMode, itemsHandlers, options, controller, isMobile) {
            var _this = _super.call(this, control, cdr) || this;
            _this.arrowMode = arrowMode;
            _this.itemsHandlers = itemsHandlers;
            _this.options = options;
            _this.controller = controller;
            _this.isMobile = isMobile;
            _this.stringify = _this.itemsHandlers.stringify;
            _this.identityMatcher = _this.itemsHandlers.identityMatcher;
            _this.expandable = _this.options.expandable;
            _this.search = '';
            _this.placeholder = '';
            _this.editable = true;
            _this.disabledItemHandler = _this.itemsHandlers.disabledItemHandler;
            _this.valueContent = _this.options.valueContent;
            _this.tagValidator = i3.ALWAYS_TRUE_HANDLER;
            _this.rows = Infinity;
            _this.searchChange = new i0.EventEmitter();
            _this.open = false;
            _this.valueMapper = function (value, stringify, group) { return group
                ? i3.EMPTY_ARRAY
                : value.map(function (item) { return new classes.TuiStringifiableItem(item, stringify); }); };
            _this.disabledItemHandlerWrapper = function (handler) { return function (stringifiable) { return i3.tuiIsString(stringifiable) || handler(stringifiable.item); }; };
            return _this;
        }
        Object.defineProperty(TuiMultiSelectComponent.prototype, "size", {
            get: function () {
                return this.controller.size;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "arrow", {
            get: function () {
                return this.interactive ? this.arrowMode.interactive : this.arrowMode.disabled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "nativeFocusableElement", {
            get: function () {
                var _a, _b;
                return (_b = (_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) !== null && _b !== void 0 ? _b : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "focused", {
            get: function () {
                var _a, _b;
                return !!((_a = this.input) === null || _a === void 0 ? void 0 : _a.focused) || !!((_b = this.hostedDropdown) === null || _b === void 0 ? void 0 : _b.focused);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "nativeDropdownMode", {
            get: function () {
                return !!this.nativeSelect && this.isMobile && !this.editable;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "computedValue", {
            get: function () {
                return this.computedGroup ? i3.EMPTY_ARRAY : this.value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "searchOrSpace", {
            // @bad TODO: think of a better way
            get: function () {
                return this.computedGroup ? ' ' : this.searchString;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "searchString", {
            get: function () {
                return this.search === null ? '' : this.search;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "computedGroup", {
            get: function () {
                return (!!this.valueContent &&
                    this.value.length > 0 &&
                    (!this.focused || !this.editable));
            },
            enumerable: false,
            configurable: true
        });
        TuiMultiSelectComponent.prototype.getStringifier = function (stringify) {
            return function (_c) {
                var $implicit = _c.$implicit;
                return stringify($implicit);
            };
        };
        TuiMultiSelectComponent.prototype.onSpace = function (event) {
            var _a;
            if (!this.editable) {
                event.preventDefault();
            }
            if (!this.readOnly) {
                (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(true);
            }
        };
        TuiMultiSelectComponent.prototype.handleOption = function (option) {
            var _c = this, value = _c.value, identityMatcher = _c.identityMatcher;
            var index = value.findIndex(function (item) { return identityMatcher(item, option); });
            this.value =
                index === -1 ? __spreadArray(__spreadArray([], __read(value)), [option]) : value.filter(function (_, i) { return i !== index; });
            this.updateSearch(null);
        };
        TuiMultiSelectComponent.prototype.onEnter = function (event) {
            var value = this.value;
            var options = this.accessor ? this.accessor.getOptions() : [];
            if (options.length !== 1) {
                return;
            }
            event.preventDefault();
            this.value = i3.tuiArrayToggle(value, options[0]);
            this.updateSearch(null);
        };
        TuiMultiSelectComponent.prototype.onClick = function (_c) {
            var nativeFocusableElement = _c.nativeFocusableElement;
            var _a;
            if (this.interactive &&
                nativeFocusableElement &&
                i3.tuiIsNativeFocused(nativeFocusableElement)) {
                (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(!this.open);
            }
        };
        TuiMultiSelectComponent.prototype.onInput = function (value) {
            this.value = value.map(function (_c) {
                var item = _c.item;
                return item;
            });
        };
        TuiMultiSelectComponent.prototype.onValueChange = function (value) {
            this.value = value;
        };
        TuiMultiSelectComponent.prototype.onSearch = function (search) {
            var _a;
            (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(true);
            this.updateSearch(search);
        };
        TuiMultiSelectComponent.prototype.onActiveZone = function (active) {
            this.updateFocused(active);
        };
        TuiMultiSelectComponent.prototype.setDisabledState = function () {
            var _a;
            _super.prototype.setDisabledState.call(this);
            (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(false);
        };
        TuiMultiSelectComponent.prototype.updateSearch = function (search) {
            if (this.search === search) {
                return;
            }
            this.search = search;
            this.searchChange.emit(search);
        };
        return TuiMultiSelectComponent;
    }(i3.AbstractTuiMultipleControl));
    TuiMultiSelectComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectComponent, deps: [{ token: i4.NgControl, optional: true, self: true }, { token: i0.ChangeDetectorRef }, { token: arrow.TUI_ARROW_MODE }, { token: tokens.TUI_ITEMS_HANDLERS }, { token: TUI_MULTI_SELECT_OPTIONS }, { token: i1.TUI_TEXTFIELD_WATCHED_CONTROLLER }, { token: i3.TUI_IS_MOBILE }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiMultiSelectComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMultiSelectComponent, selector: "tui-multi-select", inputs: { stringify: "stringify", identityMatcher: "identityMatcher", expandable: "expandable", search: "search", placeholder: "placeholder", editable: "editable", disabledItemHandler: "disabledItemHandler", valueContent: "valueContent", tagValidator: "tagValidator", rows: "rows" }, outputs: { searchChange: "searchChange" }, host: { properties: { "class._editable": "this.editable", "attr.data-size": "this.size" } }, providers: [
            i3.tuiAsFocusableItemAccessor(TuiMultiSelectComponent),
            i3.tuiAsControl(TuiMultiSelectComponent),
            i1.tuiAsDataListHost(TuiMultiSelectComponent),
            i1.TEXTFIELD_CONTROLLER_PROVIDER,
        ], queries: [{ propertyName: "accessor", first: true, predicate: i1.TUI_DATA_LIST_ACCESSOR, descendants: true }, { propertyName: "nativeSelect", first: true, predicate: AbstractTuiNativeMultiSelect, descendants: true, static: true }, { propertyName: "datalist", first: true, predicate: i1.TuiDataListDirective, descendants: true, read: i0.TemplateRef }], viewQueries: [{ propertyName: "hostedDropdown", first: true, predicate: i1.TuiHostedDropdownComponent, descendants: true }, { propertyName: "input", first: true, predicate: i2.TuiInputTagComponent, descendants: true }], usesInheritance: true, ngImport: i0__namespace, template: "<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"interactive && !nativeDropdownMode\"\n    [content]=\"datalist || ''\"\n    [(open)]=\"open\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-input-tag\n        #inputTag\n        automation-id=\"tui-multi-select__input\"\n        class=\"t-input\"\n        [nativeId]=\"nativeId\"\n        [tuiTextfieldIcon]=\"arrow ? icon : ''\"\n        [disabled]=\"disabled\"\n        [disabledItemHandler]=\"disabledItemHandler | tuiMapper : disabledItemHandlerWrapper\"\n        [readOnly]=\"readOnly\"\n        [inputHidden]=\"!editable\"\n        [pseudoHover]=\"pseudoHover\"\n        [placeholder]=\"placeholder\"\n        [pseudoFocus]=\"computedFocused\"\n        [pseudoInvalid]=\"computedInvalid\"\n        [editable]=\"false\"\n        [expandable]=\"expandable\"\n        [removable]=\"!nativeDropdownMode\"\n        [search]=\"searchOrSpace\"\n        [tagValidator]=\"tagValidator | tuiMapper : disabledItemHandlerWrapper\"\n        [rows]=\"rows\"\n        [ngModel]=\"computedValue | tuiMapper : valueMapper : stringify\"\n        (ngModelChange)=\"onInput($event)\"\n        (searchChange)=\"onSearch($event)\"\n        (keydown.space)=\"onSpace($event)\"\n        (keydown.enter)=\"onEnter($event)\"\n        (click.prevent)=\"onClick(inputTag)\"\n    >\n        <ng-content></ng-content>\n        <ng-template #select>\n            <ng-content\n                *ngIf=\"isMobile\"\n                select=\"select\"\n            ></ng-content>\n        </ng-template>\n\n        <ng-container\n            *ngTemplateOutlet=\"select\"\n            ngProjectAs=\"select\"\n        ></ng-container>\n    </tui-input-tag>\n\n    <div\n        class=\"t-wrapper\"\n        [class.t-wrapper_disabled]=\"disabled\"\n    >\n        <div\n            *ngIf=\"computedGroup\"\n            class=\"t-group\"\n            [class.t-group_fullsize]=\"inputTag.labelOutside\"\n        >\n            <ng-container *polymorpheusOutlet=\"valueContent as text; context: {$implicit: value}\">\n                {{ text }}\n            </ng-container>\n        </div>\n\n        <ng-template #icon>\n            <div\n                tuiWrapper\n                appearance=\"icon\"\n                automation-id=\"tui-multi-select__arrow\"\n                tuiPreventDefault=\"mousedown\"\n                class=\"t-arrow\"\n                [class.t-arrow_native-dropdown]=\"nativeDropdownMode\"\n            >\n                <ng-container *polymorpheusOutlet=\"arrow as text\">\n                    {{ text }}\n                </ng-container>\n            </div>\n        </ng-template>\n    </div>\n</tui-hosted-dropdown>\n", styles: [":host{position:relative;display:block;border-radius:var(--tui-radius-m)}:host._disabled{pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-input{border-radius:inherit}:host:not(._editable):not(._readonly) .t-input{cursor:pointer}.t-wrapper{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;pointer-events:none;justify-content:flex-end}.t-wrapper_disabled{opacity:var(--tui-disabled-opacity)}:host[data-size=s] .t-wrapper{height:var(--tui-height-s)}:host[data-size=m] .t-wrapper{height:var(--tui-height-m)}:host[data-size=l] .t-wrapper{height:var(--tui-height-l)}.t-group{display:flex;flex:1;align-items:center;padding:1.6875rem 0 .5625rem 1rem;overflow:hidden}.t-group_fullsize{padding-top:.0625rem;padding-bottom:0}:host[data-size=m] .t-group_fullsize.t-group_fullsize{padding-top:0}:host[data-size=m] .t-group{padding:1.1875rem 0 0 .75rem;font-size:.8125rem}.t-arrow{pointer-events:auto;cursor:pointer}.t-arrow_native-dropdown{pointer-events:none}\n"], components: [{ type: i1__namespace.TuiHostedDropdownComponent, selector: "tui-hosted-dropdown", inputs: ["content", "sided", "canOpen", "open"], outputs: ["openChange", "focusedChange"] }, { type: i2__namespace.TuiInputTagComponent, selector: "tui-input-tag", inputs: ["separator", "search", "editable", "tagValidator", "expandable", "rows", "inputHidden", "uniqueTags", "maxLength", "placeholder", "removable", "disabledItemHandler", "pseudoFocused"], outputs: ["searchChange"] }], directives: [{ type: i3__namespace.TuiActiveZoneDirective, selector: "[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)", inputs: ["tuiActiveZoneParent"], outputs: ["tuiActiveZoneChange"], exportAs: ["tuiActiveZone"] }, { type: i1__namespace.TuiTextfieldIconDirective, selector: "[tuiTextfieldIcon]", inputs: ["tuiTextfieldIcon"] }, { type: i4__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4__namespace.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace$1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i6__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i1__namespace.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i3__namespace.TuiPreventDefaultDirective, selector: "[tuiPreventDefault]", inputs: ["tuiPreventDefault"] }], pipes: { "tuiMapper": i3__namespace.TuiMapperPipe }, viewProviders: [providers.FIXED_DROPDOWN_CONTROLLER_PROVIDER], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "stringify", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "identityMatcher", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "expandable", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "search", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "placeholder", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "editable", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "disabledItemHandler", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "valueContent", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectComponent.prototype, "tagValidator", void 0);
    __decorate([
        i3.tuiPure
    ], TuiMultiSelectComponent.prototype, "getStringifier", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-multi-select',
                        templateUrl: './multi-select.template.html',
                        styleUrls: ['./multi-select.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            i3.tuiAsFocusableItemAccessor(TuiMultiSelectComponent),
                            i3.tuiAsControl(TuiMultiSelectComponent),
                            i1.tuiAsDataListHost(TuiMultiSelectComponent),
                            i1.TEXTFIELD_CONTROLLER_PROVIDER,
                        ],
                        viewProviders: [providers.FIXED_DROPDOWN_CONTROLLER_PROVIDER],
                    }]
            }], ctorParameters: function () {
            return [{ type: i4__namespace.NgControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i4.NgControl]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [arrow.TUI_ARROW_MODE]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_ITEMS_HANDLERS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_MULTI_SELECT_OPTIONS]
                        }] }, { type: i1__namespace.TuiTextfieldController, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_TEXTFIELD_WATCHED_CONTROLLER]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i3.TUI_IS_MOBILE]
                        }] }];
        }, propDecorators: { accessor: [{
                    type: i0.ContentChild,
                    args: [i1.TUI_DATA_LIST_ACCESSOR]
                }], nativeSelect: [{
                    type: i0.ContentChild,
                    args: [AbstractTuiNativeMultiSelect, { static: true }]
                }], hostedDropdown: [{
                    type: i0.ViewChild,
                    args: [i1.TuiHostedDropdownComponent]
                }], input: [{
                    type: i0.ViewChild,
                    args: [i2.TuiInputTagComponent]
                }], stringify: [{
                    type: i0.Input
                }], identityMatcher: [{
                    type: i0.Input
                }], expandable: [{
                    type: i0.Input
                }], search: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], editable: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class._editable']
                }], disabledItemHandler: [{
                    type: i0.Input
                }], valueContent: [{
                    type: i0.Input
                }], tagValidator: [{
                    type: i0.Input
                }], rows: [{
                    type: i0.Input
                }], searchChange: [{
                    type: i0.Output
                }], datalist: [{
                    type: i0.ContentChild,
                    args: [i1.TuiDataListDirective, { read: i0.TemplateRef }]
                }], size: [{
                    type: i0.HostBinding,
                    args: ['attr.data-size']
                }], getStringifier: [] } });

    var TuiHideSelectedPipe = /** @class */ (function () {
        function TuiHideSelectedPipe(component) {
            this.component = component;
        }
        TuiHideSelectedPipe.prototype.transform = function (items) {
            var _a = this.component, value = _a.value, identityMatcher = _a.identityMatcher;
            if (!items) {
                return null;
            }
            return utils.tuiIsFlat(items)
                ? this.filter(items, value, identityMatcher)
                : this.filter2d(items, value, identityMatcher);
        };
        TuiHideSelectedPipe.prototype.filter2d = function (items, value, matcher) {
            var _this = this;
            return items.map(function (subItems) { return _this.filter(subItems, value, matcher); });
        };
        TuiHideSelectedPipe.prototype.filter = function (items, value, matcher) {
            return items.filter(function (item) { return value.every(function (selected) { return !matcher(selected, item); }); });
        };
        return TuiHideSelectedPipe;
    }());
    TuiHideSelectedPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHideSelectedPipe, deps: [{ token: TuiMultiSelectComponent }], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiHideSelectedPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHideSelectedPipe, name: "tuiHideSelected", pure: false });
    __decorate([
        i3.tuiPure
    ], TuiHideSelectedPipe.prototype, "filter2d", null);
    __decorate([
        i3.tuiPure
    ], TuiHideSelectedPipe.prototype, "filter", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHideSelectedPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: "tuiHideSelected",
                        pure: false,
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiMultiSelectComponent, decorators: [{
                            type: i0.Inject,
                            args: [TuiMultiSelectComponent]
                        }] }];
        }, propDecorators: { filter2d: [], filter: [] } });

    var TuiMultiSelectDirective = /** @class */ (function (_super) {
        __extends(TuiMultiSelectDirective, _super);
        function TuiMultiSelectDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.disableItemHandler = function (item) { return _this.host.disabledItemHandler(item); };
            return _this;
        }
        Object.defineProperty(TuiMultiSelectDirective.prototype, "readOnly", {
            get: function () {
                return true;
            },
            enumerable: false,
            configurable: true
        });
        TuiMultiSelectDirective.prototype.onValueChange = function () { };
        TuiMultiSelectDirective.prototype.onSelectionChange = function (value) {
            this.host.onValueChange(value);
        };
        return TuiMultiSelectDirective;
    }(i1.AbstractTuiTextfieldHost));
    TuiMultiSelectDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiMultiSelectDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiMultiSelectDirective, selector: "tui-multi-select", providers: [i1.tuiAsTextfieldHost(TuiMultiSelectDirective)], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'tui-multi-select',
                        providers: [i1.tuiAsTextfieldHost(TuiMultiSelectDirective)],
                    }]
            }] });

    var TuiMultiSelectGroupComponent = /** @class */ (function () {
        function TuiMultiSelectGroupComponent(multiSelectTexts$, host, control) {
            this.multiSelectTexts$ = multiSelectTexts$;
            this.host = host;
            this.control = control;
            this.options = i3.EMPTY_QUERY;
            this.label = '';
        }
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "size", {
            get: function () {
                var _a;
                return ((_a = this.options.first) === null || _a === void 0 ? void 0 : _a.size) || 'm';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "empty$", {
            get: function () {
                return i3.tuiQueryListChanges(this.options).pipe(operators.map(function (_b) {
                    var length = _b.length;
                    return !length;
                }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "disabled$", {
            get: function () {
                return i3.tuiQueryListChanges(this.options).pipe(operators.map(function (items) { return items.every(function (_b) {
                    var disabled = _b.disabled;
                    return disabled;
                }); }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "value$", {
            get: function () {
                var _this = this;
                return rxjs.combineLatest([this.items$, this.valueChanges$]).pipe(operators.map(function (_b) {
                    var _c = __read(_b, 2), items = _c[0], current = _c[1];
                    var result = false;
                    var _loop_1 = function (i) {
                        var selected = current.some(function (selected) { return _this.matcher(selected, items[i]); });
                        if ((!selected && result) || (selected && !result && i)) {
                            return { value: null };
                        }
                        result = selected;
                    };
                    for (var i = 0; i < items.length; i++) {
                        var state_1 = _loop_1(i);
                        if (typeof state_1 === "object")
                            return state_1.value;
                    }
                    return result;
                }));
            },
            enumerable: false,
            configurable: true
        });
        TuiMultiSelectGroupComponent.prototype.onClick = function (checked) {
            var _this = this;
            if (!this.control.control) {
                return;
            }
            var controlValue = this.control.value || [];
            var values = this.values;
            var filtered = controlValue.filter(function (current) { return values.every(function (item) { return !_this.matcher(current, item); }); });
            this.control.control.setValue(checked ? filtered : __spreadArray(__spreadArray([], __read(filtered)), __read(values)));
        };
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "values", {
            get: function () {
                return this.filter(i3.tuiGetOriginalArrayFromQueryList(this.options));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "matcher", {
            get: function () {
                return this.host.identityMatcher || i3.TUI_DEFAULT_IDENTITY_MATCHER;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "items$", {
            get: function () {
                return i3.tuiQueryListChanges(this.options).pipe(operators.map(function (options) { return options.map(function (_b) {
                    var value = _b.value;
                    return value;
                }).filter(i3.tuiIsPresent); }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "valueChanges$", {
            get: function () {
                return i3.tuiControlValue(this.control).pipe(operators.map(function (value) { return value || []; }));
            },
            enumerable: false,
            configurable: true
        });
        TuiMultiSelectGroupComponent.prototype.filter = function (items) {
            return items.map(function (_b) {
                var value = _b.value;
                return value;
            }).filter(i3.tuiIsPresent);
        };
        return TuiMultiSelectGroupComponent;
    }());
    TuiMultiSelectGroupComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectGroupComponent, deps: [{ token: tokens.TUI_MULTI_SELECT_TEXTS }, { token: i1.TUI_DATA_LIST_HOST }, { token: i4.NgControl }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiMultiSelectGroupComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMultiSelectGroupComponent, selector: "tui-opt-group[tuiMultiSelectGroup]", inputs: { label: "label" }, queries: [{ propertyName: "options", predicate: i1.TuiOptionComponent }], ngImport: i0__namespace, template: "<span\n    *tuiLet=\"value$ | async as value\"\n    class=\"t-wrapper\"\n>\n    <span class=\"t-label\">{{ label }}</span>\n    <button\n        *ngIf=\"label && !(empty$ | async)\"\n        tuiLink\n        type=\"button\"\n        class=\"t-button\"\n        [disabled]=\"!!(disabled$ | async)\"\n        (click)=\"onClick(value)\"\n    >\n        {{ (multiSelectTexts$ | async)?.[value ? 'none' : 'all'] }}\n    </button>\n</span>\n<ng-content></ng-content>\n", styles: [":host:before{display:none}.t-wrapper{display:flex;align-items:flex-start}.t-label:not(:empty){flex:1;padding:.75rem 1rem .25rem}.t-button{margin:.75rem 1rem 0 auto}\n"], components: [{ type: i1__namespace.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }], directives: [{ type: i3__namespace.TuiLetDirective, selector: "[tuiLet]", inputs: ["tuiLet"] }, { type: i2__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i2__namespace$1.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i3.tuiDefaultProp()
    ], TuiMultiSelectGroupComponent.prototype, "label", void 0);
    __decorate([
        i3.tuiPure
    ], TuiMultiSelectGroupComponent.prototype, "empty$", null);
    __decorate([
        i3.tuiPure
    ], TuiMultiSelectGroupComponent.prototype, "disabled$", null);
    __decorate([
        i3.tuiPure
    ], TuiMultiSelectGroupComponent.prototype, "value$", null);
    __decorate([
        i3.tuiPure
    ], TuiMultiSelectGroupComponent.prototype, "items$", null);
    __decorate([
        i3.tuiPure
    ], TuiMultiSelectGroupComponent.prototype, "valueChanges$", null);
    __decorate([
        i3.tuiPure
    ], TuiMultiSelectGroupComponent.prototype, "filter", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectGroupComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-opt-group[tuiMultiSelectGroup]',
                        templateUrl: './multi-select-group.template.html',
                        styleUrls: ['./multi-select-group.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_MULTI_SELECT_TEXTS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_DATA_LIST_HOST]
                        }] }, { type: i4__namespace.NgControl, decorators: [{
                            type: i0.Inject,
                            args: [i4.NgControl]
                        }] }];
        }, propDecorators: { options: [{
                    type: i0.ContentChildren,
                    args: [i1.TuiOptionComponent]
                }], label: [{
                    type: i0.Input
                }], empty$: [], disabled$: [], value$: [], items$: [], valueChanges$: [], filter: [] } });

    var TUI_MULTI_SELECT_OPTION = new i6.PolymorpheusComponent(multiSelectOption.TuiMultiSelectOptionComponent);
    var TuiMultiSelectGroupDirective = /** @class */ (function () {
        function TuiMultiSelectGroupDirective() {
        }
        return TuiMultiSelectGroupDirective;
    }());
    TuiMultiSelectGroupDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectGroupDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiMultiSelectGroupDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiMultiSelectGroupDirective, selector: "[tuiMultiSelectGroup]", providers: [
            i1.tuiAsOptionContent(TUI_MULTI_SELECT_OPTION),
            {
                provide: i1.TUI_DATA_LIST_HOST,
                deps: [
                    i4.NgControl,
                    [new i0.Optional(), i0.forwardRef(function () { return TuiMultiSelectComponent; })],
                ],
                useFactory: function (control, host) { return host || {
                    handleOption: function (option) {
                        var _a;
                        return (_a = control.control) === null || _a === void 0 ? void 0 : _a.setValue(i3.tuiArrayToggle(control.value || [], option));
                    },
                }; },
            },
            {
                provide: i4.NG_VALUE_ACCESSOR,
                multi: true,
                useValue: {
                    writeValue: i3.EMPTY_FUNCTION,
                    registerOnChange: i3.EMPTY_FUNCTION,
                    registerOnTouched: i3.EMPTY_FUNCTION,
                },
            },
        ], ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectGroupDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiMultiSelectGroup]',
                        providers: [
                            i1.tuiAsOptionContent(TUI_MULTI_SELECT_OPTION),
                            {
                                provide: i1.TUI_DATA_LIST_HOST,
                                deps: [
                                    i4.NgControl,
                                    [new i0.Optional(), i0.forwardRef(function () { return TuiMultiSelectComponent; })],
                                ],
                                useFactory: function (control, host) { return host || {
                                    handleOption: function (option) {
                                        var _a;
                                        return (_a = control.control) === null || _a === void 0 ? void 0 : _a.setValue(i3.tuiArrayToggle(control.value || [], option));
                                    },
                                }; },
                            },
                            {
                                provide: i4.NG_VALUE_ACCESSOR,
                                multi: true,
                                useValue: {
                                    writeValue: i3.EMPTY_FUNCTION,
                                    registerOnChange: i3.EMPTY_FUNCTION,
                                    registerOnTouched: i3.EMPTY_FUNCTION,
                                },
                            },
                        ],
                    }]
            }] });

    var TuiNativeMultiSelectComponent = /** @class */ (function (_super) {
        __extends(TuiNativeMultiSelectComponent, _super);
        function TuiNativeMultiSelectComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.items = [];
            return _this;
        }
        return TuiNativeMultiSelectComponent;
    }(AbstractTuiNativeMultiSelect));
    TuiNativeMultiSelectComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNativeMultiSelectComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiNativeMultiSelectComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNativeMultiSelectComponent, selector: "select[multiple][tuiSelect]:not([labels])", inputs: { items: "items" }, host: { listeners: { "change": "onValueChange()", "click.stop.silent": "0", "mousedown.stop.silent": "0" }, properties: { "attr.aria-invalid": "host.invalid", "disabled": "host.disabled || control.readOnly", "tabIndex": "host.focusable ? 0 : -1" } }, providers: [
            i1.tuiAsDataList(TuiNativeMultiSelectComponent),
            {
                provide: i0.TemplateRef,
                deps: [TuiNativeMultiSelectComponent],
                useFactory: function (_a) {
                    var datalist = _a.datalist;
                    return datalist;
                },
            },
            {
                provide: AbstractTuiNativeMultiSelect,
                useExisting: TuiNativeMultiSelectComponent,
            },
        ], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"control.control?.valueChanges | async\"></ng-container>\n\n<tui-data-list-wrapper\n    *tuiDataList\n    tuiMultiSelectGroup\n    [items]=\"items\"\n    [disabledItemHandler]=\"disabledItemHandler || host.disableItemHandler\"\n></tui-data-list-wrapper>\n<option\n    *ngFor=\"let option of items\"\n    [selected]=\"option | tuiMapper : selectedMapper : host.value\"\n    [value]=\"option\"\n    [disabled]=\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\"\n>\n    {{ option }}\n</option>\n", styles: [":host{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0}\n"], components: [{ type: i1__namespace$1.TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels])", inputs: ["items"] }], directives: [{ type: i2__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: TuiMultiSelectGroupDirective, selector: "[tuiMultiSelectGroup]" }, { type: i2__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4__namespace.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i4__namespace.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }], pipes: { "async": i2__namespace$1.AsyncPipe, "tuiMapper": i3__namespace.TuiMapperPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNativeMultiSelectComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'select[multiple][tuiSelect]:not([labels])',
                        templateUrl: './native-multi-select.template.html',
                        providers: [
                            i1.tuiAsDataList(TuiNativeMultiSelectComponent),
                            {
                                provide: i0.TemplateRef,
                                deps: [TuiNativeMultiSelectComponent],
                                useFactory: function (_a) {
                                    var datalist = _a.datalist;
                                    return datalist;
                                },
                            },
                            {
                                provide: AbstractTuiNativeMultiSelect,
                                useExisting: TuiNativeMultiSelectComponent,
                            },
                        ],
                        host: {
                            '[attr.aria-invalid]': 'host.invalid',
                            '[disabled]': 'host.disabled || control.readOnly',
                            '[tabIndex]': 'host.focusable ? 0 : -1',
                            '(change)': 'onValueChange()',
                            '(click.stop.silent)': '0',
                            '(mousedown.stop.silent)': '0',
                        },
                        styleUrls: ['./native-multi-select.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { items: [{
                    type: i0.Input
                }] } });

    var TuiNativeMultiSelectGroupComponent = /** @class */ (function (_super) {
        __extends(TuiNativeMultiSelectGroupComponent, _super);
        function TuiNativeMultiSelectGroupComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.items = [];
            _this.labels = [];
            return _this;
        }
        return TuiNativeMultiSelectGroupComponent;
    }(AbstractTuiNativeMultiSelect));
    TuiNativeMultiSelectGroupComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNativeMultiSelectGroupComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiNativeMultiSelectGroupComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNativeMultiSelectGroupComponent, selector: "select[multiple][tuiSelect][labels]", inputs: { items: "items", labels: "labels" }, host: { listeners: { "change": "onValueChange()", "click.stop.silent": "0", "mousedown.stop.silent": "0" }, properties: { "attr.aria-invalid": "host.invalid", "disabled": "host.disabled || control.readOnly", "tabIndex": "host.focusable ? 0 : -1" } }, providers: [
            i1.tuiAsDataList(TuiNativeMultiSelectGroupComponent),
            {
                provide: i0.TemplateRef,
                deps: [TuiNativeMultiSelectGroupComponent],
                useFactory: function (_a) {
                    var datalist = _a.datalist;
                    return datalist;
                },
            },
            {
                provide: AbstractTuiNativeMultiSelect,
                useExisting: TuiNativeMultiSelectGroupComponent,
            },
        ], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"control.control?.valueChanges | async\"></ng-container>\n\n<tui-data-list-wrapper\n    *tuiDataList\n    tuiMultiSelectGroup\n    [items]=\"items\"\n    [labels]=\"labels\"\n    [disabledItemHandler]=\"disabledItemHandler || host.disableItemHandler\"\n></tui-data-list-wrapper>\n<optgroup\n    *ngFor=\"let group of items; let index = index\"\n    [label]=\"labels[index]\"\n>\n    <option\n        *ngFor=\"let option of group\"\n        [selected]=\"option | tuiMapper : selectedMapper : host.value\"\n        [value]=\"option\"\n        [disabled]=\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\"\n    >\n        {{ option }}\n    </option>\n</optgroup>\n", styles: [":host{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0}\n"], components: [{ type: i1__namespace$1.TuiDataListGroupWrapperComponent, selector: "tui-data-list-wrapper[labels]", inputs: ["items", "labels"] }], directives: [{ type: i2__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: TuiMultiSelectGroupDirective, selector: "[tuiMultiSelectGroup]" }, { type: i2__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4__namespace.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i4__namespace.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }], pipes: { "async": i2__namespace$1.AsyncPipe, "tuiMapper": i3__namespace.TuiMapperPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNativeMultiSelectGroupComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'select[multiple][tuiSelect][labels]',
                        templateUrl: './native-multi-select-group.template.html',
                        providers: [
                            i1.tuiAsDataList(TuiNativeMultiSelectGroupComponent),
                            {
                                provide: i0.TemplateRef,
                                deps: [TuiNativeMultiSelectGroupComponent],
                                useFactory: function (_a) {
                                    var datalist = _a.datalist;
                                    return datalist;
                                },
                            },
                            {
                                provide: AbstractTuiNativeMultiSelect,
                                useExisting: TuiNativeMultiSelectGroupComponent,
                            },
                        ],
                        host: {
                            '[attr.aria-invalid]': 'host.invalid',
                            '[disabled]': 'host.disabled || control.readOnly',
                            '[tabIndex]': 'host.focusable ? 0 : -1',
                            '(change)': 'onValueChange()',
                            '(click.stop.silent)': '0',
                            '(mousedown.stop.silent)': '0',
                        },
                        styleUrls: ['./native-multi-select.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { items: [{
                    type: i0.Input
                }], labels: [{
                    type: i0.Input
                }] } });

    var TuiMultiSelectModule = /** @class */ (function () {
        function TuiMultiSelectModule() {
        }
        return TuiMultiSelectModule;
    }());
    TuiMultiSelectModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiMultiSelectModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectModule, declarations: [TuiMultiSelectComponent,
            TuiMultiSelectGroupComponent,
            TuiMultiSelectGroupDirective,
            TuiHideSelectedPipe,
            TuiNativeMultiSelectComponent,
            TuiNativeMultiSelectGroupComponent,
            TuiMultiSelectDirective], imports: [i2$1.CommonModule,
            i4.FormsModule,
            i6.PolymorpheusModule,
            i1.TuiWrapperModule,
            i3.TuiPreventDefaultModule,
            i3.TuiActiveZoneModule,
            arrow.TuiArrowModule,
            i3.TuiLetModule,
            i3.TuiMapperPipeModule,
            i1.TuiSvgModule,
            i1.TuiHostedDropdownModule,
            i2.TuiInputTagModule,
            multiSelectOption.TuiMultiSelectOptionModule,
            i1$1.TuiDataListWrapperModule,
            i3.TuiMapperPipeModule,
            i1.TuiLinkModule,
            i1.TuiDataListModule,
            i1.TuiTextfieldControllerModule], exports: [TuiMultiSelectComponent,
            TuiMultiSelectGroupComponent,
            TuiMultiSelectGroupDirective,
            TuiHideSelectedPipe,
            TuiMultiSelectDirective,
            TuiNativeMultiSelectComponent,
            TuiNativeMultiSelectGroupComponent] });
    TuiMultiSelectModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectModule, imports: [[
                i2$1.CommonModule,
                i4.FormsModule,
                i6.PolymorpheusModule,
                i1.TuiWrapperModule,
                i3.TuiPreventDefaultModule,
                i3.TuiActiveZoneModule,
                arrow.TuiArrowModule,
                i3.TuiLetModule,
                i3.TuiMapperPipeModule,
                i1.TuiSvgModule,
                i1.TuiHostedDropdownModule,
                i2.TuiInputTagModule,
                multiSelectOption.TuiMultiSelectOptionModule,
                i1$1.TuiDataListWrapperModule,
                i3.TuiMapperPipeModule,
                i1.TuiLinkModule,
                i1.TuiDataListModule,
                i1.TuiTextfieldControllerModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMultiSelectModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i2$1.CommonModule,
                            i4.FormsModule,
                            i6.PolymorpheusModule,
                            i1.TuiWrapperModule,
                            i3.TuiPreventDefaultModule,
                            i3.TuiActiveZoneModule,
                            arrow.TuiArrowModule,
                            i3.TuiLetModule,
                            i3.TuiMapperPipeModule,
                            i1.TuiSvgModule,
                            i1.TuiHostedDropdownModule,
                            i2.TuiInputTagModule,
                            multiSelectOption.TuiMultiSelectOptionModule,
                            i1$1.TuiDataListWrapperModule,
                            i3.TuiMapperPipeModule,
                            i1.TuiLinkModule,
                            i1.TuiDataListModule,
                            i1.TuiTextfieldControllerModule,
                        ],
                        declarations: [
                            TuiMultiSelectComponent,
                            TuiMultiSelectGroupComponent,
                            TuiMultiSelectGroupDirective,
                            TuiHideSelectedPipe,
                            TuiNativeMultiSelectComponent,
                            TuiNativeMultiSelectGroupComponent,
                            TuiMultiSelectDirective,
                        ],
                        exports: [
                            TuiMultiSelectComponent,
                            TuiMultiSelectGroupComponent,
                            TuiMultiSelectGroupDirective,
                            TuiHideSelectedPipe,
                            TuiMultiSelectDirective,
                            TuiNativeMultiSelectComponent,
                            TuiNativeMultiSelectGroupComponent,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AbstractTuiNativeMultiSelect = AbstractTuiNativeMultiSelect;
    exports.TUI_MULTI_SELECT_DEFAULT_OPTIONS = TUI_MULTI_SELECT_DEFAULT_OPTIONS;
    exports.TUI_MULTI_SELECT_OPTION = TUI_MULTI_SELECT_OPTION;
    exports.TUI_MULTI_SELECT_OPTIONS = TUI_MULTI_SELECT_OPTIONS;
    exports.TuiHideSelectedPipe = TuiHideSelectedPipe;
    exports.TuiMultiSelectComponent = TuiMultiSelectComponent;
    exports.TuiMultiSelectDirective = TuiMultiSelectDirective;
    exports.TuiMultiSelectGroupComponent = TuiMultiSelectGroupComponent;
    exports.TuiMultiSelectGroupDirective = TuiMultiSelectGroupDirective;
    exports.TuiMultiSelectModule = TuiMultiSelectModule;
    exports.TuiNativeMultiSelectComponent = TuiNativeMultiSelectComponent;
    exports.TuiNativeMultiSelectGroupComponent = TuiNativeMultiSelectGroupComponent;
    exports.tuiMultiSelectOptionsProvider = tuiMultiSelectOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-components-multi-select.umd.js.map
