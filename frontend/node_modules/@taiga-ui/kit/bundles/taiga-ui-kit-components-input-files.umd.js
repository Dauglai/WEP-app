(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit/tokens'), require('@taiga-ui/kit/utils/files'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@tinkoff/ng-polymorpheus'), require('@taiga-ui/kit/utils'), require('@taiga-ui/kit/components/files')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/input-files', ['exports', '@angular/core', '@angular/forms', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit/tokens', '@taiga-ui/kit/utils/files', 'rxjs', 'rxjs/operators', '@angular/common', '@tinkoff/ng-polymorpheus', '@taiga-ui/kit/utils', '@taiga-ui/kit/components/files'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.components = global["taiga-ui"].kit.components || {}, global["taiga-ui"].kit.components["input-files"] = {}), global.ng.core, global.ng.forms, global.i2, global.i1, global["taiga-ui"].kit.tokens, global["taiga-ui"].kit.utils.files, global.rxjs, global.rxjs.operators, global.ng.common, global.i4, global["taiga-ui"].kit.utils, global["taiga-ui"].kit.components.files));
})(this, (function (exports, i0, i6, i2, i1, tokens, files, i7, operators, i3, i4, utils, files$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var TUI_INPUT_FILES_DEFAULT_OPTIONS = {
        capture: null,
        accepts: "",
        multiple: false,
        size: "m",
        maxFileSize: 30 * 1000 * 1000, // 30 MB
    };
    /**
     * Default parameters for input files component
     */
    var TUI_INPUT_FILES_OPTIONS = new i0.InjectionToken("[TUI_INPUT_FILES_OPTIONS]", {
        factory: function () { return TUI_INPUT_FILES_DEFAULT_OPTIONS; },
    });
    var tuiInputFilesOptionsProvider = function (options) { return ({
        provide: TUI_INPUT_FILES_OPTIONS,
        useValue: Object.assign(Object.assign({}, TUI_INPUT_FILES_DEFAULT_OPTIONS), options),
    }); };

    var TuiInputFilesDirective = /** @class */ (function () {
        function TuiInputFilesDirective(host, el, idService, options) {
            this.host = host;
            this.el = el;
            this.idService = idService;
            this.options = options;
        }
        Object.defineProperty(TuiInputFilesDirective.prototype, "tabIndex", {
            get: function () {
                return this.host.focusable ? 0 : -1;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesDirective.prototype, "id", {
            get: function () {
                return this.el.nativeElement.id || this.idService.generate();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesDirective.prototype, "accept", {
            get: function () {
                var _a;
                return (_a = this.el.nativeElement.accept) !== null && _a !== void 0 ? _a : this.options.accepts;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesDirective.prototype, "multiple", {
            get: function () {
                var _a;
                return (_a = this.el.nativeElement.multiple) !== null && _a !== void 0 ? _a : this.options.multiple;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesDirective.prototype, "capture", {
            get: function () {
                var _a;
                return (_a = this.el.nativeElement.getAttribute('capture')) !== null && _a !== void 0 ? _a : this.options.capture;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesDirective.prototype, "input", {
            get: function () {
                return this.el.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        return TuiInputFilesDirective;
    }());
    TuiInputFilesDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputFilesDirective, deps: [{ token: TuiInputFilesComponent }, { token: i0.ElementRef }, { token: i2.TuiIdService }, { token: TUI_INPUT_FILES_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiInputFilesDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputFilesDirective, selector: "input[tuiInputFiles]", host: { attributes: { "type": "file" }, properties: { "tabIndex": "this.tabIndex", "id": "this.id", "accept": "this.accept", "multiple": "this.multiple", "attr.capture": "this.capture" }, classAttribute: "t-native" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputFilesDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'input[tuiInputFiles]',
                        host: {
                            type: 'file',
                            class: 't-native',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiInputFilesComponent, decorators: [{
                            type: i0.Inject,
                            args: [TuiInputFilesComponent]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i2__namespace.TuiIdService, decorators: [{
                            type: i0.Inject,
                            args: [i2.TuiIdService]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_INPUT_FILES_OPTIONS]
                        }] }];
        }, propDecorators: { tabIndex: [{
                    type: i0.HostBinding,
                    args: ['tabIndex']
                }], id: [{
                    type: i0.HostBinding,
                    args: ['id']
                }], accept: [{
                    type: i0.HostBinding,
                    args: ['accept']
                }], multiple: [{
                    type: i0.HostBinding,
                    args: ['multiple']
                }], capture: [{
                    type: i0.HostBinding,
                    args: ['attr.capture']
                }] } });

    var TuiMaxSizeRejectionErrorPipe = /** @class */ (function () {
        function TuiMaxSizeRejectionErrorPipe(inputFileTexts$, units$) {
            this.inputFileTexts$ = inputFileTexts$;
            this.units$ = units$;
        }
        TuiMaxSizeRejectionErrorPipe.prototype.transform = function (maxFileSize) {
            return i7.combineLatest([this.inputFileTexts$, this.units$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), maxSizeRejectionReason = _b[0].maxSizeRejectionReason, units = _b[1];
                return "" + maxSizeRejectionReason + utils.tuiFormatSize(units, maxFileSize);
            }));
        };
        return TuiMaxSizeRejectionErrorPipe;
    }());
    TuiMaxSizeRejectionErrorPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMaxSizeRejectionErrorPipe, deps: [{ token: tokens.TUI_INPUT_FILE_TEXTS }, { token: tokens.TUI_DIGITAL_INFORMATION_UNITS }], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiMaxSizeRejectionErrorPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMaxSizeRejectionErrorPipe, name: "tuiMaxSizeRejectionError" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMaxSizeRejectionErrorPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: "tuiMaxSizeRejectionError" }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_INPUT_FILE_TEXTS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DIGITAL_INFORMATION_UNITS]
                        }] }];
        } });

    var TuiInputFilesComponent = /** @class */ (function (_super) {
        __extends(TuiInputFilesComponent, _super);
        function TuiInputFilesComponent(control, cdr, isMobile, inputFileTexts$, options) {
            var _this = _super.call(this, control, cdr) || this;
            _this.isMobile = isMobile;
            _this.inputFileTexts$ = inputFileTexts$;
            _this.options = options;
            _this.dataTransfer = null;
            /**
             * @deprecated: use `<input tuiInputFiles accept="image/*" />`
             */
            _this.accept = _this.options.accepts;
            /**
             * @deprecated: use `<input tuiInputFiles multiple />`
             */
            _this.multiple = _this.options.multiple;
            _this.size = _this.options.size;
            _this.maxFileSize = _this.options.maxFileSize;
            _this.reject = new i0.EventEmitter();
            return _this;
        }
        Object.defineProperty(TuiInputFilesComponent.prototype, "computedMultiple", {
            get: function () {
                var _a, _b;
                return (_b = (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.multiple) !== null && _b !== void 0 ? _b : this.multiple;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesComponent.prototype, "computedAccept", {
            get: function () {
                var _a, _b;
                return (_b = (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.accept) !== null && _b !== void 0 ? _b : this.accept;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesComponent.prototype, "nativeFocusableElement", {
            get: function () {
                var _a;
                return ((_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeElement) || null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesComponent.prototype, "focused", {
            get: function () {
                return i2.tuiIsNativeFocused(this.nativeFocusableElement);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesComponent.prototype, "computedPseudoHovered", {
            get: function () {
                var _a;
                return (_a = this.pseudoHover) !== null && _a !== void 0 ? _a : (this.fileDragged || null);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesComponent.prototype, "computedLink$", {
            get: function () {
                return this.computeLink$(this.fileDragged, this.computedMultiple, this.link);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesComponent.prototype, "computedLabel$", {
            get: function () {
                return this.computeLabel$(this.isMobile, this.fileDragged, this.computedMultiple, this.label);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesComponent.prototype, "fileDragged", {
            get: function () {
                var _a;
                return !!((_a = this.dataTransfer) === null || _a === void 0 ? void 0 : _a.types.includes('Files'));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputFilesComponent.prototype, "arrayValue", {
            get: function () {
                return this.getValueArray(this.value);
            },
            enumerable: false,
            configurable: true
        });
        TuiInputFilesComponent.prototype.onFocused = function (focused) {
            this.updateFocused(focused);
        };
        TuiInputFilesComponent.prototype.onFilesSelected = function () {
            var _a, _b, _c;
            var input = (_b = (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.input) !== null && _b !== void 0 ? _b : (_c = this.input) === null || _c === void 0 ? void 0 : _c.nativeElement;
            if (!input) {
                return;
            }
            this.processSelectedFiles(input.files);
            input.value = '';
        };
        TuiInputFilesComponent.prototype.onDropped = function (event) {
            this.processSelectedFiles(event.files);
        };
        TuiInputFilesComponent.prototype.onDragOver = function (dataTransfer) {
            this.dataTransfer = dataTransfer;
        };
        TuiInputFilesComponent.prototype.removeFile = function (removedFile) {
            this.value = this.computedMultiple
                ? this.arrayValue.filter(function (file) { return file !== removedFile; })
                : null;
        };
        TuiInputFilesComponent.prototype.computeLink$ = function (fileDragged, multiple, link) {
            return fileDragged
                ? i7.of('')
                : this.inputFileTexts$.pipe(operators.map(function (texts) { return multiple && !link
                    ? texts.defaultLinkMultiple
                    : link || texts.defaultLinkSingle; }));
        };
        TuiInputFilesComponent.prototype.computeLabel$ = function (isMobile, fileDragged, multiple, label) {
            if (isMobile) {
                return i7.of('');
            }
            if (fileDragged) {
                return this.inputFileTexts$.pipe(operators.map(function (texts) { return (multiple ? texts.dropMultiple : texts.drop); }));
            }
            return this.inputFileTexts$.pipe(operators.map(function (texts) { return multiple && !label
                ? texts.defaultLabelMultiple
                : label || texts.defaultLabelSingle; }));
        };
        TuiInputFilesComponent.prototype.getValueArray = function (value) {
            if (!value) {
                return i2.EMPTY_ARRAY;
            }
            return Array.isArray(value) ? value : [value];
        };
        TuiInputFilesComponent.prototype.processSelectedFiles = function (files) {
            var _this = this;
            // IE11 after selecting a file through the open dialog generates a second event passing an empty FileList.
            if (!(files === null || files === void 0 ? void 0 : files.length)) {
                return;
            }
            var errors = {
                formatRejection: this.formatRejection,
                maxSizeRejection: this.maxSizeRejection,
            };
            var newFiles = this.computedMultiple ? Array.from(files) : [files[0]];
            var tooBigFiles = newFiles.filter(function (file) { return file.size > _this.maxFileSize; });
            var wrongFormatFiles = newFiles.filter(function (file) { return !_this.isFormatAcceptable(file) && !tooBigFiles.includes(file); });
            var acceptedFiles = newFiles.filter(function (file) { return !tooBigFiles.includes(file) && !wrongFormatFiles.includes(file); });
            if (tooBigFiles.length || wrongFormatFiles.length) {
                this.rejectFiles(__spreadArray(__spreadArray([], __read(tooBigFiles.map(function (file) { return ({
                    name: file.name,
                    type: file.type,
                    size: file.size,
                    content: errors.maxSizeRejection,
                }); }))), __read(wrongFormatFiles.map(function (file) { return ({
                    name: file.name,
                    type: file.type,
                    size: file.size,
                    content: errors.formatRejection,
                }); }))));
            }
            this.value = this.computedMultiple
                ? __spreadArray(__spreadArray([], __read(this.arrayValue)), __read(acceptedFiles)) : acceptedFiles[0] || null;
        };
        TuiInputFilesComponent.prototype.isFormatAcceptable = function (file) {
            if (!this.computedAccept) {
                return true;
            }
            var extension = "." + (file.name.split('.').pop() || '').toLowerCase();
            return files.tuiGetAcceptArray(this.computedAccept).some(function (format) { return format === extension ||
                format === file.type ||
                (format.split('/')[1] === '*' &&
                    file.type.split('/')[0] === format.split('/')[0]); });
        };
        TuiInputFilesComponent.prototype.rejectFiles = function (rejectedFiles) {
            this.reject.emit(this.computedMultiple ? rejectedFiles : rejectedFiles[0]);
        };
        return TuiInputFilesComponent;
    }(i2.AbstractTuiNullableControl));
    TuiInputFilesComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputFilesComponent, deps: [{ token: i6.NgControl, optional: true, self: true }, { token: i0.ChangeDetectorRef }, { token: i2.TUI_IS_MOBILE }, { token: tokens.TUI_INPUT_FILE_TEXTS }, { token: TUI_INPUT_FILES_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiInputFilesComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputFilesComponent, selector: "tui-input-files", inputs: { link: "link", label: "label", accept: "accept", multiple: "multiple", size: "size", maxFileSize: "maxFileSize" }, outputs: { reject: "reject" }, host: { listeners: { "focusin": "onFocused(true)", "focusout": "onFocused(false)", "change": "onFilesSelected()" } }, providers: [i1.MODE_PROVIDER, i2.tuiAsFocusableItemAccessor(TuiInputFilesComponent)], queries: [{ propertyName: "nativeInput", first: true, predicate: i0__namespace.forwardRef(function () { return TuiInputFilesDirective; }), descendants: true }, { propertyName: "template", first: true, predicate: i0.TemplateRef, descendants: true }], viewQueries: [{ propertyName: "input", first: true, predicate: ["input"], descendants: true }, { propertyName: "formatRejection", first: true, predicate: ["formatRejection"], descendants: true }, { propertyName: "maxSizeRejection", first: true, predicate: ["maxSizeRejection"], descendants: true }], usesInheritance: true, ngImport: i0__namespace, template: "<div\n    tuiWrapper\n    appearance=\"input-file\"\n    class=\"t-wrapper\"\n    [class._mobile]=\"isMobile\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover || fileDragged || null\"\n    [active]=\"pseudoActive\"\n    [disabled]=\"computedDisabled\"\n>\n    <label\n        automation-id=\"tui-input-file__label\"\n        class=\"t-label\"\n        (tuiDroppableDropped)=\"onDropped($event)\"\n        (tuiDroppableDragOverChange)=\"onDragOver($event)\"\n        (mousedown.prevent.silent)=\"(0)\"\n    >\n        <ng-container *ngTemplateOutlet=\"template || null; context: {$implicit: fileDragged}\"></ng-container>\n        <ng-container *ngIf=\"!template\">\n            <a tuiLink>\n                <ng-container *polymorpheusOutlet=\"computedLink$ | async as text\">\n                    {{ text }}\n                </ng-container>\n            </a>\n            <ng-container *polymorpheusOutlet=\"computedLabel$ | async as text\">\n                {{ text }}\n            </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!readOnly && !computedDisabled\">\n            <ng-content select=\"input\"></ng-content>\n            <input\n                #input\n                type=\"file\"\n                class=\"t-native\"\n                [id]=\"id\"\n                [accept]=\"accept\"\n                [multiple]=\"multiple\"\n                [tuiFocusable]=\"focusable\"\n            />\n        </ng-container>\n    </label>\n</div>\n\n<ng-template #formatRejection>\n    {{ (inputFileTexts$ | async)?.formatRejectionReason || '' }}\n</ng-template>\n\n<ng-template #maxSizeRejection>\n    {{ maxFileSize | tuiMaxSizeRejectionError | async }}\n</ng-template>\n", styles: ["tui-input-files{display:block;min-height:var(--tui-height-l);border-radius:var(--tui-radius-m);font:var(--tui-font-text-m)}tui-input-files .t-native{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}tui-input-files .t-native::-webkit-file-upload-button{display:none}tui-input-files .t-native+.t-native{display:none}tui-input-files .t-label{width:100%;text-align:center}[tuiWrapper][data-appearance=input-file]{display:flex;background:transparent;word-wrap:break-word;color:var(--tui-text-02);justify-content:center;align-items:center;min-height:inherit;border-radius:inherit;padding:0 .5rem;box-sizing:border-box}[tuiWrapper][data-appearance=input-file]:after{border:1px dashed;color:var(--tui-link)}[tuiWrapper][data-appearance=input-file]._mobile:after{border:1px solid}[tuiWrapper][data-appearance=input-file]:disabled:disabled,[tuiWrapper][data-appearance=input-file][data-state=disabled][data-state=disabled]{opacity:var(--tui-disabled-opacity);pointer-events:none}[tuiWrapper][data-appearance=input-file]:disabled:disabled:after,[tuiWrapper][data-appearance=input-file][data-state=disabled][data-state=disabled]:after{color:var(--tui-text-03)}[tuiWrapper][data-appearance=input-file]:focus-visible:focus-visible:after{border-style:solid;border-width:2px;color:var(--tui-focus)}[tuiWrapper][data-appearance=input-file]._focused._focused:after{border-style:solid;border-width:2px;color:var(--tui-focus)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]{color:var(--tui-text-01-night)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:after{color:var(--tui-text-01-night)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:focus-visible:focus-visible:after{color:var(--tui-text-01-night)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]._focused._focused:after{color:var(--tui-text-01-night)}@media (hover: hover){[tuiWrapper][data-appearance=input-file][data-mode=onDark]:hover:not(._no-hover),[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=hover]{background:var(--tui-clear-inverse-hover)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:hover:not(._no-hover):after,[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=hover]:after{color:var(--tui-text-03-night)}}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:active:not(._no-active),[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=active],[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=active]:hover{background:var(--tui-clear-inverse-active)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:active:not(._no-active):after,[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=active]:after,[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=active]:hover:after{color:var(--tui-text-03-night)}[tuiWrapper][data-appearance=input-file][data-mode=onLight]{color:var(--tui-text-01)}[tuiWrapper][data-appearance=input-file][data-mode=onLight]:after{color:var(--tui-text-01)}@media (hover: hover){[tuiWrapper][data-appearance=input-file][data-mode=onLight]:hover:not(._no-hover),[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=hover]{background:var(--tui-clear-hover)}[tuiWrapper][data-appearance=input-file][data-mode=onLight]:hover:not(._no-hover):after,[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=hover]:after{color:var(--tui-text-03)}}[tuiWrapper][data-appearance=input-file][data-mode=onLight]:active:not(._no-active),[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=active],[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=active]:hover{background:var(--tui-clear-active)}[tuiWrapper][data-appearance=input-file][data-mode=onLight]:active:not(._no-active):after,[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=active]:after,[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=active]:hover:after{color:var(--tui-text-03)}@media (hover: hover){[tuiWrapper][data-appearance=input-file]:hover:not(._no-hover),[tuiWrapper][data-appearance=input-file][data-state=hover]{background:var(--tui-secondary)}[tuiWrapper][data-appearance=input-file]:hover:not(._no-hover):after,[tuiWrapper][data-appearance=input-file][data-state=hover]:after{color:var(--tui-link-hover)}}[tuiWrapper][data-appearance=input-file]:active:not(._no-active),[tuiWrapper][data-appearance=input-file][data-state=active],[tuiWrapper][data-appearance=input-file][data-state=active]:hover{background:var(--tui-secondary-hover)}\n"], components: [{ type: i1__namespace.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }], directives: [{ type: i1__namespace.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i2__namespace.TuiDroppableDirective, selector: "[tuiDroppableDropped], [tuiDroppableDragOverChange]", outputs: ["tuiDroppableDropped", "tuiDroppableDragOverChange"] }, { type: i3__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i2__namespace.TuiFocusableDirective, selector: "[tuiFocusable]", inputs: ["tuiFocusable"] }], pipes: { "async": i3__namespace.AsyncPipe, "tuiMaxSizeRejectionError": TuiMaxSizeRejectionErrorPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputFilesComponent.prototype, "accept", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputFilesComponent.prototype, "multiple", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputFilesComponent.prototype, "size", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputFilesComponent.prototype, "maxFileSize", void 0);
    __decorate([
        i2.tuiPure
    ], TuiInputFilesComponent.prototype, "computeLink$", null);
    __decorate([
        i2.tuiPure
    ], TuiInputFilesComponent.prototype, "computeLabel$", null);
    __decorate([
        i2.tuiPure
    ], TuiInputFilesComponent.prototype, "getValueArray", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputFilesComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-input-files',
                        templateUrl: './input-files.template.html',
                        styleUrls: ['./input-files.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        encapsulation: i0.ViewEncapsulation.None,
                        providers: [i1.MODE_PROVIDER, i2.tuiAsFocusableItemAccessor(TuiInputFilesComponent)],
                    }]
            }], ctorParameters: function () {
            return [{ type: i6__namespace.NgControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i6.NgControl]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i2.TUI_IS_MOBILE]
                        }] }, { type: i7__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_INPUT_FILE_TEXTS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_INPUT_FILES_OPTIONS]
                        }] }];
        }, propDecorators: { input: [{
                    type: i0.ViewChild,
                    args: ['input']
                }], nativeInput: [{
                    type: i0.ContentChild,
                    args: [i0.forwardRef(function () { return TuiInputFilesDirective; })]
                }], template: [{
                    type: i0.ContentChild,
                    args: [i0.TemplateRef]
                }], formatRejection: [{
                    type: i0.ViewChild,
                    args: ['formatRejection']
                }], maxSizeRejection: [{
                    type: i0.ViewChild,
                    args: ['maxSizeRejection']
                }], link: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], accept: [{
                    type: i0.Input
                }], multiple: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], maxFileSize: [{
                    type: i0.Input
                }], reject: [{
                    type: i0.Output
                }], onFocused: [{
                    type: i0.HostListener,
                    args: ['focusin', ['true']]
                }, {
                    type: i0.HostListener,
                    args: ['focusout', ['false']]
                }], onFilesSelected: [{
                    type: i0.HostListener,
                    args: ['change']
                }], computeLink$: [], computeLabel$: [], getValueArray: [] } });

    var TuiInputFilesModule = /** @class */ (function () {
        function TuiInputFilesModule() {
        }
        return TuiInputFilesModule;
    }());
    TuiInputFilesModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputFilesModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiInputFilesModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputFilesModule, declarations: [TuiInputFilesComponent,
            TuiInputFilesDirective,
            TuiMaxSizeRejectionErrorPipe], imports: [i3.CommonModule,
            i4.PolymorpheusModule,
            i2.TuiLetModule,
            i2.TuiFocusedModule,
            i2.TuiFocusVisibleModule,
            i2.TuiPressedModule,
            i2.TuiHoveredModule,
            i2.TuiFocusableModule,
            i2.TuiDroppableModule,
            i1.TuiWrapperModule,
            i1.TuiSvgModule,
            i1.TuiLinkModule,
            i1.TuiLoaderModule,
            i1.TuiButtonModule,
            i1.TuiGroupModule,
            files$1.TuiFilesModule], exports: [TuiInputFilesComponent,
            TuiInputFilesDirective,
            files$1.TuiFilesComponent,
            files$1.TuiFileComponent,
            i2.TuiItemDirective] });
    TuiInputFilesModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputFilesModule, imports: [[
                i3.CommonModule,
                i4.PolymorpheusModule,
                i2.TuiLetModule,
                i2.TuiFocusedModule,
                i2.TuiFocusVisibleModule,
                i2.TuiPressedModule,
                i2.TuiHoveredModule,
                i2.TuiFocusableModule,
                i2.TuiDroppableModule,
                i1.TuiWrapperModule,
                i1.TuiSvgModule,
                i1.TuiLinkModule,
                i1.TuiLoaderModule,
                i1.TuiButtonModule,
                i1.TuiGroupModule,
                files$1.TuiFilesModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputFilesModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.CommonModule,
                            i4.PolymorpheusModule,
                            i2.TuiLetModule,
                            i2.TuiFocusedModule,
                            i2.TuiFocusVisibleModule,
                            i2.TuiPressedModule,
                            i2.TuiHoveredModule,
                            i2.TuiFocusableModule,
                            i2.TuiDroppableModule,
                            i1.TuiWrapperModule,
                            i1.TuiSvgModule,
                            i1.TuiLinkModule,
                            i1.TuiLoaderModule,
                            i1.TuiButtonModule,
                            i1.TuiGroupModule,
                            files$1.TuiFilesModule,
                        ],
                        declarations: [
                            TuiInputFilesComponent,
                            TuiInputFilesDirective,
                            TuiMaxSizeRejectionErrorPipe,
                        ],
                        exports: [
                            TuiInputFilesComponent,
                            TuiInputFilesDirective,
                            files$1.TuiFilesComponent,
                            files$1.TuiFileComponent,
                            i2.TuiItemDirective,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_INPUT_FILES_DEFAULT_OPTIONS = TUI_INPUT_FILES_DEFAULT_OPTIONS;
    exports.TUI_INPUT_FILES_OPTIONS = TUI_INPUT_FILES_OPTIONS;
    exports.TuiInputFilesComponent = TuiInputFilesComponent;
    exports.TuiInputFilesDirective = TuiInputFilesDirective;
    exports.TuiInputFilesModule = TuiInputFilesModule;
    exports.tuiInputFilesOptionsProvider = tuiInputFilesOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-components-input-files.umd.js.map
