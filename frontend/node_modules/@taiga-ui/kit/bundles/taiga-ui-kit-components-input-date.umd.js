(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit/constants'), require('@taiga-ui/kit/tokens'), require('@taiga-ui/kit/utils/mask'), require('@tinkoff/ng-polymorpheus'), require('rxjs/operators'), require('@taiga-ui/kit/directives'), require('@angular/common'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/input-date', ['exports', '@angular/core', '@angular/forms', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit/constants', '@taiga-ui/kit/tokens', '@taiga-ui/kit/utils/mask', '@tinkoff/ng-polymorpheus', 'rxjs/operators', '@taiga-ui/kit/directives', '@angular/common', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.components = global["taiga-ui"].kit.components || {}, global["taiga-ui"].kit.components["input-date"] = {}), global.ng.core, global.ng.forms, global.i2, global.i1, global["taiga-ui"].kit.constants, global["taiga-ui"].kit.tokens, global["taiga-ui"].kit.utils.mask, global.i4, global.rxjs.operators, global["taiga-ui"].kit.directives, global.ng.common, global.rxjs));
})(this, (function (exports, i0, i7, i2, i1, constants, tokens, mask, i4, operators, i3, i5, i8) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var TuiNativeDateDirective = /** @class */ (function () {
        function TuiNativeDateDirective(host, dateFormat) {
            this.host = host;
            this.dateFormat = dateFormat;
        }
        Object.defineProperty(TuiNativeDateDirective.prototype, "value", {
            get: function () {
                return this.host.value.length === i2.DATE_FILLER_LENGTH
                    ? i2.TuiDay.normalizeParse(this.host.value, this.dateFormat).toString('YMD', '-')
                    : '';
            },
            enumerable: false,
            configurable: true
        });
        TuiNativeDateDirective.prototype.onChange = function (value) {
            this.host.onValueChange(value ? i2.TuiDay.normalizeParse(value, 'YMD').toString(this.dateFormat) : '');
        };
        return TuiNativeDateDirective;
    }());
    TuiNativeDateDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNativeDateDirective, deps: [{ token: i1.TUI_TEXTFIELD_HOST }, { token: i2.TUI_DATE_FORMAT }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiNativeDateDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiNativeDateDirective, selector: "input[tuiDate]", host: { attributes: { "type": "date" }, listeners: { "change": "onChange($event.target.value)", "click.stop.silent": "0", "input.stop.silent": "0", "mousedown.stop.silent": "0" }, properties: { "tabIndex": "-1", "value": "value" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNativeDateDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'input[tuiDate]',
                        host: {
                            type: 'date',
                            '[tabIndex]': '-1',
                            '[value]': 'value',
                            '(change)': 'onChange($event.target.value)',
                            '(click.stop.silent)': '0',
                            '(input.stop.silent)': '0',
                            '(mousedown.stop.silent)': '0',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_TEXTFIELD_HOST]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i2.TUI_DATE_FORMAT]
                        }] }];
        } });

    var TuiInputDateComponent = /** @class */ (function (_super) {
        __extends(TuiInputDateComponent, _super);
        function TuiInputDateComponent(control, cdr, injector, isMobile, dialogs, mobileCalendar, textfieldSize, dateFormat, dateSeparator, dateTexts$, valueTransformer, options) {
            var _this = _super.call(this, control, cdr, valueTransformer) || this;
            _this.injector = injector;
            _this.isMobile = isMobile;
            _this.dialogs = dialogs;
            _this.mobileCalendar = mobileCalendar;
            _this.textfieldSize = textfieldSize;
            _this.dateFormat = dateFormat;
            _this.dateSeparator = dateSeparator;
            _this.dateTexts$ = dateTexts$;
            _this.valueTransformer = valueTransformer;
            _this.options = options;
            _this.month = null;
            _this.textMaskOptions = {
                mask: mask.tuiCreateDateMask(_this.dateFormat, _this.dateSeparator),
                pipe: mask.tuiCreateAutoCorrectedDatePipe(_this),
                guide: false,
            };
            _this.min = _this.options.min;
            _this.max = _this.options.max;
            _this.disabledItemHandler = i2.ALWAYS_FALSE_HANDLER;
            _this.markerHandler = i1.TUI_DEFAULT_MARKER_HANDLER;
            _this.items = [];
            _this.defaultActiveYearMonth = i2.TuiMonth.currentLocal();
            _this.open = false;
            _this.filler$ = _this.dateTexts$.pipe(operators.map(function (dateTexts) { return i2.changeDateSeparator(dateTexts[_this.dateFormat], _this.dateSeparator); }));
            return _this;
        }
        Object.defineProperty(TuiInputDateComponent.prototype, "nativeFocusableElement", {
            get: function () {
                return this.textfield ? this.textfield.nativeFocusableElement : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "focused", {
            get: function () {
                return !!this.textfield && this.textfield.focused;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "computedMobile", {
            get: function () {
                return this.isMobile && (!!this.mobileCalendar || this.nativePicker);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "nativePicker", {
            get: function () {
                return this.options.nativePicker;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "calendarIcon", {
            get: function () {
                return this.options.icon;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "computedValue", {
            get: function () {
                var _a = this, value = _a.value, nativeValue = _a.nativeValue, activeItem = _a.activeItem;
                if (activeItem) {
                    return String(activeItem);
                }
                return value ? value.toString(this.dateFormat, this.dateSeparator) : nativeValue;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "computedActiveYearMonth", {
            get: function () {
                if (this.items[0] && this.value && this.value.daySame(this.items[0].day)) {
                    return this.items[0].displayDay;
                }
                return (this.month ||
                    this.value ||
                    i2.tuiDateClamp(this.defaultActiveYearMonth, this.min, this.max));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "nativeValue", {
            get: function () {
                return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';
            },
            set: function (value) {
                if (!this.nativeFocusableElement) {
                    return;
                }
                this.nativeFocusableElement.value = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "canOpen", {
            get: function () {
                return this.interactive && !this.computedMobile;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "computedMask", {
            get: function () {
                return this.activeItem ? constants.EMPTY_MASK : this.textMaskOptions;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "activeItem", {
            get: function () {
                var value = this.value;
                return (value && this.items.find(function (item) { return item.day.daySame(value); })) || null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputDateComponent.prototype, "size", {
            get: function () {
                return this.textfieldSize.size;
            },
            enumerable: false,
            configurable: true
        });
        TuiInputDateComponent.prototype.onClick = function () {
            if (!this.isMobile) {
                this.open = !this.open;
            }
        };
        TuiInputDateComponent.prototype.getComputedFiller = function (filler) {
            return this.activeItem ? '' : filler;
        };
        // noinspection JSUnusedGlobalSymbols
        /**
         * TODO: Remove in 4.0
         * @deprecated: use {@link onIconClick} instead
         */
        TuiInputDateComponent.prototype.onMobileClick = function () {
            this.onIconClick();
        };
        TuiInputDateComponent.prototype.onIconClick = function () {
            var _this = this;
            if (!this.computedMobile || !this.mobileCalendar) {
                return;
            }
            this.dialogs
                .open(new i4.PolymorpheusComponent(this.mobileCalendar, this.injector), {
                size: 'fullscreen',
                closeable: false,
                data: {
                    single: true,
                    min: this.min,
                    max: this.max,
                    disabledItemHandler: this.disabledItemHandler,
                },
            })
                .pipe(operators.takeUntil(this.destroy$))
                .subscribe(function (value) {
                _this.value = value;
            });
        };
        TuiInputDateComponent.prototype.onValueChange = function (value) {
            if (this.control) {
                this.control.updateValueAndValidity({ emitEvent: false });
            }
            if (!value) {
                this.onOpenChange(true);
            }
            this.value =
                value.length !== i2.DATE_FILLER_LENGTH
                    ? null
                    : i2.TuiDay.normalizeParse(value, this.dateFormat);
        };
        TuiInputDateComponent.prototype.onDayClick = function (value) {
            this.value = value;
            this.open = false;
        };
        TuiInputDateComponent.prototype.onMonthChange = function (month) {
            this.month = month;
        };
        TuiInputDateComponent.prototype.onOpenChange = function (open) {
            this.open = open;
        };
        TuiInputDateComponent.prototype.onFocused = function (focused) {
            this.updateFocused(focused);
        };
        TuiInputDateComponent.prototype.setDisabledState = function () {
            _super.prototype.setDisabledState.call(this);
            this.open = false;
        };
        TuiInputDateComponent.prototype.writeValue = function (value) {
            _super.prototype.writeValue.call(this, value);
            this.nativeValue = value ? this.computedValue : '';
        };
        TuiInputDateComponent.prototype.valueIdenticalComparator = function (oldValue, newValue) {
            return i2.tuiNullableSame(oldValue, newValue, function (a, b) { return a.daySame(b); });
        };
        return TuiInputDateComponent;
    }(i2.AbstractTuiNullableControl));
    TuiInputDateComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputDateComponent, deps: [{ token: i7.NgControl, optional: true, self: true }, { token: i0.ChangeDetectorRef }, { token: i0.Injector }, { token: i2.TUI_IS_MOBILE }, { token: i1.TuiDialogService }, { token: tokens.TUI_MOBILE_CALENDAR, optional: true }, { token: i1.TUI_TEXTFIELD_SIZE }, { token: i2.TUI_DATE_FORMAT }, { token: i2.TUI_DATE_SEPARATOR }, { token: tokens.TUI_DATE_TEXTS }, { token: tokens.TUI_DATE_VALUE_TRANSFORMER, optional: true }, { token: tokens.TUI_INPUT_DATE_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiInputDateComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputDateComponent, selector: "tui-input-date", inputs: { min: "min", max: "max", disabledItemHandler: "disabledItemHandler", markerHandler: "markerHandler", items: "items", defaultActiveYearMonth: "defaultActiveYearMonth" }, host: { listeners: { "click": "onClick()" } }, providers: [
            i2.tuiAsFocusableItemAccessor(TuiInputDateComponent),
            i2.tuiAsControl(TuiInputDateComponent),
            tokens.tuiDateStreamWithTransformer(tokens.TUI_DATE_VALUE_TRANSFORMER),
        ], viewQueries: [{ propertyName: "textfield", first: true, predicate: i1.TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0__namespace, template: "<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"canOpen\"\n    [open]=\"open && canOpen\"\n    [content]=\"dropdown\"\n    (openChange)=\"onOpenChange($event)\"\n>\n    <tui-primitive-textfield\n        *tuiLet=\"filler$ | async as filler\"\n        automation-id=\"tui-input-date-range__textfield\"\n        tuiValueAccessor\n        class=\"t-textfield\"\n        [tuiTextfieldIcon]=\"calendarIcon && iconContent\"\n        [tuiTextfieldFiller]=\"getComputedFiller(filler || '')\"\n        [pseudoFocus]=\"pseudoFocus\"\n        [pseudoHover]=\"pseudoHover\"\n        [invalid]=\"computedInvalid\"\n        [nativeId]=\"nativeId\"\n        [readOnly]=\"readOnly\"\n        [focusable]=\"computedFocusable\"\n        [disabled]=\"computedDisabled\"\n        [textMask]=\"computedMask\"\n        [value]=\"computedValue\"\n        (valueChange)=\"onValueChange($event)\"\n        (focusedChange)=\"onFocused($event)\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            select=\"input\"\n            ngProjectAs=\"input\"\n        ></ng-content>\n    </tui-primitive-textfield>\n\n    <ng-template #iconContent>\n        <tui-svg\n            *polymorpheusOutlet=\"calendarIcon as src; context: {$implicit: size}\"\n            tuiWrapper\n            appearance=\"icon\"\n            automation-id=\"tui-input-date-range__icon\"\n            [class.t-icon]=\"!computedDisabled\"\n            [src]=\"src\"\n            (click)=\"onIconClick()\"\n        ></tui-svg>\n        <input\n            *ngIf=\"isMobile && nativePicker\"\n            tuiDate\n            class=\"t-native-input\"\n        />\n    </ng-template>\n\n    <ng-template\n        #dropdown=\"polymorpheus\"\n        [polymorpheus]=\"type\"\n    >\n        <tui-calendar\n            tuiPreventDefault=\"mousedown\"\n            automation-id=\"tui-input-date__calendar\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [markerHandler]=\"markerHandler\"\n            [disabledItemHandler]=\"disabledItemHandler\"\n            [month]=\"computedActiveYearMonth\"\n            [value]=\"value\"\n            (dayClick)=\"onDayClick($event)\"\n            (monthChange)=\"onMonthChange($event)\"\n        ></tui-calendar>\n        <div\n            *ngIf=\"items.length === 1\"\n            tuiPreventDefault=\"mousedown\"\n            class=\"t-button\"\n        >\n            <button\n                tuiLink\n                type=\"button\"\n                (click)=\"onDayClick(items[0].day)\"\n            >\n                {{ items[0] }}\n            </button>\n        </div>\n    </ng-template>\n</tui-hosted-dropdown>\n", styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}.t-icon{pointer-events:auto}.t-button{display:flex;height:2.75rem;justify-content:center;box-shadow:inset 0 1px var(--tui-base-03)}.t-button button{flex:1;text-align:center}.t-native-input{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;pointer-events:auto;font-size:2rem}\n"], components: [{ type: i1__namespace.TuiHostedDropdownComponent, selector: "tui-hosted-dropdown", inputs: ["content", "sided", "canOpen", "open"], outputs: ["openChange", "focusedChange"] }, { type: i1__namespace.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "filler", "iconCleaner", "readOnly", "invalid", "disabled", "prefix", "postfix", "value"], outputs: ["valueChange"] }, { type: i1__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i1__namespace.TuiCalendarComponent, selector: "tui-calendar", inputs: ["month", "disabledItemHandler", "min", "max", "minViewedMonth", "maxViewedMonth", "hoveredItem", "showAdjacent", "markerHandler", "value"], outputs: ["dayClick", "monthChange", "hoveredItemChange"] }, { type: i1__namespace.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }], directives: [{ type: i2__namespace.TuiLetDirective, selector: "[tuiLet]", inputs: ["tuiLet"] }, { type: i1__namespace.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { type: i3__namespace.TuiValueAccessorDirective, selector: "[tuiValueAccessor]" }, { type: i1__namespace.TuiTextfieldIconDirective, selector: "[tuiTextfieldIcon]", inputs: ["tuiTextfieldIcon"] }, { type: i1__namespace.TuiTextfieldFillerDirective, selector: "[tuiTextfieldFiller]", inputs: ["tuiTextfieldFiller"] }, { type: i3__namespace.MaskedInputDirective, selector: "[textMask]", inputs: ["textMask"], exportAs: ["textMask"] }, { type: i4__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i1__namespace.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: TuiNativeDateDirective, selector: "input[tuiDate]" }, { type: i4__namespace.PolymorpheusTemplate, selector: "ng-template[polymorpheus]", inputs: ["polymorpheus"], exportAs: ["polymorpheus"] }, { type: i2__namespace.TuiPreventDefaultDirective, selector: "[tuiPreventDefault]", inputs: ["tuiPreventDefault"] }], pipes: { "async": i5__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputDateComponent.prototype, "min", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputDateComponent.prototype, "max", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputDateComponent.prototype, "disabledItemHandler", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputDateComponent.prototype, "markerHandler", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputDateComponent.prototype, "items", void 0);
    __decorate([
        i2.tuiDefaultProp()
    ], TuiInputDateComponent.prototype, "defaultActiveYearMonth", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputDateComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-input-date',
                        templateUrl: './input-date.template.html',
                        styleUrls: ['./input-date.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            i2.tuiAsFocusableItemAccessor(TuiInputDateComponent),
                            i2.tuiAsControl(TuiInputDateComponent),
                            tokens.tuiDateStreamWithTransformer(tokens.TUI_DATE_VALUE_TRANSFORMER),
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: i7__namespace.NgControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i7.NgControl]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: i0__namespace.Injector, decorators: [{
                            type: i0.Inject,
                            args: [i0.Injector]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i2.TUI_IS_MOBILE]
                        }] }, { type: i1__namespace.TuiDialogService, decorators: [{
                            type: i0.Inject,
                            args: [i1.TuiDialogService]
                        }] }, { type: i0__namespace.Type, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [tokens.TUI_MOBILE_CALENDAR]
                        }] }, { type: i1__namespace.TuiTextfieldSizeDirective, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_TEXTFIELD_SIZE]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i2.TUI_DATE_FORMAT]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i2.TUI_DATE_SEPARATOR]
                        }] }, { type: i8__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DATE_TEXTS]
                        }] }, { type: i2__namespace.AbstractTuiValueTransformer, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [tokens.TUI_DATE_VALUE_TRANSFORMER]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_INPUT_DATE_OPTIONS]
                        }] }];
        }, propDecorators: { textfield: [{
                    type: i0.ViewChild,
                    args: [i1.TuiPrimitiveTextfieldComponent]
                }], min: [{
                    type: i0.Input
                }], max: [{
                    type: i0.Input
                }], disabledItemHandler: [{
                    type: i0.Input
                }], markerHandler: [{
                    type: i0.Input
                }], items: [{
                    type: i0.Input
                }], defaultActiveYearMonth: [{
                    type: i0.Input
                }], onClick: [{
                    type: i0.HostListener,
                    args: ['click']
                }] } });

    var TuiInputDateDirective = /** @class */ (function (_super) {
        __extends(TuiInputDateDirective, _super);
        function TuiInputDateDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(TuiInputDateDirective.prototype, "value", {
            get: function () {
                return this.host.computedValue;
            },
            enumerable: false,
            configurable: true
        });
        TuiInputDateDirective.prototype.onValueChange = function (value) {
            if (!value) {
                this.host.nativeValue = '';
            }
            this.host.onValueChange(value);
        };
        TuiInputDateDirective.prototype.process = function (input) {
            input.inputMode = 'numeric';
        };
        return TuiInputDateDirective;
    }(i1.AbstractTuiTextfieldHost));
    TuiInputDateDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputDateDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiInputDateDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputDateDirective, selector: "tui-input-date", providers: [i1.tuiAsTextfieldHost(TuiInputDateDirective)], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputDateDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'tui-input-date',
                        providers: [i1.tuiAsTextfieldHost(TuiInputDateDirective)],
                    }]
            }] });

    var TuiInputDateModule = /** @class */ (function () {
        function TuiInputDateModule() {
        }
        return TuiInputDateModule;
    }());
    TuiInputDateModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputDateModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiInputDateModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputDateModule, declarations: [TuiInputDateComponent, TuiInputDateDirective, TuiNativeDateDirective], imports: [i5.CommonModule,
            i3.TextMaskModule,
            i4.PolymorpheusModule,
            i1.TuiWrapperModule,
            i2.TuiPreventDefaultModule,
            i1.TuiCalendarModule,
            i1.TuiSvgModule,
            i1.TuiLinkModule,
            i1.TuiHostedDropdownModule,
            i1.TuiPrimitiveTextfieldModule,
            i3.TuiValueAccessorModule,
            i2.TuiLetModule,
            i1.TuiTextfieldControllerModule], exports: [TuiInputDateComponent, TuiInputDateDirective, i1.TuiTextfieldComponent] });
    TuiInputDateModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputDateModule, imports: [[
                i5.CommonModule,
                i3.TextMaskModule,
                i4.PolymorpheusModule,
                i1.TuiWrapperModule,
                i2.TuiPreventDefaultModule,
                i1.TuiCalendarModule,
                i1.TuiSvgModule,
                i1.TuiLinkModule,
                i1.TuiHostedDropdownModule,
                i1.TuiPrimitiveTextfieldModule,
                i3.TuiValueAccessorModule,
                i2.TuiLetModule,
                i1.TuiTextfieldControllerModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputDateModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i5.CommonModule,
                            i3.TextMaskModule,
                            i4.PolymorpheusModule,
                            i1.TuiWrapperModule,
                            i2.TuiPreventDefaultModule,
                            i1.TuiCalendarModule,
                            i1.TuiSvgModule,
                            i1.TuiLinkModule,
                            i1.TuiHostedDropdownModule,
                            i1.TuiPrimitiveTextfieldModule,
                            i3.TuiValueAccessorModule,
                            i2.TuiLetModule,
                            i1.TuiTextfieldControllerModule,
                        ],
                        declarations: [TuiInputDateComponent, TuiInputDateDirective, TuiNativeDateDirective],
                        exports: [TuiInputDateComponent, TuiInputDateDirective, i1.TuiTextfieldComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiInputDateComponent = TuiInputDateComponent;
    exports.TuiInputDateDirective = TuiInputDateDirective;
    exports.TuiInputDateModule = TuiInputDateModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-components-input-date.umd.js.map
