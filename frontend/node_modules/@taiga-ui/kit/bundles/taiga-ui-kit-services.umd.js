(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/core'), require('@taiga-ui/kit/components'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/services', ['exports', '@angular/core', '@taiga-ui/core', '@taiga-ui/kit/components', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.services = {}), global.ng.core, global.i1, global["taiga-ui"].kit.components, global.rxjs));
})(this, (function (exports, i0, i1, components, rxjs) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var TuiDialogFormService = /** @class */ (function () {
        function TuiDialogFormService(dialogs) {
            this.dialogs = dialogs;
            this.dirty = false;
        }
        TuiDialogFormService.prototype.markAsDirty = function () {
            this.dirty = true;
        };
        TuiDialogFormService.prototype.markAsPristine = function () {
            this.dirty = false;
        };
        TuiDialogFormService.prototype.withPrompt = function (options) {
            var _this = this;
            return rxjs.defer(function () { return _this.dirty
                ? _this.dialogs.open(components.TUI_PROMPT, Object.assign({ size: "s" }, options))
                : rxjs.of(true); });
        };
        return TuiDialogFormService;
    }());
    TuiDialogFormService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDialogFormService, deps: [{ token: i1.TuiDialogService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiDialogFormService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDialogFormService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDialogFormService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace.TuiDialogService, decorators: [{
                            type: i0.Inject,
                            args: [i1.TuiDialogService]
                        }] }];
        } });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiDialogFormService = TuiDialogFormService;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-services.umd.js.map
