(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit/tokens')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/abstract', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit/tokens'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.abstract = {}), global.ng.core, global.i1, global.core, global["taiga-ui"].kit.tokens));
})(this, (function (exports, i0, i1, core, tokens) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var AbstractTuiNativeSelect = /** @class */ (function () {
        function AbstractTuiNativeSelect(host, control, el, idService, itemsHandlers) {
            this.host = host;
            this.control = control;
            this.el = el;
            this.idService = idService;
            this.itemsHandlers = itemsHandlers;
            this.disabledItemHandler = null;
            this.datalist = null;
        }
        Object.defineProperty(AbstractTuiNativeSelect.prototype, "id", {
            get: function () {
                return this.el.nativeElement.id || this.idService.generate();
            },
            enumerable: false,
            configurable: true
        });
        return AbstractTuiNativeSelect;
    }());
    AbstractTuiNativeSelect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: AbstractTuiNativeSelect, deps: [{ token: core.TUI_TEXTFIELD_HOST }, { token: i1.AbstractTuiControl }, { token: i0.ElementRef }, { token: i1.TuiIdService }, { token: tokens.TUI_ITEMS_HANDLERS }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    AbstractTuiNativeSelect.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: AbstractTuiNativeSelect, inputs: { disabledItemHandler: "disabledItemHandler" }, host: { properties: { "id": "this.id" } }, viewQueries: [{ propertyName: "datalist", first: true, predicate: core.TuiDataListDirective, descendants: true, read: i0.TemplateRef, static: true }], ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: AbstractTuiNativeSelect, decorators: [{
                type: i0.Directive
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [core.TUI_TEXTFIELD_HOST]
                        }] }, { type: i1__namespace.AbstractTuiControl, decorators: [{
                            type: i0.Inject,
                            args: [i1.AbstractTuiControl]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i1__namespace.TuiIdService, decorators: [{
                            type: i0.Inject,
                            args: [i1.TuiIdService]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_ITEMS_HANDLERS]
                        }] }];
        }, propDecorators: { disabledItemHandler: [{
                    type: i0.Input
                }], datalist: [{
                    type: i0.ViewChild,
                    args: [core.TuiDataListDirective, { read: i0.TemplateRef, static: true }]
                }], id: [{
                    type: i0.HostBinding,
                    args: ["id"]
                }] } });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AbstractTuiNativeSelect = AbstractTuiNativeSelect;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-abstract.umd.js.map
