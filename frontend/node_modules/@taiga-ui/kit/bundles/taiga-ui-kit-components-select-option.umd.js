(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@tinkoff/ng-polymorpheus'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/select-option', ['exports', '@angular/core', '@angular/forms', '@taiga-ui/cdk', '@taiga-ui/core', '@tinkoff/ng-polymorpheus', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.components = global["taiga-ui"].kit.components || {}, global["taiga-ui"].kit.components["select-option"] = {}), global.ng.core, global.ng.forms, global.i4, global.i1, global.ngPolymorpheus, global.rxjs, global.rxjs.operators, global.ng.common));
})(this, (function (exports, i0, i3, i4, i1, ngPolymorpheus, rxjs, operators, i2) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    var TuiSelectOptionComponent = /** @class */ (function () {
        function TuiSelectOptionComponent(context, host, el, option, dataList, control, abstractControl) {
            var _this = this;
            this.context = context;
            this.host = host;
            this.el = el;
            this.option = option;
            this.dataList = dataList;
            this.control = control;
            this.abstractControl = abstractControl;
            this.changeDetection$ = new rxjs.Subject();
            this.selected$ = rxjs.merge(this.changeDetection$, this.control.valueChanges || rxjs.EMPTY, i4.tuiTypedFromEvent(this.el.nativeElement, 'animationstart')).pipe(operators.startWith(null), operators.map(function () { return _this.selected; }), operators.distinctUntilChanged());
        }
        Object.defineProperty(TuiSelectOptionComponent.prototype, "matcher", {
            get: function () {
                return this.host.identityMatcher || i4.TUI_DEFAULT_IDENTITY_MATCHER;
            },
            enumerable: false,
            configurable: true
        });
        TuiSelectOptionComponent.prototype.ngDoCheck = function () {
            this.changeDetection$.next();
        };
        TuiSelectOptionComponent.prototype.ngOnInit = function () {
            var _this = this;
            /**
             * This would cause changes inside already checked parent component (during the same change detection cycle),
             * and it might cause ExpressionChanged error due to potential HostBinding
             * (for example, inside {@link https://github.com/angular/angular/blob/main/packages/forms/src/directives/ng_control_status.ts#L99 NgControlStatus}).
             * Microtask keeps it in the same frame but allows change detection to run.
             */
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            Promise.resolve().then(function () {
                if (i4.tuiIsPresent(_this.option.value) && _this.host.checkOption) {
                    _this.host.checkOption(_this.option.value);
                }
            });
        };
        Object.defineProperty(TuiSelectOptionComponent.prototype, "value", {
            get: function () {
                var _a, _b;
                return (_b = (_a = this.abstractControl) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : this.control.value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiSelectOptionComponent.prototype, "selected", {
            get: function () {
                return (i4.tuiIsPresent(this.option.value) &&
                    i4.tuiIsPresent(this.value) &&
                    this.matcher(this.value, this.option.value));
            },
            enumerable: false,
            configurable: true
        });
        return TuiSelectOptionComponent;
    }());
    TuiSelectOptionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSelectOptionComponent, deps: [{ token: ngPolymorpheus.POLYMORPHEUS_CONTEXT }, { token: i1.TUI_DATA_LIST_HOST }, { token: i0.ElementRef }, { token: i1.TuiOptionComponent }, { token: i1.TuiDataListComponent, optional: true }, { token: i3.NgControl }, { token: i4.AbstractTuiControl, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiSelectOptionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSelectOptionComponent, selector: "tui-select-option", ngImport: i0__namespace, template: "<ng-container [ngTemplateOutlet]=\"context.$implicit\"></ng-container>\n<tui-svg\n    *ngIf=\"selected$ | async; else dummy\"\n    automation-id=\"tui-select-option__checkmark\"\n    src=\"tuiIconCheckLarge\"\n    class=\"t-checkmark\"\n    [tuiScrollIntoView]=\"true\"\n></tui-svg>\n<ng-template #dummy>\n    <span class=\"t-dummy\"></span>\n</ng-template>\n", styles: ["@keyframes retrigger{0%{left:1px}to{left:2px}}:host{display:flex;flex:1;align-items:center;max-width:100%;animation:retrigger 1s}.t-checkmark{margin:0 -.375rem 0 auto;border-left:5px solid transparent}.t-dummy{width:1.5rem}\n"], components: [{ type: i1__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace.TuiScrollIntoViewDirective, selector: "[tuiScrollIntoView]", inputs: ["tuiScrollIntoView"] }], pipes: { "async": i2__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSelectOptionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-select-option',
                        templateUrl: './select-option.template.html',
                        styleUrls: ['./select-option.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [ngPolymorpheus.POLYMORPHEUS_CONTEXT]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_DATA_LIST_HOST]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i1__namespace.TuiOptionComponent, decorators: [{
                            type: i0.Inject,
                            args: [i1.TuiOptionComponent]
                        }] }, { type: i1__namespace.TuiDataListComponent, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i1.TuiDataListComponent]
                        }] }, { type: i3__namespace.NgControl, decorators: [{
                            type: i0.Inject,
                            args: [i3.NgControl]
                        }] }, { type: i4__namespace.AbstractTuiControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i4.AbstractTuiControl]
                        }] }];
        } });
    var TUI_SELECT_OPTION = new ngPolymorpheus.PolymorpheusComponent(TuiSelectOptionComponent);

    var TuiSelectOptionModule = /** @class */ (function () {
        function TuiSelectOptionModule() {
        }
        return TuiSelectOptionModule;
    }());
    TuiSelectOptionModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSelectOptionModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiSelectOptionModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSelectOptionModule, declarations: [TuiSelectOptionComponent], imports: [i2.CommonModule, i1.TuiSvgModule, i1.TuiScrollIntoViewModule], exports: [TuiSelectOptionComponent] });
    TuiSelectOptionModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSelectOptionModule, imports: [[i2.CommonModule, i1.TuiSvgModule, i1.TuiScrollIntoViewModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSelectOptionModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.CommonModule, i1.TuiSvgModule, i1.TuiScrollIntoViewModule],
                        declarations: [TuiSelectOptionComponent],
                        exports: [TuiSelectOptionComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_SELECT_OPTION = TUI_SELECT_OPTION;
    exports.TuiSelectOptionComponent = TuiSelectOptionComponent;
    exports.TuiSelectOptionModule = TuiSelectOptionModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-components-select-option.umd.js.map
