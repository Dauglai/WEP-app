import { ElementRef, TemplateRef } from '@angular/core';
import { AbstractTuiControl, TuiBooleanHandler, TuiIdService } from '@taiga-ui/cdk';
import { TuiTextfieldHost } from '@taiga-ui/core';
import { TuiItemsHandlers } from '@taiga-ui/kit/tokens';
import * as i0 from "@angular/core";
export declare abstract class AbstractTuiNativeSelect<T = TuiTextfieldHost> {
    readonly host: T;
    readonly control: AbstractTuiControl<unknown>;
    protected readonly el: ElementRef<HTMLSelectElement>;
    private readonly idService;
    readonly itemsHandlers: TuiItemsHandlers<string>;
    disabledItemHandler: TuiBooleanHandler<string> | null;
    readonly datalist: TemplateRef<any> | null;
    constructor(host: T, control: AbstractTuiControl<unknown>, el: ElementRef<HTMLSelectElement>, idService: TuiIdService, itemsHandlers: TuiItemsHandlers<string>);
    get id(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbstractTuiNativeSelect<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AbstractTuiNativeSelect<any>, never, never, { "disabledItemHandler": "disabledItemHandler"; }, {}, never>;
}
