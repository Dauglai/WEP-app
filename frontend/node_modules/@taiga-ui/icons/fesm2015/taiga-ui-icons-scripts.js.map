{"version":3,"file":"taiga-ui-icons-scripts.js","sources":["../../../projects/icons/scripts/rollup-svgo.ts","../../../projects/icons/scripts/convert-all-compile-file-to-all-file.ts","../../../projects/icons/scripts/post-prettier-format.ts","../../../projects/icons/scripts/prepare-all-to-compile-file.ts","../../../projects/icons/scripts/process-icons.ts","../../../projects/icons/scripts/taiga-ui-icons-scripts.ts"],"sourcesContent":["import {createFilter} from '@rollup/pluginutils';\nimport {Plugin, TransformResult} from 'rollup';\nimport {optimize, OptimizedError, OptimizedSvg, OptimizeOptions} from 'svgo';\n\ntype SvgoResult = OptimizedError | OptimizedSvg;\n\nexport interface TuiRollupSvgoConfig {\n    readonly include?: string;\n\n    readonly exclude?: string;\n\n    readonly options?: OptimizeOptions;\n}\n\nexport function tuiRollupSvgo({\n    include = `**/*.svg`,\n    exclude,\n    options,\n}: TuiRollupSvgoConfig = {}): Plugin {\n    const filter = createFilter(include, exclude);\n\n    return {\n        name: `rollupSvgo`,\n        transform(svgString: string, path: string): TransformResult {\n            const skip = !filter(path);\n\n            if (skip) {\n                console.info(`\\x1B[33m%s\\x1B[0m`, `[skip]`, path);\n\n                return;\n            }\n\n            let data: unknown;\n            let errorMessage: string | undefined;\n\n            try {\n                const result: SvgoResult = optimize(svgString, {path, ...options});\n\n                data = (result as OptimizedSvg)?.data || {};\n                errorMessage = result.error;\n            } catch (err: unknown) {\n                errorMessage = (err as Error)?.message;\n            }\n\n            if (errorMessage) {\n                console.error(\n                    `\\x1B[31m%s\\x1B[0m`,\n                    `[error]`,\n                    path,\n                    `\\n${svgString}`,\n                    `\\n${errorMessage}`,\n                );\n                process.exit(1);\n            }\n\n            console.info(`\\x1B[32m%s\\x1B[0m`, `[success]`, path);\n\n            return {\n                code: `export default ${JSON.stringify(data)}`,\n                map: {mappings: ``},\n            };\n        },\n    };\n}\n","import {rollup, RollupOptions} from 'rollup';\nimport typescript, {RPT2Options} from 'rollup-plugin-typescript2';\n\nimport {tuiRollupSvgo} from './rollup-svgo';\n\nconst banner = `\n/**\n * @description:\n * DO NOT CHANGE THIS FILE. AUTOGENERATED\n *\n * This file contains inline svg icons\n * for users who wants insert into js bundle\n */\n`;\n\ninterface Options {\n    prt2Options: RPT2Options;\n    include: string;\n    from: string;\n    to: string;\n}\n\nexport async function tuiConvertAllCompileFileToAllFile(config: Options): Promise<void> {\n    const {from, to, prt2Options, include} = config;\n\n    const inputOptions: RollupOptions = {\n        input: from,\n        output: {\n            generatedCode: {\n                constBindings: true,\n            },\n        },\n        plugins: [\n            typescript(prt2Options),\n            tuiRollupSvgo({\n                include,\n                options: {\n                    plugins: [\n                        {\n                            name: `preset-default`,\n                            params: {\n                                overrides: {\n                                    removeViewBox: false,\n                                    collapseGroups: false,\n                                    cleanupIDs: false,\n                                    removeUnknownsAndDefaults: false,\n                                },\n                            },\n                        },\n                    ],\n                },\n            }),\n        ],\n    };\n\n    console.info(`\\x1B[36m%s\\x1B[0m`, `TypeScript options: `, prt2Options);\n\n    const bundle = await rollup(inputOptions);\n\n    await bundle.write({\n        banner,\n        file: to,\n        format: `es`,\n        generatedCode: {\n            constBindings: true,\n        },\n    });\n\n    /**\n     * @note:\n     * The rollup bundle must be closed once `write` is finished to let plugins clean up their external\n     * processes or services via the `closeBundle` hook, otherwise it can lead to memory leaks.\n     */\n    await bundle.close();\n}\n","import {readFileSync, writeFileSync} from 'fs';\nimport prettier, {Options as PrettierOptions} from 'prettier';\n\ninterface Options {\n    file: string;\n    config: PrettierOptions;\n}\n\nexport function tuiPostPrettierFormat({file, config}: Options): void {\n    console.info(`\\x1B[36m%s\\x1B[0m`, `format: ${file} by parser - ${config.parser}`);\n\n    const bundledBody = readFileSync(file, `utf8`);\n    const formatted = prettier.format(bundledBody, config);\n\n    writeFileSync(file, formatted);\n}\n","import {readdirSync, writeFileSync} from 'fs';\n\nexport function tuiPrepareAllToCompileFile(iconsSrc: string, entryPointTs: string): void {\n    const icons: string[] = readdirSync(iconsSrc).filter(file => file.endsWith(`.svg`));\n\n    console.info(\n        `\\x1B[36m%s\\x1B[0m`,\n        `Combine all svg icons into one file for bundling: ${icons.length}`,\n    );\n\n    let importDeclarations = ``;\n    let exportDeclarations = ``;\n\n    for (const iconPath of icons) {\n        const fileName = iconPath.split(`.`).shift();\n        const filePath = `./src/${fileName}.svg`;\n\n        importDeclarations += `import ${fileName} from '${filePath}';\\n`;\n        exportDeclarations += `${fileName}, `;\n    }\n\n    writeFileSync(\n        entryPointTs,\n        `${importDeclarations} \\n export { ${exportDeclarations} }`,\n    );\n}\n","import fs from 'fs';\nimport {parse} from 'path';\n\nconst START = `<svg`;\nconst WIDTH_SEARCH = `width=\"`;\nconst HEIGHT_SEARCH = `height=\"`;\n\ninterface WrappedContent {\n    height: string;\n    width: string;\n    src: string;\n}\n\ntype ContentInterceptor = (src: string) => string;\n\nexport function tuiProcessIcons(files: string[], interceptor?: ContentInterceptor): void {\n    for (const file of files) {\n        const baseContent = String(fs.readFileSync(file));\n        const src = interceptor ? interceptor(baseContent) : baseContent;\n\n        const name = parse(file).base.replace(`.svg`, ``);\n\n        if (src.includes(`id=\"${name}\"`)) {\n            console.info(`\\x1B[33m%s\\x1B[0m`, `[skip]:`, file);\n            continue;\n        }\n\n        const wrapped = wrapIcon(src, name);\n\n        const final =\n            // eslint-disable-next-line @taiga-ui/no-typeof\n            typeof wrapped === `string`\n                ? `${wrapped.replace(\n                      START,\n                      `<svg xmlns=\"http://www.w3.org/2000/svg\"><g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg`,\n                  )}</g></svg>`\n                : `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${wrapped.width}\" height=\"${wrapped.height}\">${wrapped.src}</svg>`;\n\n        fs.writeFileSync(file, final);\n\n        console.info(`\\x1B[32m%s\\x1B[0m`, `[preprocessed]:`, file);\n    }\n}\n\nfunction wrapIcon(source: string, name: string): WrappedContent | string {\n    const src = source.slice(Math.max(0, source.indexOf(START)));\n    const attributes = src.slice(0, Math.max(0, src.indexOf(`>`)));\n\n    if (!attributes?.includes(WIDTH_SEARCH) || !attributes.includes(HEIGHT_SEARCH)) {\n        return src;\n    }\n\n    const indexOfWidth = attributes.indexOf(WIDTH_SEARCH);\n    const indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);\n    const widthOffset = indexOfWidth + WIDTH_SEARCH.length;\n    const heightOffset = indexOfHeight + HEIGHT_SEARCH.length;\n    const widthString = attributes.slice(\n        widthOffset,\n        attributes.indexOf(`\"`, widthOffset),\n    );\n    const heightString = attributes.slice(\n        heightOffset,\n        attributes.indexOf(`\"`, heightOffset),\n    );\n\n    if (\n        !heightString ||\n        !widthString ||\n        widthString.includes(`%`) ||\n        heightString.includes(`%`)\n    ) {\n        return src.replace(START, `<svg id=\"${name}\"`);\n    }\n\n    const width = parseInt(widthString, 10);\n    const height = parseInt(heightString, 10);\n    const emWidth = width / 16;\n    const emHeight = height / 16;\n\n    return {\n        width: `${emWidth}em`,\n        height: `${emHeight}em`,\n        src: `\n        <g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\">\n            <svg x=\"50%\" y=\"50%\" width=\"${emWidth}em\" height=\"${emHeight}em\" overflow=\"visible\" viewBox=\"0 0 ${width} ${height}\">\n                <svg x=\"${-width / 2}\" y=\"${-height / 2}\">${src}</svg>\n            </svg>\n        </g>`.trim(),\n    };\n}\n\n/**\n * @deprecated:\n * use @{link tuiProcessIcons}\n */\nexport const processIcons = tuiProcessIcons;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}