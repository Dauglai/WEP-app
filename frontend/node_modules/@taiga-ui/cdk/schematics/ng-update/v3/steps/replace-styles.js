"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.replaceStyles = exports.TUI_WARNING_WRAPPER_MIXINS = exports.TUI_WARNING_NORMALIZE = void 0;
const ng_morph_1 = require("ng-morph");
const breakpoints_1 = require("../constants/breakpoints");
exports.TUI_WARNING_NORMALIZE = `
// [WARNING]: In version 3.0 we drop to support normalize(v7) out-of-the-box
// You need to manually download css file from https://necolas.github.io/normalize.css/
// If you're looking to use reset styles or you can write your own reset.css`;
exports.TUI_WARNING_WRAPPER_MIXINS = `// TODO: (Taiga UI migration): use mixins to customize tuiWrapper. See https://taiga-ui.dev/wrapper`;
function replaceStyles() {
    var _a;
    (_a = ng_morph_1.getActiveProject()) === null || _a === void 0 ? void 0 : _a.getSourceFiles(`**/**.less`).forEach(sourceFile => {
        let fullText = sourceFile.getFullText();
        if (fullText.includes(`taiga-ui-local`)) {
            breakpoints_1.DEPRECATED_BREAKPOINTS.forEach(({ from, to }) => {
                fullText = fullText.replace(new RegExp(`(?<=@media.*)(${from})(?=[\\s,{])`, `g`), to);
            });
        }
        fullText = fullText
            .replace(`tui-wrapper`, `${exports.TUI_WARNING_WRAPPER_MIXINS}\n[tuiWrapper]`)
            .replace(`&[data-state='hovered']`, `&[data-state='hover']`)
            .replace(`&[data-state='pressed']`, `&[data-state='active']`)
            .replace(`tui-portal-host`, `tui-dropdown-host`)
            .replace(`tui-dropdown-box`, `tui-dropdown`)
            .replace(/@import '~@taiga-ui/g, `@import '@taiga-ui`)
            .replace(`@import '@taiga-ui/core/styles/taiga-ui-global';`, `${exports.TUI_WARNING_NORMALIZE}\n@import '@taiga-ui/styles/taiga-ui-global.less';`)
            .replace(/@import '@taiga-ui\/.+(.less)?';/g, val => `${val.replace(`';`, ``)}.less';`.replace(`.less.less`, `.less`));
        sourceFile.replaceWithText(fullText);
    });
}
exports.replaceStyles = replaceStyles;
