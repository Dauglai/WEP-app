{"version":3,"file":"taiga-ui-cdk-directives-overscroll.umd.js","sources":["../../../projects/cdk/directives/overscroll/overscroll.directive.ts","../../../projects/cdk/directives/overscroll/overscroll.module.ts","../../../projects/cdk/directives/overscroll/taiga-ui-cdk-directives-overscroll.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Input,\n    NgZone,\n    Self,\n} from '@angular/core';\nimport {tuiTypedFromEvent, tuiZonefree} from '@taiga-ui/cdk/observables';\nimport {TuiDestroyService} from '@taiga-ui/cdk/services';\nimport {TuiEventWith, TuiOverscrollMode} from '@taiga-ui/cdk/types';\nimport {tuiCanScroll, tuiGetScrollParent, tuiIsElement} from '@taiga-ui/cdk/utils/dom';\nimport {Observable} from 'rxjs';\nimport {filter, switchMap, takeUntil, tap} from 'rxjs/operators';\n\n/**\n * Directive to isolate scrolling, i.e. prevent body scroll behind modal dialog\n */\n@Directive({\n    selector: '[tuiOverscroll]',\n    providers: [TuiDestroyService],\n})\nexport class TuiOverscrollDirective {\n    @Input('tuiOverscroll')\n    mode: TuiOverscrollMode | '' = 'scroll';\n\n    constructor(\n        @Inject(ElementRef) {nativeElement}: ElementRef<HTMLElement>,\n        @Inject(NgZone) ngZone: NgZone,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<void>,\n    ) {\n        tuiTypedFromEvent(nativeElement, 'wheel', {passive: false})\n            .pipe(\n                filter(() => this.enabled),\n                tuiZonefree(ngZone),\n                takeUntil(destroy$),\n            )\n            .subscribe(event => {\n                this.processEvent(\n                    event,\n                    !!event.deltaY,\n                    event.deltaY ? event.deltaY < 0 : event.deltaX < 0,\n                );\n            });\n\n        tuiTypedFromEvent(nativeElement, 'touchstart', {passive: true})\n            .pipe(\n                switchMap(({touches}) => {\n                    let {clientX, clientY} = touches[0];\n                    let deltaX = 0;\n                    let deltaY = 0;\n                    let vertical: boolean;\n\n                    return tuiTypedFromEvent(nativeElement, 'touchmove', {\n                        passive: false,\n                    }).pipe(\n                        filter(() => this.enabled),\n                        tap(event => {\n                            // We have to have it in tap instead of subscribe due to variables in closure\n                            const changedTouch = event.changedTouches[0];\n\n                            deltaX = clientX - changedTouch.clientX;\n                            deltaY = clientY - changedTouch.clientY;\n                            clientX = changedTouch.clientX;\n                            clientY = changedTouch.clientY;\n\n                            if (vertical === undefined) {\n                                vertical = Math.abs(deltaY) > Math.abs(deltaX);\n                            }\n\n                            this.processEvent(\n                                event,\n                                vertical,\n                                vertical ? deltaY < 0 : deltaX < 0,\n                            );\n                        }),\n                    );\n                }),\n                tuiZonefree(ngZone),\n                takeUntil(destroy$),\n            )\n            .subscribe();\n    }\n\n    get enabled(): boolean {\n        return this.mode !== 'none';\n    }\n\n    @HostBinding('style.overscrollBehavior')\n    get overscrollBehavior(): 'contain' | null {\n        return this.enabled ? 'contain' : null;\n    }\n\n    private processEvent(\n        event: TuiEventWith<Event, HTMLElement>,\n        vertical: boolean,\n        negative: boolean,\n    ): void {\n        const {target, currentTarget, cancelable} = event;\n\n        if (\n            !cancelable ||\n            !tuiIsElement(target) ||\n            (target as HTMLInputElement)?.type === 'range'\n        ) {\n            return;\n        }\n\n        // This is all what's needed in Chrome/Firefox thanks to CSS overscroll-behavior\n        if (\n            this.mode === 'all' &&\n            ((vertical && !currentTarget.contains(tuiGetScrollParent(target))) ||\n                (!vertical && !currentTarget.contains(tuiGetScrollParent(target, false))))\n        ) {\n            event.preventDefault();\n\n            return;\n        }\n\n        // This is Safari/IE/Edge fallback\n        if (\n            vertical &&\n            ((negative && !tuiCanScroll(target, currentTarget, true, false)) ||\n                (!negative && !tuiCanScroll(target, currentTarget, true, true)))\n        ) {\n            event.preventDefault();\n\n            return;\n        }\n\n        if (\n            !vertical &&\n            ((negative && !tuiCanScroll(target, currentTarget, false, false)) ||\n                (!negative && !tuiCanScroll(target, currentTarget, false, true)))\n        ) {\n            event.preventDefault();\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiOverscrollDirective} from './overscroll.directive';\n\n@NgModule({\n    declarations: [TuiOverscrollDirective],\n    exports: [TuiOverscrollDirective],\n})\nexport class TuiOverscrollModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tuiTypedFromEvent","filter","tuiZonefree","takeUntil","switchMap","tap","tuiIsElement","tuiGetScrollParent","tuiCanScroll","i0","ElementRef","NgZone","TuiDestroyService","Directive","Inject","Self","Input","HostBinding","NgModule"],"mappings":"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"}