(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('@taiga-ui/cdk/observables'), require('rxjs/operators'), require('@ng-web-apis/common'), require('@taiga-ui/cdk/constants'), require('@taiga-ui/cdk/utils/dom'), require('@angular/common'), require('@ng-web-apis/resize-observer'), require('@taiga-ui/cdk/classes'), require('@taiga-ui/cdk/utils/math'), require('@taiga-ui/cdk/utils/miscellaneous'), require('rxjs/fetch'), require('@taiga-ui/cdk/tokens'), require('@taiga-ui/cdk/utils')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/services', ['exports', '@angular/core', 'rxjs', '@taiga-ui/cdk/observables', 'rxjs/operators', '@ng-web-apis/common', '@taiga-ui/cdk/constants', '@taiga-ui/cdk/utils/dom', '@angular/common', '@ng-web-apis/resize-observer', '@taiga-ui/cdk/classes', '@taiga-ui/cdk/utils/math', '@taiga-ui/cdk/utils/miscellaneous', 'rxjs/fetch', '@taiga-ui/cdk/tokens', '@taiga-ui/cdk/utils'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.services = {}), global.ng.core, global.rxjs, global["taiga-ui"].cdk.observables, global.rxjs.operators, global.common, global["taiga-ui"].cdk.constants, global["taiga-ui"].cdk.utils.dom, global.ng.common, global.resizeObserver, global["taiga-ui"].cdk.classes, global["taiga-ui"].cdk.utils.math, global["taiga-ui"].cdk.utils.miscellaneous, global.rxjs.fetch, global["taiga-ui"].cdk.tokens, global["taiga-ui"].cdk.utils));
})(this, (function (exports, i0, i1, observables, operators, common, constants, dom, common$1, resizeObserver, classes, math, miscellaneous, fetch$1, tokens, utils) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    /**
     * @note:
     * Observable abstraction over ngOnDestroy to use with takeUntil
     *
     * Why we use `ReplaySubject` instead of `Subject`?
     * Well, we’ll use ReplaySubject to emit the last message in case
     * the subscription is ended after the component is destroyed.
     */
    var TuiDestroyService = /** @class */ (function (_super) {
        __extends(TuiDestroyService, _super);
        function TuiDestroyService() {
            return _super.call(this, 1) || this;
        }
        TuiDestroyService.prototype.ngOnDestroy = function () {
            this.next();
            this.complete();
        };
        return TuiDestroyService;
    }(i1.ReplaySubject));
    TuiDestroyService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDestroyService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiDestroyService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDestroyService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDestroyService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return []; } });

    /**
     * Service to use styles with directives
     */
    var TuiDirectiveStylesService = /** @class */ (function () {
        function TuiDirectiveStylesService(resolver, injector) {
            this.resolver = resolver;
            this.injector = injector;
            this.map = new Map();
        }
        TuiDirectiveStylesService.prototype.addComponent = function (component) {
            if (!this.map.has(component)) {
                this.map.set(component, this.resolver.resolveComponentFactory(component).create(this.injector));
            }
        };
        return TuiDirectiveStylesService;
    }());
    TuiDirectiveStylesService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDirectiveStylesService, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.INJECTOR }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiDirectiveStylesService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDirectiveStylesService, providedIn: "root" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDirectiveStylesService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: "root",
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ComponentFactoryResolver, decorators: [{
                            type: i0.Inject,
                            args: [i0.ComponentFactoryResolver]
                        }] }, { type: i0__namespace.Injector, decorators: [{
                            type: i0.Inject,
                            args: [i0.INJECTOR]
                        }] }];
        } });

    /**
     * Service to imitate :focus-visible
     * (https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible)
     * in browsers that do not support it
     */
    var TuiFocusVisibleService = /** @class */ (function (_super) {
        __extends(TuiFocusVisibleService, _super);
        function TuiFocusVisibleService(_a, cdr, destroy$) {
            var nativeElement = _a.nativeElement;
            var _this = _super.call(this, function (subscriber) { return _this.focusVisible$.subscribe(subscriber); }) || this;
            _this.focusVisible$ = observables.tuiFocusVisibleObservable(nativeElement).pipe(observables.tuiWatch(cdr), operators.takeUntil(destroy$));
            return _this;
        }
        return TuiFocusVisibleService;
    }(i1.Observable));
    TuiFocusVisibleService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusVisibleService, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: TuiDestroyService, self: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiFocusVisibleService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusVisibleService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusVisibleService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [TuiDestroyService]
                        }] }];
        } });

    var TUI = "tui_";
    /**
     * Generates unique ids
     */
    var TuiIdService = /** @class */ (function () {
        function TuiIdService() {
        }
        TuiIdService.prototype.generate = function () {
            return "" + TUI + TuiIdService.autoId++ + Date.now();
        };
        return TuiIdService;
    }());
    TuiIdService.autoId = 0;
    TuiIdService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIdService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiIdService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIdService, providedIn: "root" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIdService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: "root",
                    }]
            }] });

    /**
     * Service that subscribes to scroll events of all parent elements
     */
    var TuiParentsScrollService = /** @class */ (function (_super) {
        __extends(TuiParentsScrollService, _super);
        function TuiParentsScrollService(el, win) {
            var _this = _super.call(this, function (subscriber) { return _this.callback$.subscribe(subscriber); }) || this;
            _this.callback$ = i1.defer(function () {
                var nativeElement = el.nativeElement;
                var eventTargets = [win, nativeElement];
                while (nativeElement.parentElement) {
                    nativeElement = nativeElement.parentElement;
                    eventTargets.push(nativeElement);
                }
                return i1.merge.apply(void 0, __spreadArray([], __read(eventTargets.map(function (element) { return observables.tuiTypedFromEvent(element, "scroll"); }))));
            });
            return _this;
        }
        return TuiParentsScrollService;
    }(i1.Observable));
    TuiParentsScrollService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiParentsScrollService, deps: [{ token: i0.ElementRef }, { token: common.WINDOW }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiParentsScrollService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiParentsScrollService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiParentsScrollService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: Window, decorators: [{
                            type: i0.Inject,
                            args: [common.WINDOW]
                        }] }];
        } });

    // @bad TODO: Consider Intersection Observer with fallback to current implementation
    /**
     * Service that monitors element visibility by subscribing to scrolls
     * and polling with set interval, returns either null or an array
     * of elements that overlap given element edges
     */
    var TuiObscuredService = /** @class */ (function (_super) {
        __extends(TuiObscuredService, _super);
        function TuiObscuredService(parentsScroll$, _a, ngZone, win, destroy$, animationFrame$) {
            var nativeElement = _a.nativeElement;
            var _this = _super.call(this, function (subscriber) { return _this.obscured$.subscribe(subscriber); }) || this;
            _this.obscured$ = i1.merge(
            // delay is added so it will not interfere with other listeners
            i1.merge(parentsScroll$, i1.fromEvent(win, "resize")).pipe(operators.delay(0)), animationFrame$.pipe(operators.throttleTime(constants.POLLING_TIME))).pipe(operators.map(function () { return dom.tuiGetElementObscures(nativeElement); }), operators.startWith(null), operators.distinctUntilChanged(), observables.tuiZoneOptimized(ngZone), operators.takeUntil(destroy$));
            return _this;
        }
        return TuiObscuredService;
    }(i1.Observable));
    TuiObscuredService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiObscuredService, deps: [{ token: TuiParentsScrollService, self: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: common.WINDOW }, { token: TuiDestroyService, self: true }, { token: common.ANIMATION_FRAME }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiObscuredService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiObscuredService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiObscuredService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: TuiParentsScrollService, decorators: [{
                            type: i0.Inject,
                            args: [TuiParentsScrollService]
                        }, {
                            type: i0.Self
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.NgZone, decorators: [{
                            type: i0.Inject,
                            args: [i0.NgZone]
                        }] }, { type: Window, decorators: [{
                            type: i0.Inject,
                            args: [common.WINDOW]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [TuiDestroyService]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [common.ANIMATION_FRAME]
                        }] }];
        } });

    var TuiPanService = /** @class */ (function (_super) {
        __extends(TuiPanService, _super);
        function TuiPanService(_a, doc) {
            var nativeElement = _a.nativeElement;
            return _super.call(this, function (subscriber) {
                i1.merge(observables.tuiTypedFromEvent(nativeElement, "touchstart", { passive: true }), observables.tuiTypedFromEvent(nativeElement, "mousedown"))
                    .pipe(operators.switchMap(function () { return i1.merge(observables.tuiTypedFromEvent(doc, "touchmove", {
                    passive: true,
                }).pipe(operators.filter(function (_a) {
                    var touches = _a.touches;
                    return touches.length < 2;
                }), operators.map(function (_a) {
                    var touches = _a.touches;
                    return touches[0];
                })), observables.tuiTypedFromEvent(doc, "mousemove")); }), operators.pairwise(), operators.map(function (_a) {
                    var _b = __read(_a, 2), first = _b[0], second = _b[1];
                    var deltaX = second.clientX - first.clientX;
                    var deltaY = second.clientY - first.clientY;
                    return [deltaX, deltaY];
                }), 
                // eslint-disable-next-line rxjs/no-unsafe-takeuntil
                operators.takeUntil(i1.merge(observables.tuiTypedFromEvent(doc, "touchend"), observables.tuiTypedFromEvent(doc, "mouseup"))), operators.repeat())
                    .subscribe(subscriber);
            }) || this;
        }
        return TuiPanService;
    }(i1.Observable));
    TuiPanService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPanService, deps: [{ token: i0.ElementRef }, { token: common$1.DOCUMENT }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiPanService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPanService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPanService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: Document, decorators: [{
                            type: i0.Inject,
                            args: [common$1.DOCUMENT]
                        }] }];
        } });

    var TuiResizeService = /** @class */ (function (_super) {
        __extends(TuiResizeService, _super);
        function TuiResizeService(el, ngZone, destroy$, support, box, animationFrame$) {
            var _this = _super.call(this, el, ngZone, support, box) || this;
            return _this.pipe(operators.catchError(function () {
                /**
                 * @note: if not supported ResizeObserver
                 * remove `catchError` after supports modern browsers
                 */
                return animationFrame$.pipe(operators.throttleTime(constants.POLLING_TIME), operators.map(function () { return el.nativeElement.clientWidth + " " + el.nativeElement.clientHeight; }), operators.distinctUntilChanged(), operators.map(function () { return constants.EMPTY_ARRAY; }));
            }), operators.debounceTime(0), observables.tuiZonefree(ngZone), operators.share(), operators.takeUntil(destroy$));
        }
        return TuiResizeService;
    }(resizeObserver.ResizeObserverService));
    TuiResizeService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiResizeService, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: TuiDestroyService, self: true }, { token: resizeObserver.RESIZE_OBSERVER_SUPPORT }, { token: resizeObserver.RESIZE_OPTION_BOX }, { token: common.ANIMATION_FRAME }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiResizeService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiResizeService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiResizeService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.NgZone, decorators: [{
                            type: i0.Inject,
                            args: [i0.NgZone]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [TuiDestroyService]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [resizeObserver.RESIZE_OBSERVER_SUPPORT]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [resizeObserver.RESIZE_OPTION_BOX]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [common.ANIMATION_FRAME]
                        }] }];
        } });

    var SCROLL_TIME = 300;
    var TuiScrollService = /** @class */ (function () {
        function TuiScrollService(performanceRef, animationFrame$) {
            this.performanceRef = performanceRef;
            this.animationFrame$ = animationFrame$;
        }
        TuiScrollService.prototype.scroll$ = function (elementOrWindow, scrollTop, scrollLeft, duration) {
            var _this = this;
            if (scrollLeft === void 0) { scrollLeft = getX(elementOrWindow); }
            if (duration === void 0) { duration = SCROLL_TIME; }
            ngDevMode && classes.tuiAssert.assert(duration >= 0, "Duration cannot be negative");
            ngDevMode && classes.tuiAssert.assert(scrollTop >= 0, "scrollTop cannot be negative");
            ngDevMode && classes.tuiAssert.assert(scrollLeft >= 0, "scrollLeft cannot be negative");
            var initialTop = getY(elementOrWindow);
            var initialLeft = getX(elementOrWindow);
            var deltaTop = scrollTop - initialTop;
            var deltaLeft = scrollLeft - initialLeft;
            var observable = !duration
                ? i1.of([scrollTop, scrollLeft])
                : i1.defer(function () { return i1.of(_this.performanceRef.now()); }).pipe(operators.switchMap(function (start) { return _this.animationFrame$.pipe(operators.map(function (now) { return now - start; })); }), operators.map(function (elapsed) { return miscellaneous.tuiEaseInOutQuad(math.tuiClamp(elapsed / duration, 0, 1)); }), operators.map(function (percent) { return [
                    initialTop + deltaTop * percent,
                    initialLeft + deltaLeft * percent,
                ]; }), operators.takeUntil(i1.timer(duration)));
            return observable.pipe(operators.tap(function (_b) {
                var _c = __read(_b, 2), scrollTop = _c[0], scrollLeft = _c[1];
                var _a;
                (_a = elementOrWindow.scrollTo) === null || _a === void 0 ? void 0 : _a.call(elementOrWindow, scrollLeft, scrollTop);
            }));
        };
        return TuiScrollService;
    }());
    TuiScrollService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollService, deps: [{ token: common.PERFORMANCE }, { token: common.ANIMATION_FRAME }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiScrollService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollService, providedIn: "root" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: "root",
                    }]
            }], ctorParameters: function () {
            return [{ type: Performance, decorators: [{
                            type: i0.Inject,
                            args: [common.PERFORMANCE]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [common.ANIMATION_FRAME]
                        }] }];
        } });
    function getX(elementOrWindow) {
        return "scrollX" in elementOrWindow
            ? elementOrWindow.scrollX
            : elementOrWindow.scrollLeft;
    }
    function getY(elementOrWindow) {
        return "scrollY" in elementOrWindow
            ? elementOrWindow.scrollY
            : elementOrWindow.scrollTop;
    }

    var TuiStaticRequestService = /** @class */ (function () {
        function TuiStaticRequestService(win, platformId) {
            this.win = win;
            this.platformId = platformId;
            this.cache = new Map();
        }
        TuiStaticRequestService.prototype.request = function (url) {
            var _this = this;
            var cache = this.cache.get(url);
            if (cache) {
                return cache;
            }
            var response$ = "AbortController" in this.win || common$1.isPlatformServer(this.platformId)
                ? fetch$1.fromFetch(url)
                : /**
                   * Fallback for Firefox 55 and 56
                   * TODO: drop after browser support bump
                   */
                    i1.defer(function () { return i1.from(fetch(url)); });
            var piped = response$.pipe(operators.switchMap(function (res) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                return [2 /*return*/, res.text()];
            }); }); }), operators.shareReplay({ bufferSize: 1, refCount: false }));
            this.cache.set(url, piped);
            return piped;
        };
        return TuiStaticRequestService;
    }());
    TuiStaticRequestService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiStaticRequestService, deps: [{ token: common.WINDOW }, { token: i0.PLATFORM_ID }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiStaticRequestService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiStaticRequestService, providedIn: "root" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiStaticRequestService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: "root",
                    }]
            }], ctorParameters: function () {
            return [{ type: Window, decorators: [{
                            type: i0.Inject,
                            args: [common.WINDOW]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.PLATFORM_ID]
                        }] }];
        } });

    var TuiSwipeService = /** @class */ (function (_super) {
        __extends(TuiSwipeService, _super);
        function TuiSwipeService(_a, _b, doc) {
            var nativeElement = _a.nativeElement;
            var timeout = _b.timeout, threshold = _b.threshold;
            return _super.call(this, function (subscriber) {
                i1.merge(observables.tuiTypedFromEvent(nativeElement, "touchstart", { passive: true }), observables.tuiTypedFromEvent(doc, "touchend"))
                    .pipe(operators.pairwise(), operators.filter(function (_a) {
                    var _b = __read(_a, 2), first = _b[0], second = _b[1];
                    return !!first.touches.length &&
                        first.touches[0].identifier ===
                            second.changedTouches[0].identifier;
                }), operators.map(function (_a) {
                    var _b = __read(_a, 2), start = _b[0], end = _b[1];
                    var startX = start.touches[0].clientX;
                    var startY = start.touches[0].clientY;
                    var endX = end.changedTouches[0].clientX;
                    var endY = end.changedTouches[0].clientY;
                    var distanceX = startX - endX;
                    var distanceY = startY - endY;
                    var duration = end.timeStamp - start.timeStamp;
                    if ((Math.abs(distanceX) > threshold ||
                        Math.abs(distanceY) > threshold) &&
                        duration < timeout) {
                        return {
                            direction: miscellaneous.tuiGetSwipeDirection(distanceX, distanceY),
                            events: [start, end],
                        };
                    }
                    return null;
                }), operators.filter(miscellaneous.tuiIsPresent))
                    .subscribe(subscriber);
            }) || this;
        }
        return TuiSwipeService;
    }(i1.Observable));
    TuiSwipeService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeService, deps: [{ token: i0.ElementRef }, { token: tokens.TUI_SWIPE_OPTIONS }, { token: common$1.DOCUMENT }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiSwipeService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_SWIPE_OPTIONS]
                        }] }, { type: Document, decorators: [{
                            type: i0.Inject,
                            args: [common$1.DOCUMENT]
                        }] }];
        } });

    var TOUCH_SENSITIVITY = 0.01;
    var TuiZoomService = /** @class */ (function (_super) {
        __extends(TuiZoomService, _super);
        function TuiZoomService(_a, _b) {
            var nativeElement = _a.nativeElement;
            var wheelSensitivity = _b.wheelSensitivity;
            return _super.call(this, function (subscriber) {
                i1.merge(observables.tuiTypedFromEvent(nativeElement, "touchstart", { passive: true }).pipe(operators.filter(function (_a) {
                    var touches = _a.touches;
                    return touches.length > 1;
                }), operators.switchMap(function (startEvent) { return observables.tuiTypedFromEvent(nativeElement, "touchmove", {
                    passive: true,
                }).pipe(observables.tuiPreventDefault(), operators.scan(function (prev, event) {
                    var distance = utils.tuiDistanceBetweenTouches(event);
                    return {
                        event: event,
                        distance: distance,
                        delta: (distance - prev.distance) *
                            TOUCH_SENSITIVITY,
                    };
                }, {
                    event: startEvent,
                    distance: utils.tuiDistanceBetweenTouches(startEvent),
                    delta: 0,
                }), operators.map(function (_a) {
                    var event = _a.event, delta = _a.delta;
                    var clientX = (event.touches[0].clientX +
                        event.touches[1].clientX) /
                        2;
                    var clientY = (event.touches[0].clientY +
                        event.touches[1].clientY) /
                        2;
                    return { clientX: clientX, clientY: clientY, delta: delta, event: event };
                }), operators.takeUntil(observables.tuiTypedFromEvent(nativeElement, "touchend"))); })), observables.tuiTypedFromEvent(nativeElement, "wheel", { passive: false }).pipe(observables.tuiPreventDefault(), operators.map(function (wheel) { return ({
                    clientX: wheel.clientX,
                    clientY: wheel.clientY,
                    delta: -wheel.deltaY * wheelSensitivity,
                    event: wheel,
                }); }))).subscribe(subscriber);
            }) || this;
        }
        return TuiZoomService;
    }(i1.Observable));
    TuiZoomService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiZoomService, deps: [{ token: i0.ElementRef }, { token: tokens.TUI_ZOOM_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    TuiZoomService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiZoomService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiZoomService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_ZOOM_OPTIONS]
                        }] }];
        } });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiDestroyService = TuiDestroyService;
    exports.TuiDirectiveStylesService = TuiDirectiveStylesService;
    exports.TuiFocusVisibleService = TuiFocusVisibleService;
    exports.TuiIdService = TuiIdService;
    exports.TuiObscuredService = TuiObscuredService;
    exports.TuiPanService = TuiPanService;
    exports.TuiParentsScrollService = TuiParentsScrollService;
    exports.TuiResizeService = TuiResizeService;
    exports.TuiScrollService = TuiScrollService;
    exports.TuiStaticRequestService = TuiStaticRequestService;
    exports.TuiSwipeService = TuiSwipeService;
    exports.TuiZoomService = TuiZoomService;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-services.umd.js.map
