(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/pipes/replace', ['exports', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.pipes = global["taiga-ui"].cdk.pipes || {}, global["taiga-ui"].cdk.pipes.replace = {}), global.ng.core));
})(this, (function (exports, i0) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var TuiReplacePipe = /** @class */ (function () {
        function TuiReplacePipe() {
        }
        TuiReplacePipe.prototype.transform = function (value, search, replaceValue) {
            var _a;
            return ((_a = value === null || value === void 0 ? void 0 : value.replace(search, 
            // TS bug: https://github.com/microsoft/TypeScript/issues/22378
            replaceValue)) !== null && _a !== void 0 ? _a : "");
        };
        return TuiReplacePipe;
    }());
    TuiReplacePipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReplacePipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiReplacePipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReplacePipe, name: "tuiReplace" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReplacePipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: "tuiReplace" }]
            }] });

    var TuiReplacePipeModule = /** @class */ (function () {
        function TuiReplacePipeModule() {
        }
        return TuiReplacePipeModule;
    }());
    TuiReplacePipeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReplacePipeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiReplacePipeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReplacePipeModule, declarations: [TuiReplacePipe], exports: [TuiReplacePipe] });
    TuiReplacePipeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReplacePipeModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReplacePipeModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        exports: [TuiReplacePipe],
                        declarations: [TuiReplacePipe],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiReplacePipe = TuiReplacePipe;
    exports.TuiReplacePipeModule = TuiReplacePipeModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-pipes-replace.umd.js.map
