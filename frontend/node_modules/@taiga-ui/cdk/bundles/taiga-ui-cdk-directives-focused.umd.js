(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk/observables'), require('@taiga-ui/cdk/utils/focus'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/directives/focused', ['exports', '@angular/core', '@taiga-ui/cdk/observables', '@taiga-ui/cdk/utils/focus', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.directives = global["taiga-ui"].cdk.directives || {}, global["taiga-ui"].cdk.directives.focused = {}), global.ng.core, global["taiga-ui"].cdk.observables, global["taiga-ui"].cdk.utils.focus, global.rxjs, global.rxjs.operators));
})(this, (function (exports, i0, observables, focus, rxjs, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    /**
     * Directive to monitor focus/blur status, works with focusIn/focus-out
     * instead of focus/blur to sync events order with Internet Explorer and
     * other focus related directives that require bubbling
     */
    var TuiFocusedDirective = /** @class */ (function () {
        function TuiFocusedDirective(_a, ngZone) {
            var nativeElement = _a.nativeElement;
            this.tuiFocusedChange = rxjs.merge(observables.tuiTypedFromEvent(nativeElement, 'focusin'), observables.tuiTypedFromEvent(nativeElement, 'focusout')).pipe(operators.map(function () { return focus.tuiIsNativeFocused(nativeElement); }), operators.startWith(false), operators.distinctUntilChanged(), operators.skip(1), observables.tuiZoneOptimized(ngZone));
        }
        return TuiFocusedDirective;
    }());
    TuiFocusedDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusedDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiFocusedDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiFocusedDirective, selector: "[tuiFocusedChange]", outputs: { tuiFocusedChange: "tuiFocusedChange" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusedDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiFocusedChange]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.NgZone, decorators: [{
                            type: i0.Inject,
                            args: [i0.NgZone]
                        }] }];
        }, propDecorators: { tuiFocusedChange: [{
                    type: i0.Output
                }] } });

    var TuiFocusedModule = /** @class */ (function () {
        function TuiFocusedModule() {
        }
        return TuiFocusedModule;
    }());
    TuiFocusedModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusedModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiFocusedModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusedModule, declarations: [TuiFocusedDirective], exports: [TuiFocusedDirective] });
    TuiFocusedModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusedModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFocusedModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiFocusedDirective],
                        exports: [TuiFocusedDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiFocusedDirective = TuiFocusedDirective;
    exports.TuiFocusedModule = TuiFocusedModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-directives-focused.umd.js.map
