(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@taiga-ui/cdk/directives/active-zone'), require('@taiga-ui/cdk/directives/auto-focus'), require('@taiga-ui/cdk/directives/autofilled'), require('@taiga-ui/cdk/directives/checked'), require('@taiga-ui/cdk/directives/control'), require('@taiga-ui/cdk/directives/copy-processor'), require('@taiga-ui/cdk/directives/drag'), require('@taiga-ui/cdk/directives/droppable'), require('@taiga-ui/cdk/directives/element'), require('@taiga-ui/cdk/directives/focus-trap'), require('@taiga-ui/cdk/directives/focus-visible'), require('@taiga-ui/cdk/directives/focusable'), require('@taiga-ui/cdk/directives/focused'), require('@taiga-ui/cdk/directives/for'), require('@taiga-ui/cdk/directives/for-async'), require('@taiga-ui/cdk/directives/high-dpi'), require('@taiga-ui/cdk/directives/hovered'), require('@taiga-ui/cdk/directives/item'), require('@taiga-ui/cdk/directives/let'), require('@taiga-ui/cdk/directives/media'), require('@taiga-ui/cdk/directives/obscured'), require('@taiga-ui/cdk/directives/overscroll'), require('@taiga-ui/cdk/directives/pan'), require('@taiga-ui/cdk/directives/portal'), require('@taiga-ui/cdk/directives/pressed'), require('@taiga-ui/cdk/directives/prevent-default'), require('@taiga-ui/cdk/directives/repeat-times'), require('@taiga-ui/cdk/directives/resize'), require('@taiga-ui/cdk/directives/resizer'), require('@taiga-ui/cdk/directives/swipe'), require('@taiga-ui/cdk/directives/validator'), require('@taiga-ui/cdk/directives/value-changes'), require('@taiga-ui/cdk/directives/zoom')) :
	typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/directives', ['exports', '@taiga-ui/cdk/directives/active-zone', '@taiga-ui/cdk/directives/auto-focus', '@taiga-ui/cdk/directives/autofilled', '@taiga-ui/cdk/directives/checked', '@taiga-ui/cdk/directives/control', '@taiga-ui/cdk/directives/copy-processor', '@taiga-ui/cdk/directives/drag', '@taiga-ui/cdk/directives/droppable', '@taiga-ui/cdk/directives/element', '@taiga-ui/cdk/directives/focus-trap', '@taiga-ui/cdk/directives/focus-visible', '@taiga-ui/cdk/directives/focusable', '@taiga-ui/cdk/directives/focused', '@taiga-ui/cdk/directives/for', '@taiga-ui/cdk/directives/for-async', '@taiga-ui/cdk/directives/high-dpi', '@taiga-ui/cdk/directives/hovered', '@taiga-ui/cdk/directives/item', '@taiga-ui/cdk/directives/let', '@taiga-ui/cdk/directives/media', '@taiga-ui/cdk/directives/obscured', '@taiga-ui/cdk/directives/overscroll', '@taiga-ui/cdk/directives/pan', '@taiga-ui/cdk/directives/portal', '@taiga-ui/cdk/directives/pressed', '@taiga-ui/cdk/directives/prevent-default', '@taiga-ui/cdk/directives/repeat-times', '@taiga-ui/cdk/directives/resize', '@taiga-ui/cdk/directives/resizer', '@taiga-ui/cdk/directives/swipe', '@taiga-ui/cdk/directives/validator', '@taiga-ui/cdk/directives/value-changes', '@taiga-ui/cdk/directives/zoom'], factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.directives = {}), global["taiga-ui"].cdk.directives["active-zone"], global["taiga-ui"].cdk.directives["auto-focus"], global["taiga-ui"].cdk.directives.autofilled, global["taiga-ui"].cdk.directives.checked, global["taiga-ui"].cdk.directives.control, global["taiga-ui"].cdk.directives["copy-processor"], global["taiga-ui"].cdk.directives.drag, global["taiga-ui"].cdk.directives.droppable, global["taiga-ui"].cdk.directives.element, global["taiga-ui"].cdk.directives["focus-trap"], global["taiga-ui"].cdk.directives["focus-visible"], global["taiga-ui"].cdk.directives.focusable, global["taiga-ui"].cdk.directives.focused, global["taiga-ui"].cdk.directives["for"], global["taiga-ui"].cdk.directives["for-async"], global["taiga-ui"].cdk.directives["high-dpi"], global["taiga-ui"].cdk.directives.hovered, global["taiga-ui"].cdk.directives.item, global["taiga-ui"].cdk.directives["let"], global["taiga-ui"].cdk.directives.media, global["taiga-ui"].cdk.directives.obscured, global["taiga-ui"].cdk.directives.overscroll, global["taiga-ui"].cdk.directives.pan, global["taiga-ui"].cdk.directives.portal, global["taiga-ui"].cdk.directives.pressed, global["taiga-ui"].cdk.directives["prevent-default"], global["taiga-ui"].cdk.directives["repeat-times"], global["taiga-ui"].cdk.directives.resize, global["taiga-ui"].cdk.directives.resizer, global["taiga-ui"].cdk.directives.swipe, global["taiga-ui"].cdk.directives.validator, global["taiga-ui"].cdk.directives["value-changes"], global["taiga-ui"].cdk.directives.zoom));
})(this, (function (exports, activeZone, autoFocus, autofilled, checked, control, copyProcessor, drag, droppable, element, focusTrap, focusVisible, focusable, focused, _for, forAsync, highDpi, hovered, item, _let, media, obscured, overscroll, pan, portal, pressed, preventDefault, repeatTimes, resize, resizer, swipe, validator, valueChanges, zoom) { 'use strict';

	/**
	 * Generated bundle index. Do not edit.
	 */

	Object.keys(activeZone).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return activeZone[k]; }
		});
	});
	Object.keys(autoFocus).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return autoFocus[k]; }
		});
	});
	Object.keys(autofilled).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return autofilled[k]; }
		});
	});
	Object.keys(checked).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return checked[k]; }
		});
	});
	Object.keys(control).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return control[k]; }
		});
	});
	Object.keys(copyProcessor).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return copyProcessor[k]; }
		});
	});
	Object.keys(drag).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return drag[k]; }
		});
	});
	Object.keys(droppable).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return droppable[k]; }
		});
	});
	Object.keys(element).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return element[k]; }
		});
	});
	Object.keys(focusTrap).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return focusTrap[k]; }
		});
	});
	Object.keys(focusVisible).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return focusVisible[k]; }
		});
	});
	Object.keys(focusable).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return focusable[k]; }
		});
	});
	Object.keys(focused).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return focused[k]; }
		});
	});
	Object.keys(_for).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return _for[k]; }
		});
	});
	Object.keys(forAsync).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return forAsync[k]; }
		});
	});
	Object.keys(highDpi).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return highDpi[k]; }
		});
	});
	Object.keys(hovered).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return hovered[k]; }
		});
	});
	Object.keys(item).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return item[k]; }
		});
	});
	Object.keys(_let).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return _let[k]; }
		});
	});
	Object.keys(media).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return media[k]; }
		});
	});
	Object.keys(obscured).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return obscured[k]; }
		});
	});
	Object.keys(overscroll).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return overscroll[k]; }
		});
	});
	Object.keys(pan).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return pan[k]; }
		});
	});
	Object.keys(portal).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return portal[k]; }
		});
	});
	Object.keys(pressed).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return pressed[k]; }
		});
	});
	Object.keys(preventDefault).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return preventDefault[k]; }
		});
	});
	Object.keys(repeatTimes).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return repeatTimes[k]; }
		});
	});
	Object.keys(resize).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return resize[k]; }
		});
	});
	Object.keys(resizer).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return resizer[k]; }
		});
	});
	Object.keys(swipe).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return swipe[k]; }
		});
	});
	Object.keys(validator).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return validator[k]; }
		});
	});
	Object.keys(valueChanges).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return valueChanges[k]; }
		});
	});
	Object.keys(zoom).forEach(function (k) {
		if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
			enumerable: true,
			get: function () { return zoom[k]; }
		});
	});

	Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-directives.umd.js.map
