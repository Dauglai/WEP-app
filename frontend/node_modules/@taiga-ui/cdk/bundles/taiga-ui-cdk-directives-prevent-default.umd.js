(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk/observables'), require('@taiga-ui/cdk/services'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/directives/prevent-default', ['exports', '@angular/core', '@taiga-ui/cdk/observables', '@taiga-ui/cdk/services', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.directives = global["taiga-ui"].cdk.directives || {}, global["taiga-ui"].cdk.directives["prevent-default"] = {}), global.ng.core, global["taiga-ui"].cdk.observables, global["taiga-ui"].cdk.services, global.rxjs, global.rxjs.operators));
})(this, (function (exports, i0, observables, services, i1, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /**
     * @description:
     * Simple prevent default on event directive when you do not need anything
     * else on event and do not want to trigger change detection
     */
    var TuiPreventDefaultDirective = /** @class */ (function () {
        function TuiPreventDefaultDirective(el, ngZone, destroy$) {
            this.el = el;
            this.ngZone = ngZone;
            this.destroy$ = destroy$;
            this.eventName = '';
        }
        TuiPreventDefaultDirective.prototype.ngOnInit = function () {
            i1.fromEvent(this.el.nativeElement, this.eventName, { passive: false })
                .pipe(observables.tuiZonefree(this.ngZone), observables.tuiPreventDefault(), operators.takeUntil(this.destroy$))
                .subscribe();
        };
        return TuiPreventDefaultDirective;
    }());
    TuiPreventDefaultDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPreventDefaultDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: services.TuiDestroyService, self: true }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiPreventDefaultDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiPreventDefaultDirective, selector: "[tuiPreventDefault]", inputs: { eventName: ["tuiPreventDefault", "eventName"] }, providers: [services.TuiDestroyService], ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPreventDefaultDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiPreventDefault]',
                        providers: [services.TuiDestroyService],
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.NgZone, decorators: [{
                            type: i0.Inject,
                            args: [i0.NgZone]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [services.TuiDestroyService]
                        }] }];
        }, propDecorators: { eventName: [{
                    type: i0.Input,
                    args: ['tuiPreventDefault']
                }] } });

    var TuiPreventDefaultModule = /** @class */ (function () {
        function TuiPreventDefaultModule() {
        }
        return TuiPreventDefaultModule;
    }());
    TuiPreventDefaultModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPreventDefaultModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiPreventDefaultModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPreventDefaultModule, declarations: [TuiPreventDefaultDirective], exports: [TuiPreventDefaultDirective] });
    TuiPreventDefaultModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPreventDefaultModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPreventDefaultModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiPreventDefaultDirective],
                        exports: [TuiPreventDefaultDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiPreventDefaultDirective = TuiPreventDefaultDirective;
    exports.TuiPreventDefaultModule = TuiPreventDefaultModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-directives-prevent-default.umd.js.map
