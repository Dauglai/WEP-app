(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/animations')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/constants', ['exports', '@angular/core', '@angular/animations'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.constants = {}), global.ng.core, global.ng.animations));
})(this, (function (exports, core, animations) { 'use strict';

    /**
     * Handler that always returns `false`.
     */
    // eslint-disable-next-line no-restricted-syntax
    var ALWAYS_FALSE_HANDLER = function () { return false; };

    /**
     * Handler that always returns `true`.
     */
    // eslint-disable-next-line no-restricted-syntax
    var ALWAYS_TRUE_HANDLER = function () { return true; };

    /**
     * @deprecated
     * TODO: drop support of legacy Edge (EdgeHTML) in v4.x
     */
    var CHROMIUM_EDGE_START_VERSION = 79;

    /**
     * For type safety when using @ContentChildren and @ViewChildren
     *
     * NOTE: Be careful subscribing to 'changes'
     */
    var EMPTY_QUERY = new core.QueryList();
    var EMPTY_ARRAY = [];
    var EMPTY_FUNCTION = function () { };
    var rect = {
        bottom: 0,
        height: 0,
        left: 0,
        right: 0,
        top: 0,
        width: 0,
        x: 0,
        y: 0,
    };
    var EMPTY_CLIENT_RECT = Object.assign(Object.assign({}, rect), { toJSON: function () {
            return rect;
        } });

    /**
     * Default method to turn arbitrary object into string
     */
    var TUI_DEFAULT_STRINGIFY = function (item) { return String(item); };

    /**
     * Default handler for matching stringified version of an item and a search query
     * @param item arbitrary element to match with a string
     * @param search search query
     * @param stringify handler to turn item into a string
     */
    var TUI_DEFAULT_MATCHER = function (item, search, stringify) {
        if (stringify === void 0) { stringify = TUI_DEFAULT_STRINGIFY; }
        return stringify(item).toLowerCase().includes(search.toLowerCase());
    };
    /**
     * Default handler for strict matching stringified version of an item and a search query
     * @param item arbitrary element to match with a string
     * @param search search query
     * @param stringify handler to turn item into a string
     */
    var TUI_STRICT_MATCHER = function (item, search, stringify) {
        if (stringify === void 0) { stringify = TUI_DEFAULT_STRINGIFY; }
        return stringify(item).toLowerCase() === search.toLowerCase();
    };
    /**
     * Default handler to match equality of two elements
     * ATTENTION: considers two empty arrays equal
     *
     * @param item1 first element
     * @param item2 second element
     */
    var TUI_DEFAULT_IDENTITY_MATCHER = function (item1, item2) { return item1 === item2 || bothEmpty(item1, item2); };
    function bothEmpty(item1, item2) {
        return Array.isArray(item1) && Array.isArray(item2) && !item1.length && !item2.length;
    }

    /**
     * Add to enable child :leave animation (fixes https://github.com/angular/angular/issues/15753)
     */
    var TUI_PARENT_ANIMATION = animations.trigger("tuiParentAnimation", [
        animations.transition("* => void", [
            animations.style({ overflow: "hidden" }),
            animations.query(":scope > *", [animations.animateChild()], { optional: true }),
        ]),
    ]);
    /**
     * Add on parent to stop initial :enter animation for children
     */
    var TUI_PARENT_STOP = animations.trigger("tuiParentStop", [animations.transition(":enter", [])]);

    var POLLING_TIME = 1000 / 15;

    // Filtering SVGElements for TreeWalker
    // Filter must be a function in IE, other modern browsers are compliant to this format
    var svgNodeFilter = (function (node) { return "ownerSVGElement" in node
        ? NodeFilter.FILTER_REJECT
        : NodeFilter.FILTER_ACCEPT; });

    /**
     * {@link https://unicode-table.com/en/00A0/ Non-breaking space}.
     */
    var CHAR_NO_BREAK_SPACE = "\u00A0";
    /**
     * {@link https://unicode-table.com/en/2013/ EN dash}
     * is used to indicate a range of numbers or a span of time.
     * @example 2006–2022
     * ___
     * Don't confuse with {@link CHAR_EM_DASH} or {@link CHAR_HYPHEN}!
     */
    var CHAR_EN_DASH = "\u2013";
    /**
     * {@link https://unicode-table.com/en/2014/ EM dash}
     * is used to mark a break in a sentence.
     * @example Taiga UI — powerful set of open source components for Angular
     * ___
     * Don't confuse with {@link CHAR_EN_DASH} or {@link CHAR_HYPHEN}!
     */
    var CHAR_EM_DASH = "\u2014";
    /**
     * {@link https://unicode-table.com/en/00AB/ Left-Pointing Double Angle Quotation Mark}
     */
    var CHAR_LAQUO = "\u00AB";
    /**
     * {@link https://unicode-table.com/en/00BB/ Right-Pointing Double Angle Quotation Mark}
     */
    var CHAR_RAQUO = "\u00BB";
    /**
     * {@link https://unicode-table.com/en/002D/ Hyphen (minus sign)}
     * is used to combine words.
     * @example well-behaved
     * ___
     * Don't confuse with {@link CHAR_EN_DASH} or {@link CHAR_EM_DASH}!
     */
    var CHAR_HYPHEN = "-";
    /**
     * {@link https://unicode-table.com/en/2212/ Minus}
     * is used as math operator symbol or before negative digits.
     * ---
     * Can be used as `&minus;`. Don't confuse with {@link CHAR_HYPHEN}
     */
    var CHAR_MINUS = "\u2212";
    /**
     * {@link https://unicode-table.com/en/002B/ Plus}
     */
    var CHAR_PLUS = "+";
    /**
     * {@link https://unicode-table.com/en/2022/ Bullet}.
     */
    var CHAR_BULLET = "\u2022";
    /**
     * {@link https://unicode-table.com/en/2026/ Suspension points}.
     */
    var CHAR_ELLIPSIS = "\u2026";
    /**
     * {@link https://unicode-table.com/en/00A4/ Suspension points}.
     */
    var CHAR_CURRENCY_SIGN = "\u00A4";
    /**
     * {@link https://unicode-table.com/en/200b/ Suspension points}.
     */
    var CHAR_ZERO_WIDTH_SPACE = "\u200B";

    var TUI_VERSION = "3.26.0";

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ALWAYS_FALSE_HANDLER = ALWAYS_FALSE_HANDLER;
    exports.ALWAYS_TRUE_HANDLER = ALWAYS_TRUE_HANDLER;
    exports.CHAR_BULLET = CHAR_BULLET;
    exports.CHAR_CURRENCY_SIGN = CHAR_CURRENCY_SIGN;
    exports.CHAR_ELLIPSIS = CHAR_ELLIPSIS;
    exports.CHAR_EM_DASH = CHAR_EM_DASH;
    exports.CHAR_EN_DASH = CHAR_EN_DASH;
    exports.CHAR_HYPHEN = CHAR_HYPHEN;
    exports.CHAR_LAQUO = CHAR_LAQUO;
    exports.CHAR_MINUS = CHAR_MINUS;
    exports.CHAR_NO_BREAK_SPACE = CHAR_NO_BREAK_SPACE;
    exports.CHAR_PLUS = CHAR_PLUS;
    exports.CHAR_RAQUO = CHAR_RAQUO;
    exports.CHAR_ZERO_WIDTH_SPACE = CHAR_ZERO_WIDTH_SPACE;
    exports.CHROMIUM_EDGE_START_VERSION = CHROMIUM_EDGE_START_VERSION;
    exports.EMPTY_ARRAY = EMPTY_ARRAY;
    exports.EMPTY_CLIENT_RECT = EMPTY_CLIENT_RECT;
    exports.EMPTY_FUNCTION = EMPTY_FUNCTION;
    exports.EMPTY_QUERY = EMPTY_QUERY;
    exports.POLLING_TIME = POLLING_TIME;
    exports.TUI_DEFAULT_IDENTITY_MATCHER = TUI_DEFAULT_IDENTITY_MATCHER;
    exports.TUI_DEFAULT_MATCHER = TUI_DEFAULT_MATCHER;
    exports.TUI_DEFAULT_STRINGIFY = TUI_DEFAULT_STRINGIFY;
    exports.TUI_PARENT_ANIMATION = TUI_PARENT_ANIMATION;
    exports.TUI_PARENT_STOP = TUI_PARENT_STOP;
    exports.TUI_STRICT_MATCHER = TUI_STRICT_MATCHER;
    exports.TUI_VERSION = TUI_VERSION;
    exports.svgNodeFilter = svgNodeFilter;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-constants.umd.js.map
