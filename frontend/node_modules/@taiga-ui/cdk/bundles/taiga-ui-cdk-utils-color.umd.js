(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/utils/color', ['exports'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.utils = global["taiga-ui"].cdk.utils || {}, global["taiga-ui"].cdk.utils.color = {})));
})(this, (function (exports) { 'use strict';

    function tuiHexToRgb(hex) {
        var matches = hex
            .replace("#", "")
            .split("")
            .map(function (char, _, array) { return (array.length === 3 ? char + char : char); })
            .join("")
            .match(/.{2}/g);
        return matches
            ? matches.map(function (x) { return Number.parseInt(x, 16); })
            : [0, 0, 0];
    }

    /**
     * https://stackoverflow.com/a/54024653/2706426
     */
    function tuiHsvToRgb(h, s, v) {
        return [hsvToColor(h, s, v, 5), hsvToColor(h, s, v, 3), hsvToColor(h, s, v, 1)];
    }
    function hsvToColor(h, s, v, n) {
        var k = (n + h / 60) % 6;
        return Math.round(v - v * s * Math.max(Math.min(k, 4 - k, 1), 0));
    }

    var DEFAULT = [0, 0, 0, 1];
    function tuiParseColor(color) {
        var stripped = color
            .replace("#", "")
            .replace("rgba(", "")
            .replace("rgb(", "")
            .replace(")", "");
        var array = stripped.split(",").map(function (item) { return parseFloat(item); });
        if (array.length === 4) {
            return array;
        }
        if (array.length === 3) {
            return array.concat(1);
        }
        var matches = stripped.match(new RegExp("(.{" + stripped.length / 3 + "})", "g"));
        if (!matches) {
            return DEFAULT;
        }
        var parsed = matches.map(function (char) { return parseInt(stripped.length % 2 ? char + char : char, 16); });
        return [
            parsed[0] || DEFAULT[0],
            parsed[1] || DEFAULT[1],
            parsed[2] || DEFAULT[2],
            parsed[3] === undefined ? DEFAULT[3] : parsed[3],
        ];
    }

    function tuiRgbToHex(r, g, b) {
        return "#" + [r, g, b].map(function (x) { return x.toString(16).padStart(2, "0"); }).join("");
    }

    function tuiRgbToHsv(r, g, b) {
        var v = Math.max(r, g, b);
        var n = v - Math.min(r, g, b);
        // eslint-disable-next-line no-nested-ternary
        var h = n && (v === r ? (g - b) / n : v === g ? 2 + (b - r) / n : 4 + (r - g) / n);
        return [60 * (h < 0 ? h + 6 : h), v && n / v, v];
    }

    /**
     * Generated bundle index. Do not edit.
     */

    exports.tuiHexToRgb = tuiHexToRgb;
    exports.tuiHsvToRgb = tuiHsvToRgb;
    exports.tuiParseColor = tuiParseColor;
    exports.tuiRgbToHex = tuiRgbToHex;
    exports.tuiRgbToHsv = tuiRgbToHsv;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-utils-color.umd.js.map
