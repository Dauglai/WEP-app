(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/directives/value-changes', ['exports', '@angular/core', '@angular/forms', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.directives = global["taiga-ui"].cdk.directives || {}, global["taiga-ui"].cdk.directives["value-changes"] = {}), global.ng.core, global.ng.forms, global.rxjs, global.rxjs.operators));
})(this, (function (exports, i0, i1, rxjs, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var TuiValueChangesDirective = /** @class */ (function () {
        function TuiValueChangesDirective(container, control) {
            this.container = container;
            this.control = control;
            this.refresh$ = new rxjs.Subject();
            this.tuiValueChanges = this.refresh$.pipe(operators.distinctUntilChanged(), operators.switchAll());
        }
        TuiValueChangesDirective.prototype.ngDoCheck = function () {
            var _a, _b;
            this.refresh$.next(((_a = this.control) === null || _a === void 0 ? void 0 : _a.valueChanges) || ((_b = this.container) === null || _b === void 0 ? void 0 : _b.valueChanges) || rxjs.EMPTY);
        };
        return TuiValueChangesDirective;
    }());
    TuiValueChangesDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiValueChangesDirective, deps: [{ token: i1.ControlContainer, optional: true }, { token: i1.NgControl, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiValueChangesDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiValueChangesDirective, selector: "[tuiValueChanges]", outputs: { tuiValueChanges: "tuiValueChanges" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiValueChangesDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiValueChanges]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace.ControlContainer, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i1.ControlContainer]
                        }] }, { type: i1__namespace.NgControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i1.NgControl]
                        }] }];
        }, propDecorators: { tuiValueChanges: [{
                    type: i0.Output
                }] } });

    var TuiValueChangesModule = /** @class */ (function () {
        function TuiValueChangesModule() {
        }
        return TuiValueChangesModule;
    }());
    TuiValueChangesModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiValueChangesModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiValueChangesModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiValueChangesModule, declarations: [TuiValueChangesDirective], exports: [TuiValueChangesDirective] });
    TuiValueChangesModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiValueChangesModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiValueChangesModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiValueChangesDirective],
                        exports: [TuiValueChangesDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiValueChangesDirective = TuiValueChangesDirective;
    exports.TuiValueChangesModule = TuiValueChangesModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-directives-value-changes.umd.js.map
