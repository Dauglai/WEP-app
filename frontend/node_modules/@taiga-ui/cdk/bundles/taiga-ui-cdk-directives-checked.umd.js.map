{"version":3,"file":"taiga-ui-cdk-directives-checked.umd.js","sources":["../../../projects/cdk/directives/checked/checked.directive.ts","../../../projects/cdk/directives/checked/checked.module.ts","../../../projects/cdk/directives/checked/taiga-ui-cdk-directives-checked.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    Output,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: 'input[tuiChecked], input[tuiCheckedChange]',\n})\nexport class TuiCheckedDirective {\n    @Input()\n    set tuiChecked(checked: boolean | null) {\n        this.updateProperty('checked', checked || false);\n        this.updateProperty('indeterminate', checked === null);\n    }\n\n    @Output()\n    readonly tuiCheckedChange = new EventEmitter<boolean>();\n\n    constructor(\n        @Inject(ElementRef) private readonly el: ElementRef<HTMLInputElement>,\n        @Inject(Renderer2) private readonly renderer: Renderer2,\n    ) {\n        this.updateProperty('checked', false);\n    }\n\n    @HostListener('change', ['$event.target'])\n    onChange({checked}: HTMLInputElement): void {\n        this.updateProperty('indeterminate', false);\n        this.tuiCheckedChange.emit(checked);\n    }\n\n    private updateProperty(property: 'checked' | 'indeterminate', value: boolean): void {\n        this.renderer.setProperty(this.el.nativeElement, property, value);\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiCheckedDirective} from './checked.directive';\n\n@NgModule({\n    declarations: [TuiCheckedDirective],\n    exports: [TuiCheckedDirective],\n})\nexport class TuiCheckedModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["EventEmitter","ElementRef","Renderer2","i0","Directive","Inject","Input","Output","HostListener","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,QAAA,mBAAA,kBAAA,YAAA;QAUI,SACyC,mBAAA,CAAA,EAAgC,EACjC,QAAmB,EAAA;IADlB,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAA8B;IACjC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;IAJlD,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAIA,eAAY,EAAW,CAAC;IAMpD,QAAA,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACzC;IAdD,IAAA,MAAA,CAAA,cAAA,CACI,mBAAU,CAAA,SAAA,EAAA,YAAA,EAAA;IADd,QAAA,GAAA,EAAA,UACe,OAAuB,EAAA;gBAClC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,IAAI,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,OAAO,KAAK,IAAI,CAAC,CAAC;aAC1D;;;IAAA,KAAA,CAAA,CAAA;QAaD,mBAAQ,CAAA,SAAA,CAAA,QAAA,GAAR,UAAS,EAA2B,EAAA;IAA1B,QAAA,IAAA,OAAO,GAAA,EAAA,CAAA,OAAA,CAAA;IACb,QAAA,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACvC,CAAA;IAEO,IAAA,mBAAA,CAAA,SAAA,CAAA,cAAc,GAAd,UAAe,QAAqC,EAAE,KAAc,EAAA;IACxE,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;SACrE,CAAA;;;2IAzBQ,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAWhBC,aAAU,EAAA,EAAA,EAAA,KAAA,EACVC,YAAS,EAAA,CAAA,EAAA,MAAA,EAAAC,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oHAZZ,mBAAmB,EAAA,QAAA,EAAA,4CAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,EAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,CAAA,CAAA;sHAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;sBAH/BC,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACP,oBAAA,QAAQ,EAAE,4CAA4C;qBACzD,CAAA;;;kCAYQC,SAAM;mCAACJ,aAAU,CAAA;;kCACjBI,SAAM;mCAACH,YAAS,CAAA;;6BAVjB,UAAU,EAAA,CAAA;0BADbI,QAAK;oBAOG,gBAAgB,EAAA,CAAA;0BADxBC,SAAM;oBAWP,QAAQ,EAAA,CAAA;0BADPC,eAAY;2BAAC,QAAQ,EAAE,CAAC,eAAe,CAAC,CAAA;;;ACvB7C,QAAA,gBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,gBAAA,GAAA;;;;wIAAa,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAL,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yIAAhB,gBAAgB,EAAA,YAAA,EAAA,CAHV,mBAAmB,CAAA,EAAA,OAAA,EAAA,CACxB,mBAAmB,CAAA,EAAA,CAAA,CAAA;yIAEpB,gBAAgB,EAAA,CAAA,CAAA;sHAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;sBAJ5BM,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACN,YAAY,EAAE,CAAC,mBAAmB,CAAC;wBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;qBACjC,CAAA;;;ICPD;;IAEG;;;;;;;;;;;"}