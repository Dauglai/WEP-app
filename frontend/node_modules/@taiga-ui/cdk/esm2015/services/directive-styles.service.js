import { ComponentFactoryResolver, Inject, Injectable, INJECTOR, } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Service to use styles with directives
 */
export class TuiDirectiveStylesService {
    constructor(resolver, injector) {
        this.resolver = resolver;
        this.injector = injector;
        this.map = new Map();
    }
    addComponent(component) {
        if (!this.map.has(component)) {
            this.map.set(component, this.resolver.resolveComponentFactory(component).create(this.injector));
        }
    }
}
TuiDirectiveStylesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDirectiveStylesService, deps: [{ token: ComponentFactoryResolver }, { token: INJECTOR }], target: i0.ɵɵFactoryTarget.Injectable });
TuiDirectiveStylesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDirectiveStylesService, providedIn: `root` });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDirectiveStylesService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: `root`,
                }]
        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver, decorators: [{
                    type: Inject,
                    args: [ComponentFactoryResolver]
                }] }, { type: i0.Injector, decorators: [{
                    type: Inject,
                    args: [INJECTOR]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlLXN0eWxlcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RrL3NlcnZpY2VzL2RpcmVjdGl2ZS1zdHlsZXMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsd0JBQXdCLEVBQ3hCLE1BQU0sRUFDTixVQUFVLEVBQ1YsUUFBUSxHQUdYLE1BQU0sZUFBZSxDQUFDOztBQUV2Qjs7R0FFRztBQUlILE1BQU0sT0FBTyx5QkFBeUI7SUFHbEMsWUFFcUIsUUFBa0MsRUFDaEIsUUFBa0I7UUFEcEMsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFDaEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUx4QyxRQUFHLEdBQUcsSUFBSSxHQUFHLEVBQTBCLENBQUM7SUFNdEQsQ0FBQztJQUVKLFlBQVksQ0FBQyxTQUF3QjtRQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDMUIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQ1IsU0FBUyxFQUNULElBQUksQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FDekUsQ0FBQztTQUNMO0lBQ0wsQ0FBQzs7dUhBaEJRLHlCQUF5QixrQkFJdEIsd0JBQXdCLGFBRXhCLFFBQVE7MkhBTlgseUJBQXlCLGNBRnRCLE1BQU07NEZBRVQseUJBQXlCO2tCQUhyQyxVQUFVO21CQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7MEJBS1EsTUFBTTsyQkFBQyx3QkFBd0I7OzBCQUUvQixNQUFNOzJCQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcbiAgICBJbmplY3QsXG4gICAgSW5qZWN0YWJsZSxcbiAgICBJTkpFQ1RPUixcbiAgICBJbmplY3RvcixcbiAgICBUeXBlLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBTZXJ2aWNlIHRvIHVzZSBzdHlsZXMgd2l0aCBkaXJlY3RpdmVzXG4gKi9cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiBgcm9vdGAsXG59KVxuZXhwb3J0IGNsYXNzIFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2Uge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgbWFwID0gbmV3IE1hcDxUeXBlPHVua25vd24+LCB1bmtub3duPigpO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IHJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgICAgIEBJbmplY3QoSU5KRUNUT1IpIHByaXZhdGUgcmVhZG9ubHkgaW5qZWN0b3I6IEluamVjdG9yLFxuICAgICkge31cblxuICAgIGFkZENvbXBvbmVudChjb21wb25lbnQ6IFR5cGU8dW5rbm93bj4pOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLm1hcC5oYXMoY29tcG9uZW50KSkge1xuICAgICAgICAgICAgdGhpcy5tYXAuc2V0KFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICB0aGlzLnJlc29sdmVyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KGNvbXBvbmVudCkuY3JlYXRlKHRoaXMuaW5qZWN0b3IpLFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==