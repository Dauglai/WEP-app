import { ALWAYS_FALSE_HANDLER } from '@taiga-ui/cdk/constants';
import { TuiOwnerDocumentException } from '@taiga-ui/cdk/exceptions';
import { filter, map, startWith, switchMap, take } from 'rxjs/operators';
import { tuiMouseDragFinishFrom } from './mouse-drag-finish-from';
import { tuiTypedFromEvent } from './typed-from-event';
export function tuiPressedObservable(element, { onlyTrusted } = { onlyTrusted: true }) {
    const { ownerDocument } = element;
    if (!ownerDocument) {
        throw new TuiOwnerDocumentException();
    }
    return tuiTypedFromEvent(element, `mousedown`).pipe(filter(({ isTrusted }) => isTrusted || !onlyTrusted), switchMap(() => tuiMouseDragFinishFrom(ownerDocument).pipe(map(ALWAYS_FALSE_HANDLER), take(1), startWith(true))));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc3NlZC1vYnNlcnZhYmxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RrL29ic2VydmFibGVzL3ByZXNzZWQtb2JzZXJ2YWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUM3RCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUVuRSxPQUFPLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXZFLE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBTXJELE1BQU0sVUFBVSxvQkFBb0IsQ0FDaEMsT0FBZ0IsRUFDaEIsRUFBQyxXQUFXLEtBQWlDLEVBQUMsV0FBVyxFQUFFLElBQUksRUFBQztJQUVoRSxNQUFNLEVBQUMsYUFBYSxFQUFDLEdBQUcsT0FBTyxDQUFDO0lBRWhDLElBQUksQ0FBQyxhQUFhLEVBQUU7UUFDaEIsTUFBTSxJQUFJLHlCQUF5QixFQUFFLENBQUM7S0FDekM7SUFFRCxPQUFPLGlCQUFpQixDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQy9DLE1BQU0sQ0FBQyxDQUFDLEVBQUMsU0FBUyxFQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUNsRCxTQUFTLENBQUMsR0FBRyxFQUFFLENBQ1gsc0JBQXNCLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUN0QyxHQUFHLENBQUMsb0JBQW9CLENBQUMsRUFDekIsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUNQLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FDbEIsQ0FDSixDQUNKLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBTFdBWVNfRkFMU0VfSEFORExFUn0gZnJvbSAnQHRhaWdhLXVpL2Nkay9jb25zdGFudHMnO1xuaW1wb3J0IHtUdWlPd25lckRvY3VtZW50RXhjZXB0aW9ufSBmcm9tICdAdGFpZ2EtdWkvY2RrL2V4Y2VwdGlvbnMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7ZmlsdGVyLCBtYXAsIHN0YXJ0V2l0aCwgc3dpdGNoTWFwLCB0YWtlfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7dHVpTW91c2VEcmFnRmluaXNoRnJvbX0gZnJvbSAnLi9tb3VzZS1kcmFnLWZpbmlzaC1mcm9tJztcbmltcG9ydCB7dHVpVHlwZWRGcm9tRXZlbnR9IGZyb20gJy4vdHlwZWQtZnJvbS1ldmVudCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHVpUHJlc3NlZE9ic2VydmFibGVPcHRpb25zIHtcbiAgICBvbmx5VHJ1c3RlZDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHR1aVByZXNzZWRPYnNlcnZhYmxlKFxuICAgIGVsZW1lbnQ6IEVsZW1lbnQsXG4gICAge29ubHlUcnVzdGVkfTogVHVpUHJlc3NlZE9ic2VydmFibGVPcHRpb25zID0ge29ubHlUcnVzdGVkOiB0cnVlfSxcbik6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIGNvbnN0IHtvd25lckRvY3VtZW50fSA9IGVsZW1lbnQ7XG5cbiAgICBpZiAoIW93bmVyRG9jdW1lbnQpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR1aU93bmVyRG9jdW1lbnRFeGNlcHRpb24oKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHVpVHlwZWRGcm9tRXZlbnQoZWxlbWVudCwgYG1vdXNlZG93bmApLnBpcGUoXG4gICAgICAgIGZpbHRlcigoe2lzVHJ1c3RlZH0pID0+IGlzVHJ1c3RlZCB8fCAhb25seVRydXN0ZWQpLFxuICAgICAgICBzd2l0Y2hNYXAoKCkgPT5cbiAgICAgICAgICAgIHR1aU1vdXNlRHJhZ0ZpbmlzaEZyb20ob3duZXJEb2N1bWVudCkucGlwZShcbiAgICAgICAgICAgICAgICBtYXAoQUxXQVlTX0ZBTFNFX0hBTkRMRVIpLFxuICAgICAgICAgICAgICAgIHRha2UoMSksXG4gICAgICAgICAgICAgICAgc3RhcnRXaXRoKHRydWUpLFxuICAgICAgICAgICAgKSxcbiAgICAgICAgKSxcbiAgICApO1xufVxuIl19