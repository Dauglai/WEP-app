import { Directive, EventEmitter, HostBinding, HostListener, Inject, Output, } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk/services';
import { TuiAutofilledStyleComponent } from './autofilled-style.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk/services";
export class TuiAutofilledDirective {
    constructor(directiveStyles) {
        this.autofilled = false;
        this.tuiAutofilledChange = new EventEmitter();
        directiveStyles.addComponent(TuiAutofilledStyleComponent);
    }
    transitionStartHandler({ propertyName, target }) {
        var _a;
        const matchedAutofill = propertyName.includes('box-shadow') && ((_a = target) === null || _a === void 0 ? void 0 : _a.matches('input'));
        if (matchedAutofill) {
            this.autofilled = !this.autofilled;
            this.tuiAutofilledChange.emit(this.autofilled);
        }
    }
}
TuiAutofilledDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAutofilledDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiAutofilledDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiAutofilledDirective, selector: "[tuiAutofilledChange]", outputs: { tuiAutofilledChange: "tuiAutofilledChange" }, host: { listeners: { "transitionstart": "transitionStartHandler($event)" }, properties: { "class._autofilled": "this.autofilled" }, classAttribute: "tui-autofill" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAutofilledDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiAutofilledChange]',
                    host: { class: 'tui-autofill' },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { autofilled: [{
                type: HostBinding,
                args: ['class._autofilled']
            }], tuiAutofilledChange: [{
                type: Output
            }], transitionStartHandler: [{
                type: HostListener,
                args: ['transitionstart', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b2ZpbGxlZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jZGsvZGlyZWN0aXZlcy9hdXRvZmlsbGVkL2F1dG9maWxsZWQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxZQUFZLEVBQ1osTUFBTSxFQUNOLE1BQU0sR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUVqRSxPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQzs7O0FBTXpFLE1BQU0sT0FBTyxzQkFBc0I7SUFPL0IsWUFDdUMsZUFBMEM7UUFOakYsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUdWLHdCQUFtQixHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7UUFLdkQsZUFBZSxDQUFDLFlBQVksQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFHRCxzQkFBc0IsQ0FBQyxFQUFDLFlBQVksRUFBRSxNQUFNLEVBQWtCOztRQUMxRCxNQUFNLGVBQWUsR0FDakIsWUFBWSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsS0FBSSxNQUFDLE1BQWtCLDBDQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQSxDQUFDO1FBRWpGLElBQUksZUFBZSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBQ25DLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ2xEO0lBQ0wsQ0FBQzs7b0hBdEJRLHNCQUFzQixrQkFRbkIseUJBQXlCO3dHQVI1QixzQkFBc0I7NEZBQXRCLHNCQUFzQjtrQkFKbEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxJQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUUsY0FBYyxFQUFDO2lCQUNoQzs7MEJBU1EsTUFBTTsyQkFBQyx5QkFBeUI7NENBTnJDLFVBQVU7c0JBRFQsV0FBVzt1QkFBQyxtQkFBbUI7Z0JBSXZCLG1CQUFtQjtzQkFEM0IsTUFBTTtnQkFVUCxzQkFBc0I7c0JBRHJCLFlBQVk7dUJBQUMsaUJBQWlCLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIERpcmVjdGl2ZSxcbiAgICBFdmVudEVtaXR0ZXIsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSG9zdExpc3RlbmVyLFxuICAgIEluamVjdCxcbiAgICBPdXRwdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3NlcnZpY2VzJztcblxuaW1wb3J0IHtUdWlBdXRvZmlsbGVkU3R5bGVDb21wb25lbnR9IGZyb20gJy4vYXV0b2ZpbGxlZC1zdHlsZS5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlBdXRvZmlsbGVkQ2hhbmdlXScsXG4gICAgaG9zdDoge2NsYXNzOiAndHVpLWF1dG9maWxsJ30sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUF1dG9maWxsZWREaXJlY3RpdmUge1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2F1dG9maWxsZWQnKVxuICAgIGF1dG9maWxsZWQgPSBmYWxzZTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHJlYWRvbmx5IHR1aUF1dG9maWxsZWRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlKSBkaXJlY3RpdmVTdHlsZXM6IFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UsXG4gICAgKSB7XG4gICAgICAgIGRpcmVjdGl2ZVN0eWxlcy5hZGRDb21wb25lbnQoVHVpQXV0b2ZpbGxlZFN0eWxlQ29tcG9uZW50KTtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKCd0cmFuc2l0aW9uc3RhcnQnLCBbJyRldmVudCddKVxuICAgIHRyYW5zaXRpb25TdGFydEhhbmRsZXIoe3Byb3BlcnR5TmFtZSwgdGFyZ2V0fTogVHJhbnNpdGlvbkV2ZW50KTogdm9pZCB7XG4gICAgICAgIGNvbnN0IG1hdGNoZWRBdXRvZmlsbCA9XG4gICAgICAgICAgICBwcm9wZXJ0eU5hbWUuaW5jbHVkZXMoJ2JveC1zaGFkb3cnKSAmJiAodGFyZ2V0IGFzIEVsZW1lbnQpPy5tYXRjaGVzKCdpbnB1dCcpO1xuXG4gICAgICAgIGlmIChtYXRjaGVkQXV0b2ZpbGwpIHtcbiAgICAgICAgICAgIHRoaXMuYXV0b2ZpbGxlZCA9ICF0aGlzLmF1dG9maWxsZWQ7XG4gICAgICAgICAgICB0aGlzLnR1aUF1dG9maWxsZWRDaGFuZ2UuZW1pdCh0aGlzLmF1dG9maWxsZWQpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19