import { ElementRef, InjectionToken, NgZone, Optional, Renderer2, Self, } from '@angular/core';
import { ANIMATION_FRAME, WINDOW } from '@ng-web-apis/common';
import { TUI_FOCUSABLE_ITEM_ACCESSOR, TUI_IS_IOS } from '@taiga-ui/cdk/tokens';
// TODO: find the best way for prevent cycle
// eslint-disable-next-line import/no-cycle
import { TuiDefaultAutofocusHandler } from './handlers/default.handler';
// eslint-disable-next-line import/no-cycle
import { TuiIosAutofocusHandler } from './handlers/ios.handler';
export const TUI_AUTOFOCUS_HANDLER = new InjectionToken(`[TUI_AUTOFOCUS_HANDLER]`);
export const TUI_AUTOFOCUS_PROVIDERS = [
    {
        provide: TUI_AUTOFOCUS_HANDLER,
        useFactory: (focusable, el, animationFrame$, renderer, ngZone, win, isIos) => isIos
            ? new TuiIosAutofocusHandler(focusable, el, renderer, ngZone, win)
            : new TuiDefaultAutofocusHandler(focusable, el, animationFrame$),
        deps: [
            [new Optional(), new Self(), TUI_FOCUSABLE_ITEM_ACCESSOR],
            ElementRef,
            ANIMATION_FRAME,
            Renderer2,
            NgZone,
            WINDOW,
            TUI_IS_IOS,
        ],
    },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b2ZvY3VzLm9wdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jZGsvZGlyZWN0aXZlcy9hdXRvLWZvY3VzL2F1dG9mb2N1cy5vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxVQUFVLEVBQ1YsY0FBYyxFQUNkLE1BQU0sRUFDTixRQUFRLEVBQ1IsU0FBUyxFQUNULElBQUksR0FDUCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsZUFBZSxFQUFFLE1BQU0sRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBRTVELE9BQU8sRUFBQywyQkFBMkIsRUFBRSxVQUFVLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUc3RSw0Q0FBNEM7QUFDNUMsMkNBQTJDO0FBQzNDLE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBQ3RFLDJDQUEyQztBQUMzQyxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQU05RCxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxJQUFJLGNBQWMsQ0FDbkQseUJBQXlCLENBQzVCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRztJQUNuQztRQUNJLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsVUFBVSxFQUFFLENBQ1IsU0FBNkMsRUFDN0MsRUFBMkIsRUFDM0IsZUFBbUMsRUFDbkMsUUFBbUIsRUFDbkIsTUFBYyxFQUNkLEdBQVcsRUFDWCxLQUFjLEVBQ2hCLEVBQUUsQ0FDQSxLQUFLO1lBQ0QsQ0FBQyxDQUFDLElBQUksc0JBQXNCLENBQUMsU0FBUyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEdBQUcsQ0FBQztZQUNsRSxDQUFDLENBQUMsSUFBSSwwQkFBMEIsQ0FBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLGVBQWUsQ0FBQztRQUN4RSxJQUFJLEVBQUU7WUFDRixDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSwyQkFBMkIsQ0FBQztZQUN6RCxVQUFVO1lBQ1YsZUFBZTtZQUNmLFNBQVM7WUFDVCxNQUFNO1lBQ04sTUFBTTtZQUNOLFVBQVU7U0FDYjtLQUNKO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgRWxlbWVudFJlZixcbiAgICBJbmplY3Rpb25Ub2tlbixcbiAgICBOZ1pvbmUsXG4gICAgT3B0aW9uYWwsXG4gICAgUmVuZGVyZXIyLFxuICAgIFNlbGYsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtBTklNQVRJT05fRlJBTUUsIFdJTkRPV30gZnJvbSAnQG5nLXdlYi1hcGlzL2NvbW1vbic7XG5pbXBvcnQge1R1aUZvY3VzYWJsZUVsZW1lbnRBY2Nlc3Nvcn0gZnJvbSAnQHRhaWdhLXVpL2Nkay9pbnRlcmZhY2VzJztcbmltcG9ydCB7VFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SLCBUVUlfSVNfSU9TfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3Rva2Vucyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG4vLyBUT0RPOiBmaW5kIHRoZSBiZXN0IHdheSBmb3IgcHJldmVudCBjeWNsZVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHtUdWlEZWZhdWx0QXV0b2ZvY3VzSGFuZGxlcn0gZnJvbSAnLi9oYW5kbGVycy9kZWZhdWx0LmhhbmRsZXInO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHtUdWlJb3NBdXRvZm9jdXNIYW5kbGVyfSBmcm9tICcuL2hhbmRsZXJzL2lvcy5oYW5kbGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBUdWlBdXRvZm9jdXNIYW5kbGVyIHtcbiAgICBzZXRGb2N1cygpOiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgVFVJX0FVVE9GT0NVU19IQU5ETEVSID0gbmV3IEluamVjdGlvblRva2VuPFR1aUF1dG9mb2N1c0hhbmRsZXI+KFxuICAgIGBbVFVJX0FVVE9GT0NVU19IQU5ETEVSXWAsXG4pO1xuXG5leHBvcnQgY29uc3QgVFVJX0FVVE9GT0NVU19QUk9WSURFUlMgPSBbXG4gICAge1xuICAgICAgICBwcm92aWRlOiBUVUlfQVVUT0ZPQ1VTX0hBTkRMRVIsXG4gICAgICAgIHVzZUZhY3Rvcnk6IChcbiAgICAgICAgICAgIGZvY3VzYWJsZTogVHVpRm9jdXNhYmxlRWxlbWVudEFjY2Vzc29yIHwgbnVsbCxcbiAgICAgICAgICAgIGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgICAgIGFuaW1hdGlvbkZyYW1lJDogT2JzZXJ2YWJsZTxudW1iZXI+LFxuICAgICAgICAgICAgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICAgICAgICAgIG5nWm9uZTogTmdab25lLFxuICAgICAgICAgICAgd2luOiBXaW5kb3csXG4gICAgICAgICAgICBpc0lvczogYm9vbGVhbixcbiAgICAgICAgKSA9PlxuICAgICAgICAgICAgaXNJb3NcbiAgICAgICAgICAgICAgICA/IG5ldyBUdWlJb3NBdXRvZm9jdXNIYW5kbGVyKGZvY3VzYWJsZSwgZWwsIHJlbmRlcmVyLCBuZ1pvbmUsIHdpbilcbiAgICAgICAgICAgICAgICA6IG5ldyBUdWlEZWZhdWx0QXV0b2ZvY3VzSGFuZGxlcihmb2N1c2FibGUsIGVsLCBhbmltYXRpb25GcmFtZSQpLFxuICAgICAgICBkZXBzOiBbXG4gICAgICAgICAgICBbbmV3IE9wdGlvbmFsKCksIG5ldyBTZWxmKCksIFRVSV9GT0NVU0FCTEVfSVRFTV9BQ0NFU1NPUl0sXG4gICAgICAgICAgICBFbGVtZW50UmVmLFxuICAgICAgICAgICAgQU5JTUFUSU9OX0ZSQU1FLFxuICAgICAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICAgICAgTmdab25lLFxuICAgICAgICAgICAgV0lORE9XLFxuICAgICAgICAgICAgVFVJX0lTX0lPUyxcbiAgICAgICAgXSxcbiAgICB9LFxuXTtcbiJdfQ==