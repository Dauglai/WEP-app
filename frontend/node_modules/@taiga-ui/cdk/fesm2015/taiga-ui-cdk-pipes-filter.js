import * as i0 from '@angular/core';
import { Pipe, NgModule } from '@angular/core';

class TuiFilterPipe {
    /**
     * Filters an array through a matcher function using additional arguments
     *
     * @param items array
     * @param matcher method for filtering
     * @param args arbitrary number of additional arguments
     */
    transform(items, matcher, ...args) {
        return items.filter(item => matcher(item, ...args));
    }
}
TuiFilterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
TuiFilterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterPipe, name: "tuiFilter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterPipe, decorators: [{
            type: Pipe,
            args: [{ name: `tuiFilter` }]
        }] });

class TuiFilterPipeModule {
}
TuiFilterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiFilterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterPipeModule, declarations: [TuiFilterPipe], exports: [TuiFilterPipe] });
TuiFilterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    exports: [TuiFilterPipe],
                    declarations: [TuiFilterPipe],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiFilterPipe, TuiFilterPipeModule };
//# sourceMappingURL=taiga-ui-cdk-pipes-filter.js.map
