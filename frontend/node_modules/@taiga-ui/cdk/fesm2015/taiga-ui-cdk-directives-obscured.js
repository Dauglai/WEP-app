import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { Directive, Optional, Inject, Self, Input, Output, NgModule } from '@angular/core';
import { tuiRequiredSetter } from '@taiga-ui/cdk/decorators';
import * as i1 from '@taiga-ui/cdk/directives/active-zone';
import { TuiActiveZoneDirective } from '@taiga-ui/cdk/directives/active-zone';
import { tuiIfMap } from '@taiga-ui/cdk/observables';
import * as i2 from '@taiga-ui/cdk/services';
import { TuiObscuredService, TuiParentsScrollService, TuiDestroyService } from '@taiga-ui/cdk/services';
import { Subject } from 'rxjs';
import { map } from 'rxjs/operators';

/**
 * Directive that monitors element visibility
 */
class TuiObscuredDirective {
    constructor(activeZone, obscured$) {
        this.enabled$ = new Subject();
        const mapped$ = obscured$.pipe(map(obscuredBy => !!obscuredBy &&
            (!activeZone ||
                !obscuredBy.length ||
                obscuredBy.every(element => !activeZone.contains(element)))));
        this.tuiObscured = this.enabled$.pipe(tuiIfMap(() => mapped$));
    }
    set tuiObscuredEnabled(enabled) {
        this.enabled$.next(enabled);
    }
}
TuiObscuredDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiObscuredDirective, deps: [{ token: TuiActiveZoneDirective, optional: true }, { token: TuiObscuredService, self: true }], target: i0.ɵɵFactoryTarget.Directive });
TuiObscuredDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiObscuredDirective, selector: "[tuiObscured]", inputs: { tuiObscuredEnabled: "tuiObscuredEnabled" }, outputs: { tuiObscured: "tuiObscured" }, providers: [TuiObscuredService, TuiParentsScrollService, TuiDestroyService], ngImport: i0 });
__decorate([
    tuiRequiredSetter()
], TuiObscuredDirective.prototype, "tuiObscuredEnabled", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiObscuredDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiObscured]',
                    providers: [TuiObscuredService, TuiParentsScrollService, TuiDestroyService],
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiActiveZoneDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiActiveZoneDirective]
                }] }, { type: i2.TuiObscuredService, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiObscuredService]
                }] }]; }, propDecorators: { tuiObscuredEnabled: [{
                type: Input
            }], tuiObscured: [{
                type: Output
            }] } });

class TuiObscuredModule {
}
TuiObscuredModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiObscuredModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiObscuredModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiObscuredModule, declarations: [TuiObscuredDirective], exports: [TuiObscuredDirective] });
TuiObscuredModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiObscuredModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiObscuredModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiObscuredDirective],
                    exports: [TuiObscuredDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiObscuredDirective, TuiObscuredModule };
//# sourceMappingURL=taiga-ui-cdk-directives-obscured.js.map
