import { DOCUMENT } from '@angular/common';
import * as i0 from '@angular/core';
import { ElementRef, Renderer2, Directive, Inject, HostListener, NgModule } from '@angular/core';
import { tuiContainsOrAfter, tuiIsHTMLElement } from '@taiga-ui/cdk/utils/dom';
import { tuiGetNativeFocused, tuiGetClosestFocusable, tuiBlurNativeFocused } from '@taiga-ui/cdk/utils/focus';

class TuiFocusTrapDirective {
    constructor(doc, el, renderer) {
        this.doc = doc;
        this.el = el;
        this.renderer = renderer;
        this.activeElement = tuiGetNativeFocused(this.doc);
        /**
         * This would cause currently focused element to lose focus,
         * but it might cause ExpressionChanged error due to potential HostBinding.
         * Microtask keeps it in the same frame but allows change detection to run
         */
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        Promise.resolve().then(() => {
            this.el.nativeElement.focus();
        });
    }
    onBlur() {
        this.renderer.removeAttribute(this.el.nativeElement, 'tabIndex');
    }
    onFocusIn(node) {
        const { nativeElement } = this.el;
        if (tuiContainsOrAfter(nativeElement, node)) {
            return;
        }
        const focusable = tuiGetClosestFocusable({
            initial: nativeElement,
            root: nativeElement,
        });
        if (focusable) {
            focusable.focus();
        }
    }
    ngOnDestroy() {
        tuiBlurNativeFocused(this.doc);
        /**
         * HostListeners are triggered even after ngOnDestroy
         * {@link https://github.com/angular/angular/issues/38100}
         * so we need to delay it but stay in the same sync cycle,
         * therefore using Promise instead of setTimeout
         */
        // eslint-disable-next-line
        Promise.resolve().then(() => {
            if (tuiIsHTMLElement(this.activeElement)) {
                this.activeElement.focus();
            }
        });
    }
}
TuiFocusTrapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFocusTrapDirective, deps: [{ token: DOCUMENT }, { token: ElementRef }, { token: Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });
TuiFocusTrapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiFocusTrapDirective, selector: "[tuiFocusTrap]", host: { attributes: { "tabIndex": "0" }, listeners: { "blur": "onBlur()", "window:focusin.silent": "onFocusIn($event.target)" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFocusTrapDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiFocusTrap]',
                    host: {
                        tabIndex: '0',
                    },
                }]
        }], ctorParameters: function () { return [{ type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i0.Renderer2, decorators: [{
                    type: Inject,
                    args: [Renderer2]
                }] }]; }, propDecorators: { onBlur: [{
                type: HostListener,
                args: ['blur']
            }], onFocusIn: [{
                type: HostListener,
                args: ['window:focusin.silent', ['$event.target']]
            }] } });

class TuiFocusTrapModule {
}
TuiFocusTrapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFocusTrapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiFocusTrapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFocusTrapModule, declarations: [TuiFocusTrapDirective], exports: [TuiFocusTrapDirective] });
TuiFocusTrapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFocusTrapModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFocusTrapModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiFocusTrapDirective],
                    exports: [TuiFocusTrapDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiFocusTrapDirective, TuiFocusTrapModule };
//# sourceMappingURL=taiga-ui-cdk-directives-focus-trap.js.map
