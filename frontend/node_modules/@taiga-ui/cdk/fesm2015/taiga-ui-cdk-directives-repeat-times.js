import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { ViewContainerRef, TemplateRef, Directive, Inject, Input, NgModule } from '@angular/core';
import { tuiRequiredSetter } from '@taiga-ui/cdk/decorators';
import { tuiClamp } from '@taiga-ui/cdk/utils/math';

const MAX_VALUE = 0x10000;
class TuiRepeatTimesContext {
    constructor($implicit) {
        this.$implicit = $implicit;
    }
}
/**
 * Directive similar to ngFor but using a number of repetitions rather than an array
 *
 * {@link TuiRepeatTimesDirective.tuiRepeatTimesOf requested number of times}.
 * {@link TuiRepeatTimesContext context} for every instance of the template inherits outer context and stores
 * {@link TuiRepeatTimesContext.$implicit index} of a template instance.
 */
class TuiRepeatTimesDirective {
    constructor(viewContainer, templateRef) {
        this.viewContainer = viewContainer;
        this.templateRef = templateRef;
    }
    set tuiRepeatTimesOf(count) {
        const safeCount = Math.floor(tuiClamp(count, 0, MAX_VALUE));
        const { length } = this.viewContainer;
        if (count < length) {
            this.removeContainers(length - count);
        }
        else {
            this.addContainers(safeCount);
        }
    }
    addContainers(count) {
        for (let index = this.viewContainer.length; index < count; index++) {
            this.viewContainer.createEmbeddedView(this.templateRef, new TuiRepeatTimesContext(index));
        }
    }
    removeContainers(amount) {
        for (let index = 0; index < amount; index++) {
            this.viewContainer.remove();
        }
    }
}
TuiRepeatTimesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRepeatTimesDirective, deps: [{ token: ViewContainerRef }, { token: TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
TuiRepeatTimesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiRepeatTimesDirective, selector: "[tuiRepeatTimes][tuiRepeatTimesOf]", inputs: { tuiRepeatTimesOf: "tuiRepeatTimesOf" }, ngImport: i0 });
__decorate([
    tuiRequiredSetter()
], TuiRepeatTimesDirective.prototype, "tuiRepeatTimesOf", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRepeatTimesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiRepeatTimes][tuiRepeatTimesOf]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef, decorators: [{
                    type: Inject,
                    args: [ViewContainerRef]
                }] }, { type: i0.TemplateRef, decorators: [{
                    type: Inject,
                    args: [TemplateRef]
                }] }]; }, propDecorators: { tuiRepeatTimesOf: [{
                type: Input
            }] } });

class TuiRepeatTimesModule {
}
TuiRepeatTimesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRepeatTimesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiRepeatTimesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRepeatTimesModule, declarations: [TuiRepeatTimesDirective], exports: [TuiRepeatTimesDirective] });
TuiRepeatTimesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRepeatTimesModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRepeatTimesModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiRepeatTimesDirective],
                    exports: [TuiRepeatTimesDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiRepeatTimesContext, TuiRepeatTimesDirective, TuiRepeatTimesModule };
//# sourceMappingURL=taiga-ui-cdk-directives-repeat-times.js.map
