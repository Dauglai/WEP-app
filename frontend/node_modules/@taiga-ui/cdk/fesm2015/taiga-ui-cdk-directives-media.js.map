{"version":3,"file":"taiga-ui-cdk-directives-media.js","sources":["../../../projects/cdk/directives/media/media.directive.ts","../../../projects/cdk/directives/media/media.module.ts","../../../projects/cdk/directives/media/taiga-ui-cdk-directives-media.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport {tuiDefaultProp, tuiRequiredSetter} from '@taiga-ui/cdk/decorators';\n\n@Directive({\n    selector: 'video[tuiMedia], audio[tuiMedia]',\n    exportAs: 'tuiMedia',\n})\nexport class TuiMediaDirective {\n    private playbackRate = 1;\n\n    @Input()\n    @HostBinding('volume')\n    @tuiDefaultProp(\n        (volume: number) => Number.isFinite(volume) && volume >= 0 && volume <= 1,\n    )\n    volume = 1;\n\n    @Input('playbackRate')\n    @tuiRequiredSetter(nonNegativeFiniteAssertion)\n    set playbackRateSetter(playbackRate: number) {\n        this.updatePlaybackRate(playbackRate);\n    }\n\n    @Output()\n    readonly currentTimeChange = new EventEmitter<number>();\n\n    @Output()\n    readonly pausedChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly volumeChange = new EventEmitter<number>();\n\n    constructor(\n        @Inject(ElementRef)\n        private readonly el: ElementRef<HTMLMediaElement>,\n    ) {}\n\n    @Input()\n    @tuiRequiredSetter(nonNegativeFiniteAssertion)\n    set currentTime(currentTime: number) {\n        if (Math.abs(currentTime - this.currentTime) > 0.05) {\n            this.el.nativeElement.currentTime = currentTime;\n        }\n    }\n\n    get currentTime(): number {\n        return this.el.nativeElement.currentTime;\n    }\n\n    @Input()\n    set paused(paused: boolean) {\n        if (paused) {\n            this.el.nativeElement.pause();\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.el.nativeElement.play();\n            this.updatePlaybackRate(this.playbackRate);\n        }\n    }\n\n    get paused(): boolean {\n        return this.el.nativeElement.paused;\n    }\n\n    // @bad TODO: Make sure no other events can affect this like network issues etc.\n    @HostListener('ended', ['true'])\n    @HostListener('pause', ['true'])\n    @HostListener('play', ['false'])\n    onPausedChange(paused: boolean): void {\n        this.pausedChange.emit(paused);\n        this.updatePlaybackRate(this.playbackRate);\n    }\n\n    @HostListener('volumechange')\n    onVolumeChange(): void {\n        this.volume = this.el.nativeElement.volume;\n        this.volumeChange.emit(this.volume);\n    }\n\n    @HostListener('timeupdate')\n    @HostListener('seeking')\n    @HostListener('seeked')\n    onCurrentTimeChange(): void {\n        this.currentTimeChange.emit(this.currentTime);\n    }\n\n    @HostListener('durationchange')\n    changeDetectionTrigger(): void {\n        // @bad TODO: consider if other events need to trigger CD\n    }\n\n    private updatePlaybackRate(playbackRate: number): void {\n        this.playbackRate = playbackRate;\n        this.el.nativeElement.playbackRate = this.playbackRate;\n    }\n}\n\nfunction nonNegativeFiniteAssertion(value: number): boolean {\n    return Number.isFinite(value) && value >= 0;\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiMediaDirective} from './media.directive';\n\n@NgModule({\n    declarations: [TuiMediaDirective],\n    exports: [TuiMediaDirective],\n})\nexport class TuiMediaModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}