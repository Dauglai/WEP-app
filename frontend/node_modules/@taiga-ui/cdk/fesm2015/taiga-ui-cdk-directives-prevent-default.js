import * as i0 from '@angular/core';
import { ElementRef, NgZone, Directive, Inject, Self, Input, NgModule } from '@angular/core';
import { tuiZonefree, tuiPreventDefault } from '@taiga-ui/cdk/observables';
import { TuiDestroyService } from '@taiga-ui/cdk/services';
import * as i1 from 'rxjs';
import { fromEvent } from 'rxjs';
import { takeUntil } from 'rxjs/operators';

/**
 * @description:
 * Simple prevent default on event directive when you do not need anything
 * else on event and do not want to trigger change detection
 */
class TuiPreventDefaultDirective {
    constructor(el, ngZone, destroy$) {
        this.el = el;
        this.ngZone = ngZone;
        this.destroy$ = destroy$;
        this.eventName = '';
    }
    ngOnInit() {
        fromEvent(this.el.nativeElement, this.eventName, { passive: false })
            .pipe(tuiZonefree(this.ngZone), tuiPreventDefault(), takeUntil(this.destroy$))
            .subscribe();
    }
}
TuiPreventDefaultDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPreventDefaultDirective, deps: [{ token: ElementRef }, { token: NgZone }, { token: TuiDestroyService, self: true }], target: i0.ɵɵFactoryTarget.Directive });
TuiPreventDefaultDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiPreventDefaultDirective, selector: "[tuiPreventDefault]", inputs: { eventName: ["tuiPreventDefault", "eventName"] }, providers: [TuiDestroyService], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPreventDefaultDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiPreventDefault]',
                    providers: [TuiDestroyService],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i0.NgZone, decorators: [{
                    type: Inject,
                    args: [NgZone]
                }] }, { type: i1.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }]; }, propDecorators: { eventName: [{
                type: Input,
                args: ['tuiPreventDefault']
            }] } });

class TuiPreventDefaultModule {
}
TuiPreventDefaultModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPreventDefaultModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiPreventDefaultModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPreventDefaultModule, declarations: [TuiPreventDefaultDirective], exports: [TuiPreventDefaultDirective] });
TuiPreventDefaultModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPreventDefaultModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPreventDefaultModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiPreventDefaultDirective],
                    exports: [TuiPreventDefaultDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiPreventDefaultDirective, TuiPreventDefaultModule };
//# sourceMappingURL=taiga-ui-cdk-directives-prevent-default.js.map
