{"version":3,"file":"taiga-ui-cdk-decorators.js","sources":["../../../projects/cdk/decorators/debounce.ts","../../../projects/cdk/decorators/default-prop.ts","../../../projects/cdk/decorators/pure.ts","../../../projects/cdk/decorators/required-setter.ts","../../../projects/cdk/decorators/taiga-ui-cdk-decorators.ts"],"sourcesContent":["export function tuiDebounce(timeout: number): MethodDecorator {\n    let timeoutRef: ReturnType<typeof setTimeout> | undefined;\n\n    return function (_target, _key: string | symbol, descriptor: PropertyDescriptor) {\n        const {value} = descriptor;\n\n        descriptor.value = function (...args: unknown[]) {\n            clearTimeout(timeoutRef);\n            timeoutRef = setTimeout(() => value.apply(this, args), timeout);\n        };\n\n        return descriptor;\n    };\n}\n","import {tuiAssert} from '@taiga-ui/cdk/classes';\nimport {TuiBooleanHandler} from '@taiga-ui/cdk/types';\n\n/**\n * Decorator for checking input values for undefined. You can also pass\n * optional assertion to check input against.\n *\n * CAUTION: This decorator overwrites other getters and setters.\n */\nexport function tuiDefaultProp<T extends Record<string, any>, K extends keyof T>(\n    assertion?: TuiBooleanHandler<T[K]>,\n    ...args: unknown[]\n): PropertyDecorator {\n    return (target, key) => {\n        const {name} = target.constructor;\n        const errorGetDefaultMessage = ngDevMode && errorGetDefault(key, name);\n        const errorSetDefaultMessage = ngDevMode && errorSetDefault(key, name);\n\n        Object.defineProperty(target, key, {\n            configurable: true,\n            get(): undefined {\n                ngDevMode && tuiAssert.assert(false, errorGetDefaultMessage);\n\n                return undefined;\n            },\n            set(this: T, initialValue: T[K]) {\n                const isValid = initialValue !== undefined;\n                const errorMessage = ngDevMode && errorSetDefaultInitial(key, name);\n                let currentValue = initialValue;\n\n                ngDevMode && tuiAssert.assert(isValid, errorMessage);\n\n                if (ngDevMode && isValid && assertion && tuiAssert) {\n                    tuiAssert.assert(\n                        assertion.call(this, initialValue),\n                        `${String(key)} in ${name} received:`,\n                        initialValue,\n                        ...args,\n                    );\n                }\n\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    get(): T[K] {\n                        return currentValue;\n                    },\n                    set(this: T, value: T[K]) {\n                        const isValid = value !== undefined;\n                        const backupValue = initialValue;\n\n                        ngDevMode &&\n                            tuiAssert.assert(\n                                isValid,\n                                errorSetDefaultMessage,\n                                String(backupValue),\n                            );\n\n                        if (ngDevMode && isValid && assertion && tuiAssert) {\n                            tuiAssert.assert(\n                                assertion.call(this, value),\n                                `${String(key)} in ${name} received:`,\n                                value,\n                                ...args,\n                            );\n                        }\n\n                        currentValue = isValid ? value : backupValue;\n                    },\n                });\n            },\n        });\n    };\n}\n\nfunction errorGetDefault(key: string | symbol, component: string): string {\n    return `Default value for ${String(\n        key,\n    )} was not provided in ${component}, error in Taiga UI Angular Kit`;\n}\n\nfunction errorSetDefault(key: string | symbol, component: string): string {\n    return `Undefined was passed as ${String(\n        key,\n    )} to ${component}, which is invalid input, using default value:`;\n}\n\nfunction errorSetDefaultInitial(key: string | symbol, component: string): string {\n    return `Undefined was passed as default value for ${String(\n        key,\n    )} to ${component}, error in Taiga UI Angular Kit`;\n}\n","import {TuiPureException} from '@taiga-ui/cdk/exceptions';\n\n/**\n * Implements lazy initialization for getter or memoization of a function call similar to pure {@link: Pipe}.\n * Replaces getter with its calculated value upon first call or keeps track of last call arguments and returned\n * value for function, skipping calculation when arguments are strictly the same.\n *\n * @throws error if used not on getter or function\n *\n * CAUTION: `this` is not available inside such functions/getters, they must be pure.\n */\nexport function tuiPure<T>(\n    _target: Record<string, any>,\n    propertyKey: string,\n    {get, enumerable, value}: TypedPropertyDescriptor<T>,\n): TypedPropertyDescriptor<T> {\n    if (get) {\n        return {\n            configurable: true,\n            enumerable,\n            get(): T {\n                const value = get.call(this);\n\n                Object.defineProperty(this, propertyKey, {enumerable, value});\n\n                return value;\n            },\n        };\n    }\n\n    if (typeof value !== `function`) {\n        throw new TuiPureException();\n    }\n\n    const original = value;\n\n    return {\n        configurable: true,\n        enumerable,\n        get(): T {\n            let previousArgs: readonly unknown[] = [];\n            let originalFnWasCalledLeastAtOnce = false;\n            let pureValue: unknown;\n\n            const patched = (...args: unknown[]): unknown => {\n                const isPure =\n                    originalFnWasCalledLeastAtOnce &&\n                    previousArgs.length === args.length &&\n                    args.every((arg, index) => arg === previousArgs[index]);\n\n                if (isPure) {\n                    return pureValue;\n                }\n\n                previousArgs = args;\n                pureValue = original.apply(this, args);\n                originalFnWasCalledLeastAtOnce = true;\n\n                return pureValue;\n            };\n\n            Object.defineProperty(this, propertyKey, {\n                configurable: true,\n                value: patched,\n            });\n\n            return patched as unknown as T;\n        },\n    };\n}\n","import {tuiAssert} from '@taiga-ui/cdk/classes';\nimport {TuiBooleanHandler} from '@taiga-ui/cdk/types';\n\n/**\n * Decorator for checking input setter values against a custom assertion which\n * takes value passed to input setter and component instance as arguments.\n * It specifically checks for undefined values and prevents calls to the\n * original setter in this case.\n */\nexport function tuiRequiredSetter<T extends Record<string, any>, K extends keyof T>(\n    assertion?: TuiBooleanHandler<T[K]>,\n    ...args: any[]\n): MethodDecorator {\n    return (\n        target: Record<string, any>,\n        key,\n        {configurable, enumerable, get, set}: PropertyDescriptor,\n    ): PropertyDescriptor => {\n        const {name} = target.constructor;\n\n        return {\n            configurable,\n            enumerable,\n            get,\n            set(this: T, value: T[K]) {\n                if (ngDevMode && value !== undefined && assertion && tuiAssert) {\n                    tuiAssert.assert(\n                        assertion.call(this, value),\n                        `${String(key)} in ${name} received:`,\n                        value,\n                        ...args,\n                    );\n                }\n\n                if (!set || value === undefined) {\n                    ngDevMode &&\n                        tuiAssert.assert(value !== undefined, errorSet(key, name));\n\n                    return;\n                }\n\n                set.call(this, value);\n            },\n        };\n    };\n}\n\nfunction errorSet(key: string | symbol, component: string): string {\n    return `Undefined was passed as ${String(\n        key,\n    )} to ${component}, setter will not be called`;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}