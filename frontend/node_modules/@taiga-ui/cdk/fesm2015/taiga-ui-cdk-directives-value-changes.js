import * as i0 from '@angular/core';
import { Directive, Optional, Inject, Output, NgModule } from '@angular/core';
import * as i1 from '@angular/forms';
import { ControlContainer, NgControl } from '@angular/forms';
import { Subject, EMPTY } from 'rxjs';
import { distinctUntilChanged, switchAll } from 'rxjs/operators';

class TuiValueChangesDirective {
    constructor(container, control) {
        this.container = container;
        this.control = control;
        this.refresh$ = new Subject();
        this.tuiValueChanges = this.refresh$.pipe(distinctUntilChanged(), switchAll());
    }
    ngDoCheck() {
        var _a, _b;
        this.refresh$.next(((_a = this.control) === null || _a === void 0 ? void 0 : _a.valueChanges) || ((_b = this.container) === null || _b === void 0 ? void 0 : _b.valueChanges) || EMPTY);
    }
}
TuiValueChangesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiValueChangesDirective, deps: [{ token: ControlContainer, optional: true }, { token: NgControl, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
TuiValueChangesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiValueChangesDirective, selector: "[tuiValueChanges]", outputs: { tuiValueChanges: "tuiValueChanges" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiValueChangesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiValueChanges]',
                }]
        }], ctorParameters: function () { return [{ type: i1.ControlContainer, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [ControlContainer]
                }] }, { type: i1.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }]; }, propDecorators: { tuiValueChanges: [{
                type: Output
            }] } });

class TuiValueChangesModule {
}
TuiValueChangesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiValueChangesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiValueChangesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiValueChangesModule, declarations: [TuiValueChangesDirective], exports: [TuiValueChangesDirective] });
TuiValueChangesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiValueChangesModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiValueChangesModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiValueChangesDirective],
                    exports: [TuiValueChangesDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiValueChangesDirective, TuiValueChangesModule };
//# sourceMappingURL=taiga-ui-cdk-directives-value-changes.js.map
