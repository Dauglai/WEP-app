import { ComponentRef, EmbeddedViewRef, TemplateRef } from '@angular/core';
import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
import { AbstractTuiPortalHostComponent } from './portal-host';
import * as i0 from "@angular/core";
/**
 * Abstract service for displaying portals
 */
export declare abstract class AbstractTuiPortalService {
    protected host?: AbstractTuiPortalHostComponent;
    protected get safeHost(): AbstractTuiPortalHostComponent;
    attach(host: AbstractTuiPortalHostComponent): void;
    add<C>(component: PolymorpheusComponent<C>): ComponentRef<C>;
    remove<C>({ hostView }: ComponentRef<C>): void;
    addTemplate<C>(templateRef: TemplateRef<C>, context?: C): EmbeddedViewRef<C>;
    removeTemplate<C>(viewRef: EmbeddedViewRef<C>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbstractTuiPortalService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AbstractTuiPortalService>;
}
