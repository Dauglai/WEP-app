import { ChangeDetectorRef, TemplateRef } from '@angular/core';
import { TuiDialog } from '@taiga-ui/cdk/types';
import { PolymorpheusTemplate } from '@tinkoff/ng-polymorpheus';
import { AbstractTuiDialogService } from './dialog.service';
import * as i0 from "@angular/core";
export declare abstract class AbstractTuiDialogDirective<T> extends PolymorpheusTemplate<TuiDialog<T, void>> {
    private readonly service;
    private readonly open$;
    options: Partial<T>;
    set open(open: boolean);
    openChange: import("rxjs").Observable<boolean>;
    constructor(templateRef: TemplateRef<TuiDialog<T, void>>, cdr: ChangeDetectorRef, service: AbstractTuiDialogService<T>);
    static ɵfac: i0.ɵɵFactoryDeclaration<AbstractTuiDialogDirective<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AbstractTuiDialogDirective<any>, never, never, {}, {}, never>;
}
