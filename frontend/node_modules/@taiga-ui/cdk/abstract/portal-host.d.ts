import { ComponentRef, ElementRef, EmbeddedViewRef, Injector, TemplateRef } from '@angular/core';
import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
import { AbstractTuiPortalService } from './portal-service';
import * as i0 from "@angular/core";
/**
 * Abstract class for host element for dynamically created portals.
 */
export declare abstract class AbstractTuiPortalHostComponent {
    private readonly injector;
    private readonly el;
    private readonly vcr;
    constructor(injector: Injector, el: ElementRef<HTMLElement>, portalService: AbstractTuiPortalService);
    get clientRect(): ClientRect;
    addComponentChild<C>(component: PolymorpheusComponent<C>): ComponentRef<C>;
    addTemplateChild<C>(templateRef: TemplateRef<C>, context?: C): EmbeddedViewRef<C>;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbstractTuiPortalHostComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AbstractTuiPortalHostComponent, never, never, {}, {}, never>;
}
