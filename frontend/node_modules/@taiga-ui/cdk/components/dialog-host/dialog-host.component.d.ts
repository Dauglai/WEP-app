import { InjectionToken } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { TuiDialog } from '@taiga-ui/cdk/types';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
/**
 * Is closing dialog on browser backward navigation enabled
 */
export declare const TUI_DIALOG_CLOSES_ON_BACK: InjectionToken<Observable<boolean>>;
export declare class TuiDialogHostComponent<T extends TuiDialog<unknown, unknown>> {
    readonly isDialogClosesOnBack$: Observable<boolean>;
    private readonly dialogsByType;
    private readonly historyRef;
    private readonly titleService;
    readonly dialogs$: Observable<T[]>;
    constructor(isDialogClosesOnBack$: Observable<boolean>, dialogsByType: Array<Observable<readonly T[]>>, historyRef: History, titleService: Title);
    closeLast(dialogs: readonly T[], isDialogClosesOnBack: boolean): void;
    onDialog({ propertyName }: TransitionEvent, popupOpened: boolean, isDialogClosesOnBack: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDialogHostComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiDialogHostComponent<any>, "tui-dialog-host", never, {}, {}, never, never>;
}
