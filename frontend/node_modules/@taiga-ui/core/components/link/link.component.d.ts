import { ElementRef } from '@angular/core';
import { TuiFocusableElementAccessor, TuiFocusVisibleService, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiBrightness, TuiHorizontalDirection } from '@taiga-ui/core/types';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiLinkComponent implements TuiFocusableElementAccessor {
    private readonly el;
    readonly mode$: Observable<TuiBrightness | null>;
    pseudo: boolean;
    icon: string;
    iconAlign: TuiHorizontalDirection;
    iconRotated: boolean;
    mode: 'negative' | 'positive' | null;
    focusVisible: boolean;
    readonly focusedChange: Observable<boolean>;
    constructor(el: ElementRef<TuiNativeFocusableElement>, mode$: Observable<TuiBrightness | null>, focusVisible$: TuiFocusVisibleService);
    get nativeFocusableElement(): TuiNativeFocusableElement;
    get focused(): boolean;
    get hasIcon(): boolean;
    get iconAlignLeft(): boolean;
    get iconAlignRight(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiLinkComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiLinkComponent, "a[tuiLink], button[tuiLink]", ["tuiLink"], { "pseudo": "pseudo"; "icon": "icon"; "iconAlign": "iconAlign"; "iconRotated": "iconRotated"; "mode": "mode"; }, {}, never, ["*"]>;
}
