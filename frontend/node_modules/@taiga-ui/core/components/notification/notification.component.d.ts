import { EventEmitter } from '@angular/core';
import { TuiNotificationDefaultOptions } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare const STATUS_ICON: {
    readonly info: "tuiIconInfo";
    readonly success: "tuiIconCheckCircle";
    readonly error: "tuiIconXCircle";
    readonly warning: "tuiIconAlertCircle";
};
export declare class TuiNotificationComponent {
    readonly closeWord$: Observable<string>;
    readonly options: TuiNotificationDefaultOptions;
    hasIcon: boolean;
    status: 'error' | 'info' | 'success' | 'warning';
    hideClose: boolean;
    readonly close: EventEmitter<void>;
    constructor(closeWord$: Observable<string>, options: TuiNotificationDefaultOptions);
    get icon(): string;
    get hasClose(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiNotificationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiNotificationComponent, "tui-notification", never, { "hasIcon": "hasIcon"; "status": "status"; "hideClose": "hideClose"; }, { "close": "close"; }, never, ["*"]>;
}
