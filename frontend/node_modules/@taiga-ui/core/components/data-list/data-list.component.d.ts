import { ElementRef } from '@angular/core';
import { TuiTextfieldController } from '@taiga-ui/core/directives';
import { TuiDataListAccessor } from '@taiga-ui/core/interfaces';
import { TuiDataListRole } from '@taiga-ui/core/types';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiDataListComponent<T> implements TuiDataListAccessor<T> {
    private readonly controller;
    private readonly el;
    readonly defaultEmptyContent$: Observable<string>;
    private readonly options;
    private origin?;
    role: TuiDataListRole;
    emptyContent: PolymorpheusContent;
    size: "m" | "l" | "s";
    constructor(controller: TuiTextfieldController | null, el: ElementRef<HTMLElement>, defaultEmptyContent$: Observable<string>);
    get empty$(): Observable<boolean>;
    onFocusIn(relatedTarget: HTMLElement, currentTarget: HTMLElement): void;
    noop(): void;
    onKeyDownArrow(current: HTMLElement, step: number): void;
    handleFocusLossIfNecessary(element?: Element): void;
    getOptions(includeDisabled?: boolean): readonly T[];
    onFocus({ target }: Event, top: boolean): void;
    private get elements();
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDataListComponent<any>, [{ optional: true; }, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiDataListComponent<any>, "tui-data-list", never, { "role": "role"; "emptyContent": "emptyContent"; "size": "size"; }, {}, ["options"], ["*"]>;
}
