import { ElementRef, OnDestroy, TemplateRef } from '@angular/core';
import { TuiContextWithImplicit, TuiEventWith } from '@taiga-ui/cdk';
import { TuiDropdownDirective } from '@taiga-ui/core/directives/dropdown';
import { TuiDataListHost } from '@taiga-ui/core/interfaces';
import { TuiOptionRole, TuiSizeL, TuiSizeXS } from '@taiga-ui/core/types';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { TuiDataListComponent } from '../data-list.component';
import * as i0 from "@angular/core";
export declare class TuiOptionComponent<T = unknown> implements OnDestroy {
    readonly content: PolymorpheusContent<TuiContextWithImplicit<TemplateRef<Record<string, unknown>>>> | null;
    private readonly dataList;
    private readonly el;
    private readonly host;
    readonly dropdown: TuiDropdownDirective | null;
    /** @deprecated use size on {@link TuiDataListComponent} instead */
    size: TuiSizeL | TuiSizeXS | null;
    role: TuiOptionRole;
    disabled: boolean;
    value?: T;
    constructor(content: PolymorpheusContent<TuiContextWithImplicit<TemplateRef<Record<string, unknown>>>> | null, dataList: TuiDataListComponent<T>, el: ElementRef<HTMLElement>, host: TuiDataListHost<T> | null, dropdown: TuiDropdownDirective | null);
    get active(): boolean;
    onClick(): void;
    onMouseMove({ currentTarget }: TuiEventWith<MouseEvent, HTMLElement>): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiOptionComponent<any>, [{ optional: true; }, null, null, { optional: true; }, { optional: true; self: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiOptionComponent<any>, "button[tuiOption], a[tuiOption]", never, { "size": "size"; "role": "role"; "disabled": "disabled"; "value": "value"; }, {}, never, ["*"]>;
}
