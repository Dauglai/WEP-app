import { EventEmitter } from '@angular/core';
import { TuiBooleanHandler, TuiDay, TuiDayRange, TuiHandler, TuiInjectionTokenType, TuiMonth } from '@taiga-ui/cdk';
import { TuiInteractiveState, TuiRangeState } from '@taiga-ui/core/enums';
import { TUI_SHORT_WEEK_DAYS } from '@taiga-ui/core/tokens';
import { TuiMarkerHandler } from '@taiga-ui/core/types';
import * as i0 from "@angular/core";
export declare class TuiPrimitiveCalendarComponent {
    readonly unorderedWeekDays$: TuiInjectionTokenType<typeof TUI_SHORT_WEEK_DAYS>;
    readonly dayTypeHandler: TuiHandler<TuiDay, string>;
    private pressedItem;
    private readonly today;
    month: TuiMonth;
    disabledItemHandler: TuiBooleanHandler<TuiDay>;
    markerHandler: TuiMarkerHandler;
    value: TuiDay | TuiDayRange | null;
    hoveredItem: TuiDay | null;
    showAdjacent: boolean;
    readonly hoveredItemChange: EventEmitter<TuiDay | null>;
    readonly dayClick: EventEmitter<TuiDay>;
    constructor(unorderedWeekDays$: TuiInjectionTokenType<typeof TUI_SHORT_WEEK_DAYS>, dayTypeHandler: TuiHandler<TuiDay, string>);
    get isSingle(): boolean;
    readonly toMarkers: (day: TuiDay, today: boolean, inRange: boolean) => [string, string] | [string] | null;
    getItemState(item: TuiDay): TuiInteractiveState | null;
    getItemRange(item: TuiDay): TuiRangeState | null;
    itemIsToday(item: TuiDay): boolean;
    itemIsUnavailable(item: TuiDay): boolean;
    itemIsInterval(day: TuiDay): boolean;
    onItemHovered(item: TuiDay | false): void;
    onItemPressed(item: TuiDay | false): void;
    onItemClick(item: TuiDay): void;
    private updateHoveredItem;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiPrimitiveCalendarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiPrimitiveCalendarComponent, "tui-primitive-calendar", never, { "month": "month"; "disabledItemHandler": "disabledItemHandler"; "markerHandler": "markerHandler"; "value": "value"; "hoveredItem": "hoveredItem"; "showAdjacent": "showAdjacent"; }, { "hoveredItemChange": "hoveredItemChange"; "dayClick": "dayClick"; }, never, never>;
}
