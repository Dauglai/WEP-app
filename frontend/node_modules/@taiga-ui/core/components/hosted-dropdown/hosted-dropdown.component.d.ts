import { ElementRef, EventEmitter } from '@angular/core';
import { TuiActiveZoneDirective, TuiContextWithImplicit, TuiFocusableElementAccessor, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiDropdownHoverDirective } from '@taiga-ui/core/directives/dropdown';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export interface TuiHostedDropdownContext extends TuiContextWithImplicit<TuiActiveZoneDirective> {
    close(): void;
}
export declare class TuiHostedDropdownComponent implements TuiFocusableElementAccessor {
    private readonly hover$;
    private readonly el;
    private readonly dropdownHost?;
    private readonly wrapper?;
    private readonly dropdownDirective?;
    /** TODO: rename in 4.0 */
    readonly openChange: BehaviorSubject<boolean>;
    readonly activeZone: TuiActiveZoneDirective;
    content: PolymorpheusContent<TuiHostedDropdownContext>;
    sided: boolean;
    canOpen: boolean;
    readonly open$: import("rxjs").Observable<boolean>;
    readonly focusedChange: EventEmitter<boolean>;
    readonly context: TuiContextWithImplicit<TuiActiveZoneDirective>;
    constructor(hover$: TuiDropdownHoverDirective | null, el: ElementRef);
    set open(open: boolean);
    get open(): boolean;
    get host(): HTMLElement;
    get computedHost(): HTMLElement;
    get dropdown(): HTMLElement | undefined;
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    onFocusIn(target: HTMLElement): void;
    onClick(target: HTMLElement): void;
    onKeyDownEsc(event: Event): void;
    onArrow(event: KeyboardEvent, down: boolean): void;
    onKeydown({ key, target, defaultPrevented }: KeyboardEvent): void;
    onActiveZone(active: boolean): void;
    onHostObscured(obscured: boolean): void;
    updateOpen(open: boolean): void;
    readonly close: () => void;
    private get hostEditable();
    private focusDropdown;
    private closeDropdown;
    private focusHost;
    private updateFocused;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiHostedDropdownComponent, [{ optional: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiHostedDropdownComponent, "tui-hosted-dropdown", never, { "content": "content"; "sided": "sided"; "canOpen": "canOpen"; "open": "open"; }, { "open$": "openChange"; "focusedChange": "focusedChange"; }, ["dropdownHost"], ["*"]>;
}
