import { __decorate } from "tslib";
import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject, Input, } from '@angular/core';
import { TUI_IS_IOS, tuiBlurNativeFocused, tuiDefaultProp, tuiIsNativeFocusedIn, tuiIsSafari, tuiRequiredSetter, } from '@taiga-ui/cdk';
import { tuiSizeBigger } from '@taiga-ui/core/utils/miscellaneous';
import { TUI_LOADER_OPTIONS } from './loader-options';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@tinkoff/ng-polymorpheus";
export class TuiLoaderComponent {
    constructor(doc, el, isIos, options) {
        this.doc = doc;
        this.el = el;
        this.isIos = isIos;
        this.options = options;
        this.size = this.options.size;
        this.inheritColor = this.options.inheritColor;
        this.overlay = this.options.overlay;
        this.loading = true;
        this.isApple = tuiIsSafari(this.el.nativeElement) || this.isIos;
    }
    set showLoader(value) {
        // @bad TODO: https://github.com/angular/angular/issues/32083 think of a better way
        if (value && this.focused) {
            tuiBlurNativeFocused(this.doc);
        }
        this.loading = value;
    }
    get hasOverlay() {
        return this.overlay && this.loading;
    }
    get hasText() {
        return !!this.textContent;
    }
    get isHorizontal() {
        return !tuiSizeBigger(this.size);
    }
    get focused() {
        return tuiIsNativeFocusedIn(this.el.nativeElement);
    }
}
TuiLoaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLoaderComponent, deps: [{ token: DOCUMENT }, { token: ElementRef }, { token: TUI_IS_IOS }, { token: TUI_LOADER_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiLoaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiLoaderComponent, selector: "tui-loader", inputs: { size: "size", inheritColor: "inheritColor", overlay: "overlay", textContent: "textContent", showLoader: "showLoader" }, host: { properties: { "class._loading": "this.loading" } }, ngImport: i0, template: "<fieldset\n    class=\"t-content\"\n    [class.t-content_has-overlay]=\"hasOverlay\"\n    [class.t-content_loading]=\"loading\"\n    [disabled]=\"loading && !isApple\"\n>\n    <ng-content></ng-content>\n</fieldset>\n\n<div\n    *ngIf=\"loading\"\n    class=\"t-loader\"\n    [class.t-loader_horizontal]=\"isHorizontal\"\n    [class.t-loader_inherit-color]=\"inheritColor\"\n    [attr.data-size]=\"size\"\n>\n    <svg\n        automation-id=\"tui-loader__loader\"\n        focusable=\"false\"\n        viewBox=\"0 0 100 100\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"t-icon\"\n    >\n        <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"50\"\n            stroke-dasharray=\"314\"\n            class=\"t-circle\"\n        ></circle>\n    </svg>\n\n    <div\n        *ngIf=\"hasText\"\n        automation-id=\"tui-loader__text\"\n        class=\"t-text\"\n        [class.t-text_horizontal]=\"isHorizontal\"\n    >\n        <ng-container *polymorpheusOutlet=\"textContent as text\">\n            {{ text }}\n        </ng-container>\n    </div>\n</div>\n", styles: ["@keyframes tuiLoaderDashOffset{0%{stroke-dashoffset:-66}50%{stroke-dashoffset:-314}to{stroke-dashoffset:-66}}@keyframes tuiLoaderRotate{0%{transform:rotate(0)}50%{transform:rotate(1turn)}to{transform:rotate(3turn)}}:host{position:relative;display:flex}:host._loading{overflow:hidden}.t-content{z-index:0;min-width:100%;height:100%;padding:0;margin:0;border:none}.t-content_has-overlay{opacity:.3}.t-content_loading{pointer-events:none}.t-loader{position:relative;left:-100%;display:flex;flex-direction:column;align-items:center;justify-content:center;min-width:100%;flex-shrink:0;align-self:center;color:var(--tui-text-01);stroke:var(--tui-primary);animation:tuiFadeIn var(--tui-duration)}.t-loader.t-loader_horizontal{flex-direction:row}.t-loader.t-loader_inherit-color{color:inherit;stroke:currentColor}.t-loader[data-size=xs]{font-size:.75rem;stroke-width:38}.t-loader[data-size=s]{font-size:1rem;stroke-width:25}.t-loader[data-size=m]{font-size:1.5rem;stroke-width:17}.t-loader[data-size=l]{font-size:2.5rem;stroke-width:15}.t-loader[data-size=xl]{font-size:3.5rem;stroke-width:14}.t-loader[data-size=xxl]{font-size:5rem;stroke-width:10}.t-text{font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-top:1rem;color:inherit;max-width:100%;text-align:center;stroke-width:0}.t-text_horizontal{margin:0 0 0 1rem}.t-icon{display:block;min-width:1em;max-width:1em;min-height:1em;max-height:1em;margin:.25rem -.5em;border-radius:100%;overflow:hidden;transform:scaleY(-1);animation:tuiLoaderRotate 3s linear infinite}.t-circle{fill:none;stroke:inherit;stroke-width:inherit;animation:tuiLoaderDashOffset 3s linear infinite}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "inheritColor", void 0);
__decorate([
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "overlay", void 0);
__decorate([
    tuiRequiredSetter()
], TuiLoaderComponent.prototype, "showLoader", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLoaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-loader',
                    templateUrl: './loader.template.html',
                    styleUrls: ['./loader.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_IOS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_LOADER_OPTIONS]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], inheritColor: [{
                type: Input
            }], overlay: [{
                type: Input
            }], textContent: [{
                type: Input
            }], showLoader: [{
                type: Input
            }], loading: [{
                type: HostBinding,
                args: ['class._loading']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvY29tcG9uZW50cy9sb2FkZXIvbG9hZGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvY29tcG9uZW50cy9sb2FkZXIvbG9hZGVyLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNILFVBQVUsRUFDVixvQkFBb0IsRUFDcEIsY0FBYyxFQUNkLG9CQUFvQixFQUNwQixXQUFXLEVBQ1gsaUJBQWlCLEdBQ3BCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUdqRSxPQUFPLEVBQUMsa0JBQWtCLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7QUFRdEUsTUFBTSxPQUFPLGtCQUFrQjtJQWdDM0IsWUFDdUMsR0FBYSxFQUNYLEVBQTJCLEVBQzNCLEtBQWMsRUFDTixPQUF5QjtRQUhuQyxRQUFHLEdBQUgsR0FBRyxDQUFVO1FBQ1gsT0FBRSxHQUFGLEVBQUUsQ0FBeUI7UUFDM0IsVUFBSyxHQUFMLEtBQUssQ0FBUztRQUNOLFlBQU8sR0FBUCxPQUFPLENBQWtCO1FBakMxRSxTQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFJekIsaUJBQVksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztRQUl6QyxZQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFpQi9CLFlBQU8sR0FBRyxJQUFJLENBQUM7UUFFTixZQUFPLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQztJQU9qRSxDQUFDO0lBbkJKLElBQUksVUFBVSxDQUFDLEtBQWM7UUFDekIsbUZBQW1GO1FBQ25GLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDdkIsb0JBQW9CLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2xDO1FBRUQsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQWNELElBQUksVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDUCxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLFlBQVk7UUFDWixPQUFPLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1AsT0FBTyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7O2dIQXJEUSxrQkFBa0Isa0JBaUNmLFFBQVEsYUFDUixVQUFVLGFBQ1YsVUFBVSxhQUNWLGtCQUFrQjtvR0FwQ3JCLGtCQUFrQixnUEM1Qi9CLDJrQ0EyQ0E7QURaSTtJQURDLGNBQWMsRUFBRTtnREFDUTtBQUl6QjtJQURDLGNBQWMsRUFBRTt3REFDd0I7QUFJekM7SUFEQyxjQUFjLEVBQUU7bURBQ2M7QUFPL0I7SUFEQyxpQkFBaUIsRUFBRTtvREFRbkI7NEZBekJRLGtCQUFrQjtrQkFOOUIsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsWUFBWTtvQkFDdEIsV0FBVyxFQUFFLHdCQUF3QjtvQkFDckMsU0FBUyxFQUFFLENBQUMscUJBQXFCLENBQUM7b0JBQ2xDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDswREFrQytDLFFBQVE7MEJBQS9DLE1BQU07MkJBQUMsUUFBUTs7MEJBQ2YsTUFBTTsyQkFBQyxVQUFVOzswQkFDakIsTUFBTTsyQkFBQyxVQUFVOzswQkFDakIsTUFBTTsyQkFBQyxrQkFBa0I7NENBakM5QixJQUFJO3NCQUZILEtBQUs7Z0JBTU4sWUFBWTtzQkFGWCxLQUFLO2dCQU1OLE9BQU87c0JBRk4sS0FBSztnQkFLTixXQUFXO3NCQURWLEtBQUs7Z0JBS0YsVUFBVTtzQkFGYixLQUFLO2dCQVlOLE9BQU87c0JBRE4sV0FBVzt1QkFBQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RPQ1VNRU5UfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBUVUlfSVNfSU9TLFxuICAgIHR1aUJsdXJOYXRpdmVGb2N1c2VkLFxuICAgIHR1aURlZmF1bHRQcm9wLFxuICAgIHR1aUlzTmF0aXZlRm9jdXNlZEluLFxuICAgIHR1aUlzU2FmYXJpLFxuICAgIHR1aVJlcXVpcmVkU2V0dGVyLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7dHVpU2l6ZUJpZ2dlcn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQge1BvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5cbmltcG9ydCB7VFVJX0xPQURFUl9PUFRJT05TLCBUdWlMb2FkZXJPcHRpb25zfSBmcm9tICcuL2xvYWRlci1vcHRpb25zJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktbG9hZGVyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbG9hZGVyLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2xvYWRlci5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUxvYWRlckNvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHNpemUgPSB0aGlzLm9wdGlvbnMuc2l6ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBpbmhlcml0Q29sb3IgPSB0aGlzLm9wdGlvbnMuaW5oZXJpdENvbG9yO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIG92ZXJsYXkgPSB0aGlzLm9wdGlvbnMub3ZlcmxheTtcblxuICAgIEBJbnB1dCgpXG4gICAgdGV4dENvbnRlbnQ6IFBvbHltb3JwaGV1c0NvbnRlbnQ7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlSZXF1aXJlZFNldHRlcigpXG4gICAgc2V0IHNob3dMb2FkZXIodmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgLy8gQGJhZCBUT0RPOiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8zMjA4MyB0aGluayBvZiBhIGJldHRlciB3YXlcbiAgICAgICAgaWYgKHZhbHVlICYmIHRoaXMuZm9jdXNlZCkge1xuICAgICAgICAgICAgdHVpQmx1ck5hdGl2ZUZvY3VzZWQodGhpcy5kb2MpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5sb2FkaW5nID0gdmFsdWU7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fbG9hZGluZycpXG4gICAgbG9hZGluZyA9IHRydWU7XG5cbiAgICByZWFkb25seSBpc0FwcGxlID0gdHVpSXNTYWZhcmkodGhpcy5lbC5uYXRpdmVFbGVtZW50KSB8fCB0aGlzLmlzSW9zO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoRE9DVU1FTlQpIHByaXZhdGUgcmVhZG9ubHkgZG9jOiBEb2N1bWVudCxcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQEluamVjdChUVUlfSVNfSU9TKSBwcml2YXRlIHJlYWRvbmx5IGlzSW9zOiBib29sZWFuLFxuICAgICAgICBASW5qZWN0KFRVSV9MT0FERVJfT1BUSU9OUykgcHJpdmF0ZSByZWFkb25seSBvcHRpb25zOiBUdWlMb2FkZXJPcHRpb25zLFxuICAgICkge31cblxuICAgIGdldCBoYXNPdmVybGF5KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5vdmVybGF5ICYmIHRoaXMubG9hZGluZztcbiAgICB9XG5cbiAgICBnZXQgaGFzVGV4dCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy50ZXh0Q29udGVudDtcbiAgICB9XG5cbiAgICBnZXQgaXNIb3Jpem9udGFsKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gIXR1aVNpemVCaWdnZXIodGhpcy5zaXplKTtcbiAgICB9XG5cbiAgICBnZXQgZm9jdXNlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHR1aUlzTmF0aXZlRm9jdXNlZEluKHRoaXMuZWwubmF0aXZlRWxlbWVudCk7XG4gICAgfVxufVxuIiwiPGZpZWxkc2V0XG4gICAgY2xhc3M9XCJ0LWNvbnRlbnRcIlxuICAgIFtjbGFzcy50LWNvbnRlbnRfaGFzLW92ZXJsYXldPVwiaGFzT3ZlcmxheVwiXG4gICAgW2NsYXNzLnQtY29udGVudF9sb2FkaW5nXT1cImxvYWRpbmdcIlxuICAgIFtkaXNhYmxlZF09XCJsb2FkaW5nICYmICFpc0FwcGxlXCJcbj5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L2ZpZWxkc2V0PlxuXG48ZGl2XG4gICAgKm5nSWY9XCJsb2FkaW5nXCJcbiAgICBjbGFzcz1cInQtbG9hZGVyXCJcbiAgICBbY2xhc3MudC1sb2FkZXJfaG9yaXpvbnRhbF09XCJpc0hvcml6b250YWxcIlxuICAgIFtjbGFzcy50LWxvYWRlcl9pbmhlcml0LWNvbG9yXT1cImluaGVyaXRDb2xvclwiXG4gICAgW2F0dHIuZGF0YS1zaXplXT1cInNpemVcIlxuPlxuICAgIDxzdmdcbiAgICAgICAgYXV0b21hdGlvbi1pZD1cInR1aS1sb2FkZXJfX2xvYWRlclwiXG4gICAgICAgIGZvY3VzYWJsZT1cImZhbHNlXCJcbiAgICAgICAgdmlld0JveD1cIjAgMCAxMDAgMTAwXCJcbiAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgIGNsYXNzPVwidC1pY29uXCJcbiAgICA+XG4gICAgICAgIDxjaXJjbGVcbiAgICAgICAgICAgIGN4PVwiNTBcIlxuICAgICAgICAgICAgY3k9XCI1MFwiXG4gICAgICAgICAgICByPVwiNTBcIlxuICAgICAgICAgICAgc3Ryb2tlLWRhc2hhcnJheT1cIjMxNFwiXG4gICAgICAgICAgICBjbGFzcz1cInQtY2lyY2xlXCJcbiAgICAgICAgPjwvY2lyY2xlPlxuICAgIDwvc3ZnPlxuXG4gICAgPGRpdlxuICAgICAgICAqbmdJZj1cImhhc1RleHRcIlxuICAgICAgICBhdXRvbWF0aW9uLWlkPVwidHVpLWxvYWRlcl9fdGV4dFwiXG4gICAgICAgIGNsYXNzPVwidC10ZXh0XCJcbiAgICAgICAgW2NsYXNzLnQtdGV4dF9ob3Jpem9udGFsXT1cImlzSG9yaXpvbnRhbFwiXG4gICAgPlxuICAgICAgICA8bmctY29udGFpbmVyICpwb2x5bW9ycGhldXNPdXRsZXQ9XCJ0ZXh0Q29udGVudCBhcyB0ZXh0XCI+XG4gICAgICAgICAgICB7eyB0ZXh0IH19XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvZGl2PlxuPC9kaXY+XG4iXX0=