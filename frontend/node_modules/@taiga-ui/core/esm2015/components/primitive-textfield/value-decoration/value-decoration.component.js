import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Inject, ViewChild, } from '@angular/core';
import { TUI_FOCUSABLE_ITEM_ACCESSOR } from '@taiga-ui/cdk';
import { BehaviorSubject } from 'rxjs';
import { delay, distinctUntilChanged, filter, map } from 'rxjs/operators';
import * as i0 from "@angular/core";
export class TuiValueDecorationComponent {
    constructor(textfield) {
        this.textfield = textfield;
        this.prefix$ = new BehaviorSubject('');
        this.pre$ = this.prefix$.pipe(delay(0), filter(() => { var _a; return !!((_a = this.pre) === null || _a === void 0 ? void 0 : _a.nativeElement.isConnected); }), map(() => { var _a; return ((_a = this.pre) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetWidth) || 0; }), distinctUntilChanged());
    }
    get isContextTable() {
        return this.textfield.appearance === "table" /* Table */;
    }
    get value() {
        return this.textfield.value;
    }
    get filler() {
        const { focused, placeholder, exampleText, value, textfield } = this;
        if (placeholder && exampleText) {
            return '';
        }
        return focused ? exampleText || textfield.filler.slice(value.length) : '';
    }
    get prefix() {
        return this.decorationsVisible ? this.textfield.prefix : '';
    }
    get postfix() {
        return this.decorationsVisible ? this.computedPostfix : '';
    }
    ngDoCheck() {
        this.prefix$.next(this.prefix);
    }
    get placeholder() {
        var _a;
        return ((_a = this.textfield.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.placeholder) || '';
    }
    get exampleText() {
        return !this.value && this.focused ? this.placeholder : '';
    }
    get decorationsVisible() {
        return !!this.value || (this.focused && !this.placeholder);
    }
    get focused() {
        return this.textfield.computedFocused && !this.textfield.readOnly;
    }
    get computedPostfix() {
        return this.textfield.postfix && (this.filler || this.value)
            ? ` ${this.textfield.postfix}`
            : this.textfield.postfix;
    }
}
TuiValueDecorationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiValueDecorationComponent, deps: [{ token: TUI_FOCUSABLE_ITEM_ACCESSOR }], target: i0.ɵɵFactoryTarget.Component });
TuiValueDecorationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiValueDecorationComponent, selector: "tui-value-decoration", host: { listeners: { "animationstart": "ngDoCheck()" }, properties: { "class._table": "this.isContextTable" } }, viewQueries: [{ propertyName: "pre", first: true, predicate: ["pre"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: "<span\n    #pre\n    class=\"t-prefix t-inline\"\n    [textContent]=\"prefix\"\n></span>\n<span\n    class=\"t-ghost t-inline\"\n    [textContent]=\"value\"\n></span>\n<span\n    class=\"t-filler t-inline\"\n    [textContent]=\"filler\"\n></span>\n<span\n    class=\"t-postfix t-inline\"\n    [textContent]=\"postfix\"\n></span>\n", styles: [":host{position:absolute;display:block;height:1.25rem;line-height:1;width:100%;margin:-1.25rem 0;padding:.625rem 0;box-sizing:content-box;color:var(--tui-text-01);animation:tuiPresent 1s;white-space:nowrap}:host._table{position:static}:host-context(tui-textfield[data-mode=\"onDark\"]) :host{color:var(--tui-text-01-night)}:host:after{content:\"\";display:inline-block;vertical-align:middle;height:100%}.t-ghost{visibility:hidden;white-space:pre;text-overflow:clip}.t-prefix,.t-postfix{white-space:pre}.t-filler{overflow:hidden;color:var(--tui-text-03);text-overflow:ellipsis;max-width:100%;white-space:nowrap}:host-context(tui-textfield[data-mode=\"onDark\"]) .t-filler{color:var(--tui-text-03-night)}.t-inline{display:inline-block;vertical-align:middle}\n"], changeDetection: i0.ChangeDetectionStrategy.Default });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiValueDecorationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-value-decoration',
                    templateUrl: './value-decoration.template.html',
                    styleUrls: ['./value-decoration.style.less'],
                    // It follows Change Detection of PrimitiveTextfield
                    // eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection
                    changeDetection: ChangeDetectionStrategy.Default,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_FOCUSABLE_ITEM_ACCESSOR]
                }] }]; }, propDecorators: { pre: [{
                type: ViewChild,
                args: ['pre', { read: ElementRef, static: true }]
            }], isContextTable: [{
                type: HostBinding,
                args: ['class._table']
            }], ngDoCheck: [{
                type: HostListener,
                args: ['animationstart']
            }] } });
//# sourceMappingURL=data:application/json;base64,