import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Inject, Input, } from '@angular/core';
import { CSS as CSS_TOKEN, USER_AGENT } from '@ng-web-apis/common';
import { TUI_IS_IOS, tuiDefaultProp, tuiGetElementOffset, tuiIsFirefox, } from '@taiga-ui/cdk';
import { TUI_SCROLL_INTO_VIEW, TUI_SCROLLABLE } from '@taiga-ui/core/constants';
import { TUI_SCROLL_REF } from '@taiga-ui/core/tokens';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/scroll-controls";
import * as i2 from "@angular/common";
export class TuiScrollbarComponent {
    constructor(cssRef, el, userAgent, isIos) {
        this.cssRef = cssRef;
        this.el = el;
        this.userAgent = userAgent;
        this.isIos = isIos;
        this.delegated = false;
        this.isLegacy = !this.cssRef.supports('position', 'sticky') ||
            (tuiIsFirefox(this.userAgent) &&
                !this.cssRef.supports('scrollbar-width', 'none'));
        this.hidden = false;
        this.browserScrollRef = new ElementRef(this.el.nativeElement);
    }
    get showScrollbars() {
        return !this.hidden && !this.isIos && (!this.isLegacy || this.delegated);
    }
    get showNative() {
        return this.isLegacy && !this.hidden && !this.delegated;
    }
    onScrollable(element) {
        this.delegated = true;
        this.browserScrollRef.nativeElement = element;
    }
    scrollIntoView(detail) {
        var _a;
        if (this.delegated) {
            return;
        }
        const { nativeElement } = this.browserScrollRef;
        const { offsetTop, offsetLeft } = tuiGetElementOffset(nativeElement, detail);
        const { clientHeight, clientWidth } = nativeElement;
        const { offsetHeight, offsetWidth } = detail;
        const scrollTop = offsetTop + offsetHeight / 2 - clientHeight / 2;
        const scrollLeft = offsetLeft + offsetWidth / 2 - clientWidth / 2;
        // ?. for our clients on Windows XP and Chrome 49
        (_a = nativeElement.scrollTo) === null || _a === void 0 ? void 0 : _a.call(nativeElement, scrollLeft, scrollTop);
    }
}
TuiScrollbarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollbarComponent, deps: [{ token: CSS_TOKEN }, { token: ElementRef }, { token: USER_AGENT }, { token: TUI_IS_IOS }], target: i0.ɵɵFactoryTarget.Component });
TuiScrollbarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiScrollbarComponent, selector: "tui-scrollbar", inputs: { hidden: "hidden" }, host: { listeners: { "tui-scrollable.stop": "onScrollable($event.detail)", "tui-scroll-into-view.stop": "scrollIntoView($event.detail)" }, properties: { "class._legacy": "this.showNative" } }, providers: [
        {
            provide: TUI_SCROLL_REF,
            deps: [TuiScrollbarComponent],
            useFactory: ({ browserScrollRef, }) => browserScrollRef,
        },
    ], ngImport: i0, template: "<tui-scroll-controls *ngIf=\"showScrollbars\"></tui-scroll-controls>\n<div class=\"t-content\">\n    <ng-content></ng-content>\n</div>\n", styles: [":host{z-index:0;position:relative;display:flex;overflow:auto}:host:not(._legacy){scrollbar-width:none;-ms-overflow-style:none}:host:not(._legacy)::-webkit-scrollbar,:host:not(._legacy)::-webkit-scrollbar-thumb{background:transparent;width:0;height:0}:host._legacy{overflow:overlay}@media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: .001dpcm){:host._legacy::-webkit-scrollbar,:host._legacy::-webkit-scrollbar-thumb{width:1rem;height:1rem;border-radius:6.25rem;background-clip:padding-box;border:2.667rem solid transparent}:host._legacy::-webkit-scrollbar{background-color:transparent}:host._legacy::-webkit-scrollbar-thumb{background-color:var(--tui-clear-hover)}:host._legacy::-webkit-scrollbar-thumb:hover{background-color:var(--tui-clear-active)}:host._legacy::-webkit-scrollbar-thumb:active{background-color:var(--tui-text-03)}}.t-content{position:relative;z-index:0;flex:1;flex-basis:auto;width:100%;height:-webkit-max-content;height:max-content}\n"], components: [{ type: i1.TuiScrollControlsComponent, selector: "tui-scroll-controls" }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiScrollbarComponent.prototype, "hidden", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollbarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-scrollbar',
                    templateUrl: './scrollbar.template.html',
                    styleUrls: ['./scrollbar.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: TUI_SCROLL_REF,
                            deps: [TuiScrollbarComponent],
                            useFactory: ({ browserScrollRef, }) => browserScrollRef,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [CSS_TOKEN]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [USER_AGENT]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_IOS]
                }] }]; }, propDecorators: { hidden: [{
                type: Input
            }], showNative: [{
                type: HostBinding,
                args: ['class._legacy']
            }], onScrollable: [{
                type: HostListener,
                args: [`${TUI_SCROLLABLE}.stop`, ['$event.detail']]
            }], scrollIntoView: [{
                type: HostListener,
                args: [`${TUI_SCROLL_INTO_VIEW}.stop`, ['$event.detail']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvY29tcG9uZW50cy9zY3JvbGxiYXIvc2Nyb2xsYmFyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvY29tcG9uZW50cy9zY3JvbGxiYXIvc2Nyb2xsYmFyLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLEdBQUcsSUFBSSxTQUFTLEVBQUUsVUFBVSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDakUsT0FBTyxFQUNILFVBQVUsRUFDVixjQUFjLEVBQ2QsbUJBQW1CLEVBRW5CLFlBQVksR0FDZixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsb0JBQW9CLEVBQUUsY0FBYyxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDOUUsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLHVCQUF1QixDQUFDOzs7O0FBaUJyRCxNQUFNLE9BQU8scUJBQXFCO0lBYzlCLFlBRXFCLE1BQStDLEVBQzNCLEVBQTJCLEVBQzNCLFNBQWlCLEVBQ2pCLEtBQWM7UUFIbEMsV0FBTSxHQUFOLE1BQU0sQ0FBeUM7UUFDM0IsT0FBRSxHQUFGLEVBQUUsQ0FBeUI7UUFDM0IsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQUNqQixVQUFLLEdBQUwsS0FBSyxDQUFTO1FBbEIvQyxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBRVQsYUFBUSxHQUNyQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUM7WUFDM0MsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDekIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBSTFELFdBQU0sR0FBRyxLQUFLLENBQUM7UUFFTixxQkFBZ0IsR0FBRyxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBUS9ELENBQUM7SUFFSixJQUFJLGNBQWM7UUFDZCxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFFRCxJQUNJLFVBQVU7UUFDVixPQUFPLElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUM1RCxDQUFDO0lBR0QsWUFBWSxDQUFDLE9BQW9CO1FBQzdCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDO0lBQ2xELENBQUM7SUFHRCxjQUFjLENBQUMsTUFBbUI7O1FBQzlCLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNoQixPQUFPO1NBQ1Y7UUFFRCxNQUFNLEVBQUMsYUFBYSxFQUFDLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBQzlDLE1BQU0sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFDLEdBQUcsbUJBQW1CLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzNFLE1BQU0sRUFBQyxZQUFZLEVBQUUsV0FBVyxFQUFDLEdBQUcsYUFBYSxDQUFDO1FBQ2xELE1BQU0sRUFBQyxZQUFZLEVBQUUsV0FBVyxFQUFDLEdBQUcsTUFBTSxDQUFDO1FBQzNDLE1BQU0sU0FBUyxHQUFHLFNBQVMsR0FBRyxZQUFZLEdBQUcsQ0FBQyxHQUFHLFlBQVksR0FBRyxDQUFDLENBQUM7UUFDbEUsTUFBTSxVQUFVLEdBQUcsVUFBVSxHQUFHLFdBQVcsR0FBRyxDQUFDLEdBQUcsV0FBVyxHQUFHLENBQUMsQ0FBQztRQUVsRSxpREFBaUQ7UUFDakQsTUFBQSxhQUFhLENBQUMsUUFBUSwrQ0FBdEIsYUFBYSxFQUFZLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNwRCxDQUFDOzttSEFwRFEscUJBQXFCLGtCQWVsQixTQUFTLGFBRVQsVUFBVSxhQUNWLFVBQVUsYUFDVixVQUFVO3VHQW5CYixxQkFBcUIsdVFBVm5CO1FBQ1A7WUFDSSxPQUFPLEVBQUUsY0FBYztZQUN2QixJQUFJLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztZQUM3QixVQUFVLEVBQUUsQ0FBQyxFQUNULGdCQUFnQixHQUNJLEVBQTJCLEVBQUUsQ0FBQyxnQkFBZ0I7U0FDekU7S0FDSiwwQkNqQ0wsMElBSUE7QUR5Q0k7SUFEQyxjQUFjLEVBQUU7cURBQ0Y7NEZBVk4scUJBQXFCO2tCQWZqQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxlQUFlO29CQUN6QixXQUFXLEVBQUUsMkJBQTJCO29CQUN4QyxTQUFTLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQztvQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRTt3QkFDUDs0QkFDSSxPQUFPLEVBQUUsY0FBYzs0QkFDdkIsSUFBSSxFQUFFLHVCQUF1Qjs0QkFDN0IsVUFBVSxFQUFFLENBQUMsRUFDVCxnQkFBZ0IsR0FDSSxFQUEyQixFQUFFLENBQUMsZ0JBQWdCO3lCQUN6RTtxQkFDSjtpQkFDSjs7MEJBZ0JRLE1BQU07MkJBQUMsU0FBUzs7MEJBRWhCLE1BQU07MkJBQUMsVUFBVTs7MEJBQ2pCLE1BQU07MkJBQUMsVUFBVTs7MEJBQ2pCLE1BQU07MkJBQUMsVUFBVTs0Q0FUdEIsTUFBTTtzQkFGTCxLQUFLO2dCQW1CRixVQUFVO3NCQURiLFdBQVc7dUJBQUMsZUFBZTtnQkFNNUIsWUFBWTtzQkFEWCxZQUFZO3VCQUFDLEdBQUcsY0FBYyxPQUFPLEVBQUUsQ0FBQyxlQUFlLENBQUM7Z0JBT3pELGNBQWM7c0JBRGIsWUFBWTt1QkFBQyxHQUFHLG9CQUFvQixPQUFPLEVBQUUsQ0FBQyxlQUFlLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBFbGVtZW50UmVmLFxuICAgIEhvc3RCaW5kaW5nLFxuICAgIEhvc3RMaXN0ZW5lcixcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDU1MgYXMgQ1NTX1RPS0VOLCBVU0VSX0FHRU5UfSBmcm9tICdAbmctd2ViLWFwaXMvY29tbW9uJztcbmltcG9ydCB7XG4gICAgVFVJX0lTX0lPUyxcbiAgICB0dWlEZWZhdWx0UHJvcCxcbiAgICB0dWlHZXRFbGVtZW50T2Zmc2V0LFxuICAgIFR1aUluamVjdGlvblRva2VuVHlwZSxcbiAgICB0dWlJc0ZpcmVmb3gsXG59IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUVUlfU0NST0xMX0lOVE9fVklFVywgVFVJX1NDUk9MTEFCTEV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2NvbnN0YW50cyc7XG5pbXBvcnQge1RVSV9TQ1JPTExfUkVGfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1zY3JvbGxiYXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9zY3JvbGxiYXIudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2Nyb2xsYmFyLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX1NDUk9MTF9SRUYsXG4gICAgICAgICAgICBkZXBzOiBbVHVpU2Nyb2xsYmFyQ29tcG9uZW50XSxcbiAgICAgICAgICAgIHVzZUZhY3Rvcnk6ICh7XG4gICAgICAgICAgICAgICAgYnJvd3NlclNjcm9sbFJlZixcbiAgICAgICAgICAgIH06IFR1aVNjcm9sbGJhckNvbXBvbmVudCk6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+ID0+IGJyb3dzZXJTY3JvbGxSZWYsXG4gICAgICAgIH0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpU2Nyb2xsYmFyQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIGRlbGVnYXRlZCA9IGZhbHNlO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBpc0xlZ2FjeTogYm9vbGVhbiA9XG4gICAgICAgICF0aGlzLmNzc1JlZi5zdXBwb3J0cygncG9zaXRpb24nLCAnc3RpY2t5JykgfHxcbiAgICAgICAgKHR1aUlzRmlyZWZveCh0aGlzLnVzZXJBZ2VudCkgJiZcbiAgICAgICAgICAgICF0aGlzLmNzc1JlZi5zdXBwb3J0cygnc2Nyb2xsYmFyLXdpZHRoJywgJ25vbmUnKSk7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgaGlkZGVuID0gZmFsc2U7XG5cbiAgICByZWFkb25seSBicm93c2VyU2Nyb2xsUmVmID0gbmV3IEVsZW1lbnRSZWYodGhpcy5lbC5uYXRpdmVFbGVtZW50KTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KENTU19UT0tFTilcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBjc3NSZWY6IFR1aUluamVjdGlvblRva2VuVHlwZTx0eXBlb2YgQ1NTX1RPS0VOPixcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQEluamVjdChVU0VSX0FHRU5UKSBwcml2YXRlIHJlYWRvbmx5IHVzZXJBZ2VudDogc3RyaW5nLFxuICAgICAgICBASW5qZWN0KFRVSV9JU19JT1MpIHByaXZhdGUgcmVhZG9ubHkgaXNJb3M6IGJvb2xlYW4sXG4gICAgKSB7fVxuXG4gICAgZ2V0IHNob3dTY3JvbGxiYXJzKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gIXRoaXMuaGlkZGVuICYmICF0aGlzLmlzSW9zICYmICghdGhpcy5pc0xlZ2FjeSB8fCB0aGlzLmRlbGVnYXRlZCk7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fbGVnYWN5JylcbiAgICBnZXQgc2hvd05hdGl2ZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNMZWdhY3kgJiYgIXRoaXMuaGlkZGVuICYmICF0aGlzLmRlbGVnYXRlZDtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKGAke1RVSV9TQ1JPTExBQkxFfS5zdG9wYCwgWyckZXZlbnQuZGV0YWlsJ10pXG4gICAgb25TY3JvbGxhYmxlKGVsZW1lbnQ6IEhUTUxFbGVtZW50KTogdm9pZCB7XG4gICAgICAgIHRoaXMuZGVsZWdhdGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5icm93c2VyU2Nyb2xsUmVmLm5hdGl2ZUVsZW1lbnQgPSBlbGVtZW50O1xuICAgIH1cblxuICAgIEBIb3N0TGlzdGVuZXIoYCR7VFVJX1NDUk9MTF9JTlRPX1ZJRVd9LnN0b3BgLCBbJyRldmVudC5kZXRhaWwnXSlcbiAgICBzY3JvbGxJbnRvVmlldyhkZXRhaWw6IEhUTUxFbGVtZW50KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmRlbGVnYXRlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qge25hdGl2ZUVsZW1lbnR9ID0gdGhpcy5icm93c2VyU2Nyb2xsUmVmO1xuICAgICAgICBjb25zdCB7b2Zmc2V0VG9wLCBvZmZzZXRMZWZ0fSA9IHR1aUdldEVsZW1lbnRPZmZzZXQobmF0aXZlRWxlbWVudCwgZGV0YWlsKTtcbiAgICAgICAgY29uc3Qge2NsaWVudEhlaWdodCwgY2xpZW50V2lkdGh9ID0gbmF0aXZlRWxlbWVudDtcbiAgICAgICAgY29uc3Qge29mZnNldEhlaWdodCwgb2Zmc2V0V2lkdGh9ID0gZGV0YWlsO1xuICAgICAgICBjb25zdCBzY3JvbGxUb3AgPSBvZmZzZXRUb3AgKyBvZmZzZXRIZWlnaHQgLyAyIC0gY2xpZW50SGVpZ2h0IC8gMjtcbiAgICAgICAgY29uc3Qgc2Nyb2xsTGVmdCA9IG9mZnNldExlZnQgKyBvZmZzZXRXaWR0aCAvIDIgLSBjbGllbnRXaWR0aCAvIDI7XG5cbiAgICAgICAgLy8gPy4gZm9yIG91ciBjbGllbnRzIG9uIFdpbmRvd3MgWFAgYW5kIENocm9tZSA0OVxuICAgICAgICBuYXRpdmVFbGVtZW50LnNjcm9sbFRvPy4oc2Nyb2xsTGVmdCwgc2Nyb2xsVG9wKTtcbiAgICB9XG59XG4iLCI8dHVpLXNjcm9sbC1jb250cm9scyAqbmdJZj1cInNob3dTY3JvbGxiYXJzXCI+PC90dWktc2Nyb2xsLWNvbnRyb2xzPlxuPGRpdiBjbGFzcz1cInQtY29udGVudFwiPlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbjwvZGl2PlxuIl19