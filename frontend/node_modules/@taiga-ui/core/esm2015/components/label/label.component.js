import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ContentChild, HostBinding, Inject, Input, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import * as i0 from "@angular/core";
import * as i1 from "@tinkoff/ng-polymorpheus";
import * as i2 from "rxjs";
export class TuiLabelComponent {
    constructor(mode$) {
        this.mode$ = mode$;
        this.context = {
            $implicit: null,
        };
    }
}
TuiLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLabelComponent, deps: [{ token: TUI_MODE }], target: i0.ɵɵFactoryTarget.Component });
TuiLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiLabelComponent, selector: "label[tuiLabel]", inputs: { tuiLabel: "tuiLabel", context: "context" }, host: { listeners: { "$.data-mode.attr": "mode$" }, properties: { "class._control": "this.control" } }, providers: [MODE_PROVIDER], queries: [{ propertyName: "control", first: true, predicate: NgControl, descendants: true }], ngImport: i0, template: "<span class=\"t-label\">\n    <span\n        *polymorpheusOutlet=\"tuiLabel as text; context: context\"\n        class=\"t-text\"\n        [textContent]=\"text\"\n    ></span>\n</span>\n<span class=\"t-content\">\n    <ng-content></ng-content>\n</span>\n", styles: [":host{display:flex;min-height:2.75rem;justify-content:space-between;flex-direction:column;pointer-events:none}.t-label{font:var(--tui-font-text-s);max-width:100%;align-self:inherit;overflow:inherit;pointer-events:auto}:host._control .t-label{margin-bottom:.25rem}.t-text{display:block;overflow:inherit;text-overflow:ellipsis}:host:not(._control) .t-text{color:var(--tui-text-02)}:host([data-mode=\"onDark\"]) .t-text{color:var(--tui-text-02-night)}.t-content{line-height:1.5rem;overflow:inherit;text-overflow:ellipsis;pointer-events:auto}\n"], directives: [{ type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiLabelComponent.prototype, "context", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLabelComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'label[tuiLabel]',
                    templateUrl: './label.template.html',
                    styleUrls: ['./label.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }]; }, propDecorators: { tuiLabel: [{
                type: Input
            }], context: [{
                type: Input
            }], control: [{
                type: ContentChild,
                args: [NgControl]
            }, {
                type: HostBinding,
                args: ['class._control']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9jb21wb25lbnRzL2xhYmVsL2xhYmVsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvY29tcG9uZW50cy9sYWJlbC9sYWJlbC50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxZQUFZLEVBQ1osV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3pDLE9BQU8sRUFBeUIsY0FBYyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7Ozs7QUFlL0MsTUFBTSxPQUFPLGlCQUFpQjtJQWMxQixZQUF1QyxLQUF1QztRQUF2QyxVQUFLLEdBQUwsS0FBSyxDQUFrQztRQVI5RSxZQUFPLEdBQXFDO1lBQ3hDLFNBQVMsRUFBRSxJQUFJO1NBQ2xCLENBQUM7SUFNK0UsQ0FBQzs7K0dBZHpFLGlCQUFpQixrQkFjTixRQUFRO21HQWRuQixpQkFBaUIsd01BTGYsQ0FBQyxhQUFhLENBQUMsK0RBZVosU0FBUyxnRENwQzNCLGdRQVVBO0FEc0JJO0lBREMsY0FBYyxFQUFFO2tEQUdmOzRGQVJPLGlCQUFpQjtrQkFWN0IsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixXQUFXLEVBQUUsdUJBQXVCO29CQUNwQyxTQUFTLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztvQkFDakMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRSxDQUFDLGFBQWEsQ0FBQztvQkFDMUIsSUFBSSxFQUFFO3dCQUNGLG9CQUFvQixFQUFFLE9BQU87cUJBQ2hDO2lCQUNKOzswQkFlZ0IsTUFBTTsyQkFBQyxRQUFROzRDQVo1QixRQUFRO3NCQURQLEtBQUs7Z0JBS04sT0FBTztzQkFGTixLQUFLO2dCQVFHLE9BQU87c0JBRmYsWUFBWTt1QkFBQyxTQUFTOztzQkFDdEIsV0FBVzt1QkFBQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBDb250ZW50Q2hpbGQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TmdDb250cm9sfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge1R1aUNvbnRleHRXaXRoSW1wbGljaXQsIHR1aURlZmF1bHRQcm9wfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7TU9ERV9QUk9WSURFUn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvcHJvdmlkZXJzJztcbmltcG9ydCB7VFVJX01PREV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge1R1aUJyaWdodG5lc3N9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3R5cGVzJztcbmltcG9ydCB7UG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbGFiZWxbdHVpTGFiZWxdJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbGFiZWwudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbGFiZWwuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW01PREVfUFJPVklERVJdLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJygkLmRhdGEtbW9kZS5hdHRyKSc6ICdtb2RlJCcsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTGFiZWxDb21wb25lbnQ8VD4ge1xuICAgIEBJbnB1dCgpXG4gICAgdHVpTGFiZWw6IFBvbHltb3JwaGV1c0NvbnRlbnQ8VHVpQ29udGV4dFdpdGhJbXBsaWNpdDxUIHwgbnVsbD4+O1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGNvbnRleHQ6IFR1aUNvbnRleHRXaXRoSW1wbGljaXQ8VCB8IG51bGw+ID0ge1xuICAgICAgICAkaW1wbGljaXQ6IG51bGwsXG4gICAgfTtcblxuICAgIEBDb250ZW50Q2hpbGQoTmdDb250cm9sKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2NvbnRyb2wnKVxuICAgIHJlYWRvbmx5IGNvbnRyb2w/OiBOZ0NvbnRyb2w7XG5cbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KFRVSV9NT0RFKSByZWFkb25seSBtb2RlJDogT2JzZXJ2YWJsZTxUdWlCcmlnaHRuZXNzIHwgbnVsbD4pIHt9XG59XG4iLCI8c3BhbiBjbGFzcz1cInQtbGFiZWxcIj5cbiAgICA8c3BhblxuICAgICAgICAqcG9seW1vcnBoZXVzT3V0bGV0PVwidHVpTGFiZWwgYXMgdGV4dDsgY29udGV4dDogY29udGV4dFwiXG4gICAgICAgIGNsYXNzPVwidC10ZXh0XCJcbiAgICAgICAgW3RleHRDb250ZW50XT1cInRleHRcIlxuICAgID48L3NwYW4+XG48L3NwYW4+XG48c3BhbiBjbGFzcz1cInQtY29udGVudFwiPlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbjwvc3Bhbj5cbiJdfQ==