import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ContentChildren, ElementRef, forwardRef, HostBinding, HostListener, Inject, Input, Optional, ViewEncapsulation, } from '@angular/core';
import { EMPTY_QUERY, tuiDefaultProp, tuiIsElement, tuiIsNativeFocusedIn, tuiIsPresent, tuiMoveFocus, tuiPure, tuiQueryListChanges, tuiSetNativeMouseFocused, } from '@taiga-ui/cdk';
import { TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_WATCHED_CONTROLLER, } from '@taiga-ui/core/directives';
import { TUI_NOTHING_FOUND_MESSAGE, tuiAsDataListAccessor } from '@taiga-ui/core/tokens';
import { map } from 'rxjs/operators';
// TODO: find the best way for prevent cycle
// eslint-disable-next-line import/no-cycle
import { TuiOptionComponent } from './option/option.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@tinkoff/ng-polymorpheus";
import * as i3 from "@taiga-ui/core/directives";
import * as i4 from "rxjs";
// TODO: Consider aria-activedescendant for proper accessibility implementation
export class TuiDataListComponent {
    constructor(controller, el, defaultEmptyContent$) {
        var _a;
        this.controller = controller;
        this.el = el;
        this.defaultEmptyContent$ = defaultEmptyContent$;
        this.options = EMPTY_QUERY;
        this.role = 'listbox';
        this.size = ((_a = this.controller) === null || _a === void 0 ? void 0 : _a.size) || 'm';
    }
    get empty$() {
        return tuiQueryListChanges(this.options).pipe(map(({ length }) => !length));
    }
    onFocusIn(relatedTarget, currentTarget) {
        if (!currentTarget.contains(relatedTarget) && !this.origin) {
            this.origin = relatedTarget;
        }
    }
    noop() { }
    onKeyDownArrow(current, step) {
        const { elements } = this;
        tuiMoveFocus(elements.indexOf(current), elements, step);
    }
    // TODO: Consider aria-activedescendant for proper accessibility implementation
    handleFocusLossIfNecessary(element = this.el.nativeElement) {
        if (this.origin && tuiIsNativeFocusedIn(element)) {
            tuiSetNativeMouseFocused(this.origin, true, true);
        }
    }
    getOptions(includeDisabled = false) {
        return this.options
            .filter(({ disabled }) => includeDisabled || !disabled)
            .map(({ value }) => value)
            .filter(tuiIsPresent);
    }
    onFocus({ target }, top) {
        if (!tuiIsElement(target)) {
            return;
        }
        const { elements } = this;
        tuiMoveFocus(top ? -1 : elements.length, elements, top ? 1 : -1);
        this.handleFocusLossIfNecessary(target);
    }
    get elements() {
        return Array.from(this.el.nativeElement.querySelectorAll('[tuiOption]'));
    }
}
TuiDataListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDataListComponent, deps: [{ token: TUI_TEXTFIELD_WATCHED_CONTROLLER, optional: true }, { token: ElementRef }, { token: TUI_NOTHING_FOUND_MESSAGE }], target: i0.ɵɵFactoryTarget.Component });
TuiDataListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDataListComponent, selector: "tui-data-list", inputs: { role: "role", emptyContent: "emptyContent", size: "size" }, host: { listeners: { "focusin": "onFocusIn($event.relatedTarget,$event.currentTarget)", "mousedown.prevent": "noop()", "keydown.arrowDown.prevent": "onKeyDownArrow($event.target,1)", "keydown.arrowUp.prevent": "onKeyDownArrow($event.target,-1)", "wheel.silent.passive": "handleFocusLossIfNecessary()", "mouseleave": "handleFocusLossIfNecessary($event.target)" }, properties: { "attr.role": "this.role", "attr.data-list-size": "this.size" } }, providers: [
        tuiAsDataListAccessor(TuiDataListComponent),
        TEXTFIELD_CONTROLLER_PROVIDER,
    ], queries: [{ propertyName: "options", predicate: i0.forwardRef(function () { return TuiOptionComponent; }), descendants: true }], ngImport: i0, template: "<div\n    tabindex=\"0\"\n    class=\"t-trap\"\n    (focusin)=\"onFocus($event, true)\"\n></div>\n<ng-content></ng-content>\n<div\n    *ngIf=\"empty$ | async\"\n    class=\"t-empty\"\n>\n    <ng-container *polymorpheusOutlet=\"emptyContent || (defaultEmptyContent$ | async) as text\">\n        {{ text }}\n    </ng-container>\n</div>\n<div\n    tabindex=\"0\"\n    class=\"t-trap\"\n    (focusin)=\"onFocus($event, false)\"\n></div>\n", styles: ["tui-data-list{--tui-data-list-padding: .25rem;--tui-data-list-margin: .0625rem;display:flex;font:var(--tui-font-text-m);flex-direction:column;padding:calc(var(--tui-data-list-padding) - var(--tui-data-list-margin)) var(--tui-data-list-padding);color:var(--tui-text-03)}tui-data-list:focus-within .t-trap{display:none}tui-data-list:focus-within [tuiOption]._with-dropdown:not(:focus){background-color:transparent}tui-data-list[data-list-size=s]{--tui-data-list-margin: 0rem}tui-data-list[data-list-size=l]{--tui-data-list-padding: .375rem;--tui-data-list-margin: .125rem}tui-data-list>.t-empty{margin:.75rem 1rem}tui-opt-group{position:relative;display:flex;font:var(--tui-font-text-xs);color:var(--tui-text-02);flex-direction:column;line-height:1rem}tui-data-list[data-list-size=l] tui-opt-group{font:var(--tui-font-text-s);line-height:1.25rem}tui-data-list[data-list-size=l] tui-opt-group:before{padding-left:.625rem;padding-right:.625rem}tui-data-list[data-list-size=l] tui-opt-group:after{left:.625rem;right:.625rem}tui-opt-group:empty:before,tui-opt-group:empty:after{display:none}tui-opt-group:before{content:attr(data-label);padding:var(--tui-data-list-padding) .5rem var(--tui-data-list-padding);margin:var(--tui-data-list-margin) 0;white-space:normal;word-break:break-word}tui-opt-group:after{position:absolute;left:.5rem;right:.5rem;top:var(--tui-data-list-padding);height:1px;background:var(--tui-base-03)}tui-opt-group:not(:empty)~tui-opt-group:before{padding-top:calc(.75rem + var(--tui-data-list-padding))}tui-opt-group:not(:empty)~tui-opt-group[data-label=\"\"]:before{padding:var(--tui-data-list-padding) 0}tui-opt-group:not(:empty)~tui-opt-group:after{content:\"\"}tui-opt-group[data-label=\"\"]:before{padding:0 .5rem}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
__decorate([
    tuiDefaultProp()
], TuiDataListComponent.prototype, "role", void 0);
__decorate([
    tuiDefaultProp()
], TuiDataListComponent.prototype, "size", void 0);
__decorate([
    tuiPure
], TuiDataListComponent.prototype, "empty$", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDataListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-data-list',
                    templateUrl: './data-list.template.html',
                    styleUrls: ['./data-list.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        tuiAsDataListAccessor(TuiDataListComponent),
                        TEXTFIELD_CONTROLLER_PROVIDER,
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i3.TuiTextfieldController, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i4.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_NOTHING_FOUND_MESSAGE]
                }] }]; }, propDecorators: { options: [{
                type: ContentChildren,
                args: [forwardRef(() => TuiOptionComponent), { descendants: true }]
            }], role: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.role']
            }], emptyContent: [{
                type: Input
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-list-size']
            }], empty$: [], onFocusIn: [{
                type: HostListener,
                args: ['focusin', ['$event.relatedTarget', '$event.currentTarget']]
            }], noop: [{
                type: HostListener,
                args: ['mousedown.prevent']
            }], onKeyDownArrow: [{
                type: HostListener,
                args: ['keydown.arrowDown.prevent', ['$event.target', '1']]
            }, {
                type: HostListener,
                args: ['keydown.arrowUp.prevent', ['$event.target', '-1']]
            }], handleFocusLossIfNecessary: [{
                type: HostListener,
                args: ['wheel.silent.passive']
            }, {
                type: HostListener,
                args: ['mouseleave', ['$event.target']]
            }] } });
//# sourceMappingURL=data:application/json;base64,