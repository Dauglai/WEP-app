import { ChangeDetectionStrategy, Component, HostBinding, Inject, Self, } from '@angular/core';
import { ALWAYS_TRUE_HANDLER, TUI_IS_MOBILE, TuiDestroyService, } from '@taiga-ui/cdk';
import { tuiFadeIn, tuiSlideInTop } from '@taiga-ui/core/animations';
import { TUI_ANIMATIONS_DURATION, TUI_CLOSE_WORD } from '@taiga-ui/core/tokens';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import { isObservable, merge, of, Subject } from 'rxjs';
import { filter, map, switchMap, takeUntil } from 'rxjs/operators';
import { TUI_DIALOGS_CLOSE } from './dialog.tokens';
import { TuiDialogCloseService } from './dialog-close.service';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/button";
import * as i2 from "@angular/common";
import * as i3 from "@tinkoff/ng-polymorpheus";
import * as i4 from "@taiga-ui/cdk";
import * as i5 from "rxjs";
const REQUIRED_ERROR = new Error('Required dialog was dismissed');
export class TuiDialogComponent {
    constructor(duration, isMobile, context, destroy$, dialogClose$, close$, closeWord$) {
        this.duration = duration;
        this.isMobile = isMobile;
        this.context = context;
        this.closeWord$ = closeWord$;
        this.animation = {
            value: '',
            params: {
                start: '40px',
                duration: this.duration,
            },
        };
        this.fullscreenAnimation = {
            value: '',
            params: {
                start: '100vh',
                duration: this.duration,
            },
        };
        this.close$ = new Subject();
        merge(this.close$.pipe(switchMap(() => toObservable(context.closeable))), dialogClose$.pipe(switchMap(() => toObservable(context.dismissible))), close$.pipe(map(ALWAYS_TRUE_HANDLER)))
            .pipe(filter(Boolean), takeUntil(destroy$))
            .subscribe(() => {
            this.close();
        });
    }
    get size() {
        return this.context.size;
    }
    get header() {
        return this.context.header;
    }
    get slideInTop() {
        return this.fullscreen || this.isMobile
            ? this.fullscreenAnimation
            : this.animation;
    }
    get fullscreen() {
        return !this.isMobile && (this.size === 'fullscreen' || this.size === 'page');
    }
    close() {
        if (this.context.required) {
            this.context.$implicit.error(REQUIRED_ERROR);
        }
        else {
            this.context.$implicit.complete();
        }
    }
}
TuiDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDialogComponent, deps: [{ token: TUI_ANIMATIONS_DURATION }, { token: TUI_IS_MOBILE }, { token: POLYMORPHEUS_CONTEXT }, { token: TuiDestroyService, self: true }, { token: TuiDialogCloseService }, { token: TUI_DIALOGS_CLOSE }, { token: TUI_CLOSE_WORD }], target: i0.ɵɵFactoryTarget.Component });
TuiDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDialogComponent, selector: "tui-dialog", host: { properties: { "attr.data-size": "this.size", "class._centered": "this.header", "@tuiSlideInTop": "this.slideInTop", "@tuiFadeIn": "this.slideInTop" } }, providers: [TuiDestroyService, TuiDialogCloseService], ngImport: i0, template: "<header\n    *ngIf=\"header\"\n    class=\"t-header\"\n>\n    <ng-container *polymorpheusOutlet=\"header as text; context: context\">\n        {{ text }}\n    </ng-container>\n</header>\n<div class=\"t-content\">\n    <h2\n        class=\"t-heading\"\n        [id]=\"context.id\"\n        [textContent]=\"context.label\"\n    ></h2>\n    <section>\n        <!-- TODO: Polymorpheus fix type -->\n        <ng-container *polymorpheusOutlet=\"$any(context.content) as text; context: context\">\n            <div [innerHTML]=\"text\"></div>\n            <div class=\"t-buttons\">\n                <button\n                    type=\"button\"\n                    tuiButton\n                    size=\"m\"\n                    (click)=\"context.$implicit.complete()\"\n                >\n                    {{ $any(context.data)?.button || 'OK' }}\n                </button>\n            </div>\n        </ng-container>\n    </section>\n</div>\n<div class=\"t-filler\"></div>\n<div\n    *ngIf=\"context.closeable\"\n    class=\"t-wrapper\"\n>\n    <button\n        type=\"button\"\n        tuiIconButton\n        tuiPreventDefault=\"mousedown\"\n        automation-id=\"tui-dialog__close\"\n        size=\"s\"\n        icon=\"tuiIconCloseLarge\"\n        shape=\"rounded\"\n        class=\"t-close\"\n        [appearance]=\"fullscreen ? 'secondary' : ''\"\n        [title]=\"closeWord$ | async\"\n        (click)=\"close$.next()\"\n    ></button>\n</div>\n", styles: [":host{position:relative;display:flex;font:var(--tui-font-text-m);flex-direction:column;box-sizing:border-box;margin:auto;border-radius:1rem;border:2.5rem solid transparent}:host:after{position:absolute;top:0;left:0;width:100%;height:100%;box-shadow:0 1.125rem 1.875rem #0000007a;content:\"\";border-radius:inherit;pointer-events:none}:host[data-size=auto]{width:auto}:host[data-size=s]{width:30rem}:host[data-size=s] .t-content{padding:1.5rem}:host[data-size=s] .t-heading{margin-bottom:.5rem;font:var(--tui-font-heading-5)}:host[data-size=m]{width:42.5rem}:host[data-size=m] .t-heading{margin-bottom:.75rem;font:var(--tui-font-heading-4)}:host[data-size=l]{width:55rem}:host[data-size=l] .t-heading{margin-bottom:1rem}:host[data-size=fullscreen],:host[data-size=page]{width:100%;min-height:100%;border-radius:0;border:none;background:var(--tui-elevation-01);box-shadow:0 4rem var(--tui-elevation-01)}:host[data-size=fullscreen] .t-content,:host[data-size=page] .t-content{padding:3rem calc(50vw - (45rem / 2))}:host[data-size=fullscreen] .t-heading,:host[data-size=page] .t-heading{margin-bottom:1rem}:host[data-size=page] .t-content{padding:0}:host._centered{text-align:center}:host :host-context(tui-root._mobile)[data-size]{min-width:100%;width:100%;max-width:100%;border-radius:0;border:none;margin:auto 0 0}:host :host-context(tui-root._mobile)[data-size] .t-content{padding:1.5rem}:host :host-context(tui-root._mobile)[data-size] .t-heading{margin-bottom:.5rem;font:var(--tui-font-heading-5)}.t-heading{margin:0;word-wrap:break-word;font:var(--tui-font-heading-3)}.t-heading:empty{display:none}.t-header{display:flex;border-top-left-radius:inherit;border-top-right-radius:inherit;overflow:hidden}:host[data-size=fullscreen] :host-context(tui-root._mobile) .t-header{flex:1}.t-content{border-radius:inherit;padding:2rem;background:var(--tui-elevation-01)}.t-content:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.t-wrapper{position:-webkit-sticky;position:sticky;top:0;order:-1}.t-filler{flex-grow:1}.t-close{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:fixed;top:1.5rem;right:1.5rem;color:var(--tui-base-01)}:host:not([data-size=\"fullscreen\"]):not([data-size=\"page\"]) .t-close{animation:tuiFadeIn var(--tui-duration);background:rgba(104,104,104,.96)}:host:not([data-size=\"fullscreen\"]):not([data-size=\"page\"]) .t-close:hover{background:rgba(159,159,159,.86)}:host:not([data-size=\"fullscreen\"]).ng-animating .t-close{display:none}:host-context(tui-root._mobile) .t-close{position:absolute;top:0;right:0;background:transparent!important;color:var(--tui-base-06)}:host-context(tui-root._mobile) .t-close:hover{color:var(--tui-base-07)}.t-buttons{margin-top:1.25rem;text-align:right}\n"], components: [{ type: i1.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i4.TuiPreventDefaultDirective, selector: "[tuiPreventDefault]", inputs: ["tuiPreventDefault"] }], pipes: { "async": i2.AsyncPipe }, animations: [tuiSlideInTop, tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.Default });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDialogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-dialog',
                    templateUrl: './dialog.template.html',
                    styleUrls: ['./dialog.style.less'],
                    // So we don't force OnPush on dialog content
                    // eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection
                    changeDetection: ChangeDetectionStrategy.Default,
                    providers: [TuiDestroyService, TuiDialogCloseService],
                    animations: [tuiSlideInTop, tuiFadeIn],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATIONS_DURATION]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_MOBILE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }, { type: i5.Observable, decorators: [{
                    type: Inject,
                    args: [TuiDestroyService]
                }, {
                    type: Self
                }] }, { type: i5.Observable, decorators: [{
                    type: Inject,
                    args: [TuiDialogCloseService]
                }] }, { type: i5.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_DIALOGS_CLOSE]
                }] }, { type: i5.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_CLOSE_WORD]
                }] }]; }, propDecorators: { size: [{
                type: HostBinding,
                args: ['attr.data-size']
            }], header: [{
                type: HostBinding,
                args: ['class._centered']
            }], slideInTop: [{
                type: HostBinding,
                args: ['@tuiSlideInTop']
            }, {
                type: HostBinding,
                args: ['@tuiFadeIn']
            }] } });
function toObservable(valueOrStream) {
    return isObservable(valueOrStream) ? valueOrStream : of(valueOrStream);
}
//# sourceMappingURL=data:application/json;base64,