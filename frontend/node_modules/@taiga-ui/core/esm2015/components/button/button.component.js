import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Inject, Input, Optional, } from '@angular/core';
import { AbstractTuiInteractive, tuiAsFocusableItemAccessor, tuiDefaultProp, TuiDestroyService, TuiFocusVisibleService, tuiIsNativeFocused, } from '@taiga-ui/cdk';
import { TuiModeDirective } from '@taiga-ui/core/directives';
import { EMPTY } from 'rxjs';
import { distinctUntilChanged, map, startWith } from 'rxjs/operators';
import { TUI_BUTTON_OPTIONS } from './button-options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/svg";
import * as i2 from "@taiga-ui/core/components/loader";
import * as i3 from "@angular/common";
import * as i4 from "@taiga-ui/core/directives/wrapper";
import * as i5 from "@tinkoff/ng-polymorpheus";
import * as i6 from "@taiga-ui/core/directives";
import * as i7 from "@taiga-ui/cdk";
export class TuiButtonComponent extends AbstractTuiInteractive {
    constructor(mode, el, focusVisible$, options) {
        var _a;
        super();
        this.mode = mode;
        this.el = el;
        this.options = options;
        this.mode$ = ((_a = this.mode) === null || _a === void 0 ? void 0 : _a.change$) || EMPTY;
        this.appearance = null;
        this.disabled = false;
        this.shape = this.options.shape;
        this.showLoader = false;
        this.size = this.options.size;
        this.appearance$ = this.mode$.pipe(startWith(null), map(() => this.computedAppearance), distinctUntilChanged());
        focusVisible$.subscribe(focusVisible => {
            this.updateFocusVisible(focusVisible);
        });
    }
    get nativeFocusableElement() {
        return this.nativeDisabled ? null : this.el.nativeElement;
    }
    get focused() {
        return !this.showLoader && tuiIsNativeFocused(this.el.nativeElement);
    }
    get loaderSize() {
        return this.size === 'l' || this.size === 'xl' ? 'm' : 's';
    }
    get computedAppearance() {
        var _a;
        return (_a = this.appearance) !== null && _a !== void 0 ? _a : (this.options.appearance || '');
    }
    get nativeDisabled() {
        return this.computedDisabled || this.showLoader ? '' : null;
    }
    get tabIndex() {
        return this.focusable ? 0 : -1;
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
}
TuiButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonComponent, deps: [{ token: TuiModeDirective, optional: true }, { token: ElementRef }, { token: TuiFocusVisibleService }, { token: TUI_BUTTON_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: { appearance: "appearance", disabled: "disabled", icon: "icon", iconRight: "iconRight", shape: "shape", showLoader: "showLoader", size: "size" }, host: { listeners: { "focusin": "onFocused(true)", "focusout": "onFocused(false)" }, properties: { "attr.data-shape": "this.shape", "class._loading": "this.showLoader", "attr.data-size": "this.size", "attr.data-appearance": "this.computedAppearance", "attr.disabled": "this.nativeDisabled", "tabIndex": "this.tabIndex" } }, providers: [
        tuiAsFocusableItemAccessor(TuiButtonComponent),
        TuiDestroyService,
        TuiFocusVisibleService,
    ], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"appearance$ | async\"></ng-container>\n<div\n    tuiWrapper\n    class=\"t-wrapper\"\n    [appearance]=\"computedAppearance\"\n    [hover]=\"pseudoHover\"\n    [active]=\"pseudoActive\"\n    [disabled]=\"computedDisabled\"\n    [focus]=\"computedFocusVisible\"\n>\n    <span class=\"t-content\">\n        <span\n            *ngIf=\"icon\"\n            class=\"t-left\"\n        >\n            <tui-svg\n                *polymorpheusOutlet=\"icon as text\"\n                class=\"t-icon\"\n                [src]=\"text\"\n            ></tui-svg>\n        </span>\n        <ng-content></ng-content>\n        <span\n            *ngIf=\"iconRight\"\n            class=\"t-right\"\n        >\n            <tui-svg\n                *polymorpheusOutlet=\"iconRight as text\"\n                class=\"t-icon\"\n                [src]=\"text\"\n            ></tui-svg>\n        </span>\n    </span>\n    <tui-loader\n        *ngIf=\"showLoader\"\n        class=\"t-loader\"\n        [size]=\"loaderSize\"\n        [inheritColor]=\"true\"\n    ></tui-loader>\n</div>\n", styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:inline-block;flex-shrink:0;vertical-align:top;border-radius:var(--tui-radius-m);-webkit-user-select:none;-moz-user-select:none;user-select:none;text-decoration:none;outline:none;color:inherit}:host[data-shape=rounded]{border-radius:6.25rem}:host[data-size=xs]{height:var(--tui-height-xs);font-weight:normal}:host[data-size=xs][data-shape=square],:host[data-size=xs][tuiIconButton]{width:var(--tui-height-xs)}:host[data-size=s]{height:var(--tui-height-s);font-weight:normal}:host[data-size=s][data-shape=square],:host[data-size=s][tuiIconButton]{width:var(--tui-height-s)}:host[data-size=m]{height:var(--tui-height-m);font:var(--tui-font-text-m);font-weight:bold}:host[data-size=m][data-shape=square],:host[data-size=m][tuiIconButton]{width:var(--tui-height-m)}:host[data-size=l]{height:var(--tui-height-l);font:var(--tui-font-text-m);font-weight:bold}:host[data-size=l][data-shape=square],:host[data-size=l][tuiIconButton]{width:var(--tui-height-l)}:host[data-size=xl]{height:3.75rem;font:var(--tui-font-text-m);font-weight:bold}:host[data-size=xl][data-shape=square],:host[data-size=xl][tuiIconButton]{width:3.75rem}:host[tuiIconButton] .t-left,:host[tuiIconButton] .t-right{margin:0!important}.t-loader{position:absolute;top:0;left:0;width:100%;height:100%;cursor:default}.t-left{margin-right:.5rem}:host[data-size=s] .t-left,:host[data-size=xs] .t-left{margin-right:.25rem}.t-right{margin:0 -.25rem 0 .25rem}:host[data-size=s] .t-right,:host[data-size=xs] .t-right{margin-right:0 -.125rem 0 .125rem}.t-icon{display:flex;max-width:100%;max-height:100%;align-items:center;justify-content:center}.t-left,.t-right{display:flex;align-items:center;justify-content:center;width:1.5rem;height:1.5rem}:host[data-size=s] .t-left,:host[data-size=s] .t-right,:host[data-size=xs] .t-left,:host[data-size=xs] .t-right{width:1rem;height:1rem}:host[tuiIconButton][data-appearance=icon][data-size=s] .t-left,:host[tuiIconButton][data-appearance=icon][data-size=s] .t-right{width:1.5rem;height:1.5rem}.t-wrapper{position:relative;z-index:0;box-sizing:border-box;cursor:pointer}:host[data-size=xs] .t-wrapper{padding:0 var(--tui-padding, .375rem)}:host[data-size=xs] .t-wrapper:after{border-width:1px}:host[data-size=s] .t-wrapper{padding:0 var(--tui-padding, .75rem)}:host[data-size=m] .t-wrapper{padding:0 var(--tui-padding, 1.5rem)}:host[data-size=l] .t-wrapper{padding:0 var(--tui-padding, 2.25rem)}:host[data-size=xl] .t-wrapper{padding:0 var(--tui-padding, 2.5rem)}:host[data-shape=square] .t-wrapper,:host[tuiIconButton] .t-wrapper{padding:0}.t-content{display:flex;height:100%;align-items:center;justify-content:center;text-align:center}:host._loading .t-content{opacity:0}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i2.TuiLoaderComponent, selector: "tui-loader", inputs: ["size", "inheritColor", "overlay", "textContent", "showLoader"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i5.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiButtonComponent.prototype, "appearance", void 0);
__decorate([
    tuiDefaultProp()
], TuiButtonComponent.prototype, "disabled", void 0);
__decorate([
    tuiDefaultProp()
], TuiButtonComponent.prototype, "shape", void 0);
__decorate([
    tuiDefaultProp()
], TuiButtonComponent.prototype, "showLoader", void 0);
__decorate([
    tuiDefaultProp()
], TuiButtonComponent.prototype, "size", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]',
                    templateUrl: './button.template.html',
                    styleUrls: ['./button.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiButtonComponent),
                        TuiDestroyService,
                        TuiFocusVisibleService,
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i6.TuiModeDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiModeDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i7.TuiFocusVisibleService, decorators: [{
                    type: Inject,
                    args: [TuiFocusVisibleService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_BUTTON_OPTIONS]
                }] }]; }, propDecorators: { appearance: [{
                type: Input
            }], disabled: [{
                type: Input
            }], icon: [{
                type: Input
            }], iconRight: [{
                type: Input
            }], shape: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-shape']
            }], showLoader: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._loading']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], computedAppearance: [{
                type: HostBinding,
                args: ['attr.data-appearance']
            }], nativeDisabled: [{
                type: HostBinding,
                args: ['attr.disabled']
            }], tabIndex: [{
                type: HostBinding,
                args: ['tabIndex']
            }], onFocused: [{
                type: HostListener,
                args: ['focusin', ['true']]
            }, {
                type: HostListener,
                args: ['focusout', ['false']]
            }] } });
//# sourceMappingURL=data:application/json;base64,