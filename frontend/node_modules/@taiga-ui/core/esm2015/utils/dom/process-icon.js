const WIDTH_SEARCH = `width="`;
const HEIGHT_SEARCH = `height="`;
const START = `<svg`;
export function tuiProcessIcon(source, name) {
    if (source.includes(`id="${name}"`)) {
        return source;
    }
    const src = source.slice(Math.max(0, source.indexOf(START)));
    const attributes = src.slice(0, Math.max(0, src.indexOf(`>`)));
    if (!(attributes === null || attributes === void 0 ? void 0 : attributes.includes(WIDTH_SEARCH)) || !attributes.includes(HEIGHT_SEARCH)) {
        return `${src.replace(START, `<svg xmlns="http://www.w3.org/2000/svg"><g id="${name}" xmlns="http://www.w3.org/2000/svg"><svg`)}</g></svg>`;
    }
    const indexOfWidth = attributes.indexOf(WIDTH_SEARCH);
    const indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);
    const widthOffset = indexOfWidth + WIDTH_SEARCH.length;
    const heightOffset = indexOfHeight + HEIGHT_SEARCH.length;
    const widthString = attributes.slice(widthOffset, attributes.indexOf(`"`, widthOffset));
    const heightString = attributes.slice(heightOffset, attributes.indexOf(`"`, heightOffset));
    if (!heightString ||
        !widthString ||
        widthString.includes(`%`) ||
        heightString.includes(`%`) ||
        widthString.includes(`em`) ||
        heightString.includes(`em`)) {
        return src.replace(START, `<svg id="${name}"`);
    }
    const width = parseInt(widthString, 10);
    const height = parseInt(heightString, 10);
    return `<g id="${name}" xmlns="http://www.w3.org/2000/svg"><svg  x="50%" y="50%" width="${width / 16}em" height="${height / 16}em" overflow="visible" viewBox="0 0 ${width} ${height}"><svg x="${-width / 2}" y="${-height / 2}">${src}</svg></svg></g>`;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1pY29uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS91dGlscy9kb20vcHJvY2Vzcy1pY29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sWUFBWSxHQUFHLFNBQVMsQ0FBQztBQUMvQixNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUM7QUFDakMsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDO0FBRXJCLE1BQU0sVUFBVSxjQUFjLENBQUMsTUFBYyxFQUFFLElBQVk7SUFDdkQsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sSUFBSSxHQUFHLENBQUMsRUFBRTtRQUNqQyxPQUFPLE1BQU0sQ0FBQztLQUNqQjtJQUVELE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0QsTUFBTSxVQUFVLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFL0QsSUFBSSxDQUFDLENBQUEsVUFBVSxhQUFWLFVBQVUsdUJBQVYsVUFBVSxDQUFFLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsRUFBRTtRQUM1RSxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FDakIsS0FBSyxFQUNMLGtEQUFrRCxJQUFJLDJDQUEyQyxDQUNwRyxZQUFZLENBQUM7S0FDakI7SUFFRCxNQUFNLFlBQVksR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3RELE1BQU0sYUFBYSxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDeEQsTUFBTSxXQUFXLEdBQUcsWUFBWSxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUM7SUFDdkQsTUFBTSxZQUFZLEdBQUcsYUFBYSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7SUFDMUQsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FDaEMsV0FBVyxFQUNYLFVBQVUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUN2QyxDQUFDO0lBQ0YsTUFBTSxZQUFZLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FDakMsWUFBWSxFQUNaLFVBQVUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUN4QyxDQUFDO0lBRUYsSUFDSSxDQUFDLFlBQVk7UUFDYixDQUFDLFdBQVc7UUFDWixXQUFXLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQztRQUN6QixZQUFZLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQztRQUMxQixXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztRQUMxQixZQUFZLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUM3QjtRQUNFLE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsWUFBWSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0tBQ2xEO0lBRUQsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRTFDLE9BQU8sVUFBVSxJQUFJLHFFQUNqQixLQUFLLEdBQUcsRUFDWixlQUNJLE1BQU0sR0FBRyxFQUNiLHVDQUF1QyxLQUFLLElBQUksTUFBTSxhQUFhLENBQUMsS0FBSyxHQUFHLENBQUMsUUFDekUsQ0FBQyxNQUFNLEdBQUcsQ0FDZCxLQUFLLEdBQUcsa0JBQWtCLENBQUM7QUFDL0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFdJRFRIX1NFQVJDSCA9IGB3aWR0aD1cImA7XG5jb25zdCBIRUlHSFRfU0VBUkNIID0gYGhlaWdodD1cImA7XG5jb25zdCBTVEFSVCA9IGA8c3ZnYDtcblxuZXhwb3J0IGZ1bmN0aW9uIHR1aVByb2Nlc3NJY29uKHNvdXJjZTogc3RyaW5nLCBuYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmIChzb3VyY2UuaW5jbHVkZXMoYGlkPVwiJHtuYW1lfVwiYCkpIHtcbiAgICAgICAgcmV0dXJuIHNvdXJjZTtcbiAgICB9XG5cbiAgICBjb25zdCBzcmMgPSBzb3VyY2Uuc2xpY2UoTWF0aC5tYXgoMCwgc291cmNlLmluZGV4T2YoU1RBUlQpKSk7XG4gICAgY29uc3QgYXR0cmlidXRlcyA9IHNyYy5zbGljZSgwLCBNYXRoLm1heCgwLCBzcmMuaW5kZXhPZihgPmApKSk7XG5cbiAgICBpZiAoIWF0dHJpYnV0ZXM/LmluY2x1ZGVzKFdJRFRIX1NFQVJDSCkgfHwgIWF0dHJpYnV0ZXMuaW5jbHVkZXMoSEVJR0hUX1NFQVJDSCkpIHtcbiAgICAgICAgcmV0dXJuIGAke3NyYy5yZXBsYWNlKFxuICAgICAgICAgICAgU1RBUlQsXG4gICAgICAgICAgICBgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PGcgaWQ9XCIke25hbWV9XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxzdmdgLFxuICAgICAgICApfTwvZz48L3N2Zz5gO1xuICAgIH1cblxuICAgIGNvbnN0IGluZGV4T2ZXaWR0aCA9IGF0dHJpYnV0ZXMuaW5kZXhPZihXSURUSF9TRUFSQ0gpO1xuICAgIGNvbnN0IGluZGV4T2ZIZWlnaHQgPSBhdHRyaWJ1dGVzLmluZGV4T2YoSEVJR0hUX1NFQVJDSCk7XG4gICAgY29uc3Qgd2lkdGhPZmZzZXQgPSBpbmRleE9mV2lkdGggKyBXSURUSF9TRUFSQ0gubGVuZ3RoO1xuICAgIGNvbnN0IGhlaWdodE9mZnNldCA9IGluZGV4T2ZIZWlnaHQgKyBIRUlHSFRfU0VBUkNILmxlbmd0aDtcbiAgICBjb25zdCB3aWR0aFN0cmluZyA9IGF0dHJpYnV0ZXMuc2xpY2UoXG4gICAgICAgIHdpZHRoT2Zmc2V0LFxuICAgICAgICBhdHRyaWJ1dGVzLmluZGV4T2YoYFwiYCwgd2lkdGhPZmZzZXQpLFxuICAgICk7XG4gICAgY29uc3QgaGVpZ2h0U3RyaW5nID0gYXR0cmlidXRlcy5zbGljZShcbiAgICAgICAgaGVpZ2h0T2Zmc2V0LFxuICAgICAgICBhdHRyaWJ1dGVzLmluZGV4T2YoYFwiYCwgaGVpZ2h0T2Zmc2V0KSxcbiAgICApO1xuXG4gICAgaWYgKFxuICAgICAgICAhaGVpZ2h0U3RyaW5nIHx8XG4gICAgICAgICF3aWR0aFN0cmluZyB8fFxuICAgICAgICB3aWR0aFN0cmluZy5pbmNsdWRlcyhgJWApIHx8XG4gICAgICAgIGhlaWdodFN0cmluZy5pbmNsdWRlcyhgJWApIHx8XG4gICAgICAgIHdpZHRoU3RyaW5nLmluY2x1ZGVzKGBlbWApIHx8XG4gICAgICAgIGhlaWdodFN0cmluZy5pbmNsdWRlcyhgZW1gKVxuICAgICkge1xuICAgICAgICByZXR1cm4gc3JjLnJlcGxhY2UoU1RBUlQsIGA8c3ZnIGlkPVwiJHtuYW1lfVwiYCk7XG4gICAgfVxuXG4gICAgY29uc3Qgd2lkdGggPSBwYXJzZUludCh3aWR0aFN0cmluZywgMTApO1xuICAgIGNvbnN0IGhlaWdodCA9IHBhcnNlSW50KGhlaWdodFN0cmluZywgMTApO1xuXG4gICAgcmV0dXJuIGA8ZyBpZD1cIiR7bmFtZX1cIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHN2ZyAgeD1cIjUwJVwiIHk9XCI1MCVcIiB3aWR0aD1cIiR7XG4gICAgICAgIHdpZHRoIC8gMTZcbiAgICB9ZW1cIiBoZWlnaHQ9XCIke1xuICAgICAgICBoZWlnaHQgLyAxNlxuICAgIH1lbVwiIG92ZXJmbG93PVwidmlzaWJsZVwiIHZpZXdCb3g9XCIwIDAgJHt3aWR0aH0gJHtoZWlnaHR9XCI+PHN2ZyB4PVwiJHstd2lkdGggLyAyfVwiIHk9XCIke1xuICAgICAgICAtaGVpZ2h0IC8gMlxuICAgIH1cIj4ke3NyY308L3N2Zz48L3N2Zz48L2c+YDtcbn1cbiJdfQ==