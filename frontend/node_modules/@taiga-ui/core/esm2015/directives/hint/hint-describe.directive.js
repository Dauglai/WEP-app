import { __decorate } from "tslib";
import { DOCUMENT } from '@angular/common';
import { Directive, ElementRef, Inject, Input, NgZone } from '@angular/core';
import { tuiIsNativeFocused, tuiPure, tuiTypedFromEvent, tuiZoneOptimized, } from '@taiga-ui/cdk';
import { tuiAsDriver, TuiDriver } from '@taiga-ui/core/abstract';
import { merge, of, timer } from 'rxjs';
import { debounce, distinctUntilChanged, map, skip, startWith, switchMap, } from 'rxjs/operators';
import * as i0 from "@angular/core";
export class TuiHintDescribeDirective extends TuiDriver {
    constructor(ngZone, doc, el) {
        super(subscriber => this.stream$.subscribe(subscriber));
        this.ngZone = ngZone;
        this.doc = doc;
        this.el = el;
        this.stream$ = tuiTypedFromEvent(this.doc, 'keydown', {
            capture: true,
        }).pipe(switchMap(() => this.focused
            ? of(false)
            : merge(tuiTypedFromEvent(this.doc, 'keyup'), tuiTypedFromEvent(this.element, 'blur')).pipe(map(() => this.focused))), debounce(visible => (visible ? timer(1000) : of(null))), startWith(false), distinctUntilChanged(), skip(1), tuiZoneOptimized(this.ngZone));
        this.tuiHintDescribe = '';
        this.type = 'hint';
    }
    get focused() {
        return tuiIsNativeFocused(this.element);
    }
    get element() {
        return this.doc.getElementById(this.tuiHintDescribe) || this.el.nativeElement;
    }
}
TuiHintDescribeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintDescribeDirective, deps: [{ token: NgZone }, { token: DOCUMENT }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TuiHintDescribeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintDescribeDirective, selector: "[tuiHintDescribe]", inputs: { tuiHintDescribe: "tuiHintDescribe" }, providers: [tuiAsDriver(TuiHintDescribeDirective)], usesInheritance: true, ngImport: i0 });
__decorate([
    tuiPure
], TuiHintDescribeDirective.prototype, "element", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintDescribeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiHintDescribe]',
                    providers: [tuiAsDriver(TuiHintDescribeDirective)],
                }]
        }], ctorParameters: function () { return [{ type: i0.NgZone, decorators: [{
                    type: Inject,
                    args: [NgZone]
                }] }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; }, propDecorators: { tuiHintDescribe: [{
                type: Input
            }], element: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC1kZXNjcmliZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvaGludC9oaW50LWRlc2NyaWJlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFDSCxrQkFBa0IsRUFDbEIsT0FBTyxFQUNQLGlCQUFpQixFQUNqQixnQkFBZ0IsR0FDbkIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFdBQVcsRUFBRSxTQUFTLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUMvRCxPQUFPLEVBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDdEMsT0FBTyxFQUNILFFBQVEsRUFDUixvQkFBb0IsRUFDcEIsR0FBRyxFQUNILElBQUksRUFDSixTQUFTLEVBQ1QsU0FBUyxHQUNaLE1BQU0sZ0JBQWdCLENBQUM7O0FBTXhCLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxTQUFTO0lBd0JuRCxZQUNxQyxNQUFjLEVBQ1osR0FBYSxFQUNYLEVBQTJCO1FBRWhFLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFKdkIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNaLFFBQUcsR0FBSCxHQUFHLENBQVU7UUFDWCxPQUFFLEdBQUYsRUFBRSxDQUF5QjtRQTFCbkQsWUFBTyxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFO1lBQzlELE9BQU8sRUFBRSxJQUFJO1NBQ2hCLENBQUMsQ0FBQyxJQUFJLENBQ0gsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUNYLElBQUksQ0FBQyxPQUFPO1lBQ1IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7WUFDWCxDQUFDLENBQUMsS0FBSyxDQUNELGlCQUFpQixDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEVBQ3BDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQzFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FDeEMsRUFDRCxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUN2RCxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQ2hCLG9CQUFvQixFQUFFLEVBQ3RCLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQ2hDLENBQUM7UUFHRixvQkFBZSxHQUFnQixFQUFFLENBQUM7UUFFekIsU0FBSSxHQUFHLE1BQU0sQ0FBQztJQVF2QixDQUFDO0lBRUQsSUFBWSxPQUFPO1FBQ2YsT0FBTyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUdELElBQVksT0FBTztRQUNmLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDO0lBQ2xGLENBQUM7O3NIQXZDUSx3QkFBd0Isa0JBeUJyQixNQUFNLGFBQ04sUUFBUSxhQUNSLFVBQVU7MEdBM0JiLHdCQUF3Qiw0RkFGdEIsQ0FBQyxXQUFXLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQXVDbEQ7SUFEQyxPQUFPO3VEQUdQOzRGQXZDUSx3QkFBd0I7a0JBSnBDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsU0FBUyxFQUFFLENBQUMsV0FBVywwQkFBMEIsQ0FBQztpQkFDckQ7OzBCQTBCUSxNQUFNOzJCQUFDLE1BQU07OEJBQzBCLFFBQVE7MEJBQS9DLE1BQU07MkJBQUMsUUFBUTs7MEJBQ2YsTUFBTTsyQkFBQyxVQUFVOzRDQVB0QixlQUFlO3NCQURkLEtBQUs7Z0JBa0JNLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RPQ1VNRU5UfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdCwgSW5wdXQsIE5nWm9uZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIHR1aUlzTmF0aXZlRm9jdXNlZCxcbiAgICB0dWlQdXJlLFxuICAgIHR1aVR5cGVkRnJvbUV2ZW50LFxuICAgIHR1aVpvbmVPcHRpbWl6ZWQsXG59IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHt0dWlBc0RyaXZlciwgVHVpRHJpdmVyfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9hYnN0cmFjdCc7XG5pbXBvcnQge21lcmdlLCBvZiwgdGltZXJ9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgICBkZWJvdW5jZSxcbiAgICBkaXN0aW5jdFVudGlsQ2hhbmdlZCxcbiAgICBtYXAsXG4gICAgc2tpcCxcbiAgICBzdGFydFdpdGgsXG4gICAgc3dpdGNoTWFwLFxufSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aUhpbnREZXNjcmliZV0nLFxuICAgIHByb3ZpZGVyczogW3R1aUFzRHJpdmVyKFR1aUhpbnREZXNjcmliZURpcmVjdGl2ZSldLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlIaW50RGVzY3JpYmVEaXJlY3RpdmUgZXh0ZW5kcyBUdWlEcml2ZXIge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgc3RyZWFtJCA9IHR1aVR5cGVkRnJvbUV2ZW50KHRoaXMuZG9jLCAna2V5ZG93bicsIHtcbiAgICAgICAgY2FwdHVyZTogdHJ1ZSxcbiAgICB9KS5waXBlKFxuICAgICAgICBzd2l0Y2hNYXAoKCkgPT5cbiAgICAgICAgICAgIHRoaXMuZm9jdXNlZFxuICAgICAgICAgICAgICAgID8gb2YoZmFsc2UpXG4gICAgICAgICAgICAgICAgOiBtZXJnZShcbiAgICAgICAgICAgICAgICAgICAgICB0dWlUeXBlZEZyb21FdmVudCh0aGlzLmRvYywgJ2tleXVwJyksXG4gICAgICAgICAgICAgICAgICAgICAgdHVpVHlwZWRGcm9tRXZlbnQodGhpcy5lbGVtZW50LCAnYmx1cicpLFxuICAgICAgICAgICAgICAgICAgKS5waXBlKG1hcCgoKSA9PiB0aGlzLmZvY3VzZWQpKSxcbiAgICAgICAgKSxcbiAgICAgICAgZGVib3VuY2UodmlzaWJsZSA9PiAodmlzaWJsZSA/IHRpbWVyKDEwMDApIDogb2YobnVsbCkpKSxcbiAgICAgICAgc3RhcnRXaXRoKGZhbHNlKSxcbiAgICAgICAgZGlzdGluY3RVbnRpbENoYW5nZWQoKSxcbiAgICAgICAgc2tpcCgxKSxcbiAgICAgICAgdHVpWm9uZU9wdGltaXplZCh0aGlzLm5nWm9uZSksXG4gICAgKTtcblxuICAgIEBJbnB1dCgpXG4gICAgdHVpSGludERlc2NyaWJlOiBzdHJpbmcgfCAnJyA9ICcnO1xuXG4gICAgcmVhZG9ubHkgdHlwZSA9ICdoaW50JztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KE5nWm9uZSkgcHJpdmF0ZSByZWFkb25seSBuZ1pvbmU6IE5nWm9uZSxcbiAgICAgICAgQEluamVjdChET0NVTUVOVCkgcHJpdmF0ZSByZWFkb25seSBkb2M6IERvY3VtZW50LFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIHByaXZhdGUgcmVhZG9ubHkgZWw6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICkge1xuICAgICAgICBzdXBlcihzdWJzY3JpYmVyID0+IHRoaXMuc3RyZWFtJC5zdWJzY3JpYmUoc3Vic2NyaWJlcikpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0IGZvY3VzZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0dWlJc05hdGl2ZUZvY3VzZWQodGhpcy5lbGVtZW50KTtcbiAgICB9XG5cbiAgICBAdHVpUHVyZVxuICAgIHByaXZhdGUgZ2V0IGVsZW1lbnQoKTogSFRNTEVsZW1lbnQge1xuICAgICAgICByZXR1cm4gdGhpcy5kb2MuZ2V0RWxlbWVudEJ5SWQodGhpcy50dWlIaW50RGVzY3JpYmUpIHx8IHRoaXMuZWwubmF0aXZlRWxlbWVudDtcbiAgICB9XG59XG4iXX0=