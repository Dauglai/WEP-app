import { Directive, HostListener } from '@angular/core';
import { EMPTY_CLIENT_RECT, tuiPointToClientRect } from '@taiga-ui/cdk';
import { tuiAsDriver, tuiAsRectAccessor } from '@taiga-ui/core/abstract';
import { TuiHintHoverDirective } from './hint-hover.directive';
import * as i0 from "@angular/core";
export class TuiHintPointerDirective extends TuiHintHoverDirective {
    constructor() {
        super(...arguments);
        this.currentRect = EMPTY_CLIENT_RECT;
    }
    onMove({ clientX, clientY }) {
        this.currentRect = tuiPointToClientRect(clientX, clientY);
    }
    getClientRect() {
        return this.currentRect;
    }
}
TuiHintPointerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintPointerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiHintPointerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintPointerDirective, selector: "[tuiHint][tuiHintPointer]", host: { listeners: { "mousemove.silent": "onMove($event)" } }, providers: [
        tuiAsRectAccessor(TuiHintPointerDirective),
        tuiAsDriver(TuiHintPointerDirective),
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintPointerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiHint][tuiHintPointer]',
                    providers: [
                        tuiAsRectAccessor(TuiHintPointerDirective),
                        tuiAsDriver(TuiHintPointerDirective),
                    ],
                }]
        }], propDecorators: { onMove: [{
                type: HostListener,
                args: ['mousemove.silent', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC1wb2ludGVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvZGlyZWN0aXZlcy9oaW50L2hpbnQtcG9pbnRlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdEQsT0FBTyxFQUFDLGlCQUFpQixFQUFFLG9CQUFvQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3RFLE9BQU8sRUFBQyxXQUFXLEVBQUUsaUJBQWlCLEVBQWtCLE1BQU0seUJBQXlCLENBQUM7QUFFeEYsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7O0FBUzdELE1BQU0sT0FBTyx1QkFDVCxTQUFRLHFCQUFxQjtJQVJqQzs7UUFXWSxnQkFBVyxHQUFHLGlCQUFpQixDQUFDO0tBVTNDO0lBUEcsTUFBTSxDQUFDLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBYTtRQUNqQyxJQUFJLENBQUMsV0FBVyxHQUFHLG9CQUFvQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsYUFBYTtRQUNULE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUM1QixDQUFDOztxSEFiUSx1QkFBdUI7eUdBQXZCLHVCQUF1QixtSEFMckI7UUFDUCxpQkFBaUIsQ0FBQyx1QkFBdUIsQ0FBQztRQUMxQyxXQUFXLENBQUMsdUJBQXVCLENBQUM7S0FDdkM7NEZBRVEsdUJBQXVCO2tCQVBuQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLFNBQVMsRUFBRTt3QkFDUCxpQkFBaUIseUJBQXlCO3dCQUMxQyxXQUFXLHlCQUF5QjtxQkFDdkM7aUJBQ0o7OEJBUUcsTUFBTTtzQkFETCxZQUFZO3VCQUFDLGtCQUFrQixFQUFFLENBQUMsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0VNUFRZX0NMSUVOVF9SRUNULCB0dWlQb2ludFRvQ2xpZW50UmVjdH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge3R1aUFzRHJpdmVyLCB0dWlBc1JlY3RBY2Nlc3NvciwgVHVpUmVjdEFjY2Vzc29yfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9hYnN0cmFjdCc7XG5cbmltcG9ydCB7VHVpSGludEhvdmVyRGlyZWN0aXZlfSBmcm9tICcuL2hpbnQtaG92ZXIuZGlyZWN0aXZlJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpSGludF1bdHVpSGludFBvaW50ZXJdJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpQXNSZWN0QWNjZXNzb3IoVHVpSGludFBvaW50ZXJEaXJlY3RpdmUpLFxuICAgICAgICB0dWlBc0RyaXZlcihUdWlIaW50UG9pbnRlckRpcmVjdGl2ZSksXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpSGludFBvaW50ZXJEaXJlY3RpdmVcbiAgICBleHRlbmRzIFR1aUhpbnRIb3ZlckRpcmVjdGl2ZVxuICAgIGltcGxlbWVudHMgVHVpUmVjdEFjY2Vzc29yXG57XG4gICAgcHJpdmF0ZSBjdXJyZW50UmVjdCA9IEVNUFRZX0NMSUVOVF9SRUNUO1xuXG4gICAgQEhvc3RMaXN0ZW5lcignbW91c2Vtb3ZlLnNpbGVudCcsIFsnJGV2ZW50J10pXG4gICAgb25Nb3ZlKHtjbGllbnRYLCBjbGllbnRZfTogTW91c2VFdmVudCk6IHZvaWQge1xuICAgICAgICB0aGlzLmN1cnJlbnRSZWN0ID0gdHVpUG9pbnRUb0NsaWVudFJlY3QoY2xpZW50WCwgY2xpZW50WSk7XG4gICAgfVxuXG4gICAgZ2V0Q2xpZW50UmVjdCgpOiBDbGllbnRSZWN0IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFJlY3Q7XG4gICAgfVxufVxuIl19