import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { AbstractTuiController } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
export const TUI_TEXTFIELD_PREFIX = new InjectionToken('[TUI_TEXTFIELD_PREFIX]', {
    factory: () => new TuiTextfieldPrefixDirective(),
});
export class TuiTextfieldPrefixDirective extends AbstractTuiController {
    constructor() {
        super(...arguments);
        this.prefix = '';
    }
}
TuiTextfieldPrefixDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldPrefixDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiTextfieldPrefixDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTextfieldPrefixDirective, selector: "[tuiTextfieldPrefix]", inputs: { prefix: ["tuiTextfieldPrefix", "prefix"] }, providers: [
        {
            provide: TUI_TEXTFIELD_PREFIX,
            useExisting: forwardRef(() => TuiTextfieldPrefixDirective),
        },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldPrefixDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiTextfieldPrefix]',
                    providers: [
                        {
                            provide: TUI_TEXTFIELD_PREFIX,
                            useExisting: forwardRef(() => TuiTextfieldPrefixDirective),
                        },
                    ],
                }]
        }], propDecorators: { prefix: [{
                type: Input,
                args: ['tuiTextfieldPrefix']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLXByZWZpeC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvdGV4dGZpZWxkLWNvbnRyb2xsZXIvdGV4dGZpZWxkLXByZWZpeC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxlQUFlLENBQUM7O0FBRXBELE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLElBQUksY0FBYyxDQUNsRCx3QkFBd0IsRUFDeEI7SUFDSSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSwyQkFBMkIsRUFBRTtDQUNuRCxDQUNKLENBQUM7QUFXRixNQUFNLE9BQU8sMkJBQTRCLFNBQVEscUJBQXFCO0lBVHRFOztRQVdJLFdBQU0sR0FBRyxFQUFFLENBQUM7S0FDZjs7eUhBSFksMkJBQTJCOzZHQUEzQiwyQkFBMkIscUdBUHpCO1FBQ1A7WUFDSSxPQUFPLEVBQUUsb0JBQW9CO1lBQzdCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsMkJBQTJCLENBQUM7U0FDN0Q7S0FDSjs0RkFFUSwyQkFBMkI7a0JBVHZDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsU0FBUyxFQUFFO3dCQUNQOzRCQUNJLE9BQU8sRUFBRSxvQkFBb0I7NEJBQzdCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLDRCQUE0QixDQUFDO3lCQUM3RDtxQkFDSjtpQkFDSjs4QkFHRyxNQUFNO3NCQURMLEtBQUs7dUJBQUMsb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIGZvcndhcmRSZWYsIEluamVjdGlvblRva2VuLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Fic3RyYWN0VHVpQ29udHJvbGxlcn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5cbmV4cG9ydCBjb25zdCBUVUlfVEVYVEZJRUxEX1BSRUZJWCA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUdWlUZXh0ZmllbGRQcmVmaXhEaXJlY3RpdmU+KFxuICAgICdbVFVJX1RFWFRGSUVMRF9QUkVGSVhdJyxcbiAgICB7XG4gICAgICAgIGZhY3Rvcnk6ICgpID0+IG5ldyBUdWlUZXh0ZmllbGRQcmVmaXhEaXJlY3RpdmUoKSxcbiAgICB9LFxuKTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpVGV4dGZpZWxkUHJlZml4XScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9URVhURklFTERfUFJFRklYLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpVGV4dGZpZWxkUHJlZml4RGlyZWN0aXZlKSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUZXh0ZmllbGRQcmVmaXhEaXJlY3RpdmUgZXh0ZW5kcyBBYnN0cmFjdFR1aUNvbnRyb2xsZXIge1xuICAgIEBJbnB1dCgndHVpVGV4dGZpZWxkUHJlZml4JylcbiAgICBwcmVmaXggPSAnJztcbn1cbiJdfQ==