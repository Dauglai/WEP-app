import { __decorate } from "tslib";
import { Directive, forwardRef, Inject, InjectionToken, Input, Optional, SkipSelf, } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { tuiOverrideOptions } from '@taiga-ui/core/utils';
import * as i0 from "@angular/core";
/** Default values for dropdown options */
export const TUI_DROPDOWN_DEFAULT_OPTIONS = {
    align: 'left',
    direction: null,
    limitWidth: 'auto',
    maxHeight: 400,
    minHeight: 80,
    offset: 4,
};
/**
 * Default parameters for dropdown directive
 */
export const TUI_DROPDOWN_OPTIONS = new InjectionToken('[TUI_DROPDOWN_OPTIONS]', {
    factory: () => TUI_DROPDOWN_DEFAULT_OPTIONS,
});
export const tuiDropdownOptionsProvider = (override) => ({
    provide: TUI_DROPDOWN_OPTIONS,
    deps: [
        [new Optional(), TuiDropdownOptionsDirective],
        [new SkipSelf(), TUI_DROPDOWN_OPTIONS],
    ],
    useFactory: tuiOverrideOptions(override),
});
export class TuiDropdownOptionsDirective {
    constructor(options) {
        this.options = options;
        this.align = this.options.align;
        this.direction = this.options.direction;
        this.limitWidth = this.options.limitWidth;
        this.minHeight = this.options.minHeight;
        this.maxHeight = this.options.maxHeight;
        this.offset = this.options.offset;
    }
}
TuiDropdownOptionsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDropdownOptionsDirective, deps: [{ token: TUI_DROPDOWN_OPTIONS, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });
TuiDropdownOptionsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiDropdownOptionsDirective, selector: "[tuiDropdownAlign], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]", inputs: { align: ["tuiDropdownAlign", "align"], direction: ["tuiDropdownDirection", "direction"], limitWidth: ["tuiDropdownLimitWidth", "limitWidth"], minHeight: ["tuiDropdownMinHeight", "minHeight"], maxHeight: ["tuiDropdownMaxHeight", "maxHeight"], offset: ["tuiDropdownOffset", "offset"] }, providers: [
        {
            provide: TUI_DROPDOWN_OPTIONS,
            useExisting: forwardRef(() => TuiDropdownOptionsDirective),
        },
    ], ngImport: i0 });
__decorate([
    tuiDefaultProp()
], TuiDropdownOptionsDirective.prototype, "align", void 0);
__decorate([
    tuiDefaultProp()
], TuiDropdownOptionsDirective.prototype, "direction", void 0);
__decorate([
    tuiDefaultProp()
], TuiDropdownOptionsDirective.prototype, "limitWidth", void 0);
__decorate([
    tuiDefaultProp()
], TuiDropdownOptionsDirective.prototype, "minHeight", void 0);
__decorate([
    tuiDefaultProp()
], TuiDropdownOptionsDirective.prototype, "maxHeight", void 0);
__decorate([
    tuiDefaultProp()
], TuiDropdownOptionsDirective.prototype, "offset", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDropdownOptionsDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiDropdownAlign], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]',
                    providers: [
                        {
                            provide: TUI_DROPDOWN_OPTIONS,
                            useExisting: forwardRef(() => TuiDropdownOptionsDirective),
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: SkipSelf
                }, {
                    type: Inject,
                    args: [TUI_DROPDOWN_OPTIONS]
                }] }]; }, propDecorators: { align: [{
                type: Input,
                args: ['tuiDropdownAlign']
            }], direction: [{
                type: Input,
                args: ['tuiDropdownDirection']
            }], limitWidth: [{
                type: Input,
                args: ['tuiDropdownLimitWidth']
            }], minHeight: [{
                type: Input,
                args: ['tuiDropdownMinHeight']
            }], maxHeight: [{
                type: Input,
                args: ['tuiDropdownMaxHeight']
            }], offset: [{
                type: Input,
                args: ['tuiDropdownOffset']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tb3B0aW9ucy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvZHJvcGRvd24vZHJvcGRvd24tb3B0aW9ucy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDSCxTQUFTLEVBRVQsVUFBVSxFQUNWLE1BQU0sRUFDTixjQUFjLEVBQ2QsS0FBSyxFQUNMLFFBQVEsRUFDUixRQUFRLEdBQ1gsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQU03QyxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQzs7QUFXeEQsMENBQTBDO0FBQzFDLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUF1QjtJQUM1RCxLQUFLLEVBQUUsTUFBTTtJQUNiLFNBQVMsRUFBRSxJQUFJO0lBQ2YsVUFBVSxFQUFFLE1BQU07SUFDbEIsU0FBUyxFQUFFLEdBQUc7SUFDZCxTQUFTLEVBQUUsRUFBRTtJQUNiLE1BQU0sRUFBRSxDQUFDO0NBQ1osQ0FBQztBQUVGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsSUFBSSxjQUFjLENBQ2xELHdCQUF3QixFQUN4QjtJQUNJLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyw0QkFBNEI7Q0FDOUMsQ0FDSixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBRWhCLENBQUMsUUFBcUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvRCxPQUFPLEVBQUUsb0JBQW9CO0lBQzdCLElBQUksRUFBRTtRQUNGLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSwyQkFBMkIsQ0FBQztRQUM3QyxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsb0JBQW9CLENBQUM7S0FDekM7SUFDRCxVQUFVLEVBQUUsa0JBQWtCLENBQUMsUUFBUSxDQUFDO0NBQzNDLENBQUMsQ0FBQztBQVlILE1BQU0sT0FBTywyQkFBMkI7SUF5QnBDLFlBR3FCLE9BQTJCO1FBQTNCLFlBQU8sR0FBUCxPQUFPLENBQW9CO1FBekJoRCxVQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFJM0IsY0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBSW5DLGVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUlyQyxjQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFJbkMsY0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBSW5DLFdBQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQU0xQixDQUFDOzt5SEE3QkssMkJBQTJCLGtCQTJCeEIsb0JBQW9COzZHQTNCdkIsMkJBQTJCLHljQVB6QjtRQUNQO1lBQ0ksT0FBTyxFQUFFLG9CQUFvQjtZQUM3QixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDJCQUEyQixDQUFDO1NBQzdEO0tBQ0o7QUFLRDtJQURDLGNBQWMsRUFBRTswREFDVTtBQUkzQjtJQURDLGNBQWMsRUFBRTs4REFDa0I7QUFJbkM7SUFEQyxjQUFjLEVBQUU7K0RBQ29CO0FBSXJDO0lBREMsY0FBYyxFQUFFOzhEQUNrQjtBQUluQztJQURDLGNBQWMsRUFBRTs4REFDa0I7QUFJbkM7SUFEQyxjQUFjLEVBQUU7MkRBQ1k7NEZBdkJwQiwyQkFBMkI7a0JBVnZDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUNKLDBJQUEwSTtvQkFDOUksU0FBUyxFQUFFO3dCQUNQOzRCQUNJLE9BQU8sRUFBRSxvQkFBb0I7NEJBQzdCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLDRCQUE0QixDQUFDO3lCQUM3RDtxQkFDSjtpQkFDSjs7MEJBMkJRLFFBQVE7OzBCQUNSLE1BQU07MkJBQUMsb0JBQW9COzRDQXhCaEMsS0FBSztzQkFGSixLQUFLO3VCQUFDLGtCQUFrQjtnQkFNekIsU0FBUztzQkFGUixLQUFLO3VCQUFDLHNCQUFzQjtnQkFNN0IsVUFBVTtzQkFGVCxLQUFLO3VCQUFDLHVCQUF1QjtnQkFNOUIsU0FBUztzQkFGUixLQUFLO3VCQUFDLHNCQUFzQjtnQkFNN0IsU0FBUztzQkFGUixLQUFLO3VCQUFDLHNCQUFzQjtnQkFNN0IsTUFBTTtzQkFGTCxLQUFLO3VCQUFDLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgRGlyZWN0aXZlLFxuICAgIEZhY3RvcnlQcm92aWRlcixcbiAgICBmb3J3YXJkUmVmLFxuICAgIEluamVjdCxcbiAgICBJbmplY3Rpb25Ub2tlbixcbiAgICBJbnB1dCxcbiAgICBPcHRpb25hbCxcbiAgICBTa2lwU2VsZixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aURlZmF1bHRQcm9wfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7XG4gICAgVHVpRHJvcGRvd25BbGlnbixcbiAgICBUdWlEcm9wZG93bldpZHRoLFxuICAgIFR1aVZlcnRpY2FsRGlyZWN0aW9uLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZS90eXBlcyc7XG5pbXBvcnQge3R1aU92ZXJyaWRlT3B0aW9uc30gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdXRpbHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFR1aURyb3Bkb3duT3B0aW9ucyB7XG4gICAgcmVhZG9ubHkgYWxpZ246IFR1aURyb3Bkb3duQWxpZ247XG4gICAgcmVhZG9ubHkgZGlyZWN0aW9uOiBUdWlWZXJ0aWNhbERpcmVjdGlvbiB8IG51bGw7XG4gICAgcmVhZG9ubHkgbGltaXRXaWR0aDogVHVpRHJvcGRvd25XaWR0aDtcbiAgICByZWFkb25seSBtaW5IZWlnaHQ6IG51bWJlcjtcbiAgICByZWFkb25seSBtYXhIZWlnaHQ6IG51bWJlcjtcbiAgICByZWFkb25seSBvZmZzZXQ6IG51bWJlcjtcbn1cblxuLyoqIERlZmF1bHQgdmFsdWVzIGZvciBkcm9wZG93biBvcHRpb25zICovXG5leHBvcnQgY29uc3QgVFVJX0RST1BET1dOX0RFRkFVTFRfT1BUSU9OUzogVHVpRHJvcGRvd25PcHRpb25zID0ge1xuICAgIGFsaWduOiAnbGVmdCcsXG4gICAgZGlyZWN0aW9uOiBudWxsLFxuICAgIGxpbWl0V2lkdGg6ICdhdXRvJyxcbiAgICBtYXhIZWlnaHQ6IDQwMCxcbiAgICBtaW5IZWlnaHQ6IDgwLFxuICAgIG9mZnNldDogNCxcbn07XG5cbi8qKlxuICogRGVmYXVsdCBwYXJhbWV0ZXJzIGZvciBkcm9wZG93biBkaXJlY3RpdmVcbiAqL1xuZXhwb3J0IGNvbnN0IFRVSV9EUk9QRE9XTl9PUFRJT05TID0gbmV3IEluamVjdGlvblRva2VuPFR1aURyb3Bkb3duT3B0aW9ucz4oXG4gICAgJ1tUVUlfRFJPUERPV05fT1BUSU9OU10nLFxuICAgIHtcbiAgICAgICAgZmFjdG9yeTogKCkgPT4gVFVJX0RST1BET1dOX0RFRkFVTFRfT1BUSU9OUyxcbiAgICB9LFxuKTtcblxuZXhwb3J0IGNvbnN0IHR1aURyb3Bkb3duT3B0aW9uc1Byb3ZpZGVyOiAoXG4gICAgb3B0aW9uczogUGFydGlhbDxUdWlEcm9wZG93bk9wdGlvbnM+LFxuKSA9PiBGYWN0b3J5UHJvdmlkZXIgPSAob3ZlcnJpZGU6IFBhcnRpYWw8VHVpRHJvcGRvd25PcHRpb25zPikgPT4gKHtcbiAgICBwcm92aWRlOiBUVUlfRFJPUERPV05fT1BUSU9OUyxcbiAgICBkZXBzOiBbXG4gICAgICAgIFtuZXcgT3B0aW9uYWwoKSwgVHVpRHJvcGRvd25PcHRpb25zRGlyZWN0aXZlXSxcbiAgICAgICAgW25ldyBTa2lwU2VsZigpLCBUVUlfRFJPUERPV05fT1BUSU9OU10sXG4gICAgXSxcbiAgICB1c2VGYWN0b3J5OiB0dWlPdmVycmlkZU9wdGlvbnMob3ZlcnJpZGUpLFxufSk7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOlxuICAgICAgICAnW3R1aURyb3Bkb3duQWxpZ25dLCBbdHVpRHJvcGRvd25EaXJlY3Rpb25dLCBbdHVpRHJvcGRvd25MaW1pdFdpZHRoXSwgW3R1aURyb3Bkb3duTWluSGVpZ2h0XSwgW3R1aURyb3Bkb3duTWF4SGVpZ2h0XSwgW3R1aURyb3Bkb3duT2Zmc2V0XScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9EUk9QRE9XTl9PUFRJT05TLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpRHJvcGRvd25PcHRpb25zRGlyZWN0aXZlKSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlEcm9wZG93bk9wdGlvbnNEaXJlY3RpdmUgaW1wbGVtZW50cyBUdWlEcm9wZG93bk9wdGlvbnMge1xuICAgIEBJbnB1dCgndHVpRHJvcGRvd25BbGlnbicpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBhbGlnbiA9IHRoaXMub3B0aW9ucy5hbGlnbjtcblxuICAgIEBJbnB1dCgndHVpRHJvcGRvd25EaXJlY3Rpb24nKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgZGlyZWN0aW9uID0gdGhpcy5vcHRpb25zLmRpcmVjdGlvbjtcblxuICAgIEBJbnB1dCgndHVpRHJvcGRvd25MaW1pdFdpZHRoJylcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGxpbWl0V2lkdGggPSB0aGlzLm9wdGlvbnMubGltaXRXaWR0aDtcblxuICAgIEBJbnB1dCgndHVpRHJvcGRvd25NaW5IZWlnaHQnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbWluSGVpZ2h0ID0gdGhpcy5vcHRpb25zLm1pbkhlaWdodDtcblxuICAgIEBJbnB1dCgndHVpRHJvcGRvd25NYXhIZWlnaHQnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgbWF4SGVpZ2h0ID0gdGhpcy5vcHRpb25zLm1heEhlaWdodDtcblxuICAgIEBJbnB1dCgndHVpRHJvcGRvd25PZmZzZXQnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgb2Zmc2V0ID0gdGhpcy5vcHRpb25zLm9mZnNldDtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBAU2tpcFNlbGYoKVxuICAgICAgICBASW5qZWN0KFRVSV9EUk9QRE9XTl9PUFRJT05TKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aURyb3Bkb3duT3B0aW9ucyxcbiAgICApIHt9XG59XG4iXX0=