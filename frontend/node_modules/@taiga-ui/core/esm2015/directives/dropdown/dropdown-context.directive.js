import { __decorate } from "tslib";
import { Directive, HostListener, Inject } from '@angular/core';
import { EMPTY_CLIENT_RECT, TuiActiveZoneDirective, tuiPointToClientRect, } from '@taiga-ui/cdk';
import { tuiAsDriver, tuiAsRectAccessor, TuiDriver, } from '@taiga-ui/core/abstract';
import { shouldCall } from '@tinkoff/ng-event-plugins';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
function activeZoneFilter(target) {
    return !this.activeZone.contains(target);
}
export class TuiDropdownContextDirective extends TuiDriver {
    constructor(activeZone) {
        super(subscriber => this.stream$.subscribe(subscriber));
        this.activeZone = activeZone;
        this.stream$ = new Subject();
        this.currentRect = EMPTY_CLIENT_RECT;
        this.type = 'dropdown';
    }
    onContextMenu(x, y) {
        this.currentRect = tuiPointToClientRect(x, y);
        this.stream$.next(true);
    }
    closeDropdown() {
        this.stream$.next(false);
    }
    getClientRect() {
        return this.currentRect;
    }
}
TuiDropdownContextDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDropdownContextDirective, deps: [{ token: TuiActiveZoneDirective }], target: i0.ɵɵFactoryTarget.Directive });
TuiDropdownContextDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiDropdownContextDirective, selector: "[tuiDropdown][tuiDropdownContext]", host: { listeners: { "contextmenu.prevent.stop": "onContextMenu($event.clientX,$event.clientY)", "document:click.silent": "closeDropdown($event.target)", "document:contextmenu.capture.silent": "closeDropdown($event.target)", "document:keydown.esc": "closeDropdown($event.currentTarget)" } }, providers: [
        TuiActiveZoneDirective,
        tuiAsDriver(TuiDropdownContextDirective),
        tuiAsRectAccessor(TuiDropdownContextDirective),
    ], usesInheritance: true, ngImport: i0 });
__decorate([
    shouldCall(activeZoneFilter)
], TuiDropdownContextDirective.prototype, "closeDropdown", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDropdownContextDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiDropdown][tuiDropdownContext]',
                    providers: [
                        TuiActiveZoneDirective,
                        tuiAsDriver(TuiDropdownContextDirective),
                        tuiAsRectAccessor(TuiDropdownContextDirective),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiActiveZoneDirective, decorators: [{
                    type: Inject,
                    args: [TuiActiveZoneDirective]
                }] }]; }, propDecorators: { onContextMenu: [{
                type: HostListener,
                args: ['contextmenu.prevent.stop', ['$event.clientX', '$event.clientY']]
            }], closeDropdown: [{
                type: HostListener,
                args: ['document:click.silent', ['$event.target']]
            }, {
                type: HostListener,
                args: ['document:contextmenu.capture.silent', ['$event.target']]
            }, {
                type: HostListener,
                args: ['document:keydown.esc', ['$event.currentTarget']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tY29udGV4dC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvZHJvcGRvd24vZHJvcGRvd24tY29udGV4dC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQ0gsaUJBQWlCLEVBQ2pCLHNCQUFzQixFQUN0QixvQkFBb0IsR0FDdkIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNILFdBQVcsRUFDWCxpQkFBaUIsRUFDakIsU0FBUyxHQUVaLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxNQUFNLENBQUM7OztBQUU3QixTQUFTLGdCQUFnQixDQUFvQyxNQUFlO0lBQ3hFLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3QyxDQUFDO0FBVUQsTUFBTSxPQUFPLDJCQUE0QixTQUFRLFNBQVM7SUFPdEQsWUFFYSxVQUFrQztRQUUzQyxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBRi9DLGVBQVUsR0FBVixVQUFVLENBQXdCO1FBUjlCLFlBQU8sR0FBRyxJQUFJLE9BQU8sRUFBVyxDQUFDO1FBRTFDLGdCQUFXLEdBQUcsaUJBQWlCLENBQUM7UUFFL0IsU0FBSSxHQUFHLFVBQVUsQ0FBQztJQU8zQixDQUFDO0lBR0QsYUFBYSxDQUFDLENBQVMsRUFBRSxDQUFTO1FBQzlCLElBQUksQ0FBQyxXQUFXLEdBQUcsb0JBQW9CLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFNRCxhQUFhO1FBQ1QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELGFBQWE7UUFDVCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQzs7eUhBOUJRLDJCQUEyQixrQkFReEIsc0JBQXNCOzZHQVJ6QiwyQkFBMkIsZ1dBTnpCO1FBQ1Asc0JBQXNCO1FBQ3RCLFdBQVcsQ0FBQywyQkFBMkIsQ0FBQztRQUN4QyxpQkFBaUIsQ0FBQywyQkFBMkIsQ0FBQztLQUNqRDtBQTBCRDtJQUpDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQztnRUFNNUI7NEZBMUJRLDJCQUEyQjtrQkFSdkMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsbUNBQW1DO29CQUM3QyxTQUFTLEVBQUU7d0JBQ1Asc0JBQXNCO3dCQUN0QixXQUFXLDZCQUE2Qjt3QkFDeEMsaUJBQWlCLDZCQUE2QjtxQkFDakQ7aUJBQ0o7OzBCQVNRLE1BQU07MkJBQUMsc0JBQXNCOzRDQU9sQyxhQUFhO3NCQURaLFlBQVk7dUJBQUMsMEJBQTBCLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQztnQkFVOUUsYUFBYTtzQkFIWixZQUFZO3VCQUFDLHVCQUF1QixFQUFFLENBQUMsZUFBZSxDQUFDOztzQkFDdkQsWUFBWTt1QkFBQyxxQ0FBcUMsRUFBRSxDQUFDLGVBQWUsQ0FBQzs7c0JBQ3JFLFlBQVk7dUJBQUMsc0JBQXNCLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIEluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIEVNUFRZX0NMSUVOVF9SRUNULFxuICAgIFR1aUFjdGl2ZVpvbmVEaXJlY3RpdmUsXG4gICAgdHVpUG9pbnRUb0NsaWVudFJlY3QsXG59IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtcbiAgICB0dWlBc0RyaXZlcixcbiAgICB0dWlBc1JlY3RBY2Nlc3NvcixcbiAgICBUdWlEcml2ZXIsXG4gICAgVHVpUmVjdEFjY2Vzc29yLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZS9hYnN0cmFjdCc7XG5pbXBvcnQge3Nob3VsZENhbGx9IGZyb20gJ0B0aW5rb2ZmL25nLWV2ZW50LXBsdWdpbnMnO1xuaW1wb3J0IHtTdWJqZWN0fSBmcm9tICdyeGpzJztcblxuZnVuY3Rpb24gYWN0aXZlWm9uZUZpbHRlcih0aGlzOiBUdWlEcm9wZG93bkNvbnRleHREaXJlY3RpdmUsIHRhcmdldDogRWxlbWVudCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhdGhpcy5hY3RpdmVab25lLmNvbnRhaW5zKHRhcmdldCk7XG59XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aURyb3Bkb3duXVt0dWlEcm9wZG93bkNvbnRleHRdJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgVHVpQWN0aXZlWm9uZURpcmVjdGl2ZSxcbiAgICAgICAgdHVpQXNEcml2ZXIoVHVpRHJvcGRvd25Db250ZXh0RGlyZWN0aXZlKSxcbiAgICAgICAgdHVpQXNSZWN0QWNjZXNzb3IoVHVpRHJvcGRvd25Db250ZXh0RGlyZWN0aXZlKSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlEcm9wZG93bkNvbnRleHREaXJlY3RpdmUgZXh0ZW5kcyBUdWlEcml2ZXIgaW1wbGVtZW50cyBUdWlSZWN0QWNjZXNzb3Ige1xuICAgIHByaXZhdGUgcmVhZG9ubHkgc3RyZWFtJCA9IG5ldyBTdWJqZWN0PGJvb2xlYW4+KCk7XG5cbiAgICBwcml2YXRlIGN1cnJlbnRSZWN0ID0gRU1QVFlfQ0xJRU5UX1JFQ1Q7XG5cbiAgICByZWFkb25seSB0eXBlID0gJ2Ryb3Bkb3duJztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFR1aUFjdGl2ZVpvbmVEaXJlY3RpdmUpXG4gICAgICAgIHJlYWRvbmx5IGFjdGl2ZVpvbmU6IFR1aUFjdGl2ZVpvbmVEaXJlY3RpdmUsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKHN1YnNjcmliZXIgPT4gdGhpcy5zdHJlYW0kLnN1YnNjcmliZShzdWJzY3JpYmVyKSk7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY29udGV4dG1lbnUucHJldmVudC5zdG9wJywgWyckZXZlbnQuY2xpZW50WCcsICckZXZlbnQuY2xpZW50WSddKVxuICAgIG9uQ29udGV4dE1lbnUoeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jdXJyZW50UmVjdCA9IHR1aVBvaW50VG9DbGllbnRSZWN0KHgsIHkpO1xuICAgICAgICB0aGlzLnN0cmVhbSQubmV4dCh0cnVlKTtcbiAgICB9XG5cbiAgICBAc2hvdWxkQ2FsbChhY3RpdmVab25lRmlsdGVyKVxuICAgIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmNsaWNrLnNpbGVudCcsIFsnJGV2ZW50LnRhcmdldCddKVxuICAgIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmNvbnRleHRtZW51LmNhcHR1cmUuc2lsZW50JywgWyckZXZlbnQudGFyZ2V0J10pXG4gICAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6a2V5ZG93bi5lc2MnLCBbJyRldmVudC5jdXJyZW50VGFyZ2V0J10pXG4gICAgY2xvc2VEcm9wZG93bigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdHJlYW0kLm5leHQoZmFsc2UpO1xuICAgIH1cblxuICAgIGdldENsaWVudFJlY3QoKTogQ2xpZW50UmVjdCB7XG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRSZWN0O1xuICAgIH1cbn1cbiJdfQ==