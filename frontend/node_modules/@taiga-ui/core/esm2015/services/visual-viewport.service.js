import { Inject, Injectable } from '@angular/core';
import { WINDOW } from '@ng-web-apis/common';
import { TUI_IS_WEBKIT } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
export class TuiVisualViewportService {
    constructor(win, isWebkit) {
        this.win = win;
        this.isWebkit = isWebkit;
    }
    // https://bugs.webkit.org/show_bug.cgi?id=207089
    correct(point) {
        var _a, _b, _c, _d;
        return this.isWebkit
            ? [
                point[0] + ((_b = (_a = this.win.visualViewport) === null || _a === void 0 ? void 0 : _a.offsetTop) !== null && _b !== void 0 ? _b : 0),
                point[1] + ((_d = (_c = this.win.visualViewport) === null || _c === void 0 ? void 0 : _c.offsetLeft) !== null && _d !== void 0 ? _d : 0),
            ]
            : point;
    }
}
TuiVisualViewportService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiVisualViewportService, deps: [{ token: WINDOW }, { token: TUI_IS_WEBKIT }], target: i0.ɵɵFactoryTarget.Injectable });
TuiVisualViewportService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiVisualViewportService, providedIn: `root` });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiVisualViewportService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: `root`,
                }]
        }], ctorParameters: function () { return [{ type: Window, decorators: [{
                    type: Inject,
                    args: [WINDOW]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_WEBKIT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlzdWFsLXZpZXdwb3J0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NlcnZpY2VzL3Zpc3VhbC12aWV3cG9ydC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUUsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDOztBQU01QyxNQUFNLE9BQU8sd0JBQXdCO0lBQ2pDLFlBQ3FDLEdBQVcsRUFDSixRQUFpQjtRQUR4QixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQ0osYUFBUSxHQUFSLFFBQVEsQ0FBUztJQUMxRCxDQUFDO0lBRUosaURBQWlEO0lBQ2pELE9BQU8sQ0FBQyxLQUFlOztRQUNuQixPQUFPLElBQUksQ0FBQyxRQUFRO1lBQ2hCLENBQUMsQ0FBQztnQkFDSSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFBLE1BQUEsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLDBDQUFFLFNBQVMsbUNBQUksQ0FBQyxDQUFDO2dCQUNwRCxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFBLE1BQUEsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLDBDQUFFLFVBQVUsbUNBQUksQ0FBQyxDQUFDO2FBQ3hEO1lBQ0gsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUNoQixDQUFDOztzSEFkUSx3QkFBd0Isa0JBRXJCLE1BQU0sYUFDTixhQUFhOzBIQUhoQix3QkFBd0IsY0FGckIsTUFBTTs0RkFFVCx3QkFBd0I7a0JBSHBDLFVBQVU7bUJBQUM7b0JBQ1IsVUFBVSxFQUFFLE1BQU07aUJBQ3JCOzBEQUc2QyxNQUFNOzBCQUEzQyxNQUFNOzJCQUFDLE1BQU07OzBCQUNiLE1BQU07MkJBQUMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7V0lORE9XfSBmcm9tICdAbmctd2ViLWFwaXMvY29tbW9uJztcbmltcG9ydCB7VFVJX0lTX1dFQktJVH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aVBvaW50fSBmcm9tICdAdGFpZ2EtdWkvY29yZS90eXBlcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiBgcm9vdGAsXG59KVxuZXhwb3J0IGNsYXNzIFR1aVZpc3VhbFZpZXdwb3J0U2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoV0lORE9XKSBwcml2YXRlIHJlYWRvbmx5IHdpbjogV2luZG93LFxuICAgICAgICBASW5qZWN0KFRVSV9JU19XRUJLSVQpIHByaXZhdGUgcmVhZG9ubHkgaXNXZWJraXQ6IGJvb2xlYW4sXG4gICAgKSB7fVxuXG4gICAgLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTIwNzA4OVxuICAgIGNvcnJlY3QocG9pbnQ6IFR1aVBvaW50KTogVHVpUG9pbnQge1xuICAgICAgICByZXR1cm4gdGhpcy5pc1dlYmtpdFxuICAgICAgICAgICAgPyBbXG4gICAgICAgICAgICAgICAgICBwb2ludFswXSArICh0aGlzLndpbi52aXN1YWxWaWV3cG9ydD8ub2Zmc2V0VG9wID8/IDApLFxuICAgICAgICAgICAgICAgICAgcG9pbnRbMV0gKyAodGhpcy53aW4udmlzdWFsVmlld3BvcnQ/Lm9mZnNldExlZnQgPz8gMCksXG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIDogcG9pbnQ7XG4gICAgfVxufVxuIl19