import { SkipSelf } from '@angular/core';
// TODO: Rename to getBoundingClientRect to match the DOM API
// eslint-disable-next-line @typescript-eslint/naming-convention
export class TuiRectAccessor {
}
export function tuiRectAccessorFor(type, fallback) {
    return {
        provide: TuiRectAccessor,
        deps: [[new SkipSelf(), TuiRectAccessor], fallback],
        useFactory: tuiFallbackRectAccessor(type),
    };
}
export function tuiFallbackRectAccessor(type) {
    return (accessors, fallback) => accessors.find(accessor => accessor !== fallback && accessor.type === type) ||
        fallback;
}
export function tuiAsRectAccessor(useExisting) {
    return {
        provide: TuiRectAccessor,
        multi: true,
        useExisting,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjdC1hY2Nlc3Nvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvYWJzdHJhY3QvcmVjdC1hY2Nlc3Nvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQW9DLFFBQVEsRUFBTyxNQUFNLGVBQWUsQ0FBQztBQUVoRiw2REFBNkQ7QUFDN0QsZ0VBQWdFO0FBQ2hFLE1BQU0sT0FBZ0IsZUFBZTtDQUdwQztBQUVELE1BQU0sVUFBVSxrQkFBa0IsQ0FDOUIsSUFBWSxFQUNaLFFBQStCO0lBRS9CLE9BQU87UUFDSCxPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsZUFBZSxDQUFDLEVBQUUsUUFBUSxDQUFDO1FBQ25ELFVBQVUsRUFBRSx1QkFBdUIsQ0FBQyxJQUFJLENBQUM7S0FDNUMsQ0FBQztBQUNOLENBQUM7QUFFRCxNQUFNLFVBQVUsdUJBQXVCLENBQ25DLElBQVk7SUFFWixPQUFPLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQzNCLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEtBQUssUUFBUSxJQUFJLFFBQVEsQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO1FBQzNFLFFBQVEsQ0FBQztBQUNqQixDQUFDO0FBRUQsTUFBTSxVQUFVLGlCQUFpQixDQUFDLFdBQWtDO0lBQ2hFLE9BQU87UUFDSCxPQUFPLEVBQUUsZUFBZTtRQUN4QixLQUFLLEVBQUUsSUFBSTtRQUNYLFdBQVc7S0FDZCxDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RXhpc3RpbmdQcm92aWRlciwgRmFjdG9yeVByb3ZpZGVyLCBTa2lwU2VsZiwgVHlwZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8vIFRPRE86IFJlbmFtZSB0byBnZXRCb3VuZGluZ0NsaWVudFJlY3QgdG8gbWF0Y2ggdGhlIERPTSBBUElcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBUdWlSZWN0QWNjZXNzb3Ige1xuICAgIGFic3RyYWN0IHJlYWRvbmx5IHR5cGU6IHN0cmluZztcbiAgICBhYnN0cmFjdCBnZXRDbGllbnRSZWN0KCk6IENsaWVudFJlY3Q7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0dWlSZWN0QWNjZXNzb3JGb3IoXG4gICAgdHlwZTogc3RyaW5nLFxuICAgIGZhbGxiYWNrOiBUeXBlPFR1aVJlY3RBY2Nlc3Nvcj4sXG4pOiBGYWN0b3J5UHJvdmlkZXIge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb3ZpZGU6IFR1aVJlY3RBY2Nlc3NvcixcbiAgICAgICAgZGVwczogW1tuZXcgU2tpcFNlbGYoKSwgVHVpUmVjdEFjY2Vzc29yXSwgZmFsbGJhY2tdLFxuICAgICAgICB1c2VGYWN0b3J5OiB0dWlGYWxsYmFja1JlY3RBY2Nlc3Nvcih0eXBlKSxcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHVpRmFsbGJhY2tSZWN0QWNjZXNzb3IoXG4gICAgdHlwZTogc3RyaW5nLFxuKTogKGFjY2Vzc29yczogcmVhZG9ubHkgVHVpUmVjdEFjY2Vzc29yW10sIGZhbGxiYWNrOiBUdWlSZWN0QWNjZXNzb3IpID0+IFR1aVJlY3RBY2Nlc3NvciB7XG4gICAgcmV0dXJuIChhY2Nlc3NvcnMsIGZhbGxiYWNrKSA9PlxuICAgICAgICBhY2Nlc3NvcnMuZmluZChhY2Nlc3NvciA9PiBhY2Nlc3NvciAhPT0gZmFsbGJhY2sgJiYgYWNjZXNzb3IudHlwZSA9PT0gdHlwZSkgfHxcbiAgICAgICAgZmFsbGJhY2s7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0dWlBc1JlY3RBY2Nlc3Nvcih1c2VFeGlzdGluZzogVHlwZTxUdWlSZWN0QWNjZXNzb3I+KTogRXhpc3RpbmdQcm92aWRlciB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvdmlkZTogVHVpUmVjdEFjY2Vzc29yLFxuICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgdXNlRXhpc3RpbmcsXG4gICAgfTtcbn1cbiJdfQ==