import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { ElementRef, Directive, Inject, Self, Input, NgModule } from '@angular/core';
import { TuiDestroyService, tuiRequiredSetter } from '@taiga-ui/cdk';
import { TUI_SCROLL_INTO_VIEW } from '@taiga-ui/core/constants';
import * as i1 from 'rxjs';
import { timer } from 'rxjs';
import { takeUntil } from 'rxjs/operators';

/**
 * Directive scrolls element into view inside tui-scrollbar
 */
class TuiScrollIntoViewDirective {
    constructor(el, destroy$) {
        this.el = el;
        this.destroy$ = destroy$;
    }
    set tuiScrollIntoView(scroll) {
        if (!scroll) {
            return;
        }
        // Timeout is necessary in order to give element render cycle to get into its final spot
        // (for example if it is inside dropdown box which has to be positioned first)
        timer(0)
            .pipe(takeUntil(this.destroy$))
            .subscribe(() => {
            this.el.nativeElement.dispatchEvent(new CustomEvent(TUI_SCROLL_INTO_VIEW, {
                bubbles: true,
                detail: this.el.nativeElement,
            }));
        });
    }
}
TuiScrollIntoViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewDirective, deps: [{ token: ElementRef }, { token: TuiDestroyService, self: true }], target: i0.ɵɵFactoryTarget.Directive });
TuiScrollIntoViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiScrollIntoViewDirective, selector: "[tuiScrollIntoView]", inputs: { tuiScrollIntoView: "tuiScrollIntoView" }, providers: [TuiDestroyService], ngImport: i0 });
__decorate([
    tuiRequiredSetter()
], TuiScrollIntoViewDirective.prototype, "tuiScrollIntoView", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiScrollIntoView]',
                    providers: [TuiDestroyService],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i1.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }]; }, propDecorators: { tuiScrollIntoView: [{
                type: Input
            }] } });

class TuiScrollIntoViewModule {
}
TuiScrollIntoViewModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiScrollIntoViewModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewModule, declarations: [TuiScrollIntoViewDirective], exports: [TuiScrollIntoViewDirective] });
TuiScrollIntoViewModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiScrollIntoViewDirective],
                    exports: [TuiScrollIntoViewDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiScrollIntoViewDirective, TuiScrollIntoViewModule };
//# sourceMappingURL=taiga-ui-core-directives-scroll-into-view.js.map
