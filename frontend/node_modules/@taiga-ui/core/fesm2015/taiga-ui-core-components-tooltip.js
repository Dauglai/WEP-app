import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Self, Inject, ViewChild, Input, HostBinding, HostListener, NgModule } from '@angular/core';
import { TuiDestroyService, TUI_IS_MOBILE, tuiDefaultProp } from '@taiga-ui/cdk';
import { TuiHintOptionsDirective, TUI_HINT_OPTIONS, TuiHintHoverDirective } from '@taiga-ui/core/directives';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { takeUntil } from 'rxjs/operators';
import * as i1 from '@taiga-ui/core/components/svg';
import { TuiSvgModule } from '@taiga-ui/core/components/svg';
import * as i2 from '@taiga-ui/core/directives/wrapper';
import { TuiWrapperModule } from '@taiga-ui/core/directives/wrapper';
import * as i3 from '@taiga-ui/core/directives/hint';
import { TuiHintModule } from '@taiga-ui/core/directives/hint';
import * as i4 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import * as i5 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i6 from 'rxjs';

class TuiTooltipComponent extends TuiHintOptionsDirective {
    constructor(destroy$, mode$, options, isMobile) {
        super(options);
        this.isMobile = isMobile;
        this.mode = null;
        this.describeId = '';
        mode$.pipe(takeUntil(destroy$)).subscribe(mode => {
            this.mode = mode;
        });
    }
    get computedAppearance() {
        return this.appearance || this.mode || '';
    }
    stopOnMobile(event) {
        var _a;
        if (this.isMobile) {
            event.preventDefault();
            event.stopPropagation();
        }
        (_a = this.driver$) === null || _a === void 0 ? void 0 : _a.toggle();
    }
}
TuiTooltipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTooltipComponent, deps: [{ token: TuiDestroyService, self: true }, { token: TUI_MODE }, { token: TUI_HINT_OPTIONS }, { token: TUI_IS_MOBILE }], target: i0.ɵɵFactoryTarget.Component });
TuiTooltipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTooltipComponent, selector: "tui-tooltip", inputs: { content: "content", direction: "direction", appearance: "appearance", showDelay: "showDelay", hideDelay: "hideDelay", describeId: "describeId" }, host: { listeners: { "mousedown": "stopOnMobile($event)" }, properties: { "attr.data-appearance": "this.computedAppearance" } }, providers: [TuiDestroyService, MODE_PROVIDER], viewQueries: [{ propertyName: "driver$", first: true, predicate: TuiHintHoverDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: "<span\n    #driver=\"tuiHintHover\"\n    automation-id=\"tui-tooltip__icon\"\n    tuiWrapper\n    appearance=\"icon\"\n    class=\"t-tooltip-icon\"\n    [hover]=\"(driver | async) || null\"\n    [tuiHint]=\"content\"\n    [tuiHintDescribe]=\"describeId\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintShowDelay]=\"showDelay\"\n    [tuiHintHideDelay]=\"hideDelay\"\n    [tuiHintAppearance]=\"computedAppearance\"\n>\n    <tui-svg\n        *polymorpheusOutlet=\"icon as src\"\n        [src]=\"src\"\n    ></tui-svg>\n</span>\n", styles: [":host{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-block;width:1.5rem;height:1.5rem;vertical-align:middle;font-size:0;line-height:0;cursor:pointer;color:var(--tui-text-01)}:host[data-appearance=error]{color:var(--tui-error-fill)}.t-tooltip-icon{display:inline-block;width:100%;height:100%;color:inherit}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i3.TuiHintDirective, selector: "[tuiHint]:not(ng-container)", inputs: ["tuiHint", "tuiHintContext", "tuiHintAppearance"] }, { type: i3.TuiHintDriverDirective, selector: "[tuiHint]" }, { type: i3.TuiHintHoverDirective, selector: "[tuiHint]:not(ng-container)", inputs: ["tuiHintShowDelay", "tuiHintHideDelay"], exportAs: ["tuiHintHover"] }, { type: i3.TuiHintPositionDirective, selector: "[tuiHint]:not([tuiHintCustomPosition])", inputs: ["tuiHintDirection"] }, { type: i3.TuiHintDescribeDirective, selector: "[tuiHintDescribe]", inputs: ["tuiHintDescribe"] }, { type: i4.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiTooltipComponent.prototype, "describeId", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTooltipComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-tooltip',
                    templateUrl: './tooltip.template.html',
                    styleUrls: ['./tooltip.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [TuiDestroyService, MODE_PROVIDER],
                    inputs: ['content', 'direction', 'appearance', 'showDelay', 'hideDelay'],
                }]
        }], ctorParameters: function () { return [{ type: i6.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: i6.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_HINT_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_MOBILE]
                }] }]; }, propDecorators: { driver$: [{
                type: ViewChild,
                args: [TuiHintHoverDirective]
            }], describeId: [{
                type: Input
            }], computedAppearance: [{
                type: HostBinding,
                args: ['attr.data-appearance']
            }], stopOnMobile: [{
                type: HostListener,
                args: ['mousedown', ['$event']]
            }] } });

class TuiTooltipModule {
}
TuiTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTooltipModule, declarations: [TuiTooltipComponent], imports: [CommonModule,
        TuiWrapperModule,
        TuiSvgModule,
        TuiHintModule,
        PolymorpheusModule], exports: [TuiTooltipComponent] });
TuiTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTooltipModule, imports: [[
            CommonModule,
            TuiWrapperModule,
            TuiSvgModule,
            TuiHintModule,
            PolymorpheusModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTooltipModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        TuiWrapperModule,
                        TuiSvgModule,
                        TuiHintModule,
                        PolymorpheusModule,
                    ],
                    declarations: [TuiTooltipComponent],
                    exports: [TuiTooltipComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiTooltipComponent, TuiTooltipModule };
//# sourceMappingURL=taiga-ui-core-components-tooltip.js.map
