{"version":3,"file":"taiga-ui-core-pipes-calendar-sheet.js","sources":["../../../projects/core/pipes/calendar-sheet/utils.ts","../../../projects/core/pipes/calendar-sheet/calendar-sheet.pipe.ts","../../../projects/core/pipes/calendar-sheet/calendar-sheet.module.ts","../../../projects/core/pipes/calendar-sheet/taiga-ui-core-pipes-calendar-sheet.ts"],"sourcesContent":["import {\n    DAYS_IN_WEEK,\n    tuiAssert,\n    TuiDay,\n    TuiDayOfWeek,\n    tuiInRange,\n    TuiMonth,\n} from '@taiga-ui/cdk';\n\n/**\n * Computes day of week offset of the beginning of the month\n */\nconst getMonthStartDaysOffset = (\n    month: TuiMonth,\n    firstDayOfWeek: TuiDayOfWeek,\n): number => {\n    const startMonthOffsetFromSunday = new Date(month.year, month.month, 1).getDay();\n\n    return startMonthOffsetFromSunday >= firstDayOfWeek\n        ? startMonthOffsetFromSunday - firstDayOfWeek\n        : DAYS_IN_WEEK - (firstDayOfWeek - startMonthOffsetFromSunday);\n};\n\n/**\n * Calculated day on a calendar grid\n * @return resulting day on these coordinates (could exceed passed month)\n */\nexport const getDayFromMonthRowCol = ({\n    month,\n    rowIndex,\n    colIndex,\n    firstDayOfWeek,\n}: {\n    month: TuiMonth;\n    /**\n     * row in a calendar\n     */\n    rowIndex: number;\n    /**\n     * column in a calendar\n     */\n    colIndex: number;\n    /**\n     * first day of the week index (Sunday - 0, Saturday - 6)\n     */\n    firstDayOfWeek: TuiDayOfWeek;\n}): TuiDay => {\n    ngDevMode && tuiAssert.assert(Number.isInteger(rowIndex));\n    ngDevMode && tuiAssert.assert(tuiInRange(rowIndex, 0, 6));\n    ngDevMode && tuiAssert.assert(Number.isInteger(colIndex));\n    ngDevMode && tuiAssert.assert(tuiInRange(colIndex, 0, DAYS_IN_WEEK));\n\n    let day =\n        rowIndex * DAYS_IN_WEEK +\n        colIndex -\n        getMonthStartDaysOffset(month, firstDayOfWeek) +\n        1;\n\n    if (day > month.daysCount) {\n        day -= month.daysCount;\n        month = month.append({month: 1});\n    }\n\n    if (day <= 0) {\n        month = month.append({month: -1});\n        day = month.daysCount + day;\n    }\n\n    return new TuiDay(month.year, month.month, day);\n};\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {DAYS_IN_WEEK, TuiDay, TuiDayOfWeek, TuiMonth} from '@taiga-ui/cdk';\nimport {TUI_FIRST_DAY_OF_WEEK} from '@taiga-ui/core/tokens';\n\nimport {getDayFromMonthRowCol} from './utils';\n\nconst CALENDAR_ROWS_COUNT = 6;\n\n@Pipe({\n    name: `tuiCalendarSheet`,\n})\nexport class TuiCalendarSheetPipe implements PipeTransform {\n    private currentMonth: TuiMonth | null = null;\n    private currentSheet: ReadonlyArray<readonly TuiDay[]> = [];\n\n    constructor(\n        @Inject(TUI_FIRST_DAY_OF_WEEK)\n        private readonly firstDayOfWeek: TuiDayOfWeek,\n    ) {}\n\n    transform(\n        month: TuiMonth,\n        showAdjacentDays: boolean = false,\n    ): ReadonlyArray<readonly TuiDay[]> {\n        if (this.currentMonth?.monthSame(month)) {\n            return this.currentSheet;\n        }\n\n        const sheet: Array<readonly TuiDay[]> = [];\n\n        for (let rowIndex = 0; rowIndex < CALENDAR_ROWS_COUNT; rowIndex++) {\n            const row: TuiDay[] = [];\n\n            for (let colIndex = 0; colIndex < DAYS_IN_WEEK; colIndex++) {\n                const day = getDayFromMonthRowCol({\n                    month,\n                    rowIndex,\n                    colIndex,\n                    firstDayOfWeek: this.firstDayOfWeek,\n                });\n\n                const isPrevMonthDay = (day: TuiDay, relativeToMonth = month): boolean =>\n                    day.year < relativeToMonth.year || day.month < relativeToMonth.month;\n\n                const isNextMonthDay = (day: TuiDay, relativeToMonth = month): boolean =>\n                    day.year > relativeToMonth.year || day.month > relativeToMonth.month;\n\n                if (isPrevMonthDay(day) && !showAdjacentDays) {\n                    continue;\n                }\n\n                if (isNextMonthDay(day) && !showAdjacentDays) {\n                    break;\n                }\n\n                row.push(day);\n            }\n\n            sheet.push(row);\n        }\n\n        this.currentSheet = sheet.filter(row => row.length);\n        this.currentMonth = month;\n\n        return this.currentSheet;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiCalendarSheetPipe} from './calendar-sheet.pipe';\n\n@NgModule({\n    declarations: [TuiCalendarSheetPipe],\n    exports: [TuiCalendarSheetPipe],\n})\nexport class TuiCalendarSheetPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}