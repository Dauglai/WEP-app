import { __decorate } from 'tslib';
import * as i1 from '@angular/common';
import { DOCUMENT, CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { InjectionToken, ElementRef, Component, ChangeDetectionStrategy, Inject, Input, HostBinding, NgModule } from '@angular/core';
import { tuiIsSafari, tuiBlurNativeFocused, tuiIsNativeFocusedIn, TUI_IS_IOS, tuiDefaultProp, tuiRequiredSetter } from '@taiga-ui/cdk';
import { tuiSizeBigger } from '@taiga-ui/core/utils/miscellaneous';
import * as i2 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';

/** Default values for the loader options. */
const TUI_LOADER_DEFAULT_OPTIONS = {
    size: `m`,
    inheritColor: false,
    overlay: false,
};
/**
 * Default parameters for loader component
 */
const TUI_LOADER_OPTIONS = new InjectionToken(`[TUI_LOADER_OPTIONS]`, {
    factory: () => TUI_LOADER_DEFAULT_OPTIONS,
});
const tuiLoaderOptionsProvider = (options) => ({
    provide: TUI_LOADER_OPTIONS,
    useValue: Object.assign(Object.assign({}, TUI_LOADER_DEFAULT_OPTIONS), options),
});

class TuiLoaderComponent {
    constructor(doc, el, isIos, options) {
        this.doc = doc;
        this.el = el;
        this.isIos = isIos;
        this.options = options;
        this.size = this.options.size;
        this.inheritColor = this.options.inheritColor;
        this.overlay = this.options.overlay;
        this.loading = true;
        this.isApple = tuiIsSafari(this.el.nativeElement) || this.isIos;
    }
    set showLoader(value) {
        // @bad TODO: https://github.com/angular/angular/issues/32083 think of a better way
        if (value && this.focused) {
            tuiBlurNativeFocused(this.doc);
        }
        this.loading = value;
    }
    get hasOverlay() {
        return this.overlay && this.loading;
    }
    get hasText() {
        return !!this.textContent;
    }
    get isHorizontal() {
        return !tuiSizeBigger(this.size);
    }
    get focused() {
        return tuiIsNativeFocusedIn(this.el.nativeElement);
    }
}
TuiLoaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLoaderComponent, deps: [{ token: DOCUMENT }, { token: ElementRef }, { token: TUI_IS_IOS }, { token: TUI_LOADER_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiLoaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiLoaderComponent, selector: "tui-loader", inputs: { size: "size", inheritColor: "inheritColor", overlay: "overlay", textContent: "textContent", showLoader: "showLoader" }, host: { properties: { "class._loading": "this.loading" } }, ngImport: i0, template: "<fieldset\n    class=\"t-content\"\n    [class.t-content_has-overlay]=\"hasOverlay\"\n    [class.t-content_loading]=\"loading\"\n    [disabled]=\"loading && !isApple\"\n>\n    <ng-content></ng-content>\n</fieldset>\n\n<div\n    *ngIf=\"loading\"\n    class=\"t-loader\"\n    [class.t-loader_horizontal]=\"isHorizontal\"\n    [class.t-loader_inherit-color]=\"inheritColor\"\n    [attr.data-size]=\"size\"\n>\n    <svg\n        automation-id=\"tui-loader__loader\"\n        focusable=\"false\"\n        viewBox=\"0 0 100 100\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"t-icon\"\n    >\n        <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"50\"\n            stroke-dasharray=\"314\"\n            class=\"t-circle\"\n        ></circle>\n    </svg>\n\n    <div\n        *ngIf=\"hasText\"\n        automation-id=\"tui-loader__text\"\n        class=\"t-text\"\n        [class.t-text_horizontal]=\"isHorizontal\"\n    >\n        <ng-container *polymorpheusOutlet=\"textContent as text\">\n            {{ text }}\n        </ng-container>\n    </div>\n</div>\n", styles: ["@keyframes tuiLoaderDashOffset{0%{stroke-dashoffset:-66}50%{stroke-dashoffset:-314}to{stroke-dashoffset:-66}}@keyframes tuiLoaderRotate{0%{transform:rotate(0)}50%{transform:rotate(1turn)}to{transform:rotate(3turn)}}:host{position:relative;display:flex}:host._loading{overflow:hidden}.t-content{z-index:0;min-width:100%;height:100%;padding:0;margin:0;border:none}.t-content_has-overlay{opacity:.3}.t-content_loading{pointer-events:none}.t-loader{position:relative;left:-100%;display:flex;flex-direction:column;align-items:center;justify-content:center;min-width:100%;flex-shrink:0;align-self:center;color:var(--tui-text-01);stroke:var(--tui-primary);animation:tuiFadeIn var(--tui-duration)}.t-loader.t-loader_horizontal{flex-direction:row}.t-loader.t-loader_inherit-color{color:inherit;stroke:currentColor}.t-loader[data-size=xs]{font-size:.75rem;stroke-width:38}.t-loader[data-size=s]{font-size:1rem;stroke-width:25}.t-loader[data-size=m]{font-size:1.5rem;stroke-width:17}.t-loader[data-size=l]{font-size:2.5rem;stroke-width:15}.t-loader[data-size=xl]{font-size:3.5rem;stroke-width:14}.t-loader[data-size=xxl]{font-size:5rem;stroke-width:10}.t-text{font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-top:1rem;color:inherit;max-width:100%;text-align:center;stroke-width:0}.t-text_horizontal{margin:0 0 0 1rem}.t-icon{display:block;min-width:1em;max-width:1em;min-height:1em;max-height:1em;margin:.25rem -.5em;border-radius:100%;overflow:hidden;transform:scaleY(-1);animation:tuiLoaderRotate 3s linear infinite}.t-circle{fill:none;stroke:inherit;stroke-width:inherit;animation:tuiLoaderDashOffset 3s linear infinite}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "size", void 0);
__decorate([
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "inheritColor", void 0);
__decorate([
    tuiDefaultProp()
], TuiLoaderComponent.prototype, "overlay", void 0);
__decorate([
    tuiRequiredSetter()
], TuiLoaderComponent.prototype, "showLoader", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLoaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-loader',
                    templateUrl: './loader.template.html',
                    styleUrls: ['./loader.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_IOS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_LOADER_OPTIONS]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], inheritColor: [{
                type: Input
            }], overlay: [{
                type: Input
            }], textContent: [{
                type: Input
            }], showLoader: [{
                type: Input
            }], loading: [{
                type: HostBinding,
                args: ['class._loading']
            }] } });

class TuiLoaderModule {
}
TuiLoaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLoaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiLoaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLoaderModule, declarations: [TuiLoaderComponent], imports: [CommonModule, PolymorpheusModule], exports: [TuiLoaderComponent] });
TuiLoaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLoaderModule, imports: [[CommonModule, PolymorpheusModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLoaderModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, PolymorpheusModule],
                    declarations: [TuiLoaderComponent],
                    exports: [TuiLoaderComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_LOADER_DEFAULT_OPTIONS, TUI_LOADER_OPTIONS, TuiLoaderComponent, TuiLoaderModule, tuiLoaderOptionsProvider };
//# sourceMappingURL=taiga-ui-core-components-loader.js.map
