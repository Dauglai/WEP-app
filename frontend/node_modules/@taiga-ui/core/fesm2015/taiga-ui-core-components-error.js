import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, Input, HostListener, NgModule } from '@angular/core';
import { tuiIsString, TuiValidationError, tuiDefaultProp } from '@taiga-ui/cdk';
import { tuiHeightCollapse, tuiFadeIn } from '@taiga-ui/core/animations';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_ANIMATION_OPTIONS, TUI_MODE, TUI_DEFAULT_ERROR_MESSAGE } from '@taiga-ui/core/tokens';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import * as i3 from 'rxjs';

class TuiErrorComponent {
    constructor(options, mode$, defaultErrorMessage$) {
        this.options = options;
        this.mode$ = mode$;
        this.defaultErrorMessage$ = defaultErrorMessage$;
        this.error = null;
        this.visible = true;
        this.animation = Object.assign({ value: '' }, this.options);
    }
    set errorSetter(error) {
        this.error = tuiIsString(error) ? new TuiValidationError(error) : error;
    }
    onAnimation(visible) {
        this.visible = visible;
    }
}
TuiErrorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiErrorComponent, deps: [{ token: TUI_ANIMATION_OPTIONS }, { token: TUI_MODE }, { token: TUI_DEFAULT_ERROR_MESSAGE }], target: i0.ɵɵFactoryTarget.Component });
TuiErrorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiErrorComponent, selector: "tui-error", inputs: { errorSetter: ["error", "errorSetter"] }, host: { listeners: { "animationcancel.self": "onAnimation(false)", "animationstart.self": "onAnimation(true)" } }, providers: [MODE_PROVIDER], ngImport: i0, template: "<div\n    *ngIf=\"error && visible\"\n    automation-id=\"tui-error__text\"\n    class=\"t-message-text\"\n    [@tuiHeightCollapse]=\"animation\"\n    [@tuiFadeIn]=\"animation\"\n    [class.t-message-text_light]=\"(mode$ | async) === 'onDark'\"\n>\n    <ng-container\n        *polymorpheusOutlet=\"error.message || (defaultErrorMessage$ | async) as text; context: error.context || {}\"\n    >\n        {{ text }}\n    </ng-container>\n</div>\n", styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);display:block;color:var(--tui-negative);word-wrap:break-word;animation:tuiPresent 1s infinite}.t-message-text{margin-top:.25rem;white-space:pre-line}.t-message-text_light{color:var(--tui-negative-night)}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i1.AsyncPipe }, animations: [tuiHeightCollapse, tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiDefaultProp()
], TuiErrorComponent.prototype, "errorSetter", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiErrorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-error',
                    templateUrl: './error.template.html',
                    styleUrls: ['./error.style.less'],
                    providers: [MODE_PROVIDER],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [tuiHeightCollapse, tuiFadeIn],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATION_OPTIONS]
                }] }, { type: i3.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }, { type: i3.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_DEFAULT_ERROR_MESSAGE]
                }] }]; }, propDecorators: { errorSetter: [{
                type: Input,
                args: ['error']
            }], onAnimation: [{
                type: HostListener,
                args: ['animationcancel.self', ['false']]
            }, {
                type: HostListener,
                args: ['animationstart.self', ['true']]
            }] } });

class TuiErrorModule {
}
TuiErrorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiErrorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiErrorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiErrorModule, declarations: [TuiErrorComponent], imports: [CommonModule, PolymorpheusModule], exports: [TuiErrorComponent] });
TuiErrorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiErrorModule, imports: [[CommonModule, PolymorpheusModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiErrorModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, PolymorpheusModule],
                    declarations: [TuiErrorComponent],
                    exports: [TuiErrorComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiErrorComponent, TuiErrorModule };
//# sourceMappingURL=taiga-ui-core-components-error.js.map
