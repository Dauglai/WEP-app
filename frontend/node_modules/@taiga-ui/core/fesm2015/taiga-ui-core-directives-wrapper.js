import * as i0 from '@angular/core';
import { Directive, Inject, Input, HostBinding, NgModule } from '@angular/core';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import * as i1 from 'rxjs';

class TuiWrapperDirective {
    constructor(mode$) {
        this.mode$ = mode$;
        this.disabled = false;
        this.readOnly = false;
        this.hover = null;
        this.active = null;
        this.focus = false;
        this.invalid = false;
        this.appearance = '';
    }
    get computedInvalid() {
        return !this.disabled && !this.readOnly && this.invalid;
    }
    get computedFocused() {
        return this.focus && !this.disabled;
    }
    get interactiveState() {
        if (this.disabled) {
            return "disabled" /* Disabled */;
        }
        if (this.readOnly) {
            return "readonly" /* Readonly */;
        }
        if (this.active) {
            return "active" /* Active */;
        }
        if (this.hover) {
            return "hover" /* Hover */;
        }
        return null;
    }
    get noHover() {
        return this.readOnly || this.hover === false;
    }
    get noActive() {
        return this.readOnly || this.active === false;
    }
}
TuiWrapperDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiWrapperDirective, deps: [{ token: TUI_MODE }], target: i0.ɵɵFactoryTarget.Directive });
TuiWrapperDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiWrapperDirective, selector: "[tuiWrapper]", inputs: { disabled: "disabled", readOnly: "readOnly", hover: "hover", active: "active", focus: "focus", invalid: "invalid", appearance: "appearance" }, host: { listeners: { "$.data-mode.attr": "mode$" }, properties: { "attr.data-appearance": "this.appearance", "class._invalid": "this.computedInvalid", "class._focused": "this.computedFocused", "attr.data-state": "this.interactiveState", "class._no-hover": "this.noHover", "class._no-active": "this.noActive" } }, providers: [MODE_PROVIDER], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiWrapperDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiWrapper]',
                    providers: [MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }]; }, propDecorators: { disabled: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], hover: [{
                type: Input
            }], active: [{
                type: Input
            }], focus: [{
                type: Input
            }], invalid: [{
                type: Input
            }], appearance: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-appearance']
            }], computedInvalid: [{
                type: HostBinding,
                args: ['class._invalid']
            }], computedFocused: [{
                type: HostBinding,
                args: ['class._focused']
            }], interactiveState: [{
                type: HostBinding,
                args: ['attr.data-state']
            }], noHover: [{
                type: HostBinding,
                args: ['class._no-hover']
            }], noActive: [{
                type: HostBinding,
                args: ['class._no-active']
            }] } });

class TuiWrapperModule {
}
TuiWrapperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiWrapperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiWrapperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiWrapperModule, declarations: [TuiWrapperDirective], exports: [TuiWrapperDirective] });
TuiWrapperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiWrapperModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiWrapperModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiWrapperDirective],
                    exports: [TuiWrapperDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiWrapperDirective, TuiWrapperModule };
//# sourceMappingURL=taiga-ui-core-directives-wrapper.js.map
