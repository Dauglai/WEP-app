import * as i1 from '@angular/common';
import { isPlatformServer, CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { ChangeDetectorRef, PLATFORM_ID, Component, ChangeDetectionStrategy, Inject, Self, NgModule } from '@angular/core';
import * as i3 from '@taiga-ui/cdk';
import { TuiDestroyService, TuiLetModule } from '@taiga-ui/cdk';
import * as i2 from '@taiga-ui/core/services';
import { TuiSvgService } from '@taiga-ui/core/services';
import { takeUntil } from 'rxjs/operators';

class TuiSvgDefsHostComponent {
    constructor(svgService, cdr, destroy$, platformId) {
        this.svgService = svgService;
        this.cdr = cdr;
        this.destroy$ = destroy$;
        this.isBrowser = true;
        this.isBrowser = !isPlatformServer(platformId);
    }
    // @bad TODO: Looks like it could be async piped but it was probably written like that for a reason
    ngOnInit() {
        this.svgService.items$.pipe(takeUntil(this.destroy$)).subscribe(defsMap => {
            this.items = defsMap.values();
            this.cdr.detectChanges();
        });
    }
}
TuiSvgDefsHostComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSvgDefsHostComponent, deps: [{ token: TuiSvgService }, { token: ChangeDetectorRef }, { token: TuiDestroyService, self: true }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });
TuiSvgDefsHostComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSvgDefsHostComponent, selector: "tui-svg-defs-host", providers: [TuiDestroyService], ngImport: i0, template: "<svg:svg\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n>\n    <ng-container *ngIf=\"isBrowser; else server\">\n        <defs\n            *ngFor=\"let def of items\"\n            [innerHTML]=\"def\"\n        ></defs>\n    </ng-container>\n    <ng-template #server>\n        <!--svg[outerHTML] - to support SSR, because there is no support of innerHTML for for defs element in domino-->\n        <defs *ngFor=\"let def of items\">\n            <svg [outerHTML]=\"def\"></svg>\n        </defs>\n    </ng-template>\n</svg:svg>\n", styles: [":host{display:none}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSvgDefsHostComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-svg-defs-host',
                    templateUrl: './svg-defs-host.template.html',
                    styleUrls: ['./svg-defs-host.style.less'],
                    providers: [TuiDestroyService],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i2.TuiSvgService, decorators: [{
                    type: Inject,
                    args: [TuiSvgService]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i3.TuiDestroyService, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }]; } });

class TuiSvgDefsHostModule {
}
TuiSvgDefsHostModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSvgDefsHostModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiSvgDefsHostModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSvgDefsHostModule, declarations: [TuiSvgDefsHostComponent], imports: [CommonModule, TuiLetModule], exports: [TuiSvgDefsHostComponent] });
TuiSvgDefsHostModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSvgDefsHostModule, imports: [[CommonModule, TuiLetModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSvgDefsHostModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiLetModule],
                    declarations: [TuiSvgDefsHostComponent],
                    exports: [TuiSvgDefsHostComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiSvgDefsHostComponent, TuiSvgDefsHostModule };
//# sourceMappingURL=taiga-ui-core-internal-svg-defs-host.js.map
