(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/directives/hint'), require('@taiga-ui/core/directives/textfield-controller'), require('@taiga-ui/core/providers'), require('@taiga-ui/core/tokens'), require('@taiga-ui/core/utils/miscellaneous'), require('@tinkoff/ng-polymorpheus'), require('rxjs'), require('rxjs/operators'), require('@taiga-ui/core/components/svg'), require('@taiga-ui/core/components/tooltip'), require('@angular/common'), require('@taiga-ui/core/directives/wrapper'), require('@taiga-ui/core/directives/mask-accessor'), require('@angular/forms'), require('@taiga-ui/core/abstract'), require('@taiga-ui/core/directives')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/components/primitive-textfield', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/directives/hint', '@taiga-ui/core/directives/textfield-controller', '@taiga-ui/core/providers', '@taiga-ui/core/tokens', '@taiga-ui/core/utils/miscellaneous', '@tinkoff/ng-polymorpheus', 'rxjs', 'rxjs/operators', '@taiga-ui/core/components/svg', '@taiga-ui/core/components/tooltip', '@angular/common', '@taiga-ui/core/directives/wrapper', '@taiga-ui/core/directives/mask-accessor', '@angular/forms', '@taiga-ui/core/abstract', '@taiga-ui/core/directives'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.components = global["taiga-ui"].core.components || {}, global["taiga-ui"].core.components["primitive-textfield"] = {}), global.ng.core, global.i6, global["taiga-ui"].core.directives.hint, global["taiga-ui"].core.directives["textfield-controller"], global["taiga-ui"].core.providers, global["taiga-ui"].core.tokens, global["taiga-ui"].core.utils.miscellaneous, global.i9, global.rxjs, global.rxjs.operators, global["taiga-ui"].core.components.svg, global["taiga-ui"].core.components.tooltip, global.ng.common, global["taiga-ui"].core.directives.wrapper, global["taiga-ui"].core.directives["mask-accessor"], global.ng.forms, global["taiga-ui"].core.abstract, global["taiga-ui"].core.directives));
})(this, (function (exports, i0, i6, i12, i11, providers, tokens, miscellaneous, i9, i10, operators, i1, i3, i4, i5, i7, i8, abstract, i1$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i12__namespace = /*#__PURE__*/_interopNamespace(i12);
    var i11__namespace = /*#__PURE__*/_interopNamespace(i11);
    var i9__namespace = /*#__PURE__*/_interopNamespace(i9);
    var i10__namespace = /*#__PURE__*/_interopNamespace(i10);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var TuiValueDecorationComponent = /** @class */ (function () {
        function TuiValueDecorationComponent(textfield) {
            var _this = this;
            this.textfield = textfield;
            this.prefix$ = new i10.BehaviorSubject('');
            this.pre$ = this.prefix$.pipe(operators.delay(0), operators.filter(function () { var _a; return !!((_a = _this.pre) === null || _a === void 0 ? void 0 : _a.nativeElement.isConnected); }), operators.map(function () { var _a; return ((_a = _this.pre) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetWidth) || 0; }), operators.distinctUntilChanged());
        }
        Object.defineProperty(TuiValueDecorationComponent.prototype, "isContextTable", {
            get: function () {
                return this.textfield.appearance === "table" /* Table */;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "value", {
            get: function () {
                return this.textfield.value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "filler", {
            get: function () {
                var _b = this, focused = _b.focused, placeholder = _b.placeholder, exampleText = _b.exampleText, value = _b.value, textfield = _b.textfield;
                if (placeholder && exampleText) {
                    return '';
                }
                return focused ? exampleText || textfield.filler.slice(value.length) : '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "prefix", {
            get: function () {
                return this.decorationsVisible ? this.textfield.prefix : '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "postfix", {
            get: function () {
                return this.decorationsVisible ? this.computedPostfix : '';
            },
            enumerable: false,
            configurable: true
        });
        TuiValueDecorationComponent.prototype.ngDoCheck = function () {
            this.prefix$.next(this.prefix);
        };
        Object.defineProperty(TuiValueDecorationComponent.prototype, "placeholder", {
            get: function () {
                var _a;
                return ((_a = this.textfield.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.placeholder) || '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "exampleText", {
            get: function () {
                return !this.value && this.focused ? this.placeholder : '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "decorationsVisible", {
            get: function () {
                return !!this.value || (this.focused && !this.placeholder);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "focused", {
            get: function () {
                return this.textfield.computedFocused && !this.textfield.readOnly;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiValueDecorationComponent.prototype, "computedPostfix", {
            get: function () {
                return this.textfield.postfix && (this.filler || this.value)
                    ? " " + this.textfield.postfix
                    : this.textfield.postfix;
            },
            enumerable: false,
            configurable: true
        });
        return TuiValueDecorationComponent;
    }());
    TuiValueDecorationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiValueDecorationComponent, deps: [{ token: i6.TUI_FOCUSABLE_ITEM_ACCESSOR }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiValueDecorationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiValueDecorationComponent, selector: "tui-value-decoration", host: { listeners: { "animationstart": "ngDoCheck()" }, properties: { "class._table": "this.isContextTable" } }, viewQueries: [{ propertyName: "pre", first: true, predicate: ["pre"], descendants: true, read: i0.ElementRef, static: true }], ngImport: i0__namespace, template: "<span\n    #pre\n    class=\"t-prefix t-inline\"\n    [textContent]=\"prefix\"\n></span>\n<span\n    class=\"t-ghost t-inline\"\n    [textContent]=\"value\"\n></span>\n<span\n    class=\"t-filler t-inline\"\n    [textContent]=\"filler\"\n></span>\n<span\n    class=\"t-postfix t-inline\"\n    [textContent]=\"postfix\"\n></span>\n", styles: [":host{position:absolute;display:block;height:1.25rem;line-height:1;width:100%;margin:-1.25rem 0;padding:.625rem 0;box-sizing:content-box;color:var(--tui-text-01);animation:tuiPresent 1s;white-space:nowrap}:host._table{position:static}:host-context(tui-textfield[data-mode=\"onDark\"]) :host{color:var(--tui-text-01-night)}:host:after{content:\"\";display:inline-block;vertical-align:middle;height:100%}.t-ghost{visibility:hidden;white-space:pre;text-overflow:clip}.t-prefix,.t-postfix{white-space:pre}.t-filler{overflow:hidden;color:var(--tui-text-03);text-overflow:ellipsis;max-width:100%;white-space:nowrap}:host-context(tui-textfield[data-mode=\"onDark\"]) .t-filler{color:var(--tui-text-03-night)}.t-inline{display:inline-block;vertical-align:middle}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.Default });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiValueDecorationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-value-decoration',
                        templateUrl: './value-decoration.template.html',
                        styleUrls: ['./value-decoration.style.less'],
                        // It follows Change Detection of PrimitiveTextfield
                        // eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection
                        changeDetection: i0.ChangeDetectionStrategy.Default,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i6.TUI_FOCUSABLE_ITEM_ACCESSOR]
                        }] }];
        }, propDecorators: { pre: [{
                    type: i0.ViewChild,
                    args: ['pre', { read: i0.ElementRef, static: true }]
                }], isContextTable: [{
                    type: i0.HostBinding,
                    args: ['class._table']
                }], ngDoCheck: [{
                    type: i0.HostListener,
                    args: ['animationstart']
                }] } });

    var ICON_PADDING_L = 1.75;
    var ICON_PADDING = 1.625;
    var TuiPrimitiveTextfieldComponent = /** @class */ (function (_super) {
        __extends(TuiPrimitiveTextfieldComponent, _super);
        function TuiPrimitiveTextfieldComponent(mode$, controller, hintOptions, options, el) {
            var _this = _super.call(this) || this;
            _this.mode$ = mode$;
            _this.controller = controller;
            _this.hintOptions = hintOptions;
            _this.options = options;
            _this.el = el;
            _this.editable = true;
            /** @deprecated use `tuiTextfieldFiller` from {@link TuiTextfieldControllerModule} instead */
            _this.textfieldFiller = '';
            /**
             * @deprecated:
             * use `tuiTextfieldOptionsProvider({iconCleaner: `tuiIconChevronUp`})`
             */
            _this.iconCleaner = _this.options.iconCleaner;
            _this.readOnly = false;
            _this.invalid = false;
            _this.disabled = false;
            /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */
            _this.textfieldPrefix = '';
            /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */
            _this.textfieldPostfix = '';
            _this.value = '';
            _this.valueChange = new i0.EventEmitter();
            _this.autofilled = false;
            return _this;
        }
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "prefix", {
            get: function () {
                return this.textfieldPrefix || this.controller.prefix;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "postfix", {
            get: function () {
                return this.textfieldPostfix || this.controller.postfix;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "filler", {
            get: function () {
                return this.textfieldFiller || this.controller.filler;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "nativeFocusableElement", {
            get: function () {
                if (this.computedDisabled || !this.focusableElement) {
                    return null;
                }
                var nativeElement = this.focusableElement.nativeElement;
                return (nativeElement.previousElementSibling ||
                    nativeElement);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "focused", {
            get: function () {
                return i6.tuiIsNativeFocusedIn(this.el.nativeElement);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "appearance", {
            get: function () {
                return this.controller.appearance;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "size", {
            get: function () {
                return this.controller.size;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "computedInvalid", {
            get: function () {
                return !this.readOnly && !this.disabled && this.invalid;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "inputHidden", {
            get: function () {
                var _a;
                return !!((_a = this.content) === null || _a === void 0 ? void 0 : _a.length);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasValue", {
            get: function () {
                return !!this.value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasCleaner", {
            get: function () {
                return (this.controller.cleaner &&
                    this.hasValue &&
                    !this.computedDisabled &&
                    !this.readOnly);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasTooltip", {
            get: function () {
                var _a;
                return !!((_a = this.hintOptions) === null || _a === void 0 ? void 0 : _a.content) && !this.computedDisabled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasCustomContent", {
            get: function () {
                return !!this.controller.customContent;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "showOnlyPlaceholder", {
            get: function () {
                return (this.focused &&
                    this.placeholderVisible &&
                    (this.size === 's' || (this.size === 'm' && !this.placeholderRaisable)));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "placeholderVisible", {
            get: function () {
                var _a;
                var hasDecor = ((_a = this.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.placeholder) ||
                    this.prefix ||
                    this.postfix ||
                    this.filler;
                var showDecor = hasDecor && !this.readOnly && this.computedFocused;
                return !this.hasValue && !showDecor;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasPlaceholder", {
            get: function () {
                return (!this.showOnlyPlaceholder &&
                    (this.placeholderRaisable || this.placeholderVisible));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "placeholderRaised", {
            get: function () {
                return (this.placeholderRaisable &&
                    ((this.computedFocused && !this.readOnly) || this.hasValue || this.autofilled));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "borderStart", {
            get: function () {
                return this.iconLeftContent ? this.iconPaddingLeft : 0;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "borderEnd", {
            get: function () {
                return miscellaneous.tuiGetBorder(!!this.iconContent, this.hasCleaner, this.hasTooltip, this.hasCustomContent);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconContent", {
            get: function () {
                return this.controller.icon;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconLeftContent", {
            get: function () {
                return this.controller.iconLeft;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "name", {
            // Safari expiration date autofill workaround
            get: function () {
                var _a;
                return ((_a = this.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.autocomplete) === 'cc-exp'
                    ? 'ccexpiryyear'
                    : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "computedId", {
            get: function () {
                var _a;
                return ((_a = this.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.id) || '';
            },
            enumerable: false,
            configurable: true
        });
        TuiPrimitiveTextfieldComponent.prototype.onFocused = function (focused) {
            this.updateFocused(focused);
        };
        TuiPrimitiveTextfieldComponent.prototype.getIndent$ = function (element) {
            return i10.fromEvent(element, 'scroll').pipe(operators.map(function () { return -1 * element.scrollLeft; }));
        };
        TuiPrimitiveTextfieldComponent.prototype.clear = function () {
            if (this.nativeFocusableElement) {
                this.nativeFocusableElement.value = '';
            }
            this.updateValue('');
        };
        TuiPrimitiveTextfieldComponent.prototype.onMouseDown = function (event) {
            var nativeFocusableElement = this.nativeFocusableElement;
            if (!nativeFocusableElement || event.target === nativeFocusableElement) {
                return;
            }
            event.preventDefault();
            nativeFocusableElement.focus();
        };
        TuiPrimitiveTextfieldComponent.prototype.onModelChange = function (value) {
            this.updateValue(value);
        };
        TuiPrimitiveTextfieldComponent.prototype.onAutofilled = function (autofilled) {
            this.updateAutofilled(autofilled);
        };
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconPaddingLeft", {
            get: function () {
                return this.size === 'l' ? ICON_PADDING_L : ICON_PADDING;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "placeholderRaisable", {
            get: function () {
                return this.size !== 's' && !this.controller.labelOutside;
            },
            enumerable: false,
            configurable: true
        });
        TuiPrimitiveTextfieldComponent.prototype.updateAutofilled = function (autofilled) {
            if (this.autofilled === autofilled) {
                return;
            }
            this.autofilled = autofilled;
        };
        TuiPrimitiveTextfieldComponent.prototype.updateValue = function (value) {
            this.value = value;
            this.valueChange.emit(value);
        };
        return TuiPrimitiveTextfieldComponent;
    }(i6.AbstractTuiInteractive));
    TuiPrimitiveTextfieldComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveTextfieldComponent, deps: [{ token: tokens.TUI_MODE }, { token: i11.TUI_TEXTFIELD_WATCHED_CONTROLLER }, { token: i12.TuiHintOptionsDirective, optional: true }, { token: i11.TUI_TEXTFIELD_OPTIONS }, { token: i0.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiPrimitiveTextfieldComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: { editable: "editable", textfieldFiller: ["filler", "textfieldFiller"], iconCleaner: "iconCleaner", readOnly: "readOnly", invalid: "invalid", disabled: "disabled", textfieldPrefix: ["prefix", "textfieldPrefix"], textfieldPostfix: ["postfix", "textfieldPostfix"], value: "value" }, outputs: { valueChange: "valueChange" }, host: { listeners: { "$.data-mode.attr": "mode$", "focusin": "onFocused(true)", "focusout": "onFocused(false)" }, properties: { "class._autofilled": "autofilled", "class._label-outside": "controller.labelOutside", "class._readonly": "this.readOnly", "attr.data-size": "this.size", "class._invalid": "this.computedInvalid", "class._hidden": "this.inputHidden", "style.--border-start.rem": "this.borderStart", "style.--border-end.rem": "this.borderEnd" } }, providers: [
            i6.tuiAsFocusableItemAccessor(TuiPrimitiveTextfieldComponent),
            i11.TEXTFIELD_CONTROLLER_PROVIDER,
            providers.MODE_PROVIDER,
        ], queries: [{ propertyName: "content", predicate: i9.PolymorpheusOutletDirective, descendants: true }], viewQueries: [{ propertyName: "focusableElement", first: true, predicate: ["focusableElement"], descendants: true }], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"content?.changes | async\"></ng-container>\n<ng-container *ngIf=\"hintOptions?.change$ | async\"></ng-container>\n<div\n    tuiWrapper\n    automation-id=\"tui-primitive-textfield__wrapper\"\n    [appearance]=\"appearance\"\n    [readOnly]=\"readOnly\"\n    [disabled]=\"disabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [active]=\"pseudoActive\"\n    [invalid]=\"computedInvalid\"\n    [style.--text-indent.px]=\"decor.pre$ | async\"\n    (mousedown)=\"onMouseDown($event)\"\n    (click.prevent.silent)=\"(0)\"\n    (tuiAutofilledChange)=\"onAutofilled($event)\"\n>\n    <ng-content select=\"input\"></ng-content>\n    <ng-content select=\"select\"></ng-content>\n    <input\n        #focusableElement\n        tuiMaskAccessor\n        automation-id=\"tui-primitive-textfield__native-input\"\n        class=\"t-input\"\n        [attr.disabled]=\"computedDisabled || null\"\n        [attr.name]=\"name\"\n        [attr.aria-invalid]=\"computedInvalid\"\n        [id]=\"id\"\n        [readOnly]=\"readOnly || !editable\"\n        [tuiFocusable]=\"computedFocusable\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"onModelChange($event)\"\n    />\n    <div\n        *ngIf=\"inputHidden\"\n        automation-id=\"tui-primitive-textfield__value\"\n        class=\"t-input t-input_template\"\n    >\n        <ng-content select=\"tuiContent\"></ng-content>\n    </div>\n    <div class=\"t-content\">\n        <div\n            *ngIf=\"iconLeftContent\"\n            class=\"t-icon t-icon_left t-textfield-icon\"\n        >\n            <tui-svg\n                *polymorpheusOutlet=\"iconLeftContent as src; context: {$implicit: size}\"\n                tuiWrapper\n                appearance=\"icon\"\n                [src]=\"src\"\n            ></tui-svg>\n        </div>\n        <div class=\"t-wrapper\">\n            <label\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-primitive-textfield__placeholder\"\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n                [for]=\"computedId\"\n            >\n                <ng-content></ng-content>\n            </label>\n            <div class=\"t-wrapper-value-decoration\">\n                <tui-value-decoration\n                    #decor\n                    automation-id=\"tui-primitive-textfield__value-decoration\"\n                    aria-hidden=\"true\"\n                    class=\"t-value-decoration\"\n                    [class.t-has-value]=\"value\"\n                    [style.textIndent.px]=\"getIndent$(focusableElement) | async\"\n                ></tui-value-decoration>\n            </div>\n        </div>\n        <div\n            *ngIf=\"hasCustomContent\"\n            automation-id=\"tui-primitive-textfield__custom-content\"\n            class=\"t-custom-content\"\n        >\n            <tui-svg\n                *polymorpheusOutlet=\"controller.customContent as src\"\n                class=\"t-custom-icon\"\n                [src]=\"src\"\n            ></tui-svg>\n        </div>\n        <span\n            *ngIf=\"hasCleaner\"\n            tuiWrapper\n            appearance=\"icon\"\n            automation-id=\"tui-primitive-textfield__cleaner\"\n            class=\"t-cleaner\"\n            (click.stop)=\"clear()\"\n        >\n            <tui-svg\n                *polymorpheusOutlet=\"iconCleaner || controller.options.iconCleaner as src; context: {$implicit: size}\"\n                [src]=\"src\"\n            ></tui-svg>\n        </span>\n        <tui-tooltip\n            *ngIf=\"hintOptions?.content && !computedDisabled\"\n            automation-id=\"tui-primitive-textfield__tooltip\"\n            class=\"t-tooltip\"\n            [describeId]=\"computedId\"\n            [content]=\"hintOptions?.content\"\n        ></tui-tooltip>\n        <div\n            *ngIf=\"iconContent\"\n            class=\"t-icon t-textfield-icon\"\n        >\n            <tui-svg\n                *polymorpheusOutlet=\"iconContent as src; context: {$implicit: size}\"\n                tuiWrapper\n                appearance=\"icon\"\n                [src]=\"src\"\n            ></tui-svg>\n        </div>\n    </div>\n</div>\n", styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;border-radius:var(--tui-radius-m);text-align:left}:host[data-size=s]{height:var(--tui-height-s);min-height:var(--tui-height-s);max-height:var(--tui-height-s)}:host[data-size=m]{height:var(--tui-height-m);min-height:var(--tui-height-m);max-height:var(--tui-height-m)}:host[data-size=l]{height:var(--tui-height-l);min-height:var(--tui-height-l);max-height:var(--tui-height-l);font:var(--tui-font-text-m);line-height:1.25rem}.t-input{font:var(--tui-font-text-s);color:var(--tui-text-01);padding:0;margin:0;border:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;padding:0 var(--tui-padding-m);border:solid transparent;border-width:0 var(--border-end, 0) 0 var(--border-start, 0);border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}.t-input:-webkit-autofill,.t-input:-webkit-autofill:hover,.t-input:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}:host[data-mode=onDark] .t-input:-webkit-autofill,.t-input :host-context(tui-primitive-textfield[data-mode=\"onDark\"]):-webkit-autofill,.t-input :host-context(tui-text-area[data-mode=\"onDark\"]):-webkit-autofill,:host[data-mode=onDark] .t-input:-webkit-autofill:hover,.t-input :host-context(tui-primitive-textfield[data-mode=\"onDark\"]):-webkit-autofill:hover,.t-input :host-context(tui-text-area[data-mode=\"onDark\"]):-webkit-autofill:hover,:host[data-mode=onDark] .t-input:-webkit-autofill:focus,.t-input :host-context(tui-primitive-textfield[data-mode=\"onDark\"]):-webkit-autofill:focus,.t-input :host-context(tui-text-area[data-mode=\"onDark\"]):-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01-night)!important;border-color:var(--tui-autofill-night);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill-night) inset!important}:host[data-size=s] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),.t-input :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=l] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),.t-input :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled .t-input,.t-input :host-context(tui-primitive-textfield._disabled),.t-input :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=l]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield):-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.125rem}:host[data-size=m]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield):-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input.t-input,.t-input :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}.t-content{display:flex;height:100%;width:100%;padding:0 var(--tui-padding-m);box-sizing:border-box;align-items:center;overflow:hidden}:host[data-size=s] .t-content{padding:0 var(--tui-padding-s)}:host[data-size=l] .t-content{padding:0 var(--tui-padding-l)}.t-content:after{content:\"\";margin-right:-.25rem}:host[data-size=m] .t-content:after{display:none}.t-wrapper{flex:1;min-width:0;padding-right:.25rem;-webkit-padding-end:.25rem;padding-inline-end:.25rem;-webkit-padding-start:0;padding-inline-start:0}.t-wrapper+*{margin:0}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;width:100%;-webkit-user-select:none;-moz-user-select:none;user-select:none;color:var(--tui-text-02);pointer-events:none;will-change:transform;transform:translateY(0)}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size=m] .t-placeholder_raised{font:var(--tui-font-text-xs);transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-error-fill)}:host[data-mode=onDark]._invalid:not(._focused) .t-placeholder_raised,:host[data-mode=onDark]._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-error-fill-night)}:host._focused .t-placeholder,:host[data-size=m]._focused._label-outside .t-placeholder,:host[data-size=l]._focused._label-outside .t-placeholder{color:var(--tui-text-03)}:host[data-size=l] .t-placeholder{font-size:.9375rem}:host[data-size=l] .t-placeholder_raised{font-size:.8156rem}:host[data-size=m]._focused:not(._label-outside) .t-placeholder,:host[data-size=l]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-01)}:host[data-mode=onDark] .t-placeholder{color:var(--tui-text-02-night)}:host[data-size=m][data-mode=onDark]._focused:not(._label-outside) .t-placeholder,:host[data-size=l][data-mode=onDark]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-01-night)}:host[data-mode=onDark]._focused .t-placeholder,:host[data-size=m][data-mode=onDark]._focused._label-outside .t-placeholder,:host[data-size=l][data-mode=onDark]._focused._label-outside .t-placeholder{color:var(--tui-text-02-night)}@supports (-webkit-hyphens: none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}.t-cleaner{position:relative;display:flex;width:1.5rem;height:1.5rem;margin:0 0 0 .25rem;-webkit-margin-start:.25rem;margin-inline-start:.25rem;-webkit-margin-end:0;margin-inline-end:0;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer}:host._readonly .t-cleaner,:host._disabled .t-cleaner{pointer-events:none}.t-icon{position:relative;display:flex;width:1.5rem;height:1.5rem;margin:0 0 0 .25rem;-webkit-margin-start:.25rem;margin-inline-start:.25rem;-webkit-margin-end:0;margin-inline-end:0;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none}.t-icon_left{margin:0 .375rem 0 -.25rem;-webkit-margin-start:-.25rem;margin-inline-start:-.25rem;-webkit-margin-end:.375rem;margin-inline-end:.375rem}:host[data-size=l] .t-icon_left{margin:0 .5rem 0 -.25rem;-webkit-margin-start:-.25rem;margin-inline-start:-.25rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}:host._autofilled .t-value-decoration:not(.t-has-value){visibility:hidden}:host._autofilled[data-size=s]:not(._focused) .t-placeholder,:host._autofilled[data-size=m]:not(._focused) .t-placeholder{visibility:hidden}.t-custom-content{position:relative;display:flex;align-items:center;justify-content:center;min-width:2rem;height:2rem;pointer-events:none}.t-custom-icon{width:2rem;height:100%}.t-tooltip{margin:0 0 0 .25rem;-webkit-margin-start:.25rem;margin-inline-start:.25rem;-webkit-margin-end:0;margin-inline-end:0}input::placeholder{color:var(--tui-text-03);opacity:0}:host-context(tui-primitive-textfield[data-mode=\"onDark\"]) input::placeholder,:host-context(tui-text-area[data-mode=\"onDark\"]) input::placeholder{color:var(--tui-text-03-night)}:host-context(tui-primitive-textfield._focused:not(._readonly)) input::placeholder,:host-context(tui-text-area._focused:not(._readonly)) input::placeholder{opacity:1}.t-input:not(:first-child){display:none}:host[data-size] .t-input_template{display:flex;width:calc(100% - 1rem);max-width:calc(100% - 1rem);align-items:center;pointer-events:none;-webkit-padding-end:0;padding-inline-end:0}.t-input:-webkit-autofill,.t-input:-webkit-autofill:first-line{font-size:inherit;line-height:inherit}.t-input::-webkit-caps-lock-indicator,.t-input::-webkit-contacts-auto-fill-button,.t-input::-webkit-credit-card-auto-fill-button,.t-input::-webkit-credentials-auto-fill-button,.t-input::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-text-template{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-wrapper-value-decoration{position:relative;pointer-events:none}\n"], components: [{ type: i1__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: TuiValueDecorationComponent, selector: "tui-value-decoration" }, { type: i3__namespace.TuiTooltipComponent, selector: "tui-tooltip", inputs: ["content", "direction", "appearance", "showDelay", "hideDelay", "describeId"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i6__namespace.TuiAutofilledDirective, selector: "[tuiAutofilledChange]", outputs: ["tuiAutofilledChange"] }, { type: i7__namespace.TuiMaskAccessorDirective, selector: "input[tuiMaskAccessor]" }, { type: i8__namespace.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i6__namespace.TuiFocusableDirective, selector: "[tuiFocusable]", inputs: ["tuiFocusable"] }, { type: i8__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i8__namespace.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i9__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "editable", void 0);
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "textfieldFiller", void 0);
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "iconCleaner", void 0);
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "readOnly", void 0);
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "invalid", void 0);
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "disabled", void 0);
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "textfieldPrefix", void 0);
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "textfieldPostfix", void 0);
    __decorate([
        i6.tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "value", void 0);
    __decorate([
        i6.tuiPure
    ], TuiPrimitiveTextfieldComponent.prototype, "getIndent$", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveTextfieldComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-primitive-textfield',
                        templateUrl: './primitive-textfield.template.html',
                        styleUrls: ['./primitive-textfield.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            i6.tuiAsFocusableItemAccessor(TuiPrimitiveTextfieldComponent),
                            i11.TEXTFIELD_CONTROLLER_PROVIDER,
                            providers.MODE_PROVIDER,
                        ],
                        host: {
                            '($.data-mode.attr)': 'mode$',
                            '[class._autofilled]': 'autofilled',
                            '[class._label-outside]': 'controller.labelOutside',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i10__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_MODE]
                        }] }, { type: i11__namespace.TuiTextfieldController, decorators: [{
                            type: i0.Inject,
                            args: [i11.TUI_TEXTFIELD_WATCHED_CONTROLLER]
                        }] }, { type: i12__namespace.TuiHintOptionsDirective, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i12.TuiHintOptionsDirective]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i11.TUI_TEXTFIELD_OPTIONS]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }];
        }, propDecorators: { focusableElement: [{
                    type: i0.ViewChild,
                    args: ['focusableElement']
                }], editable: [{
                    type: i0.Input
                }], textfieldFiller: [{
                    type: i0.Input,
                    args: ['filler']
                }], iconCleaner: [{
                    type: i0.Input
                }], readOnly: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class._readonly']
                }], invalid: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], textfieldPrefix: [{
                    type: i0.Input,
                    args: ['prefix']
                }], textfieldPostfix: [{
                    type: i0.Input,
                    args: ['postfix']
                }], value: [{
                    type: i0.Input
                }], valueChange: [{
                    type: i0.Output
                }], content: [{
                    type: i0.ContentChildren,
                    args: [i9.PolymorpheusOutletDirective, { descendants: true }]
                }], size: [{
                    type: i0.HostBinding,
                    args: ['attr.data-size']
                }], computedInvalid: [{
                    type: i0.HostBinding,
                    args: ['class._invalid']
                }], inputHidden: [{
                    type: i0.HostBinding,
                    args: ['class._hidden']
                }], borderStart: [{
                    type: i0.HostBinding,
                    args: ['style.--border-start.rem']
                }], borderEnd: [{
                    type: i0.HostBinding,
                    args: ['style.--border-end.rem']
                }], onFocused: [{
                    type: i0.HostListener,
                    args: ['focusin', ['true']]
                }, {
                    type: i0.HostListener,
                    args: ['focusout', ['false']]
                }], getIndent$: [] } });

    var TuiPrimitiveTextfieldDirective = /** @class */ (function (_super) {
        __extends(TuiPrimitiveTextfieldDirective, _super);
        function TuiPrimitiveTextfieldDirective(textfield) {
            var _this = 
            /**
             * TuiPrimitiveTextfieldComponent satisfies all required parts of
             * AbstractTuiControl interface. A new interface is not introduced
             * so AbstractTuiControl is automatically injected for all other controls.
             */
            _super.call(this, textfield) || this;
            _this.textfield = textfield;
            return _this;
        }
        Object.defineProperty(TuiPrimitiveTextfieldDirective.prototype, "readOnly", {
            get: function () {
                return this.textfield.readOnly || !this.textfield.editable;
            },
            enumerable: false,
            configurable: true
        });
        TuiPrimitiveTextfieldDirective.prototype.onValueChange = function (value) {
            this.textfield.onModelChange(value);
        };
        return TuiPrimitiveTextfieldDirective;
    }(abstract.AbstractTuiTextfieldHost));
    TuiPrimitiveTextfieldDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveTextfieldDirective, deps: [{ token: TuiPrimitiveTextfieldComponent }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiPrimitiveTextfieldDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield", providers: [tokens.tuiAsTextfieldHost(TuiPrimitiveTextfieldDirective)], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveTextfieldDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'tui-primitive-textfield',
                        providers: [tokens.tuiAsTextfieldHost(TuiPrimitiveTextfieldDirective)],
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiPrimitiveTextfieldComponent, decorators: [{
                            type: i0.Inject,
                            args: [TuiPrimitiveTextfieldComponent]
                        }] }];
        } });

    var TuiTextfieldComponent = /** @class */ (function () {
        function TuiTextfieldComponent(host, controller, el, idService, legacyMask) {
            this.host = host;
            this.controller = controller;
            this.el = el;
            this.idService = idService;
            this.legacyMask = legacyMask;
            this.host.process(this.el.nativeElement);
        }
        Object.defineProperty(TuiTextfieldComponent.prototype, "id", {
            get: function () {
                return this.el.nativeElement.id || this.idService.generate();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTextfieldComponent.prototype, "inputMode", {
            get: function () {
                return this.el.nativeElement.inputMode || this.host.inputMode;
            },
            enumerable: false,
            configurable: true
        });
        return TuiTextfieldComponent;
    }());
    TuiTextfieldComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTextfieldComponent, deps: [{ token: tokens.TUI_TEXTFIELD_HOST }, { token: i1$1.TUI_TEXTFIELD_WATCHED_CONTROLLER }, { token: i0.ElementRef }, { token: i6.TuiIdService }, { token: tokens.TUI_LEGACY_MASK, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTextfieldComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTextfieldComponent, selector: "input[tuiTextfield], textarea[tuiTextfield]", host: { attributes: { "type": "text" }, listeners: { "input": "!legacyMask && host.onValueChange($event.target.value)" }, properties: { "attr.id": "id", "attr.inputMode": "inputMode", "attr.aria-invalid": "host.invalid", "attr.disabled": "host.disabled || null", "tabIndex": "host.focusable ? 0 : -1", "readOnly": "host.readOnly", "value": "host.value" } }, providers: [i1$1.TEXTFIELD_CONTROLLER_PROVIDER], ngImport: i0__namespace, template: '', isInline: true, styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);padding:0;margin:0;border:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;padding:0 var(--tui-padding-m);border:solid transparent;border-width:0 var(--border-end, 0) 0 var(--border-start, 0);border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}:host:-webkit-autofill,:host:-webkit-autofill:hover,:host:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}:host[data-mode=onDark] :host:-webkit-autofill,:host :host-context(tui-primitive-textfield[data-mode=\"onDark\"]):-webkit-autofill,:host :host-context(tui-text-area[data-mode=\"onDark\"]):-webkit-autofill,:host[data-mode=onDark] :host:-webkit-autofill:hover,:host :host-context(tui-primitive-textfield[data-mode=\"onDark\"]):-webkit-autofill:hover,:host :host-context(tui-text-area[data-mode=\"onDark\"]):-webkit-autofill:hover,:host[data-mode=onDark] :host:-webkit-autofill:focus,:host :host-context(tui-primitive-textfield[data-mode=\"onDark\"]):-webkit-autofill:focus,:host :host-context(tui-text-area[data-mode=\"onDark\"]):-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01-night)!important;border-color:var(--tui-autofill-night);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill-night) inset!important}:host[data-size=s] :host,:host :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),:host :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=l] :host,:host :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),:host :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled :host,:host :host-context(tui-primitive-textfield._disabled),:host :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) :host,:host :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=l]:not(._label-outside) :host:-webkit-autofill+.t-content .t-placeholder,:host :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield):-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) :host,:host :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.125rem}:host[data-size=m]:not(._label-outside) :host:-webkit-autofill+.t-content .t-placeholder,:host :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield):-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input:host,:host :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}:host::placeholder{color:var(--tui-text-03);opacity:0}:host :host-context(tui-primitive-textfield[data-mode=\"onDark\"])::placeholder,:host :host-context(tui-text-area[data-mode=\"onDark\"])::placeholder{color:var(--tui-text-03-night)}:host :host-context(tui-primitive-textfield._focused:not(._readonly))::placeholder,:host :host-context(tui-text-area._focused:not(._readonly))::placeholder{opacity:1}:host::-webkit-caps-lock-indicator,:host::-webkit-contacts-auto-fill-button,:host::-webkit-credit-card-auto-fill-button,:host::-webkit-credentials-auto-fill-button,:host::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}textarea:host{white-space:pre-wrap}textarea:host :host-context(tui-text-area._ios){padding-left:.8125rem}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTextfieldComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'input[tuiTextfield], textarea[tuiTextfield]',
                        template: '',
                        providers: [i1$1.TEXTFIELD_CONTROLLER_PROVIDER],
                        host: {
                            type: 'text',
                            '[attr.id]': 'id',
                            '[attr.inputMode]': 'inputMode',
                            '[attr.aria-invalid]': 'host.invalid',
                            '[attr.disabled]': 'host.disabled || null',
                            '[tabIndex]': 'host.focusable ? 0 : -1',
                            '[readOnly]': 'host.readOnly',
                            '[value]': 'host.value',
                            '(input)': '!legacyMask && host.onValueChange($event.target.value)',
                        },
                        styleUrls: ['./textfield.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_TEXTFIELD_HOST]
                        }] }, { type: i1__namespace$1.TuiTextfieldController, decorators: [{
                            type: i0.Inject,
                            args: [i1$1.TUI_TEXTFIELD_WATCHED_CONTROLLER]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i6__namespace.TuiIdService, decorators: [{
                            type: i0.Inject,
                            args: [i6.TuiIdService]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [tokens.TUI_LEGACY_MASK]
                        }] }];
        } });

    var TuiPrimitiveTextfieldModule = /** @class */ (function () {
        function TuiPrimitiveTextfieldModule() {
        }
        return TuiPrimitiveTextfieldModule;
    }());
    TuiPrimitiveTextfieldModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveTextfieldModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiPrimitiveTextfieldModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveTextfieldModule, declarations: [TuiPrimitiveTextfieldComponent,
            TuiPrimitiveTextfieldDirective,
            TuiTextfieldComponent,
            TuiValueDecorationComponent], imports: [i4.CommonModule,
            i8.FormsModule,
            i9.PolymorpheusModule,
            i7.TuiMaskAccessorModule,
            i6.TuiFocusableModule,
            i5.TuiWrapperModule,
            i1.TuiSvgModule,
            i3.TuiTooltipModule,
            i6.TuiAutofilledModule], exports: [TuiPrimitiveTextfieldComponent,
            TuiPrimitiveTextfieldDirective,
            TuiTextfieldComponent] });
    TuiPrimitiveTextfieldModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveTextfieldModule, imports: [[
                i4.CommonModule,
                i8.FormsModule,
                i9.PolymorpheusModule,
                i7.TuiMaskAccessorModule,
                i6.TuiFocusableModule,
                i5.TuiWrapperModule,
                i1.TuiSvgModule,
                i3.TuiTooltipModule,
                i6.TuiAutofilledModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveTextfieldModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i8.FormsModule,
                            i9.PolymorpheusModule,
                            i7.TuiMaskAccessorModule,
                            i6.TuiFocusableModule,
                            i5.TuiWrapperModule,
                            i1.TuiSvgModule,
                            i3.TuiTooltipModule,
                            i6.TuiAutofilledModule,
                        ],
                        declarations: [
                            TuiPrimitiveTextfieldComponent,
                            TuiPrimitiveTextfieldDirective,
                            TuiTextfieldComponent,
                            TuiValueDecorationComponent,
                        ],
                        exports: [
                            TuiPrimitiveTextfieldComponent,
                            TuiPrimitiveTextfieldDirective,
                            TuiTextfieldComponent,
                        ],
                    }]
            }] });

    /**
     * @deprecated:
     * use {@link TUI_TEXTFIELD_DEFAULT_OPTIONS}
     */
    var TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS = i1$1.TUI_TEXTFIELD_DEFAULT_OPTIONS;
    /**
     * @deprecated:
     * use {@link TUI_TEXTFIELD_OPTIONS}
     */
    var TUI_PRIMITIVE_TEXTFIELD_OPTIONS = i1$1.TUI_TEXTFIELD_OPTIONS;
    /**
     * @deprecated:
     * use {@link tuiTextfieldOptionsProvider}
     */
    var tuiPrimitiveTextfieldOptionsProvider = i1$1.tuiTextfieldOptionsProvider;

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS = TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS;
    exports.TUI_PRIMITIVE_TEXTFIELD_OPTIONS = TUI_PRIMITIVE_TEXTFIELD_OPTIONS;
    exports.TuiPrimitiveTextfieldComponent = TuiPrimitiveTextfieldComponent;
    exports.TuiPrimitiveTextfieldDirective = TuiPrimitiveTextfieldDirective;
    exports.TuiPrimitiveTextfieldModule = TuiPrimitiveTextfieldModule;
    exports.TuiTextfieldComponent = TuiTextfieldComponent;
    exports.TuiValueDecorationComponent = TuiValueDecorationComponent;
    exports.tuiPrimitiveTextfieldOptionsProvider = tuiPrimitiveTextfieldOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-components-primitive-textfield.umd.js.map
