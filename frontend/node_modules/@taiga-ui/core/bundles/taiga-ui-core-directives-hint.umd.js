(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/abstract'), require('@taiga-ui/core/animations'), require('@taiga-ui/core/directives/mode'), require('@taiga-ui/core/services'), require('@taiga-ui/core/tokens'), require('@tinkoff/ng-polymorpheus'), require('rxjs/operators'), require('@taiga-ui/core/utils'), require('rxjs'), require('@angular/common'), require('@taiga-ui/core/constants')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/directives/hint', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/abstract', '@taiga-ui/core/animations', '@taiga-ui/core/directives/mode', '@taiga-ui/core/services', '@taiga-ui/core/tokens', '@tinkoff/ng-polymorpheus', 'rxjs/operators', '@taiga-ui/core/utils', 'rxjs', '@angular/common', '@taiga-ui/core/constants'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.directives = global["taiga-ui"].core.directives || {}, global["taiga-ui"].core.directives.hint = {}), global.ng.core, global.i3, global["taiga-ui"].core.abstract, global["taiga-ui"].core.animations, global["taiga-ui"].core.directives.mode, global["taiga-ui"].core.services, global["taiga-ui"].core.tokens, global.i1, global.rxjs.operators, global["taiga-ui"].core.utils, global.rxjs, global.ng.common, global["taiga-ui"].core.constants));
})(this, (function (exports, i0, i3, i1$1, animations, i5, i2, tokens, i1, operators, utils, i2$1, common, constants) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    /**
     * A component to display a hint
     */
    var TUI_HINT_COMPONENT = new i0.InjectionToken("[TUI_HINT_COMPONENT]", {
        factory: function () { return TuiHintComponent; },
    });

    /** Default values for hint options */
    var TUI_HINT_DEFAULT_OPTIONS = {
        direction: 'bottom-left',
        showDelay: 500,
        hideDelay: 200,
        appearance: '',
        icon: 'tuiIconHelpCircle',
    };
    /**
     * Default parameters for hint directive
     */
    var TUI_HINT_OPTIONS = new i0.InjectionToken('[TUI_HINT_OPTIONS]', {
        factory: function () { return TUI_HINT_DEFAULT_OPTIONS; },
    });
    var tuiHintOptionsProvider = function (override) { return ({
        provide: TUI_HINT_OPTIONS,
        deps: [
            [new i0.Optional(), TuiHintOptionsDirective],
            [new i0.SkipSelf(), TUI_HINT_OPTIONS],
        ],
        useFactory: utils.tuiOverrideOptions(override),
    }); };
    var TuiHintOptionsDirective = /** @class */ (function (_super) {
        __extends(TuiHintOptionsDirective, _super);
        function TuiHintOptionsDirective(options) {
            var _this = _super.call(this) || this;
            _this.options = options;
            _this.direction = _this.options.direction;
            _this.appearance = _this.options.appearance;
            _this.showDelay = _this.options.showDelay;
            _this.hideDelay = _this.options.hideDelay;
            _this.icon = _this.options.icon;
            return _this;
        }
        return TuiHintOptionsDirective;
    }(i3.AbstractTuiController));
    TuiHintOptionsDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintOptionsDirective, deps: [{ token: TUI_HINT_OPTIONS, skipSelf: true }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintOptionsDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintOptionsDirective, selector: "[tuiHintContent]", inputs: { content: ["tuiHintContent", "content"], direction: ["tuiHintDirection", "direction"], appearance: ["tuiHintAppearance", "appearance"], showDelay: ["tuiHintShowDelay", "showDelay"], hideDelay: ["tuiHintHideDelay", "hideDelay"] }, providers: [
            {
                provide: TUI_HINT_OPTIONS,
                useExisting: i0.forwardRef(function () { return TuiHintOptionsDirective; }),
            },
        ], usesInheritance: true, ngImport: i0__namespace });
    __decorate([
        i3.tuiDefaultProp()
    ], TuiHintOptionsDirective.prototype, "direction", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiHintOptionsDirective.prototype, "appearance", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiHintOptionsDirective.prototype, "showDelay", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiHintOptionsDirective.prototype, "hideDelay", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintOptionsDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHintContent]',
                        providers: [
                            {
                                provide: TUI_HINT_OPTIONS,
                                useExisting: i0.forwardRef(function () { return TuiHintOptionsDirective; }),
                            },
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.SkipSelf
                        }, {
                            type: i0.Inject,
                            args: [TUI_HINT_OPTIONS]
                        }] }];
        }, propDecorators: { content: [{
                    type: i0.Input,
                    args: ['tuiHintContent']
                }], direction: [{
                    type: i0.Input,
                    args: ['tuiHintDirection']
                }], appearance: [{
                    type: i0.Input,
                    args: ['tuiHintAppearance']
                }], showDelay: [{
                    type: i0.Input,
                    args: ['tuiHintShowDelay']
                }], hideDelay: [{
                    type: i0.Input,
                    args: ['tuiHintHideDelay']
                }] } });

    var TuiHintDirective = /** @class */ (function () {
        function TuiHintDirective(el, component, hintService, options, activeZone) {
            this.el = el;
            this.component = component;
            this.hintService = hintService;
            this.options = options;
            this.activeZone = activeZone;
            this.tuiHintAppearance = null;
            this.type = 'hint';
        }
        Object.defineProperty(TuiHintDirective.prototype, "appearance", {
            get: function () {
                var _a;
                return (_a = this.tuiHintAppearance) !== null && _a !== void 0 ? _a : this.options.appearance;
            },
            enumerable: false,
            configurable: true
        });
        TuiHintDirective.prototype.ngOnChanges = function () {
            if (!this.content) {
                this.toggle(false);
            }
        };
        TuiHintDirective.prototype.ngOnDestroy = function () {
            this.toggle(false);
        };
        TuiHintDirective.prototype.getClientRect = function () {
            return this.el.nativeElement.getBoundingClientRect();
        };
        TuiHintDirective.prototype.toggle = function (show) {
            if (show && this.content) {
                this.hintService.add(this);
            }
            else {
                this.hintService.remove(this);
            }
        };
        return TuiHintDirective;
    }());
    TuiHintDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintDirective, deps: [{ token: i0.ElementRef }, { token: i1.PolymorpheusComponent }, { token: i2.TuiHintService }, { token: TUI_HINT_OPTIONS }, { token: i3.TuiActiveZoneDirective, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintDirective, selector: "[tuiHint]:not(ng-container)", inputs: { content: ["tuiHint", "content"], context: ["tuiHintContext", "context"], tuiHintAppearance: "tuiHintAppearance" }, providers: [
            i1$1.tuiAsRectAccessor(TuiHintDirective),
            i1$1.tuiAsVehicle(TuiHintDirective),
            {
                provide: i1.PolymorpheusComponent,
                deps: [TUI_HINT_COMPONENT, i0.INJECTOR],
                useClass: i1.PolymorpheusComponent,
            },
        ], usesOnChanges: true, ngImport: i0__namespace });
    __decorate([
        i3.tuiDefaultProp()
    ], TuiHintDirective.prototype, "tuiHintAppearance", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHint]:not(ng-container)',
                        providers: [
                            i1$1.tuiAsRectAccessor(TuiHintDirective),
                            i1$1.tuiAsVehicle(TuiHintDirective),
                            {
                                provide: i1.PolymorpheusComponent,
                                deps: [TUI_HINT_COMPONENT, i0.INJECTOR],
                                useClass: i1.PolymorpheusComponent,
                            },
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i1__namespace.PolymorpheusComponent, decorators: [{
                            type: i0.Inject,
                            args: [i1.PolymorpheusComponent]
                        }] }, { type: i2__namespace.TuiHintService, decorators: [{
                            type: i0.Inject,
                            args: [i2.TuiHintService]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_HINT_OPTIONS]
                        }] }, { type: i3__namespace.TuiActiveZoneDirective, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i3.TuiActiveZoneDirective]
                        }] }];
        }, propDecorators: { content: [{
                    type: i0.Input,
                    args: ['tuiHint']
                }], context: [{
                    type: i0.Input,
                    args: ['tuiHintContext']
                }], tuiHintAppearance: [{
                    type: i0.Input
                }] } });

    var TuiHintHoverDirective = /** @class */ (function (_super) {
        __extends(TuiHintHoverDirective, _super);
        function TuiHintHoverDirective(hovered$, options, el) {
            var _this = _super.call(this, function (subscriber) { return _this.stream$.subscribe(subscriber); }) || this;
            _this.hovered$ = hovered$;
            _this.options = options;
            _this.el = el;
            _this.visible = false;
            _this.toggle$ = new i2$1.Subject();
            _this.stream$ = i2$1.merge(_this.toggle$.pipe(operators.switchMap(function (visible) { return i2$1.of(visible).pipe(operators.delay(visible ? 0 : _this.hideDelay)); }), operators.takeUntil(_this.hovered$), operators.repeat()), _this.hovered$.pipe(operators.switchMap(function (visible) { return i2$1.of(visible).pipe(operators.delay(visible ? _this.showDelay : _this.hideDelay)); }), operators.takeUntil(_this.toggle$), operators.repeat())).pipe(operators.filter(function () { return _this.enabled; }), operators.tap(function (visible) {
                _this.visible = visible;
            }));
            _this.showDelay = _this.options.showDelay;
            _this.hideDelay = _this.options.hideDelay;
            _this.type = 'hint';
            _this.enabled = true;
            return _this;
        }
        TuiHintHoverDirective.prototype.toggle = function (visible) {
            if (visible === void 0) { visible = !this.visible; }
            this.toggle$.next(visible);
        };
        return TuiHintHoverDirective;
    }(i1$1.TuiDriver));
    TuiHintHoverDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintHoverDirective, deps: [{ token: i3.TuiHoveredService }, { token: TUI_HINT_OPTIONS }, { token: i0.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintHoverDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintHoverDirective, selector: "[tuiHint]:not(ng-container)", inputs: { showDelay: ["tuiHintShowDelay", "showDelay"], hideDelay: ["tuiHintHideDelay", "hideDelay"] }, providers: [i1$1.tuiAsDriver(TuiHintHoverDirective), i3.TuiHoveredService], exportAs: ["tuiHintHover"], usesInheritance: true, ngImport: i0__namespace });
    __decorate([
        i3.tuiDefaultProp()
    ], TuiHintHoverDirective.prototype, "showDelay", void 0);
    __decorate([
        i3.tuiDefaultProp()
    ], TuiHintHoverDirective.prototype, "hideDelay", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintHoverDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHint]:not(ng-container)',
                        exportAs: 'tuiHintHover',
                        providers: [i1$1.tuiAsDriver(TuiHintHoverDirective), i3.TuiHoveredService],
                    }]
            }], ctorParameters: function () {
            return [{ type: i2__namespace$1.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i3.TuiHoveredService]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_HINT_OPTIONS]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }];
        }, propDecorators: { showDelay: [{
                    type: i0.Input,
                    args: ['tuiHintShowDelay']
                }], hideDelay: [{
                    type: i0.Input,
                    args: ['tuiHintHideDelay']
                }] } });

    var TuiHintPointerDirective = /** @class */ (function (_super) {
        __extends(TuiHintPointerDirective, _super);
        function TuiHintPointerDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.currentRect = i3.EMPTY_CLIENT_RECT;
            return _this;
        }
        TuiHintPointerDirective.prototype.onMove = function (_a) {
            var clientX = _a.clientX, clientY = _a.clientY;
            this.currentRect = i3.tuiPointToClientRect(clientX, clientY);
        };
        TuiHintPointerDirective.prototype.getClientRect = function () {
            return this.currentRect;
        };
        return TuiHintPointerDirective;
    }(TuiHintHoverDirective));
    TuiHintPointerDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintPointerDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintPointerDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintPointerDirective, selector: "[tuiHint][tuiHintPointer]", host: { listeners: { "mousemove.silent": "onMove($event)" } }, providers: [
            i1$1.tuiAsRectAccessor(TuiHintPointerDirective),
            i1$1.tuiAsDriver(TuiHintPointerDirective),
        ], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintPointerDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHint][tuiHintPointer]',
                        providers: [
                            i1$1.tuiAsRectAccessor(TuiHintPointerDirective),
                            i1$1.tuiAsDriver(TuiHintPointerDirective),
                        ],
                    }]
            }], propDecorators: { onMove: [{
                    type: i0.HostListener,
                    args: ['mousemove.silent', ['$event']]
                }] } });

    var TuiHintComponent = /** @class */ (function () {
        function TuiHintComponent(hovered$, position$, destroy$, accessor, el, options, polymorpheus, hover, pointer, mode, visualViewportService) {
            var _this = this;
            var _a;
            this.accessor = accessor;
            this.el = el;
            this.options = options;
            this.polymorpheus = polymorpheus;
            this.hover = hover;
            this.pointer = pointer;
            this.mode = mode;
            this.visualViewportService = visualViewportService;
            this.animation = Object.assign({ value: '' }, this.options);
            this.appearance = this.polymorpheus.$implicit.appearance || ((_a = this.mode) === null || _a === void 0 ? void 0 : _a.mode);
            this.untouchable = !!this.pointer;
            position$
                .pipe(operators.map(function (point) { return _this.visualViewportService.correct(point); }), operators.takeUntil(destroy$))
                .subscribe(function (_b) {
                var _c = __read(_b, 2), top = _c[0], left = _c[1];
                _this.update(top, left);
            });
            hovered$.pipe(operators.takeUntil(destroy$)).subscribe(function (hover) { return _this.hover.toggle(hover); });
        }
        Object.defineProperty(TuiHintComponent.prototype, "content", {
            get: function () {
                return this.polymorpheus.$implicit.content;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiHintComponent.prototype, "context", {
            get: function () {
                return this.polymorpheus.$implicit.context;
            },
            enumerable: false,
            configurable: true
        });
        TuiHintComponent.prototype.onClick = function (target) {
            if (!this.el.nativeElement.contains(target) &&
                !this.hover.el.nativeElement.contains(target)) {
                this.hover.toggle(false);
            }
        };
        TuiHintComponent.prototype.update = function (top, left) {
            var _b = this.el.nativeElement.getBoundingClientRect(), height = _b.height, width = _b.width;
            var style = this.el.nativeElement.style;
            var rect = this.accessor.getClientRect();
            var safeLeft = Math.max(left, 4);
            var _c = __read(this.visualViewportService.correct([
                rect.top + rect.height / 2 - top,
                rect.left + rect.width / 2 - safeLeft,
            ]), 2), beakTop = _c[0], beakLeft = _c[1];
            style.top = i3.tuiPx(top);
            style.left = i3.tuiPx(safeLeft);
            style.setProperty('--top', i3.tuiPx(i3.tuiClamp(beakTop, 0.5, height - 1)));
            style.setProperty('--left', i3.tuiPx(i3.tuiClamp(beakLeft, 0.5, width - 1)));
        };
        return TuiHintComponent;
    }());
    TuiHintComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintComponent, deps: [{ token: i3.TuiHoveredService }, { token: i2.TuiPositionService }, { token: i3.TuiDestroyService, self: true }, { token: i1$1.TuiRectAccessor }, { token: i0.ElementRef }, { token: tokens.TUI_ANIMATION_OPTIONS }, { token: i1.POLYMORPHEUS_CONTEXT }, { token: TuiHintHoverDirective }, { token: TuiHintPointerDirective, optional: true }, { token: i5.TuiModeDirective, optional: true }, { token: i2.TuiVisualViewportService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiHintComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintComponent, selector: "tui-hint", host: { listeners: { "document:click": "onClick($event.target)" }, properties: { "@tuiFadeIn": "this.animation", "attr.data-appearance": "this.appearance", "class._untouchable": "this.untouchable" } }, providers: [
            i3.TuiDestroyService,
            i2.TuiPositionService,
            i3.TuiHoveredService,
            i1$1.tuiPositionAccessorFor('hint'),
            i1$1.tuiRectAccessorFor('hint', TuiHintDirective),
        ], ngImport: i0__namespace, template: "\n        <span\n            *polymorpheusOutlet=\"content as text; context: context\"\n            [innerHTML]=\"text\"\n        ></span>\n    ", isInline: true, styles: [":host{position:absolute;max-width:18rem;min-height:var(--tui-height-m);padding:.75rem 1rem;background:var(--tui-primary);border-radius:var(--tui-radius-l);color:var(--tui-primary-text);box-sizing:border-box;font:var(--tui-font-text-s);white-space:pre-line;word-wrap:break-word}:host:before{content:\"\";position:absolute;top:var(--top);left:var(--left);width:.5rem;height:.5rem;border-radius:.125rem;box-sizing:border-box;background:inherit;transform:translate(-50%,-50%) rotate(45deg)}:host[data-appearance=error]{background:var(--tui-error-fill)}:host[data-appearance=onDark]{background:var(--tui-elevation-01);color:var(--tui-text-01);filter:drop-shadow(0 0 .125rem rgba(0,0,0,.16)) drop-shadow(0 1.5rem 1rem rgba(0,0,0,.03)) drop-shadow(0 .75rem .75rem rgba(0,0,0,.04)) drop-shadow(0 .25rem .375rem rgba(0,0,0,.05))}:host:not([style*=\"top\"]){visibility:hidden}:host._untouchable{pointer-events:none}\n"], directives: [{ type: i1__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [animations.tuiFadeIn], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i3.tuiPure
    ], TuiHintComponent.prototype, "update", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-hint',
                        template: "\n        <span\n            *polymorpheusOutlet=\"content as text; context: context\"\n            [innerHTML]=\"text\"\n        ></span>\n    ",
                        styleUrls: ['./hint.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            i3.TuiDestroyService,
                            i2.TuiPositionService,
                            i3.TuiHoveredService,
                            i1$1.tuiPositionAccessorFor('hint'),
                            i1$1.tuiRectAccessorFor('hint', TuiHintDirective),
                        ],
                        animations: [animations.tuiFadeIn],
                    }]
            }], ctorParameters: function () {
            return [{ type: i2__namespace$1.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i3.TuiHoveredService]
                        }] }, { type: i2__namespace$1.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i2.TuiPositionService]
                        }] }, { type: i2__namespace$1.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i3.TuiDestroyService]
                        }] }, { type: i1__namespace$1.TuiRectAccessor, decorators: [{
                            type: i0.Inject,
                            args: [i1$1.TuiRectAccessor]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_ANIMATION_OPTIONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.POLYMORPHEUS_CONTEXT]
                        }] }, { type: TuiHintHoverDirective, decorators: [{
                            type: i0.Inject,
                            args: [TuiHintHoverDirective]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [TuiHintPointerDirective]
                        }] }, { type: i5__namespace.TuiModeDirective, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i5.TuiModeDirective]
                        }] }, { type: i2__namespace.TuiVisualViewportService, decorators: [{
                            type: i0.Inject,
                            args: [i2.TuiVisualViewportService]
                        }] }];
        }, propDecorators: { animation: [{
                    type: i0.HostBinding,
                    args: ['@tuiFadeIn']
                }], appearance: [{
                    type: i0.HostBinding,
                    args: ['attr.data-appearance']
                }], untouchable: [{
                    type: i0.HostBinding,
                    args: ['class._untouchable']
                }], onClick: [{
                    type: i0.HostListener,
                    args: ['document:click', ['$event.target']]
                }], update: [] } });

    var TuiHintDescribeDirective = /** @class */ (function (_super) {
        __extends(TuiHintDescribeDirective, _super);
        function TuiHintDescribeDirective(ngZone, doc, el) {
            var _this = _super.call(this, function (subscriber) { return _this.stream$.subscribe(subscriber); }) || this;
            _this.ngZone = ngZone;
            _this.doc = doc;
            _this.el = el;
            _this.stream$ = i3.tuiTypedFromEvent(_this.doc, 'keydown', {
                capture: true,
            }).pipe(operators.switchMap(function () { return _this.focused
                ? i2$1.of(false)
                : i2$1.merge(i3.tuiTypedFromEvent(_this.doc, 'keyup'), i3.tuiTypedFromEvent(_this.element, 'blur')).pipe(operators.map(function () { return _this.focused; })); }), operators.debounce(function (visible) { return (visible ? i2$1.timer(1000) : i2$1.of(null)); }), operators.startWith(false), operators.distinctUntilChanged(), operators.skip(1), i3.tuiZoneOptimized(_this.ngZone));
            _this.tuiHintDescribe = '';
            _this.type = 'hint';
            return _this;
        }
        Object.defineProperty(TuiHintDescribeDirective.prototype, "focused", {
            get: function () {
                return i3.tuiIsNativeFocused(this.element);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiHintDescribeDirective.prototype, "element", {
            get: function () {
                return this.doc.getElementById(this.tuiHintDescribe) || this.el.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        return TuiHintDescribeDirective;
    }(i1$1.TuiDriver));
    TuiHintDescribeDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintDescribeDirective, deps: [{ token: i0.NgZone }, { token: common.DOCUMENT }, { token: i0.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintDescribeDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintDescribeDirective, selector: "[tuiHintDescribe]", inputs: { tuiHintDescribe: "tuiHintDescribe" }, providers: [i1$1.tuiAsDriver(TuiHintDescribeDirective)], usesInheritance: true, ngImport: i0__namespace });
    __decorate([
        i3.tuiPure
    ], TuiHintDescribeDirective.prototype, "element", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintDescribeDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHintDescribe]',
                        providers: [i1$1.tuiAsDriver(TuiHintDescribeDirective)],
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.NgZone, decorators: [{
                            type: i0.Inject,
                            args: [i0.NgZone]
                        }] }, { type: Document, decorators: [{
                            type: i0.Inject,
                            args: [common.DOCUMENT]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }];
        }, propDecorators: { tuiHintDescribe: [{
                    type: i0.Input
                }], element: [] } });

    var TuiHintDriverDirective = /** @class */ (function (_super) {
        __extends(TuiHintDriverDirective, _super);
        // TODO: Figure out why this is necessary under nx test runner
        function TuiHintDriverDirective(destroy$, drivers, vehicles) {
            var _this = _super.call(this, destroy$, drivers, vehicles) || this;
            _this.type = 'hint';
            return _this;
        }
        return TuiHintDriverDirective;
    }(i1$1.AbstractTuiDriverDirective));
    TuiHintDriverDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintDriverDirective, deps: [{ token: i3.TuiDestroyService, self: true }, { token: i1$1.TuiDriver }, { token: i1$1.TuiVehicle }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintDriverDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintDriverDirective, selector: "[tuiHint]", providers: [i3.TuiDestroyService], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintDriverDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHint]',
                        providers: [i3.TuiDestroyService],
                    }]
            }], ctorParameters: function () {
            return [{ type: i2__namespace$1.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i3.TuiDestroyService]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1$1.TuiDriver]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1$1.TuiVehicle]
                        }] }];
        } });

    var TuiHintHostDirective = /** @class */ (function (_super) {
        __extends(TuiHintHostDirective, _super);
        function TuiHintHostDirective() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.type = 'hint';
            return _this;
        }
        TuiHintHostDirective.prototype.getClientRect = function () {
            var _a;
            return ((_a = this.tuiHintHost) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) || i3.EMPTY_CLIENT_RECT;
        };
        return TuiHintHostDirective;
    }(i1$1.TuiRectAccessor));
    TuiHintHostDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintHostDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintHostDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintHostDirective, selector: "[tuiHint][tuiHintHost]", inputs: { tuiHintHost: "tuiHintHost" }, providers: [i1$1.tuiAsRectAccessor(TuiHintHostDirective)], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintHostDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHint][tuiHintHost]',
                        providers: [i1$1.tuiAsRectAccessor(TuiHintHostDirective)],
                    }]
            }], propDecorators: { tuiHintHost: [{
                    type: i0.Input
                }] } });

    var TuiHintManualDirective = /** @class */ (function (_super) {
        __extends(TuiHintManualDirective, _super);
        function TuiHintManualDirective(hover) {
            var _this = _super.call(this, function (subscriber) { return _this.stream$.subscribe(subscriber); }) || this;
            _this.stream$ = new i2$1.BehaviorSubject(false);
            _this.tuiHintManual = false;
            _this.type = 'hint';
            hover.enabled = false;
            return _this;
        }
        TuiHintManualDirective.prototype.ngOnChanges = function () {
            this.stream$.next(this.tuiHintManual);
        };
        return TuiHintManualDirective;
    }(i1$1.TuiDriver));
    TuiHintManualDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintManualDirective, deps: [{ token: TuiHintHoverDirective }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintManualDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintManualDirective, selector: "[tuiHint][tuiHintManual]", inputs: { tuiHintManual: "tuiHintManual" }, providers: [i1$1.tuiAsDriver(TuiHintManualDirective)], usesInheritance: true, usesOnChanges: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintManualDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHint][tuiHintManual]',
                        providers: [i1$1.tuiAsDriver(TuiHintManualDirective)],
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiHintHoverDirective, decorators: [{
                            type: i0.Inject,
                            args: [TuiHintHoverDirective]
                        }] }];
        }, propDecorators: { tuiHintManual: [{
                    type: i0.Input
                }] } });

    var OFFSET = 8;
    var ARROW_OFFSET = 22;
    var TOP = 0;
    var LEFT = 1;
    var TuiHintPositionDirective = /** @class */ (function (_super) {
        __extends(TuiHintPositionDirective, _super);
        function TuiHintPositionDirective(options, viewport, directive, accessors) {
            var _this = _super.call(this) || this;
            _this.options = options;
            _this.viewport = viewport;
            _this.directive = directive;
            _this.accessors = accessors;
            _this.points = constants.TUI_HINT_DIRECTIONS.reduce(function (acc, direction) {
                var _c;
                return (Object.assign(Object.assign({}, acc), (_c = {}, _c[direction] = [0, 0], _c)));
            }, {});
            _this.direction = _this.options.direction;
            _this.type = 'hint';
            return _this;
        }
        // eslint-disable-next-line max-statements
        TuiHintPositionDirective.prototype.getPosition = function (_c) {
            var _this = this;
            var width = _c.width, height = _c.height;
            var _a, _b;
            var hostRect = (_b = (_a = this.accessor) === null || _a === void 0 ? void 0 : _a.getClientRect()) !== null && _b !== void 0 ? _b : i3.EMPTY_CLIENT_RECT;
            var leftCenter = hostRect.left + hostRect.width / 2;
            var topCenter = hostRect.top + hostRect.height / 2;
            this.points['top-left'][TOP] = hostRect.top - height - OFFSET;
            this.points['top-left'][LEFT] = leftCenter - width + ARROW_OFFSET;
            this.points.top[TOP] = this.points['top-left'][TOP];
            this.points.top[LEFT] = leftCenter - width / 2;
            this.points['top-right'][TOP] = this.points['top-left'][TOP];
            this.points['top-right'][LEFT] = leftCenter - ARROW_OFFSET;
            this.points['bottom-left'][TOP] = hostRect.bottom + OFFSET;
            this.points['bottom-left'][LEFT] = this.points['top-left'][LEFT];
            this.points.bottom[TOP] = this.points['bottom-left'][TOP];
            this.points.bottom[LEFT] = this.points.top[LEFT];
            this.points['bottom-right'][TOP] = this.points['bottom-left'][TOP];
            this.points['bottom-right'][LEFT] = this.points['top-right'][LEFT];
            this.points['left-top'][TOP] = topCenter - height + ARROW_OFFSET;
            this.points['left-top'][LEFT] = hostRect.left - width - OFFSET;
            this.points.left[TOP] = topCenter - height / 2;
            this.points.left[LEFT] = this.points['left-top'][LEFT];
            this.points['left-bottom'][TOP] = topCenter - ARROW_OFFSET;
            this.points['left-bottom'][LEFT] = this.points['left-top'][LEFT];
            this.points['right-top'][TOP] = this.points['left-top'][TOP];
            this.points['right-top'][LEFT] = hostRect.right + OFFSET;
            this.points.right[TOP] = this.points.left[TOP];
            this.points.right[LEFT] = this.points['right-top'][LEFT];
            this.points['right-bottom'][TOP] = this.points['left-bottom'][TOP];
            this.points['right-bottom'][LEFT] = this.points['right-top'][LEFT];
            if (this.checkPosition(this.points[this.direction], width, height)) {
                return this.points[this.direction];
            }
            var direction = constants.TUI_HINT_DIRECTIONS.find(function (direction) { return _this.checkPosition(_this.points[direction], width, height); });
            return this.points[direction || this.fallback];
        };
        Object.defineProperty(TuiHintPositionDirective.prototype, "accessor", {
            get: function () {
                return i1$1.tuiFallbackRectAccessor('hint')(this.accessors, this.directive);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiHintPositionDirective.prototype, "fallback", {
            get: function () {
                return this.points.top[TOP] >
                    this.viewport.getClientRect().bottom - this.points.bottom[TOP]
                    ? 'top'
                    : 'bottom';
            },
            enumerable: false,
            configurable: true
        });
        TuiHintPositionDirective.prototype.checkPosition = function (_c, width, height) {
            var _d = __read(_c, 2), top = _d[0], left = _d[1];
            var viewport = this.viewport.getClientRect();
            return (top > OFFSET &&
                left > OFFSET &&
                top + height < viewport.bottom - OFFSET &&
                left + width < viewport.right - OFFSET);
        };
        return TuiHintPositionDirective;
    }(i1$1.TuiPositionAccessor));
    TuiHintPositionDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintPositionDirective, deps: [{ token: TUI_HINT_OPTIONS }, { token: tokens.TUI_VIEWPORT }, { token: TuiHintDirective }, { token: i1$1.TuiRectAccessor }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHintPositionDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintPositionDirective, selector: "[tuiHint]:not([tuiHintCustomPosition])", inputs: { direction: ["tuiHintDirection", "direction"] }, providers: [i1$1.tuiAsPositionAccessor(TuiHintPositionDirective)], usesInheritance: true, ngImport: i0__namespace });
    __decorate([
        i3.tuiDefaultProp()
    ], TuiHintPositionDirective.prototype, "direction", void 0);
    __decorate([
        i3.tuiPure
    ], TuiHintPositionDirective.prototype, "accessor", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintPositionDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHint]:not([tuiHintCustomPosition])',
                        providers: [i1$1.tuiAsPositionAccessor(TuiHintPositionDirective)],
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_HINT_OPTIONS]
                        }] }, { type: i1__namespace$1.TuiRectAccessor, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_VIEWPORT]
                        }] }, { type: i1__namespace$1.TuiRectAccessor, decorators: [{
                            type: i0.Inject,
                            args: [TuiHintDirective]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1$1.TuiRectAccessor]
                        }] }];
        }, propDecorators: { direction: [{
                    type: i0.Input,
                    args: ['tuiHintDirection']
                }], accessor: [] } });

    var TuiHintModule = /** @class */ (function () {
        function TuiHintModule() {
        }
        return TuiHintModule;
    }());
    TuiHintModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiHintModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintModule, declarations: [TuiHintComponent,
            TuiHintDirective,
            TuiHintDriverDirective,
            TuiHintHostDirective,
            TuiHintHoverDirective,
            TuiHintManualDirective,
            TuiHintPointerDirective,
            TuiHintDescribeDirective,
            TuiHintPositionDirective,
            TuiHintOptionsDirective], imports: [common.CommonModule, i1.PolymorpheusModule], exports: [TuiHintComponent,
            TuiHintDirective,
            TuiHintDriverDirective,
            TuiHintHostDirective,
            TuiHintHoverDirective,
            TuiHintManualDirective,
            TuiHintPointerDirective,
            TuiHintDescribeDirective,
            TuiHintPositionDirective,
            TuiHintOptionsDirective] });
    TuiHintModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintModule, imports: [[common.CommonModule, i1.PolymorpheusModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHintModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule, i1.PolymorpheusModule],
                        declarations: [
                            TuiHintComponent,
                            TuiHintDirective,
                            TuiHintDriverDirective,
                            TuiHintHostDirective,
                            TuiHintHoverDirective,
                            TuiHintManualDirective,
                            TuiHintPointerDirective,
                            TuiHintDescribeDirective,
                            TuiHintPositionDirective,
                            TuiHintOptionsDirective,
                        ],
                        exports: [
                            TuiHintComponent,
                            TuiHintDirective,
                            TuiHintDriverDirective,
                            TuiHintHostDirective,
                            TuiHintHoverDirective,
                            TuiHintManualDirective,
                            TuiHintPointerDirective,
                            TuiHintDescribeDirective,
                            TuiHintPositionDirective,
                            TuiHintOptionsDirective,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_HINT_COMPONENT = TUI_HINT_COMPONENT;
    exports.TUI_HINT_DEFAULT_OPTIONS = TUI_HINT_DEFAULT_OPTIONS;
    exports.TUI_HINT_OPTIONS = TUI_HINT_OPTIONS;
    exports.TuiHintComponent = TuiHintComponent;
    exports.TuiHintDescribeDirective = TuiHintDescribeDirective;
    exports.TuiHintDirective = TuiHintDirective;
    exports.TuiHintDriverDirective = TuiHintDriverDirective;
    exports.TuiHintHostDirective = TuiHintHostDirective;
    exports.TuiHintHoverDirective = TuiHintHoverDirective;
    exports.TuiHintManualDirective = TuiHintManualDirective;
    exports.TuiHintModule = TuiHintModule;
    exports.TuiHintOptionsDirective = TuiHintOptionsDirective;
    exports.TuiHintPointerDirective = TuiHintPointerDirective;
    exports.TuiHintPositionDirective = TuiHintPositionDirective;
    exports.tuiHintOptionsProvider = tuiHintOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-directives-hint.umd.js.map
