(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/animations')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/animations', ['exports', '@angular/animations'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.animations = {}), global.ng.animations));
})(this, (function (exports, animations) { 'use strict';

    var TRANSITION = "{{duration}}ms ease-in-out";
    var DURATION = { params: { duration: 300 } };
    var STAGGER = 300;
    var tuiHeightCollapse = animations.trigger("tuiHeightCollapse", [
        animations.transition(":enter", [animations.style({ height: 0 }), animations.animate(TRANSITION, animations.style({ height: "*" }))], DURATION),
        animations.transition(":leave", [animations.style({ height: "*" }), animations.animate(TRANSITION, animations.style({ height: 0 }))], DURATION),
    ]);
    var tuiHeightCollapseList = animations.trigger("tuiHeightCollapseList", [
        animations.transition("* => *", [
            animations.query(":enter", [
                animations.style({ height: 0 }),
                animations.stagger(STAGGER, [animations.animate(TRANSITION, animations.style({ height: "*" }))]),
            ], {
                optional: true,
            }),
            animations.query(":leave", [
                animations.style({ height: "*" }),
                animations.stagger(STAGGER, [animations.animate(TRANSITION, animations.style({ height: 0 }))]),
            ], {
                optional: true,
            }),
        ], DURATION),
    ]);
    var tuiWidthCollapse = animations.trigger("tuiWidthCollapse", [
        animations.transition(":enter", [animations.style({ width: 0 }), animations.animate(TRANSITION, animations.style({ width: "*" }))], DURATION),
        animations.transition(":leave", [animations.style({ width: "*" }), animations.animate(TRANSITION, animations.style({ width: 0 }))], DURATION),
    ]);
    var tuiWidthCollapseList = animations.trigger("tuiWidthCollapseList", [
        animations.transition("* => *", [
            animations.query(":enter", [
                animations.style({ width: 0 }),
                animations.stagger(STAGGER, [animations.animate(TRANSITION, animations.style({ width: "*" }))]),
            ], {
                optional: true,
            }),
            animations.query(":leave", [
                animations.style({ width: "*" }),
                animations.stagger(STAGGER, [animations.animate(TRANSITION, animations.style({ width: 0 }))]),
            ], {
                optional: true,
            }),
        ], DURATION),
    ]);
    var tuiFadeIn = animations.trigger("tuiFadeIn", [
        animations.transition(":enter", [animations.style({ opacity: 0 }), animations.animate(TRANSITION, animations.style({ opacity: 1 }))], DURATION),
        animations.transition(":leave", [animations.style({ opacity: 1 }), animations.animate(TRANSITION, animations.style({ opacity: 0 }))], DURATION),
    ]);
    var tuiFadeInList = animations.trigger("tuiFadeInList", [
        animations.transition("* => *", [
            animations.query(":enter", [
                animations.style({ opacity: 0 }),
                animations.stagger(STAGGER, [animations.animate(TRANSITION, animations.style({ opacity: 1 }))]),
            ], {
                optional: true,
            }),
            animations.query(":leave", [
                animations.style({ opacity: 1 }),
                animations.stagger(STAGGER, [animations.animate(TRANSITION, animations.style({ opacity: 0 }))]),
            ], {
                optional: true,
            }),
        ], DURATION),
    ]);
    var tuiFadeInTop = animations.trigger("tuiFadeInTop", [
        animations.transition(":enter", [
            animations.style({ transform: "translateY(-10px)", opacity: 0 }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(0)", opacity: 1 })),
        ], DURATION),
        animations.transition(":leave", [
            animations.style({ transform: "translateY(0)", opacity: 1 }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(-10px)", opacity: 0 })),
        ], DURATION),
    ]);
    var tuiFadeInBottom = animations.trigger("tuiFadeInBottom", [
        animations.transition(":enter", [
            animations.style({ transform: "translateY(10px)", opacity: 0 }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(0)", opacity: 1 })),
        ], DURATION),
        animations.transition(":leave", [
            animations.style({ transform: "translateY(0)", opacity: 1 }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(10px)", opacity: 0 })),
        ], DURATION),
    ]);
    var tuiDropdownAnimation = animations.trigger("tuiDropdownAnimation", [
        animations.transition("* => " + "fadeInTop" /* FadeInTop */, [
            animations.style({ transform: "translateY(-10px)", opacity: 0 }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(0)", opacity: 1 })),
        ], DURATION),
        animations.transition("* => " + "fadeInBottom" /* FadeInBottom */, [
            animations.style({ transform: "translateY(10px)", opacity: 0 }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(0)", opacity: 1 })),
        ], DURATION),
        animations.transition("fadeInBottom" /* FadeInBottom */ + " => *", [
            animations.style({ transform: "translateY(0)", opacity: 1 }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(10px)", opacity: 0 })),
        ], DURATION),
        animations.transition("fadeInTop" /* FadeInTop */ + " => *", [
            animations.style({ transform: "translateY(0)", opacity: 1 }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(-10px)", opacity: 0 })),
        ], DURATION),
    ]);
    var tuiScaleIn = animations.trigger("tuiScaleIn", [
        animations.transition(":enter", [
            animations.style({ transform: "scale(0)" }),
            animations.animate(TRANSITION, animations.style({ transform: "scale(1)" })),
        ], DURATION),
        animations.transition(":leave", [
            animations.style({ transform: "scale(1)" }),
            animations.animate(TRANSITION, animations.style({ transform: "scale(0)" })),
        ], DURATION),
    ]);
    var tuiScaleInList = animations.trigger("tuiScaleInList", [
        animations.transition("* => *", [
            animations.query(":enter", [
                animations.style({ transform: "scale(0)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "scale(1)" })),
                ]),
            ], { optional: true }),
            animations.query(":leave", [
                animations.style({ transform: "scale(1)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "scale(0)" })),
                ]),
            ], { optional: true }),
        ], DURATION),
    ]);
    var tuiSlideIn = animations.trigger("tuiSlideIn", [
        animations.transition("* => left", [
            animations.style({ transform: "translateX(-100%)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateX(0)" })),
        ], DURATION),
        animations.transition("left => *", [
            animations.style({ transform: "translateX(0)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateX(-100%)" })),
        ], DURATION),
        animations.transition("* => right", [
            animations.style({ transform: "translateX(100%)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateX(0)" })),
        ], DURATION),
        animations.transition("right => *", [
            animations.style({ transform: "translateX(0)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateX(100%)" })),
        ], DURATION),
    ]);
    var tuiSlideInLeft = animations.trigger("tuiSlideInLeft", [
        animations.transition(":enter", [
            animations.style({ transform: "translateX(-100%)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateX(0)" })),
        ], DURATION),
        animations.transition(":leave", [
            animations.style({ transform: "translateX(0)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateX(-100%)" })),
        ], DURATION),
    ]);
    var tuiSlideInLeftList = animations.trigger("tuiSlideInLeftList", [
        animations.transition("* => *", [
            animations.query(":enter", [
                animations.style({ transform: "translateX(-100%)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "translateX(0)" })),
                ]),
            ], { optional: true }),
            animations.query(":leave", [
                animations.style({ transform: "translateX(0)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "translateX(-100%)" })),
                ]),
            ], { optional: true }),
        ], DURATION),
    ]);
    var tuiSlideInRight = animations.trigger("tuiSlideInRight", [
        animations.transition(":enter", [
            animations.style({ transform: "translateX(100%)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateX(0)" })),
        ], DURATION),
        animations.transition(":leave", [
            animations.style({ transform: "translateX(0)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateX(100%)" })),
        ], DURATION),
    ]);
    var tuiSlideInRightList = animations.trigger("tuiSlideInRightList", [
        animations.transition("* => *", [
            animations.query(":enter", [
                animations.style({ transform: "translateX(100%)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "translateX(0)" })),
                ]),
            ], { optional: true }),
            animations.query(":leave", [
                animations.style({ transform: "translateX(0)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "translateX(100%)" })),
                ]),
            ], { optional: true }),
        ], DURATION),
    ]);
    var tuiSlideInTop = animations.trigger("tuiSlideInTop", [
        animations.transition(":enter", [
            animations.style({ transform: "translate3d(0,{{start}},0)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translate3d(0,{{end}},0)" })),
        ], { params: { end: 0, start: "100%", duration: 300 } }),
        animations.transition(":leave", [
            animations.style({ transform: "translate3d(0,{{end}},0)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translate3d(0,{{start}},0)" })),
        ], { params: { end: 0, start: "100%", duration: 300 } }),
    ]);
    var tuiSlideInTopList = animations.trigger("tuiSlideInTopList", [
        animations.transition("* => *", [
            animations.query(":enter", [
                animations.style({ transform: "translateY(100%)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "translateY(0)" })),
                ]),
            ], { optional: true }),
            animations.query(":leave", [
                animations.style({ transform: "translateY(0)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "translateY(100%)" })),
                ]),
            ], { optional: true }),
        ], DURATION),
    ]);
    var tuiSlideInBottom = animations.trigger("tuiSlideInBottom", [
        animations.transition(":enter", [
            animations.style({ transform: "translateY(-100%)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(0)" })),
        ], DURATION),
        animations.transition(":leave", [
            animations.style({ transform: "translateY(0)" }),
            animations.animate(TRANSITION, animations.style({ transform: "translateY(-100%)" })),
        ], DURATION),
    ]);
    var tuiSlideInBottomList = animations.trigger("tuiSlideInBottomList", [
        animations.transition("* => *", [
            animations.query(":enter", [
                animations.style({ transform: "translateY(-100%)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "translateY(0)" })),
                ]),
            ], { optional: true }),
            animations.query(":leave", [
                animations.style({ transform: "translateY(0)" }),
                animations.stagger(STAGGER, [
                    animations.animate(TRANSITION, animations.style({ transform: "translateY(-100%)" })),
                ]),
            ], { optional: true }),
        ], DURATION),
    ]);

    /**
     * Generated bundle index. Do not edit.
     */

    exports.tuiDropdownAnimation = tuiDropdownAnimation;
    exports.tuiFadeIn = tuiFadeIn;
    exports.tuiFadeInBottom = tuiFadeInBottom;
    exports.tuiFadeInList = tuiFadeInList;
    exports.tuiFadeInTop = tuiFadeInTop;
    exports.tuiHeightCollapse = tuiHeightCollapse;
    exports.tuiHeightCollapseList = tuiHeightCollapseList;
    exports.tuiScaleIn = tuiScaleIn;
    exports.tuiScaleInList = tuiScaleInList;
    exports.tuiSlideIn = tuiSlideIn;
    exports.tuiSlideInBottom = tuiSlideInBottom;
    exports.tuiSlideInBottomList = tuiSlideInBottomList;
    exports.tuiSlideInLeft = tuiSlideInLeft;
    exports.tuiSlideInLeftList = tuiSlideInLeftList;
    exports.tuiSlideInRight = tuiSlideInRight;
    exports.tuiSlideInRightList = tuiSlideInRightList;
    exports.tuiSlideInTop = tuiSlideInTop;
    exports.tuiSlideInTopList = tuiSlideInTopList;
    exports.tuiWidthCollapse = tuiWidthCollapse;
    exports.tuiWidthCollapseList = tuiWidthCollapseList;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-animations.umd.js.map
