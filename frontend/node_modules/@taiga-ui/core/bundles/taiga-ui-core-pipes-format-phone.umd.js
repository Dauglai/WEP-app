(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/utils/format')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/pipes/format-phone', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/utils/format'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.pipes = global["taiga-ui"].core.pipes || {}, global["taiga-ui"].core.pipes["format-phone"] = {}), global.ng.core, global.cdk, global["taiga-ui"].core.utils.format));
})(this, (function (exports, i0, cdk, format) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var TuiFormatPhonePipe = /** @class */ (function () {
        function TuiFormatPhonePipe() {
        }
        /**
         * Formats phone number string of +7XXXXXXXXXX format with adding separator symbols
         * @param value
         * @param countryCode
         * @param phoneMask
         * @return formatted phone number string +7(XXX)XXX-XX-XX
         */
        TuiFormatPhonePipe.prototype.transform = function (value, countryCode, phoneMask) {
            if (countryCode === void 0) { countryCode = cdk.CHAR_PLUS + "7"; }
            if (phoneMask === void 0) { phoneMask = "(###) ###-##-##"; }
            ngDevMode &&
                cdk.tuiAssert.assert(value !== undefined, "Undefined was passed to tuiFormatPhone pipe");
            return format.tuiFormatPhone(value, countryCode, phoneMask);
        };
        return TuiFormatPhonePipe;
    }());
    TuiFormatPhonePipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFormatPhonePipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiFormatPhonePipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFormatPhonePipe, name: "tuiFormatPhone" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFormatPhonePipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: "tuiFormatPhone" }]
            }] });

    var TuiFormatPhonePipeModule = /** @class */ (function () {
        function TuiFormatPhonePipeModule() {
        }
        return TuiFormatPhonePipeModule;
    }());
    TuiFormatPhonePipeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFormatPhonePipeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiFormatPhonePipeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFormatPhonePipeModule, declarations: [TuiFormatPhonePipe], exports: [TuiFormatPhonePipe] });
    TuiFormatPhonePipeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFormatPhonePipeModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFormatPhonePipeModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        exports: [TuiFormatPhonePipe],
                        declarations: [TuiFormatPhonePipe],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiFormatPhonePipe = TuiFormatPhonePipe;
    exports.TuiFormatPhonePipeModule = TuiFormatPhonePipeModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-pipes-format-phone.umd.js.map
