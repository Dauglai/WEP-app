{"version":3,"file":"taiga-ui-core-directives-wrapper.umd.js","sources":["../../../projects/core/directives/wrapper/wrapper.directive.ts","../../../projects/core/directives/wrapper/wrapper.module.ts","../../../projects/core/directives/wrapper/taiga-ui-core-directives-wrapper.ts"],"sourcesContent":["import {Directive, HostBinding, Inject, Input} from '@angular/core';\nimport {TuiInteractiveState} from '@taiga-ui/core/enums';\nimport {MODE_PROVIDER} from '@taiga-ui/core/providers';\nimport {TUI_MODE} from '@taiga-ui/core/tokens';\nimport {TuiBrightness} from '@taiga-ui/core/types';\nimport {Observable} from 'rxjs';\n\n@Directive({\n    selector: '[tuiWrapper]',\n    providers: [MODE_PROVIDER],\n    host: {\n        '($.data-mode.attr)': 'mode$',\n    },\n})\nexport class TuiWrapperDirective {\n    @Input()\n    disabled = false;\n\n    @Input()\n    readOnly = false;\n\n    @Input()\n    hover: boolean | null = null;\n\n    @Input()\n    active: boolean | null = null;\n\n    @Input()\n    focus = false;\n\n    @Input()\n    invalid = false;\n\n    @Input()\n    @HostBinding('attr.data-appearance')\n    appearance = '';\n\n    constructor(@Inject(TUI_MODE) readonly mode$: Observable<TuiBrightness | null>) {}\n\n    @HostBinding('class._invalid')\n    get computedInvalid(): boolean {\n        return !this.disabled && !this.readOnly && this.invalid;\n    }\n\n    @HostBinding('class._focused')\n    get computedFocused(): boolean {\n        return this.focus && !this.disabled;\n    }\n\n    @HostBinding('attr.data-state')\n    get interactiveState(): TuiInteractiveState | string | null {\n        if (this.disabled) {\n            return TuiInteractiveState.Disabled;\n        }\n\n        if (this.readOnly) {\n            return TuiInteractiveState.Readonly;\n        }\n\n        if (this.active) {\n            return TuiInteractiveState.Active;\n        }\n\n        if (this.hover) {\n            return TuiInteractiveState.Hover;\n        }\n\n        return null;\n    }\n\n    @HostBinding('class._no-hover')\n    get noHover(): boolean {\n        return this.readOnly || this.hover === false;\n    }\n\n    @HostBinding('class._no-active')\n    get noActive(): boolean {\n        return this.readOnly || this.active === false;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiWrapperDirective} from './wrapper.directive';\n\n@NgModule({\n    declarations: [TuiWrapperDirective],\n    exports: [TuiWrapperDirective],\n})\nexport class TuiWrapperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0","TUI_MODE","MODE_PROVIDER","Directive","Inject","Input","HostBinding","NgModule"],"mappings":"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"}