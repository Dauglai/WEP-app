{"version":3,"file":"taiga-ui-core-pipes-calendar-sheet.umd.js","sources":["../../../projects/core/pipes/calendar-sheet/utils.ts","../../../projects/core/pipes/calendar-sheet/calendar-sheet.pipe.ts","../../../projects/core/pipes/calendar-sheet/calendar-sheet.module.ts","../../../projects/core/pipes/calendar-sheet/taiga-ui-core-pipes-calendar-sheet.ts"],"sourcesContent":["import {\n    DAYS_IN_WEEK,\n    tuiAssert,\n    TuiDay,\n    TuiDayOfWeek,\n    tuiInRange,\n    TuiMonth,\n} from '@taiga-ui/cdk';\n\n/**\n * Computes day of week offset of the beginning of the month\n */\nconst getMonthStartDaysOffset = (\n    month: TuiMonth,\n    firstDayOfWeek: TuiDayOfWeek,\n): number => {\n    const startMonthOffsetFromSunday = new Date(month.year, month.month, 1).getDay();\n\n    return startMonthOffsetFromSunday >= firstDayOfWeek\n        ? startMonthOffsetFromSunday - firstDayOfWeek\n        : DAYS_IN_WEEK - (firstDayOfWeek - startMonthOffsetFromSunday);\n};\n\n/**\n * Calculated day on a calendar grid\n * @return resulting day on these coordinates (could exceed passed month)\n */\nexport const getDayFromMonthRowCol = ({\n    month,\n    rowIndex,\n    colIndex,\n    firstDayOfWeek,\n}: {\n    month: TuiMonth;\n    /**\n     * row in a calendar\n     */\n    rowIndex: number;\n    /**\n     * column in a calendar\n     */\n    colIndex: number;\n    /**\n     * first day of the week index (Sunday - 0, Saturday - 6)\n     */\n    firstDayOfWeek: TuiDayOfWeek;\n}): TuiDay => {\n    ngDevMode && tuiAssert.assert(Number.isInteger(rowIndex));\n    ngDevMode && tuiAssert.assert(tuiInRange(rowIndex, 0, 6));\n    ngDevMode && tuiAssert.assert(Number.isInteger(colIndex));\n    ngDevMode && tuiAssert.assert(tuiInRange(colIndex, 0, DAYS_IN_WEEK));\n\n    let day =\n        rowIndex * DAYS_IN_WEEK +\n        colIndex -\n        getMonthStartDaysOffset(month, firstDayOfWeek) +\n        1;\n\n    if (day > month.daysCount) {\n        day -= month.daysCount;\n        month = month.append({month: 1});\n    }\n\n    if (day <= 0) {\n        month = month.append({month: -1});\n        day = month.daysCount + day;\n    }\n\n    return new TuiDay(month.year, month.month, day);\n};\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {DAYS_IN_WEEK, TuiDay, TuiDayOfWeek, TuiMonth} from '@taiga-ui/cdk';\nimport {TUI_FIRST_DAY_OF_WEEK} from '@taiga-ui/core/tokens';\n\nimport {getDayFromMonthRowCol} from './utils';\n\nconst CALENDAR_ROWS_COUNT = 6;\n\n@Pipe({\n    name: `tuiCalendarSheet`,\n})\nexport class TuiCalendarSheetPipe implements PipeTransform {\n    private currentMonth: TuiMonth | null = null;\n    private currentSheet: ReadonlyArray<readonly TuiDay[]> = [];\n\n    constructor(\n        @Inject(TUI_FIRST_DAY_OF_WEEK)\n        private readonly firstDayOfWeek: TuiDayOfWeek,\n    ) {}\n\n    transform(\n        month: TuiMonth,\n        showAdjacentDays: boolean = false,\n    ): ReadonlyArray<readonly TuiDay[]> {\n        if (this.currentMonth?.monthSame(month)) {\n            return this.currentSheet;\n        }\n\n        const sheet: Array<readonly TuiDay[]> = [];\n\n        for (let rowIndex = 0; rowIndex < CALENDAR_ROWS_COUNT; rowIndex++) {\n            const row: TuiDay[] = [];\n\n            for (let colIndex = 0; colIndex < DAYS_IN_WEEK; colIndex++) {\n                const day = getDayFromMonthRowCol({\n                    month,\n                    rowIndex,\n                    colIndex,\n                    firstDayOfWeek: this.firstDayOfWeek,\n                });\n\n                const isPrevMonthDay = (day: TuiDay, relativeToMonth = month): boolean =>\n                    day.year < relativeToMonth.year || day.month < relativeToMonth.month;\n\n                const isNextMonthDay = (day: TuiDay, relativeToMonth = month): boolean =>\n                    day.year > relativeToMonth.year || day.month > relativeToMonth.month;\n\n                if (isPrevMonthDay(day) && !showAdjacentDays) {\n                    continue;\n                }\n\n                if (isNextMonthDay(day) && !showAdjacentDays) {\n                    break;\n                }\n\n                row.push(day);\n            }\n\n            sheet.push(row);\n        }\n\n        this.currentSheet = sheet.filter(row => row.length);\n        this.currentMonth = month;\n\n        return this.currentSheet;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiCalendarSheetPipe} from './calendar-sheet.pipe';\n\n@NgModule({\n    declarations: [TuiCalendarSheetPipe],\n    exports: [TuiCalendarSheetPipe],\n})\nexport class TuiCalendarSheetPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["DAYS_IN_WEEK","tuiAssert","tuiInRange","TuiDay","i0","TUI_FIRST_DAY_OF_WEEK","Pipe","Inject","NgModule"],"mappings":"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"}