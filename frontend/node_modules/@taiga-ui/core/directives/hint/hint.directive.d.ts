import { ElementRef, OnChanges, OnDestroy } from '@angular/core';
import { TuiActiveZoneDirective } from '@taiga-ui/cdk';
import { TuiRectAccessor, TuiVehicle } from '@taiga-ui/core/abstract';
import { TuiPortalItem } from '@taiga-ui/core/interfaces';
import { TuiHintService } from '@taiga-ui/core/services';
import { PolymorpheusComponent, PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { TuiHintOptions } from './hint-options.directive';
import * as i0 from "@angular/core";
export declare class TuiHintDirective<C> implements OnDestroy, OnChanges, TuiPortalItem<C>, TuiRectAccessor, TuiVehicle {
    private readonly el;
    readonly component: PolymorpheusComponent<unknown>;
    private readonly hintService;
    private readonly options;
    readonly activeZone?: TuiActiveZoneDirective | null | undefined;
    content: PolymorpheusContent<C>;
    context?: C;
    tuiHintAppearance: string | null;
    readonly type = "hint";
    constructor(el: ElementRef<HTMLElement>, component: PolymorpheusComponent<unknown>, hintService: TuiHintService, options: TuiHintOptions, activeZone?: TuiActiveZoneDirective | null | undefined);
    get appearance(): string;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    getClientRect(): ClientRect;
    toggle(show: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiHintDirective<any>, [null, null, null, null, { optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiHintDirective<any>, "[tuiHint]:not(ng-container)", never, { "content": "tuiHint"; "context": "tuiHintContext"; "tuiHintAppearance": "tuiHintAppearance"; }, {}, never>;
}
