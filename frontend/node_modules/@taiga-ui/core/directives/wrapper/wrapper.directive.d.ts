import { TuiInteractiveState } from '@taiga-ui/core/enums';
import { TuiBrightness } from '@taiga-ui/core/types';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiWrapperDirective {
    readonly mode$: Observable<TuiBrightness | null>;
    disabled: boolean;
    readOnly: boolean;
    hover: boolean | null;
    active: boolean | null;
    focus: boolean;
    invalid: boolean;
    appearance: string;
    constructor(mode$: Observable<TuiBrightness | null>);
    get computedInvalid(): boolean;
    get computedFocused(): boolean;
    get interactiveState(): TuiInteractiveState | string | null;
    get noHover(): boolean;
    get noActive(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiWrapperDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiWrapperDirective, "[tuiWrapper]", never, { "disabled": "disabled"; "readOnly": "readOnly"; "hover": "hover"; "active": "active"; "focus": "focus"; "invalid": "invalid"; "appearance": "appearance"; }, {}, never>;
}
