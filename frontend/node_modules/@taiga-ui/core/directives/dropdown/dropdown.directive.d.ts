import { AfterViewChecked, ComponentRef, ElementRef, Injector, OnChanges, OnDestroy, Type } from '@angular/core';
import { TuiActiveZoneDirective, TuiContextWithImplicit, TuiDropdownPortalService } from '@taiga-ui/cdk';
import { TuiRectAccessor, TuiVehicle } from '@taiga-ui/core/abstract';
import { TuiPortalItem } from '@taiga-ui/core/interfaces';
import { PolymorpheusComponent, PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import * as i0 from "@angular/core";
export declare class TuiDropdownDirective implements AfterViewChecked, OnDestroy, OnChanges, TuiPortalItem, TuiRectAccessor, TuiVehicle {
    readonly el: ElementRef<HTMLElement>;
    private readonly hapica;
    private readonly injector;
    private readonly dropdownService;
    content: PolymorpheusContent<TuiContextWithImplicit<TuiActiveZoneDirective>>;
    dropdownBoxRef: ComponentRef<unknown> | null;
    readonly type = "dropdown";
    readonly component: PolymorpheusComponent<unknown, any>;
    constructor(el: ElementRef<HTMLElement>, hapica: Type<unknown>, injector: Injector, dropdownService: TuiDropdownPortalService);
    get position(): 'absolute' | 'fixed';
    ngAfterViewChecked(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    getClientRect(): ClientRect;
    toggle(show: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDropdownDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiDropdownDirective, "[tuiDropdown]:not(ng-container)", ["tuiDropdown"], { "content": "tuiDropdown"; }, {}, never>;
}
