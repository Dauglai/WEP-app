(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/i18n/tokens'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/i18n/tools', ['exports', '@angular/core', '@taiga-ui/i18n/tokens', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].i18n = global["taiga-ui"].i18n || {}, global["taiga-ui"].i18n.tools = {}), global.ng.core, global["taiga-ui"].i18n.tokens, global.rxjs, global.rxjs.operators));
})(this, (function (exports, core, tokens, rxjs, operators) { 'use strict';

    function tuiExtractI18n(key) {
        return function () { return core.inject(tokens.TUI_LANGUAGE).pipe(operators.switchMap(function (streamOrValue) { return rxjs.isObservable(streamOrValue) ? streamOrValue : rxjs.of(streamOrValue); }), operators.map(function (lang) { return lang[key]; })); };
    }

    /**
     * Generated bundle index. Do not edit.
     */

    exports.tuiExtractI18n = tuiExtractI18n;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-i18n-tools.umd.js.map
