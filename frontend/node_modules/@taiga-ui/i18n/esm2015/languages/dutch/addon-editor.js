export const TUI_DUTCH_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: [`Effen kleur`, `Kleurverloop`],
    toolbarTools: {
        undo: `Undo`,
        redo: `Redo`,
        font: `Lettertype`,
        fontStyle: `Tekenstijl`,
        fontSize: `Punten`,
        bold: `Vet`,
        italic: `Cursief`,
        underline: `Onderstrepen`,
        strikeThrough: `Doorhalen`,
        justify: `Uitlijning`,
        justifyLeft: `Uitlijning links`,
        justifyCenter: `Uitlijning midden`,
        justifyRight: `Uitlijning rechts`,
        justifyFull: `Uitlijning uitvullen`,
        list: `Lijst`,
        indent: `Inspringen`,
        outdent: `Uitspringen`,
        unorderedList: `Ongesorteerde lijst`,
        orderedList: `Gesorteerde lijst`,
        quote: `Citeren`,
        foreColor: `Kleur`,
        backColor: `Achtergrondkleur`,
        hiliteColor: `Tekstmarkeringskleur`,
        clear: `Wis`,
        link: `Koppeling`,
        attach: `Bestand toevoegen`,
        tex: `TeX toevoegen`,
        code: `Code`,
        image: `Afbeelding toevoegen`,
        insertHorizontalRule: `Horizontale lijn toevoegen`,
        superscript: `Superscript`,
        subscript: `Subscript`,
        insertTable: `Insert table`,
        insertGroup: `Insert group`,
        hiliteGroup: `Hilite group`,
        removeGroup: `Remove group`,
        insertAnchor: `Insert anchor`,
        mergeCells: `Merge cells`,
        splitCells: `Split cells`,
        rowsColumnsManaging: `Managing rows and columns`,
        cellColor: `Cell color`,
        setDetails: `Details`,
        removeDetails: `Remove details`,
    },
    editorEditLink: {
        urlExample: `example.com`,
        anchorExample: `anchor`,
    },
    editorTableCommands: [
        [`Insert column before`, `Insert column after`],
        [`Insert row before`, `Insert row after`],
        [`Delete column`, `Delete row`],
    ],
    editorCodeOptions: [`Code in the text`, `Code in block`],
    editorFontOptions: {
        small: `Small`,
        large: `Large`,
        normal: `Normal`,
        title: `Title`,
        subtitle: `Subtitle`,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMvZHV0Y2gvYWRkb24tZWRpdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFzQjtJQUM5RCxzQkFBc0IsRUFBRSxDQUFDLGFBQWEsRUFBRSxjQUFjLENBQUM7SUFDdkQsWUFBWSxFQUFFO1FBQ1YsSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsTUFBTTtRQUNaLElBQUksRUFBRSxZQUFZO1FBQ2xCLFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFFBQVEsRUFBRSxRQUFRO1FBQ2xCLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLFNBQVM7UUFDakIsU0FBUyxFQUFFLGNBQWM7UUFDekIsYUFBYSxFQUFFLFdBQVc7UUFDMUIsT0FBTyxFQUFFLFlBQVk7UUFDckIsV0FBVyxFQUFFLGtCQUFrQjtRQUMvQixhQUFhLEVBQUUsbUJBQW1CO1FBQ2xDLFlBQVksRUFBRSxtQkFBbUI7UUFDakMsV0FBVyxFQUFFLHNCQUFzQjtRQUNuQyxJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxZQUFZO1FBQ3BCLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLGFBQWEsRUFBRSxxQkFBcUI7UUFDcEMsV0FBVyxFQUFFLG1CQUFtQjtRQUNoQyxLQUFLLEVBQUUsU0FBUztRQUNoQixTQUFTLEVBQUUsT0FBTztRQUNsQixTQUFTLEVBQUUsa0JBQWtCO1FBQzdCLFdBQVcsRUFBRSxzQkFBc0I7UUFDbkMsS0FBSyxFQUFFLEtBQUs7UUFDWixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsbUJBQW1CO1FBQzNCLEdBQUcsRUFBRSxlQUFlO1FBQ3BCLElBQUksRUFBRSxNQUFNO1FBQ1osS0FBSyxFQUFFLHNCQUFzQjtRQUM3QixvQkFBb0IsRUFBRSw0QkFBNEI7UUFDbEQsV0FBVyxFQUFFLGFBQWE7UUFDMUIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsWUFBWSxFQUFFLGVBQWU7UUFDN0IsVUFBVSxFQUFFLGFBQWE7UUFDekIsVUFBVSxFQUFFLGFBQWE7UUFDekIsbUJBQW1CLEVBQUUsMkJBQTJCO1FBQ2hELFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7UUFDL0MsQ0FBQyxtQkFBbUIsRUFBRSxrQkFBa0IsQ0FBQztRQUN6QyxDQUFDLGVBQWUsRUFBRSxZQUFZLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixFQUFFLGVBQWUsQ0FBQztJQUN4RCxpQkFBaUIsRUFBRTtRQUNmLEtBQUssRUFBRSxPQUFPO1FBQ2QsS0FBSyxFQUFFLE9BQU87UUFDZCxNQUFNLEVBQUUsUUFBUTtRQUNoQixLQUFLLEVBQUUsT0FBTztRQUNkLFFBQVEsRUFBRSxVQUFVO0tBQ3ZCO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VHVpTGFuZ3VhZ2VFZGl0b3J9IGZyb20gJ0B0YWlnYS11aS9pMThuL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX0RVVENIX0xBTkdVQUdFX0FERE9OX0VESVRPUjogVHVpTGFuZ3VhZ2VFZGl0b3IgPSB7XG4gICAgY29sb3JTZWxlY3Rvck1vZGVOYW1lczogW2BFZmZlbiBrbGV1cmAsIGBLbGV1cnZlcmxvb3BgXSxcbiAgICB0b29sYmFyVG9vbHM6IHtcbiAgICAgICAgdW5kbzogYFVuZG9gLFxuICAgICAgICByZWRvOiBgUmVkb2AsXG4gICAgICAgIGZvbnQ6IGBMZXR0ZXJ0eXBlYCxcbiAgICAgICAgZm9udFN0eWxlOiBgVGVrZW5zdGlqbGAsXG4gICAgICAgIGZvbnRTaXplOiBgUHVudGVuYCxcbiAgICAgICAgYm9sZDogYFZldGAsXG4gICAgICAgIGl0YWxpYzogYEN1cnNpZWZgLFxuICAgICAgICB1bmRlcmxpbmU6IGBPbmRlcnN0cmVwZW5gLFxuICAgICAgICBzdHJpa2VUaHJvdWdoOiBgRG9vcmhhbGVuYCxcbiAgICAgICAganVzdGlmeTogYFVpdGxpam5pbmdgLFxuICAgICAgICBqdXN0aWZ5TGVmdDogYFVpdGxpam5pbmcgbGlua3NgLFxuICAgICAgICBqdXN0aWZ5Q2VudGVyOiBgVWl0bGlqbmluZyBtaWRkZW5gLFxuICAgICAgICBqdXN0aWZ5UmlnaHQ6IGBVaXRsaWpuaW5nIHJlY2h0c2AsXG4gICAgICAgIGp1c3RpZnlGdWxsOiBgVWl0bGlqbmluZyB1aXR2dWxsZW5gLFxuICAgICAgICBsaXN0OiBgTGlqc3RgLFxuICAgICAgICBpbmRlbnQ6IGBJbnNwcmluZ2VuYCxcbiAgICAgICAgb3V0ZGVudDogYFVpdHNwcmluZ2VuYCxcbiAgICAgICAgdW5vcmRlcmVkTGlzdDogYE9uZ2Vzb3J0ZWVyZGUgbGlqc3RgLFxuICAgICAgICBvcmRlcmVkTGlzdDogYEdlc29ydGVlcmRlIGxpanN0YCxcbiAgICAgICAgcXVvdGU6IGBDaXRlcmVuYCxcbiAgICAgICAgZm9yZUNvbG9yOiBgS2xldXJgLFxuICAgICAgICBiYWNrQ29sb3I6IGBBY2h0ZXJncm9uZGtsZXVyYCxcbiAgICAgICAgaGlsaXRlQ29sb3I6IGBUZWtzdG1hcmtlcmluZ3NrbGV1cmAsXG4gICAgICAgIGNsZWFyOiBgV2lzYCxcbiAgICAgICAgbGluazogYEtvcHBlbGluZ2AsXG4gICAgICAgIGF0dGFjaDogYEJlc3RhbmQgdG9ldm9lZ2VuYCxcbiAgICAgICAgdGV4OiBgVGVYIHRvZXZvZWdlbmAsXG4gICAgICAgIGNvZGU6IGBDb2RlYCxcbiAgICAgICAgaW1hZ2U6IGBBZmJlZWxkaW5nIHRvZXZvZWdlbmAsXG4gICAgICAgIGluc2VydEhvcml6b250YWxSdWxlOiBgSG9yaXpvbnRhbGUgbGlqbiB0b2V2b2VnZW5gLFxuICAgICAgICBzdXBlcnNjcmlwdDogYFN1cGVyc2NyaXB0YCxcbiAgICAgICAgc3Vic2NyaXB0OiBgU3Vic2NyaXB0YCxcbiAgICAgICAgaW5zZXJ0VGFibGU6IGBJbnNlcnQgdGFibGVgLFxuICAgICAgICBpbnNlcnRHcm91cDogYEluc2VydCBncm91cGAsXG4gICAgICAgIGhpbGl0ZUdyb3VwOiBgSGlsaXRlIGdyb3VwYCxcbiAgICAgICAgcmVtb3ZlR3JvdXA6IGBSZW1vdmUgZ3JvdXBgLFxuICAgICAgICBpbnNlcnRBbmNob3I6IGBJbnNlcnQgYW5jaG9yYCxcbiAgICAgICAgbWVyZ2VDZWxsczogYE1lcmdlIGNlbGxzYCxcbiAgICAgICAgc3BsaXRDZWxsczogYFNwbGl0IGNlbGxzYCxcbiAgICAgICAgcm93c0NvbHVtbnNNYW5hZ2luZzogYE1hbmFnaW5nIHJvd3MgYW5kIGNvbHVtbnNgLFxuICAgICAgICBjZWxsQ29sb3I6IGBDZWxsIGNvbG9yYCxcbiAgICAgICAgc2V0RGV0YWlsczogYERldGFpbHNgLFxuICAgICAgICByZW1vdmVEZXRhaWxzOiBgUmVtb3ZlIGRldGFpbHNgLFxuICAgIH0sXG4gICAgZWRpdG9yRWRpdExpbms6IHtcbiAgICAgICAgdXJsRXhhbXBsZTogYGV4YW1wbGUuY29tYCxcbiAgICAgICAgYW5jaG9yRXhhbXBsZTogYGFuY2hvcmAsXG4gICAgfSxcbiAgICBlZGl0b3JUYWJsZUNvbW1hbmRzOiBbXG4gICAgICAgIFtgSW5zZXJ0IGNvbHVtbiBiZWZvcmVgLCBgSW5zZXJ0IGNvbHVtbiBhZnRlcmBdLFxuICAgICAgICBbYEluc2VydCByb3cgYmVmb3JlYCwgYEluc2VydCByb3cgYWZ0ZXJgXSxcbiAgICAgICAgW2BEZWxldGUgY29sdW1uYCwgYERlbGV0ZSByb3dgXSxcbiAgICBdLFxuICAgIGVkaXRvckNvZGVPcHRpb25zOiBbYENvZGUgaW4gdGhlIHRleHRgLCBgQ29kZSBpbiBibG9ja2BdLFxuICAgIGVkaXRvckZvbnRPcHRpb25zOiB7XG4gICAgICAgIHNtYWxsOiBgU21hbGxgLFxuICAgICAgICBsYXJnZTogYExhcmdlYCxcbiAgICAgICAgbm9ybWFsOiBgTm9ybWFsYCxcbiAgICAgICAgdGl0bGU6IGBUaXRsZWAsXG4gICAgICAgIHN1YnRpdGxlOiBgU3VidGl0bGVgLFxuICAgIH0sXG59O1xuIl19