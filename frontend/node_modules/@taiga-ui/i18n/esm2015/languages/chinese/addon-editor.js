export const TUI_CHINESE_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: [`纯色`, `渐变色`],
    toolbarTools: {
        undo: `撤消`,
        redo: `重做`,
        font: `字体`,
        fontStyle: `字体样式`,
        fontSize: `字体大小`,
        bold: `加粗`,
        italic: `斜体`,
        underline: `下划线`,
        strikeThrough: `删除线`,
        justify: `对齐`,
        justifyLeft: `左对齐`,
        justifyCenter: `中心对齐`,
        justifyRight: `右对齐`,
        justifyFull: `两端对齐`,
        list: `列表`,
        indent: `缩进`,
        outdent: `减小缩进`,
        unorderedList: `无序列表`,
        orderedList: `有序列表`,
        quote: `引用`,
        foreColor: `颜色`,
        backColor: `背景颜色`,
        hiliteColor: `高亮颜色`,
        clear: `清除`,
        link: `链接`,
        attach: `附加文件`,
        tex: `插入 TeX`,
        code: `代码`,
        image: `插入图片`,
        insertHorizontalRule: `插入水平线`,
        superscript: `上标`,
        subscript: `下标`,
        insertTable: `插入表格`,
        insertGroup: `Insert group`,
        hiliteGroup: `Hilite group`,
        removeGroup: `Remove group`,
        insertAnchor: `Insert anchor`,
        mergeCells: `合并单元格`,
        splitCells: `拆分单元格`,
        rowsColumnsManaging: `管理行和列`,
        cellColor: `单元格颜色`,
        setDetails: `详细信息`,
        removeDetails: `删除详细信息`,
    },
    editorEditLink: {
        urlExample: `example.com`,
        anchorExample: `anchor`,
    },
    editorTableCommands: [
        [`在前面插入列`, `在后面插入列`],
        [`在前面插入行`, `在后面插入行`],
        [`删除列`, `删除行`],
    ],
    editorCodeOptions: [`文中代码`, `代码块`],
    editorFontOptions: {
        small: `小的`,
        large: `大的`,
        normal: `普通的`,
        title: `标题`,
        subtitle: `副标题`,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMvY2hpbmVzZS9hZGRvbi1lZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLE1BQU0saUNBQWlDLEdBQXNCO0lBQ2hFLHNCQUFzQixFQUFFLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQztJQUNyQyxZQUFZLEVBQUU7UUFDVixJQUFJLEVBQUUsSUFBSTtRQUNWLElBQUksRUFBRSxJQUFJO1FBQ1YsSUFBSSxFQUFFLElBQUk7UUFDVixTQUFTLEVBQUUsTUFBTTtRQUNqQixRQUFRLEVBQUUsTUFBTTtRQUNoQixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSxJQUFJO1FBQ1osU0FBUyxFQUFFLEtBQUs7UUFDaEIsYUFBYSxFQUFFLEtBQUs7UUFDcEIsT0FBTyxFQUFFLElBQUk7UUFDYixXQUFXLEVBQUUsS0FBSztRQUNsQixhQUFhLEVBQUUsTUFBTTtRQUNyQixZQUFZLEVBQUUsS0FBSztRQUNuQixXQUFXLEVBQUUsTUFBTTtRQUNuQixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSxJQUFJO1FBQ1osT0FBTyxFQUFFLE1BQU07UUFDZixhQUFhLEVBQUUsTUFBTTtRQUNyQixXQUFXLEVBQUUsTUFBTTtRQUNuQixLQUFLLEVBQUUsSUFBSTtRQUNYLFNBQVMsRUFBRSxJQUFJO1FBQ2YsU0FBUyxFQUFFLE1BQU07UUFDakIsV0FBVyxFQUFFLE1BQU07UUFDbkIsS0FBSyxFQUFFLElBQUk7UUFDWCxJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSxNQUFNO1FBQ2QsR0FBRyxFQUFFLFFBQVE7UUFDYixJQUFJLEVBQUUsSUFBSTtRQUNWLEtBQUssRUFBRSxNQUFNO1FBQ2Isb0JBQW9CLEVBQUUsT0FBTztRQUM3QixXQUFXLEVBQUUsSUFBSTtRQUNqQixTQUFTLEVBQUUsSUFBSTtRQUNmLFdBQVcsRUFBRSxNQUFNO1FBQ25CLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFlBQVksRUFBRSxlQUFlO1FBQzdCLFVBQVUsRUFBRSxPQUFPO1FBQ25CLFVBQVUsRUFBRSxPQUFPO1FBQ25CLG1CQUFtQixFQUFFLE9BQU87UUFDNUIsU0FBUyxFQUFFLE9BQU87UUFDbEIsVUFBVSxFQUFFLE1BQU07UUFDbEIsYUFBYSxFQUFFLFFBQVE7S0FDMUI7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztRQUNwQixDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUM7UUFDcEIsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDO0tBQ2pCO0lBQ0QsaUJBQWlCLEVBQUUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDO0lBQ2xDLGlCQUFpQixFQUFFO1FBQ2YsS0FBSyxFQUFFLElBQUk7UUFDWCxLQUFLLEVBQUUsSUFBSTtRQUNYLE1BQU0sRUFBRSxLQUFLO1FBQ2IsS0FBSyxFQUFFLElBQUk7UUFDWCxRQUFRLEVBQUUsS0FBSztLQUNsQjtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1R1aUxhbmd1YWdlRWRpdG9yfSBmcm9tICdAdGFpZ2EtdWkvaTE4bi9pbnRlcmZhY2VzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9DSElORVNFX0xBTkdVQUdFX0FERE9OX0VESVRPUjogVHVpTGFuZ3VhZ2VFZGl0b3IgPSB7XG4gICAgY29sb3JTZWxlY3Rvck1vZGVOYW1lczogW2Dnuq/oibJgLCBg5riQ5Y+Y6ImyYF0sXG4gICAgdG9vbGJhclRvb2xzOiB7XG4gICAgICAgIHVuZG86IGDmkqTmtohgLFxuICAgICAgICByZWRvOiBg6YeN5YGaYCxcbiAgICAgICAgZm9udDogYOWtl+S9k2AsXG4gICAgICAgIGZvbnRTdHlsZTogYOWtl+S9k+agt+W8j2AsXG4gICAgICAgIGZvbnRTaXplOiBg5a2X5L2T5aSn5bCPYCxcbiAgICAgICAgYm9sZDogYOWKoOeyl2AsXG4gICAgICAgIGl0YWxpYzogYOaWnOS9k2AsXG4gICAgICAgIHVuZGVybGluZTogYOS4i+WIkue6v2AsXG4gICAgICAgIHN0cmlrZVRocm91Z2g6IGDliKDpmaTnur9gLFxuICAgICAgICBqdXN0aWZ5OiBg5a+56b2QYCxcbiAgICAgICAganVzdGlmeUxlZnQ6IGDlt6blr7npvZBgLFxuICAgICAgICBqdXN0aWZ5Q2VudGVyOiBg5Lit5b+D5a+56b2QYCxcbiAgICAgICAganVzdGlmeVJpZ2h0OiBg5Y+z5a+56b2QYCxcbiAgICAgICAganVzdGlmeUZ1bGw6IGDkuKTnq6/lr7npvZBgLFxuICAgICAgICBsaXN0OiBg5YiX6KGoYCxcbiAgICAgICAgaW5kZW50OiBg57yp6L+bYCxcbiAgICAgICAgb3V0ZGVudDogYOWHj+Wwj+e8qei/m2AsXG4gICAgICAgIHVub3JkZXJlZExpc3Q6IGDml6Dluo/liJfooahgLFxuICAgICAgICBvcmRlcmVkTGlzdDogYOacieW6j+WIl+ihqGAsXG4gICAgICAgIHF1b3RlOiBg5byV55SoYCxcbiAgICAgICAgZm9yZUNvbG9yOiBg6aKc6ImyYCxcbiAgICAgICAgYmFja0NvbG9yOiBg6IOM5pmv6aKc6ImyYCxcbiAgICAgICAgaGlsaXRlQ29sb3I6IGDpq5jkuq7popzoibJgLFxuICAgICAgICBjbGVhcjogYOa4hemZpGAsXG4gICAgICAgIGxpbms6IGDpk77mjqVgLFxuICAgICAgICBhdHRhY2g6IGDpmYTliqDmlofku7ZgLFxuICAgICAgICB0ZXg6IGDmj5LlhaUgVGVYYCxcbiAgICAgICAgY29kZTogYOS7o+eggWAsXG4gICAgICAgIGltYWdlOiBg5o+S5YWl5Zu+54mHYCxcbiAgICAgICAgaW5zZXJ0SG9yaXpvbnRhbFJ1bGU6IGDmj5LlhaXmsLTlubPnur9gLFxuICAgICAgICBzdXBlcnNjcmlwdDogYOS4iuagh2AsXG4gICAgICAgIHN1YnNjcmlwdDogYOS4i+agh2AsXG4gICAgICAgIGluc2VydFRhYmxlOiBg5o+S5YWl6KGo5qC8YCxcbiAgICAgICAgaW5zZXJ0R3JvdXA6IGBJbnNlcnQgZ3JvdXBgLFxuICAgICAgICBoaWxpdGVHcm91cDogYEhpbGl0ZSBncm91cGAsXG4gICAgICAgIHJlbW92ZUdyb3VwOiBgUmVtb3ZlIGdyb3VwYCxcbiAgICAgICAgaW5zZXJ0QW5jaG9yOiBgSW5zZXJ0IGFuY2hvcmAsXG4gICAgICAgIG1lcmdlQ2VsbHM6IGDlkIjlubbljZXlhYPmoLxgLFxuICAgICAgICBzcGxpdENlbGxzOiBg5ouG5YiG5Y2V5YWD5qC8YCxcbiAgICAgICAgcm93c0NvbHVtbnNNYW5hZ2luZzogYOeuoeeQhuihjOWSjOWIl2AsXG4gICAgICAgIGNlbGxDb2xvcjogYOWNleWFg+agvOminOiJsmAsXG4gICAgICAgIHNldERldGFpbHM6IGDor6bnu4bkv6Hmga9gLFxuICAgICAgICByZW1vdmVEZXRhaWxzOiBg5Yig6Zmk6K+m57uG5L+h5oGvYCxcbiAgICB9LFxuICAgIGVkaXRvckVkaXRMaW5rOiB7XG4gICAgICAgIHVybEV4YW1wbGU6IGBleGFtcGxlLmNvbWAsXG4gICAgICAgIGFuY2hvckV4YW1wbGU6IGBhbmNob3JgLFxuICAgIH0sXG4gICAgZWRpdG9yVGFibGVDb21tYW5kczogW1xuICAgICAgICBbYOWcqOWJjemdouaPkuWFpeWIl2AsIGDlnKjlkI7pnaLmj5LlhaXliJdgXSxcbiAgICAgICAgW2DlnKjliY3pnaLmj5LlhaXooYxgLCBg5Zyo5ZCO6Z2i5o+S5YWl6KGMYF0sXG4gICAgICAgIFtg5Yig6Zmk5YiXYCwgYOWIoOmZpOihjGBdLFxuICAgIF0sXG4gICAgZWRpdG9yQ29kZU9wdGlvbnM6IFtg5paH5Lit5Luj56CBYCwgYOS7o+eggeWdl2BdLFxuICAgIGVkaXRvckZvbnRPcHRpb25zOiB7XG4gICAgICAgIHNtYWxsOiBg5bCP55qEYCxcbiAgICAgICAgbGFyZ2U6IGDlpKfnmoRgLFxuICAgICAgICBub3JtYWw6IGDmma7pgJrnmoRgLFxuICAgICAgICB0aXRsZTogYOagh+mimGAsXG4gICAgICAgIHN1YnRpdGxlOiBg5Ymv5qCH6aKYYCxcbiAgICB9LFxufTtcbiJdfQ==