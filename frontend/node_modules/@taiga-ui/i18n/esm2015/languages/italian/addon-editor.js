export const TUI_ITALIAN_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: [`Tinta unita`, `Gradiente`],
    toolbarTools: {
        undo: `Annulla`,
        redo: `Rifai`,
        font: `Font`,
        fontStyle: `Stile font`,
        fontSize: `Dimensione font`,
        bold: `Grassetto`,
        italic: `Corsivo`,
        underline: `Sottolineato`,
        strikeThrough: `Barrato`,
        justify: `Giustifica`,
        justifyLeft: `Allinea a sinistra`,
        justifyCenter: `Allinea al centro`,
        justifyRight: `Allinea a destra`,
        justifyFull: `Giustifica pieno`,
        list: `Lista`,
        indent: `Rientro`,
        outdent: `Elimina rientro`,
        unorderedList: `Lista non ordinata`,
        orderedList: `Lista ordinata`,
        quote: `Virgolette`,
        foreColor: `Colore`,
        backColor: `Colore sfondo`,
        hiliteColor: `Evidenziazione del testo`,
        clear: `Pulisci`,
        link: `Link`,
        attach: `Allega file`,
        tex: `Inserisci TeX`,
        code: `Codice`,
        image: `Inserisci image`,
        insertHorizontalRule: `Inserisci riga orizzontale`,
        superscript: `Apice`,
        subscript: `Pedice`,
        insertTable: `Inserisci tabella`,
        insertGroup: `Insert group`,
        hiliteGroup: `Hilite group`,
        removeGroup: `Remove group`,
        insertAnchor: `Insert anchor`,
        mergeCells: `Unisci celle`,
        splitCells: `Dividi celle`,
        rowsColumnsManaging: `Gestione righe e colonne`,
        cellColor: `Colore cella`,
        setDetails: `Details`,
        removeDetails: `Remove details`,
    },
    editorEditLink: {
        urlExample: `example.com`,
        anchorExample: `anchor`,
    },
    editorTableCommands: [
        [`Inserisci colonna prima`, `Inserisci colonna dopo`],
        [`Inserisci riga prima`, `Inserisci riga dopo`],
        [`Cancella colonna`, `Cancella riga`],
    ],
    editorCodeOptions: [`Codice nel testo`, `Codice nel blocco`],
    editorFontOptions: {
        small: `Small`,
        normal: `Normale`,
        large: `Large`,
        title: `Titolo`,
        subtitle: `Sottotitolo`,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMvaXRhbGlhbi9hZGRvbi1lZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLE1BQU0saUNBQWlDLEdBQXNCO0lBQ2hFLHNCQUFzQixFQUFFLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQztJQUNwRCxZQUFZLEVBQUU7UUFDVixJQUFJLEVBQUUsU0FBUztRQUNmLElBQUksRUFBRSxPQUFPO1FBQ2IsSUFBSSxFQUFFLE1BQU07UUFDWixTQUFTLEVBQUUsWUFBWTtRQUN2QixRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLGFBQWEsRUFBRSxTQUFTO1FBQ3hCLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLFdBQVcsRUFBRSxvQkFBb0I7UUFDakMsYUFBYSxFQUFFLG1CQUFtQjtRQUNsQyxZQUFZLEVBQUUsa0JBQWtCO1FBQ2hDLFdBQVcsRUFBRSxrQkFBa0I7UUFDL0IsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsU0FBUztRQUNqQixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLGFBQWEsRUFBRSxvQkFBb0I7UUFDbkMsV0FBVyxFQUFFLGdCQUFnQjtRQUM3QixLQUFLLEVBQUUsWUFBWTtRQUNuQixTQUFTLEVBQUUsUUFBUTtRQUNuQixTQUFTLEVBQUUsZUFBZTtRQUMxQixXQUFXLEVBQUUsMEJBQTBCO1FBQ3ZDLEtBQUssRUFBRSxTQUFTO1FBQ2hCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLGFBQWE7UUFDckIsR0FBRyxFQUFFLGVBQWU7UUFDcEIsSUFBSSxFQUFFLFFBQVE7UUFDZCxLQUFLLEVBQUUsaUJBQWlCO1FBQ3hCLG9CQUFvQixFQUFFLDRCQUE0QjtRQUNsRCxXQUFXLEVBQUUsT0FBTztRQUNwQixTQUFTLEVBQUUsUUFBUTtRQUNuQixXQUFXLEVBQUUsbUJBQW1CO1FBQ2hDLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFlBQVksRUFBRSxlQUFlO1FBQzdCLFVBQVUsRUFBRSxjQUFjO1FBQzFCLFVBQVUsRUFBRSxjQUFjO1FBQzFCLG1CQUFtQixFQUFFLDBCQUEwQjtRQUMvQyxTQUFTLEVBQUUsY0FBYztRQUN6QixVQUFVLEVBQUUsU0FBUztRQUNyQixhQUFhLEVBQUUsZ0JBQWdCO0tBQ2xDO0lBQ0QsY0FBYyxFQUFFO1FBQ1osVUFBVSxFQUFFLGFBQWE7UUFDekIsYUFBYSxFQUFFLFFBQVE7S0FDMUI7SUFDRCxtQkFBbUIsRUFBRTtRQUNqQixDQUFDLHlCQUF5QixFQUFFLHdCQUF3QixDQUFDO1FBQ3JELENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7UUFDL0MsQ0FBQyxrQkFBa0IsRUFBRSxlQUFlLENBQUM7S0FDeEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixFQUFFLG1CQUFtQixDQUFDO0lBQzVELGlCQUFpQixFQUFFO1FBQ2YsS0FBSyxFQUFFLE9BQU87UUFDZCxNQUFNLEVBQUUsU0FBUztRQUNqQixLQUFLLEVBQUUsT0FBTztRQUNkLEtBQUssRUFBRSxRQUFRO1FBQ2YsUUFBUSxFQUFFLGFBQWE7S0FDMUI7Q0FDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUdWlMYW5ndWFnZUVkaXRvcn0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCBjb25zdCBUVUlfSVRBTElBTl9MQU5HVUFHRV9BRERPTl9FRElUT1I6IFR1aUxhbmd1YWdlRWRpdG9yID0ge1xuICAgIGNvbG9yU2VsZWN0b3JNb2RlTmFtZXM6IFtgVGludGEgdW5pdGFgLCBgR3JhZGllbnRlYF0sXG4gICAgdG9vbGJhclRvb2xzOiB7XG4gICAgICAgIHVuZG86IGBBbm51bGxhYCxcbiAgICAgICAgcmVkbzogYFJpZmFpYCxcbiAgICAgICAgZm9udDogYEZvbnRgLFxuICAgICAgICBmb250U3R5bGU6IGBTdGlsZSBmb250YCxcbiAgICAgICAgZm9udFNpemU6IGBEaW1lbnNpb25lIGZvbnRgLFxuICAgICAgICBib2xkOiBgR3Jhc3NldHRvYCxcbiAgICAgICAgaXRhbGljOiBgQ29yc2l2b2AsXG4gICAgICAgIHVuZGVybGluZTogYFNvdHRvbGluZWF0b2AsXG4gICAgICAgIHN0cmlrZVRocm91Z2g6IGBCYXJyYXRvYCxcbiAgICAgICAganVzdGlmeTogYEdpdXN0aWZpY2FgLFxuICAgICAgICBqdXN0aWZ5TGVmdDogYEFsbGluZWEgYSBzaW5pc3RyYWAsXG4gICAgICAgIGp1c3RpZnlDZW50ZXI6IGBBbGxpbmVhIGFsIGNlbnRyb2AsXG4gICAgICAgIGp1c3RpZnlSaWdodDogYEFsbGluZWEgYSBkZXN0cmFgLFxuICAgICAgICBqdXN0aWZ5RnVsbDogYEdpdXN0aWZpY2EgcGllbm9gLFxuICAgICAgICBsaXN0OiBgTGlzdGFgLFxuICAgICAgICBpbmRlbnQ6IGBSaWVudHJvYCxcbiAgICAgICAgb3V0ZGVudDogYEVsaW1pbmEgcmllbnRyb2AsXG4gICAgICAgIHVub3JkZXJlZExpc3Q6IGBMaXN0YSBub24gb3JkaW5hdGFgLFxuICAgICAgICBvcmRlcmVkTGlzdDogYExpc3RhIG9yZGluYXRhYCxcbiAgICAgICAgcXVvdGU6IGBWaXJnb2xldHRlYCxcbiAgICAgICAgZm9yZUNvbG9yOiBgQ29sb3JlYCxcbiAgICAgICAgYmFja0NvbG9yOiBgQ29sb3JlIHNmb25kb2AsXG4gICAgICAgIGhpbGl0ZUNvbG9yOiBgRXZpZGVuemlhemlvbmUgZGVsIHRlc3RvYCxcbiAgICAgICAgY2xlYXI6IGBQdWxpc2NpYCxcbiAgICAgICAgbGluazogYExpbmtgLFxuICAgICAgICBhdHRhY2g6IGBBbGxlZ2EgZmlsZWAsXG4gICAgICAgIHRleDogYEluc2VyaXNjaSBUZVhgLFxuICAgICAgICBjb2RlOiBgQ29kaWNlYCxcbiAgICAgICAgaW1hZ2U6IGBJbnNlcmlzY2kgaW1hZ2VgLFxuICAgICAgICBpbnNlcnRIb3Jpem9udGFsUnVsZTogYEluc2VyaXNjaSByaWdhIG9yaXp6b250YWxlYCxcbiAgICAgICAgc3VwZXJzY3JpcHQ6IGBBcGljZWAsXG4gICAgICAgIHN1YnNjcmlwdDogYFBlZGljZWAsXG4gICAgICAgIGluc2VydFRhYmxlOiBgSW5zZXJpc2NpIHRhYmVsbGFgLFxuICAgICAgICBpbnNlcnRHcm91cDogYEluc2VydCBncm91cGAsXG4gICAgICAgIGhpbGl0ZUdyb3VwOiBgSGlsaXRlIGdyb3VwYCxcbiAgICAgICAgcmVtb3ZlR3JvdXA6IGBSZW1vdmUgZ3JvdXBgLFxuICAgICAgICBpbnNlcnRBbmNob3I6IGBJbnNlcnQgYW5jaG9yYCxcbiAgICAgICAgbWVyZ2VDZWxsczogYFVuaXNjaSBjZWxsZWAsXG4gICAgICAgIHNwbGl0Q2VsbHM6IGBEaXZpZGkgY2VsbGVgLFxuICAgICAgICByb3dzQ29sdW1uc01hbmFnaW5nOiBgR2VzdGlvbmUgcmlnaGUgZSBjb2xvbm5lYCxcbiAgICAgICAgY2VsbENvbG9yOiBgQ29sb3JlIGNlbGxhYCxcbiAgICAgICAgc2V0RGV0YWlsczogYERldGFpbHNgLFxuICAgICAgICByZW1vdmVEZXRhaWxzOiBgUmVtb3ZlIGRldGFpbHNgLFxuICAgIH0sXG4gICAgZWRpdG9yRWRpdExpbms6IHtcbiAgICAgICAgdXJsRXhhbXBsZTogYGV4YW1wbGUuY29tYCxcbiAgICAgICAgYW5jaG9yRXhhbXBsZTogYGFuY2hvcmAsXG4gICAgfSxcbiAgICBlZGl0b3JUYWJsZUNvbW1hbmRzOiBbXG4gICAgICAgIFtgSW5zZXJpc2NpIGNvbG9ubmEgcHJpbWFgLCBgSW5zZXJpc2NpIGNvbG9ubmEgZG9wb2BdLFxuICAgICAgICBbYEluc2VyaXNjaSByaWdhIHByaW1hYCwgYEluc2VyaXNjaSByaWdhIGRvcG9gXSxcbiAgICAgICAgW2BDYW5jZWxsYSBjb2xvbm5hYCwgYENhbmNlbGxhIHJpZ2FgXSxcbiAgICBdLFxuICAgIGVkaXRvckNvZGVPcHRpb25zOiBbYENvZGljZSBuZWwgdGVzdG9gLCBgQ29kaWNlIG5lbCBibG9jY29gXSxcbiAgICBlZGl0b3JGb250T3B0aW9uczoge1xuICAgICAgICBzbWFsbDogYFNtYWxsYCxcbiAgICAgICAgbm9ybWFsOiBgTm9ybWFsZWAsXG4gICAgICAgIGxhcmdlOiBgTGFyZ2VgLFxuICAgICAgICB0aXRsZTogYFRpdG9sb2AsXG4gICAgICAgIHN1YnRpdGxlOiBgU290dG90aXRvbG9gLFxuICAgIH0sXG59O1xuIl19