export const TUI_FRENCH_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: [`Couleur unie`, `Dégradé de couleur`],
    toolbarTools: {
        undo: `Annuler`,
        redo: `Rétablir`,
        font: `Police`,
        fontStyle: `Style de police`,
        fontSize: `Taille de police`,
        bold: `Gras`,
        italic: `Italique`,
        underline: `Souligner`,
        strikeThrough: `Barrer`,
        justify: `Justifier`,
        justifyLeft: `Aligner à gauche`,
        justifyCenter: `Centrer`,
        justifyRight: `Justifier à droite`,
        justifyFull: `Justifier`,
        list: `Liste`,
        indent: `Indenter`,
        outdent: `Réduire le retrait`,
        unorderedList: `Liste à puces`,
        orderedList: `Liste numérotée`,
        quote: `Citation`,
        foreColor: `Couleur de texte`,
        backColor: `Couleur de fond`,
        hiliteColor: `Couleur de mise en évidence`,
        clear: `Effacer`,
        link: `Lien`,
        attach: `Joindre un fichier`,
        tex: `Insérer TeX`,
        code: `Code`,
        image: `Insérer une image`,
        insertHorizontalRule: `Insérer une règle horizontale`,
        superscript: `Exposant`,
        subscript: `Indice`,
        insertTable: `Insérer une table`,
        insertGroup: `Insérer un groupe`,
        hiliteGroup: `Hilite group`,
        removeGroup: `Supprimer le groupe`,
        insertAnchor: `Insérer une ancre`,
        mergeCells: `Fusionner les cellules`,
        splitCells: `Diviser les cellules`,
        rowsColumnsManaging: `Gestion des lignes et des colonnes`,
        cellColor: `Couleur de la cellule`,
        setDetails: `Accordéon`,
        removeDetails: `Supprimer l'accordéon`,
    },
    editorEditLink: {
        urlExample: `exemple.com`,
        anchorExample: `ancre`,
    },
    editorTableCommands: [
        [`Insérer une colonne avant`, `Insérer une colonne après`],
        [`Insérer une ligne avant`, `Insérer une ligne après`],
        [`Supprimer la colonne`, `Supprimer la ligne`],
    ],
    editorCodeOptions: [`Code dans le texte`, `Bloc de code`],
    editorFontOptions: {
        small: `Petite`,
        large: `Grande`,
        normal: `Normale`,
        title: `Titre`,
        subtitle: `Sous-titre`,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMvZnJlbmNoL2FkZG9uLWVkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBc0I7SUFDL0Qsc0JBQXNCLEVBQUUsQ0FBQyxjQUFjLEVBQUUsb0JBQW9CLENBQUM7SUFDOUQsWUFBWSxFQUFFO1FBQ1YsSUFBSSxFQUFFLFNBQVM7UUFDZixJQUFJLEVBQUUsVUFBVTtRQUNoQixJQUFJLEVBQUUsUUFBUTtRQUNkLFNBQVMsRUFBRSxpQkFBaUI7UUFDNUIsUUFBUSxFQUFFLGtCQUFrQjtRQUM1QixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLFdBQVcsRUFBRSxrQkFBa0I7UUFDL0IsYUFBYSxFQUFFLFNBQVM7UUFDeEIsWUFBWSxFQUFFLG9CQUFvQjtRQUNsQyxXQUFXLEVBQUUsV0FBVztRQUN4QixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsYUFBYSxFQUFFLGVBQWU7UUFDOUIsV0FBVyxFQUFFLGlCQUFpQjtRQUM5QixLQUFLLEVBQUUsVUFBVTtRQUNqQixTQUFTLEVBQUUsa0JBQWtCO1FBQzdCLFNBQVMsRUFBRSxpQkFBaUI7UUFDNUIsV0FBVyxFQUFFLDZCQUE2QjtRQUMxQyxLQUFLLEVBQUUsU0FBUztRQUNoQixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxvQkFBb0I7UUFDNUIsR0FBRyxFQUFFLGFBQWE7UUFDbEIsSUFBSSxFQUFFLE1BQU07UUFDWixLQUFLLEVBQUUsbUJBQW1CO1FBQzFCLG9CQUFvQixFQUFFLCtCQUErQjtRQUNyRCxXQUFXLEVBQUUsVUFBVTtRQUN2QixTQUFTLEVBQUUsUUFBUTtRQUNuQixXQUFXLEVBQUUsbUJBQW1CO1FBQ2hDLFdBQVcsRUFBRSxtQkFBbUI7UUFDaEMsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLHFCQUFxQjtRQUNsQyxZQUFZLEVBQUUsbUJBQW1CO1FBQ2pDLFVBQVUsRUFBRSx3QkFBd0I7UUFDcEMsVUFBVSxFQUFFLHNCQUFzQjtRQUNsQyxtQkFBbUIsRUFBRSxvQ0FBb0M7UUFDekQsU0FBUyxFQUFFLHVCQUF1QjtRQUNsQyxVQUFVLEVBQUUsV0FBVztRQUN2QixhQUFhLEVBQUUsdUJBQXVCO0tBQ3pDO0lBQ0QsY0FBYyxFQUFFO1FBQ1osVUFBVSxFQUFFLGFBQWE7UUFDekIsYUFBYSxFQUFFLE9BQU87S0FDekI7SUFDRCxtQkFBbUIsRUFBRTtRQUNqQixDQUFDLDJCQUEyQixFQUFFLDJCQUEyQixDQUFDO1FBQzFELENBQUMseUJBQXlCLEVBQUUseUJBQXlCLENBQUM7UUFDdEQsQ0FBQyxzQkFBc0IsRUFBRSxvQkFBb0IsQ0FBQztLQUNqRDtJQUNELGlCQUFpQixFQUFFLENBQUMsb0JBQW9CLEVBQUUsY0FBYyxDQUFDO0lBQ3pELGlCQUFpQixFQUFFO1FBQ2YsS0FBSyxFQUFFLFFBQVE7UUFDZixLQUFLLEVBQUUsUUFBUTtRQUNmLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLEtBQUssRUFBRSxPQUFPO1FBQ2QsUUFBUSxFQUFFLFlBQVk7S0FDekI7Q0FDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUdWlMYW5ndWFnZUVkaXRvcn0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCBjb25zdCBUVUlfRlJFTkNIX0xBTkdVQUdFX0FERE9OX0VESVRPUjogVHVpTGFuZ3VhZ2VFZGl0b3IgPSB7XG4gICAgY29sb3JTZWxlY3Rvck1vZGVOYW1lczogW2BDb3VsZXVyIHVuaWVgLCBgRMOpZ3JhZMOpIGRlIGNvdWxldXJgXSxcbiAgICB0b29sYmFyVG9vbHM6IHtcbiAgICAgICAgdW5kbzogYEFubnVsZXJgLFxuICAgICAgICByZWRvOiBgUsOpdGFibGlyYCxcbiAgICAgICAgZm9udDogYFBvbGljZWAsXG4gICAgICAgIGZvbnRTdHlsZTogYFN0eWxlIGRlIHBvbGljZWAsXG4gICAgICAgIGZvbnRTaXplOiBgVGFpbGxlIGRlIHBvbGljZWAsXG4gICAgICAgIGJvbGQ6IGBHcmFzYCxcbiAgICAgICAgaXRhbGljOiBgSXRhbGlxdWVgLFxuICAgICAgICB1bmRlcmxpbmU6IGBTb3VsaWduZXJgLFxuICAgICAgICBzdHJpa2VUaHJvdWdoOiBgQmFycmVyYCxcbiAgICAgICAganVzdGlmeTogYEp1c3RpZmllcmAsXG4gICAgICAgIGp1c3RpZnlMZWZ0OiBgQWxpZ25lciDDoCBnYXVjaGVgLFxuICAgICAgICBqdXN0aWZ5Q2VudGVyOiBgQ2VudHJlcmAsXG4gICAgICAgIGp1c3RpZnlSaWdodDogYEp1c3RpZmllciDDoCBkcm9pdGVgLFxuICAgICAgICBqdXN0aWZ5RnVsbDogYEp1c3RpZmllcmAsXG4gICAgICAgIGxpc3Q6IGBMaXN0ZWAsXG4gICAgICAgIGluZGVudDogYEluZGVudGVyYCxcbiAgICAgICAgb3V0ZGVudDogYFLDqWR1aXJlIGxlIHJldHJhaXRgLFxuICAgICAgICB1bm9yZGVyZWRMaXN0OiBgTGlzdGUgw6AgcHVjZXNgLFxuICAgICAgICBvcmRlcmVkTGlzdDogYExpc3RlIG51bcOpcm90w6llYCxcbiAgICAgICAgcXVvdGU6IGBDaXRhdGlvbmAsXG4gICAgICAgIGZvcmVDb2xvcjogYENvdWxldXIgZGUgdGV4dGVgLFxuICAgICAgICBiYWNrQ29sb3I6IGBDb3VsZXVyIGRlIGZvbmRgLFxuICAgICAgICBoaWxpdGVDb2xvcjogYENvdWxldXIgZGUgbWlzZSBlbiDDqXZpZGVuY2VgLFxuICAgICAgICBjbGVhcjogYEVmZmFjZXJgLFxuICAgICAgICBsaW5rOiBgTGllbmAsXG4gICAgICAgIGF0dGFjaDogYEpvaW5kcmUgdW4gZmljaGllcmAsXG4gICAgICAgIHRleDogYEluc8OpcmVyIFRlWGAsXG4gICAgICAgIGNvZGU6IGBDb2RlYCxcbiAgICAgICAgaW1hZ2U6IGBJbnPDqXJlciB1bmUgaW1hZ2VgLFxuICAgICAgICBpbnNlcnRIb3Jpem9udGFsUnVsZTogYEluc8OpcmVyIHVuZSByw6hnbGUgaG9yaXpvbnRhbGVgLFxuICAgICAgICBzdXBlcnNjcmlwdDogYEV4cG9zYW50YCxcbiAgICAgICAgc3Vic2NyaXB0OiBgSW5kaWNlYCxcbiAgICAgICAgaW5zZXJ0VGFibGU6IGBJbnPDqXJlciB1bmUgdGFibGVgLFxuICAgICAgICBpbnNlcnRHcm91cDogYEluc8OpcmVyIHVuIGdyb3VwZWAsXG4gICAgICAgIGhpbGl0ZUdyb3VwOiBgSGlsaXRlIGdyb3VwYCxcbiAgICAgICAgcmVtb3ZlR3JvdXA6IGBTdXBwcmltZXIgbGUgZ3JvdXBlYCxcbiAgICAgICAgaW5zZXJ0QW5jaG9yOiBgSW5zw6lyZXIgdW5lIGFuY3JlYCxcbiAgICAgICAgbWVyZ2VDZWxsczogYEZ1c2lvbm5lciBsZXMgY2VsbHVsZXNgLFxuICAgICAgICBzcGxpdENlbGxzOiBgRGl2aXNlciBsZXMgY2VsbHVsZXNgLFxuICAgICAgICByb3dzQ29sdW1uc01hbmFnaW5nOiBgR2VzdGlvbiBkZXMgbGlnbmVzIGV0IGRlcyBjb2xvbm5lc2AsXG4gICAgICAgIGNlbGxDb2xvcjogYENvdWxldXIgZGUgbGEgY2VsbHVsZWAsXG4gICAgICAgIHNldERldGFpbHM6IGBBY2NvcmTDqW9uYCxcbiAgICAgICAgcmVtb3ZlRGV0YWlsczogYFN1cHByaW1lciBsJ2FjY29yZMOpb25gLFxuICAgIH0sXG4gICAgZWRpdG9yRWRpdExpbms6IHtcbiAgICAgICAgdXJsRXhhbXBsZTogYGV4ZW1wbGUuY29tYCxcbiAgICAgICAgYW5jaG9yRXhhbXBsZTogYGFuY3JlYCxcbiAgICB9LFxuICAgIGVkaXRvclRhYmxlQ29tbWFuZHM6IFtcbiAgICAgICAgW2BJbnPDqXJlciB1bmUgY29sb25uZSBhdmFudGAsIGBJbnPDqXJlciB1bmUgY29sb25uZSBhcHLDqHNgXSxcbiAgICAgICAgW2BJbnPDqXJlciB1bmUgbGlnbmUgYXZhbnRgLCBgSW5zw6lyZXIgdW5lIGxpZ25lIGFwcsOoc2BdLFxuICAgICAgICBbYFN1cHByaW1lciBsYSBjb2xvbm5lYCwgYFN1cHByaW1lciBsYSBsaWduZWBdLFxuICAgIF0sXG4gICAgZWRpdG9yQ29kZU9wdGlvbnM6IFtgQ29kZSBkYW5zIGxlIHRleHRlYCwgYEJsb2MgZGUgY29kZWBdLFxuICAgIGVkaXRvckZvbnRPcHRpb25zOiB7XG4gICAgICAgIHNtYWxsOiBgUGV0aXRlYCxcbiAgICAgICAgbGFyZ2U6IGBHcmFuZGVgLFxuICAgICAgICBub3JtYWw6IGBOb3JtYWxlYCxcbiAgICAgICAgdGl0bGU6IGBUaXRyZWAsXG4gICAgICAgIHN1YnRpdGxlOiBgU291cy10aXRyZWAsXG4gICAgfSxcbn07XG4iXX0=