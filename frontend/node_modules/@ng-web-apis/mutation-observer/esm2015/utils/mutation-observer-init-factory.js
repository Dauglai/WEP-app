import { booleanAttribute } from './boolean-attribute';
export function mutationObserverInitFactory({ nativeElement, }) {
    const attributeFilterAttr = nativeElement.getAttribute('attributeFilter');
    const attributeFilter = attributeFilterAttr
        ? attributeFilterAttr.split(',').map(attr => attr.trim())
        : undefined;
    return {
        attributeFilter,
        attributeOldValue: booleanAttribute(nativeElement, 'attributeOldValue'),
        attributes: booleanAttribute(nativeElement, 'attributes'),
        characterData: booleanAttribute(nativeElement, 'characterData'),
        characterDataOldValue: booleanAttribute(nativeElement, 'characterDataOldValue'),
        childList: booleanAttribute(nativeElement, 'childList'),
        subtree: booleanAttribute(nativeElement, 'subtree'),
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXV0YXRpb24tb2JzZXJ2ZXItaW5pdC1mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbXV0YXRpb24tb2JzZXJ2ZXIvc3JjL3V0aWxzL211dGF0aW9uLW9ic2VydmVyLWluaXQtZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUVyRCxNQUFNLFVBQVUsMkJBQTJCLENBQUMsRUFDeEMsYUFBYSxHQUNLO0lBQ2xCLE1BQU0sbUJBQW1CLEdBQUcsYUFBYSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQzFFLE1BQU0sZUFBZSxHQUFHLG1CQUFtQjtRQUN2QyxDQUFDLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN6RCxDQUFDLENBQUMsU0FBUyxDQUFDO0lBRWhCLE9BQU87UUFDSCxlQUFlO1FBQ2YsaUJBQWlCLEVBQUUsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLG1CQUFtQixDQUFDO1FBQ3ZFLFVBQVUsRUFBRSxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsWUFBWSxDQUFDO1FBQ3pELGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsZUFBZSxDQUFDO1FBQy9ELHFCQUFxQixFQUFFLGdCQUFnQixDQUFDLGFBQWEsRUFBRSx1QkFBdUIsQ0FBQztRQUMvRSxTQUFTLEVBQUUsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQztRQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQztLQUN0RCxDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RWxlbWVudFJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7Ym9vbGVhbkF0dHJpYnV0ZX0gZnJvbSAnLi9ib29sZWFuLWF0dHJpYnV0ZSc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbXV0YXRpb25PYnNlcnZlckluaXRGYWN0b3J5KHtcclxuICAgIG5hdGl2ZUVsZW1lbnQsXHJcbn06IEVsZW1lbnRSZWY8RWxlbWVudD4pOiBNdXRhdGlvbk9ic2VydmVySW5pdCB7XHJcbiAgICBjb25zdCBhdHRyaWJ1dGVGaWx0ZXJBdHRyID0gbmF0aXZlRWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2F0dHJpYnV0ZUZpbHRlcicpO1xyXG4gICAgY29uc3QgYXR0cmlidXRlRmlsdGVyID0gYXR0cmlidXRlRmlsdGVyQXR0clxyXG4gICAgICAgID8gYXR0cmlidXRlRmlsdGVyQXR0ci5zcGxpdCgnLCcpLm1hcChhdHRyID0+IGF0dHIudHJpbSgpKVxyXG4gICAgICAgIDogdW5kZWZpbmVkO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgYXR0cmlidXRlRmlsdGVyLFxyXG4gICAgICAgIGF0dHJpYnV0ZU9sZFZhbHVlOiBib29sZWFuQXR0cmlidXRlKG5hdGl2ZUVsZW1lbnQsICdhdHRyaWJ1dGVPbGRWYWx1ZScpLFxyXG4gICAgICAgIGF0dHJpYnV0ZXM6IGJvb2xlYW5BdHRyaWJ1dGUobmF0aXZlRWxlbWVudCwgJ2F0dHJpYnV0ZXMnKSxcclxuICAgICAgICBjaGFyYWN0ZXJEYXRhOiBib29sZWFuQXR0cmlidXRlKG5hdGl2ZUVsZW1lbnQsICdjaGFyYWN0ZXJEYXRhJyksXHJcbiAgICAgICAgY2hhcmFjdGVyRGF0YU9sZFZhbHVlOiBib29sZWFuQXR0cmlidXRlKG5hdGl2ZUVsZW1lbnQsICdjaGFyYWN0ZXJEYXRhT2xkVmFsdWUnKSxcclxuICAgICAgICBjaGlsZExpc3Q6IGJvb2xlYW5BdHRyaWJ1dGUobmF0aXZlRWxlbWVudCwgJ2NoaWxkTGlzdCcpLFxyXG4gICAgICAgIHN1YnRyZWU6IGJvb2xlYW5BdHRyaWJ1dGUobmF0aXZlRWxlbWVudCwgJ3N1YnRyZWUnKSxcclxuICAgIH07XHJcbn1cclxuIl19