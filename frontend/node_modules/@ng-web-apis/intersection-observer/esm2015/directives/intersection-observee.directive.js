import { Directive, Inject } from '@angular/core';
import { Observable } from 'rxjs';
import { IntersectionObserveeService } from '../services/intersection-observee.service';
import * as i0 from "@angular/core";
import * as i1 from "rxjs";
export class IntersectionObserveeDirective {
    constructor(waIntersectionObservee) {
        this.waIntersectionObservee = waIntersectionObservee;
    }
}
/** @nocollapse */ IntersectionObserveeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IntersectionObserveeDirective, deps: [{ token: IntersectionObserveeService }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ IntersectionObserveeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: IntersectionObserveeDirective, selector: "[waIntersectionObservee]", outputs: { waIntersectionObservee: "waIntersectionObservee" }, providers: [IntersectionObserveeService], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IntersectionObserveeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[waIntersectionObservee]',
                    outputs: ['waIntersectionObservee'],
                    providers: [IntersectionObserveeService],
                }]
        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [IntersectionObserveeService]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJzZWN0aW9uLW9ic2VydmVlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ludGVyc2VjdGlvbi1vYnNlcnZlci9zcmMvZGlyZWN0aXZlcy9pbnRlcnNlY3Rpb24tb2JzZXJ2ZWUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFaEMsT0FBTyxFQUFDLDJCQUEyQixFQUFDLE1BQU0sMkNBQTJDLENBQUM7OztBQU90RixNQUFNLE9BQU8sNkJBQTZCO0lBQ3RDLFlBRWEsc0JBQStEO1FBQS9ELDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBeUM7SUFDekUsQ0FBQzs7OElBSkssNkJBQTZCLGtCQUUxQiwyQkFBMkI7a0lBRjlCLDZCQUE2QixrSEFGM0IsQ0FBQywyQkFBMkIsQ0FBQzs0RkFFL0IsNkJBQTZCO2tCQUx6QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSwwQkFBMEI7b0JBQ3BDLE9BQU8sRUFBRSxDQUFDLHdCQUF3QixDQUFDO29CQUNuQyxTQUFTLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztpQkFDM0M7OzBCQUdRLE1BQU07MkJBQUMsMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQge0ludGVyc2VjdGlvbk9ic2VydmVlU2VydmljZX0gZnJvbSAnLi4vc2VydmljZXMvaW50ZXJzZWN0aW9uLW9ic2VydmVlLnNlcnZpY2UnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgICBzZWxlY3RvcjogJ1t3YUludGVyc2VjdGlvbk9ic2VydmVlXScsXHJcbiAgICBvdXRwdXRzOiBbJ3dhSW50ZXJzZWN0aW9uT2JzZXJ2ZWUnXSxcclxuICAgIHByb3ZpZGVyczogW0ludGVyc2VjdGlvbk9ic2VydmVlU2VydmljZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJbnRlcnNlY3Rpb25PYnNlcnZlZURpcmVjdGl2ZSB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBASW5qZWN0KEludGVyc2VjdGlvbk9ic2VydmVlU2VydmljZSlcclxuICAgICAgICByZWFkb25seSB3YUludGVyc2VjdGlvbk9ic2VydmVlOiBPYnNlcnZhYmxlPEludGVyc2VjdGlvbk9ic2VydmVyRW50cnlbXT4sXHJcbiAgICApIHt9XHJcbn1cclxuIl19