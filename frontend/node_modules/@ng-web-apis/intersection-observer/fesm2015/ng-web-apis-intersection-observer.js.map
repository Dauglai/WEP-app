{"version":3,"file":"ng-web-apis-intersection-observer.js","sources":["../../../projects/intersection-observer/src/tokens/intersection-root.ts","../../../projects/intersection-observer/src/tokens/intersection-root-margin.ts","../../../projects/intersection-observer/src/utils/root-margin-factory.ts","../../../projects/intersection-observer/src/tokens/intersection-threshold.ts","../../../projects/intersection-observer/src/utils/threshold-factory.ts","../../../projects/intersection-observer/src/directives/intersection-observer.directive.ts","../../../projects/intersection-observer/src/services/intersection-observee.service.ts","../../../projects/intersection-observer/src/directives/intersection-observee.directive.ts","../../../projects/intersection-observer/src/directives/intersection-root.directive.ts","../../../projects/intersection-observer/src/module.ts","../../../projects/intersection-observer/src/tokens/support.ts","../../../projects/intersection-observer/src/services/intersection-observer.service.ts","../../../projects/intersection-observer/src/public-api.ts","../../../projects/intersection-observer/src/ng-web-apis-intersection-observer.ts"],"sourcesContent":["import {ElementRef, InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_ROOT = new InjectionToken<ElementRef<Element>>(\r\n    'Root element for IntersectionObserver',\r\n);\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_ROOT_MARGIN_DEFAULT = '0px 0px 0px 0px';\r\nexport const INTERSECTION_ROOT_MARGIN = new InjectionToken<string>(\r\n    'rootMargin for IntersectionObserver',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => INTERSECTION_ROOT_MARGIN_DEFAULT,\r\n    },\r\n);\r\n","import {INTERSECTION_ROOT_MARGIN_DEFAULT} from '../tokens/intersection-root-margin';\r\n\r\nexport function rootMarginFactory(rootMargin: string | null): string {\r\n    return rootMargin || INTERSECTION_ROOT_MARGIN_DEFAULT;\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_THRESHOLD_DEFAULT = 0;\r\nexport const INTERSECTION_THRESHOLD = new InjectionToken<number | number[]>(\r\n    'threshold for IntersectionObserver',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => INTERSECTION_THRESHOLD_DEFAULT,\r\n    },\r\n);\r\n","import {INTERSECTION_THRESHOLD_DEFAULT} from '../tokens/intersection-threshold';\r\n\r\nexport function thresholdFactory(threshold: string | null): number | number[] {\r\n    return threshold?.split(',').map(parseFloat) || INTERSECTION_THRESHOLD_DEFAULT;\r\n}\r\n","import {\r\n    Attribute,\r\n    Directive,\r\n    ElementRef,\r\n    Inject,\r\n    OnDestroy,\r\n    Optional,\r\n} from '@angular/core';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\nimport {rootMarginFactory} from '../utils/root-margin-factory';\r\nimport {thresholdFactory} from '../utils/threshold-factory';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionObserver]',\r\n    exportAs: 'IntersectionObserver',\r\n})\r\nexport class IntersectionObserverDirective extends IntersectionObserver\r\n    implements OnDestroy {\r\n    private readonly callbacks = new Map<Element, IntersectionObserverCallback>();\r\n\r\n    constructor(\r\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\r\n        @Attribute('waIntersectionRootMargin') rootMargin: string | null,\r\n        @Attribute('waIntersectionThreshold') threshold: string | null,\r\n    ) {\r\n        super(\r\n            entries => {\r\n                this.callbacks.forEach((callback, element) => {\r\n                    const filtered = entries.filter(({target}) => target === element);\r\n\r\n                    return filtered.length && callback(filtered, this);\r\n                });\r\n            },\r\n            {\r\n                root: root && root.nativeElement,\r\n                rootMargin: rootMarginFactory(rootMargin),\r\n                threshold: thresholdFactory(threshold),\r\n            },\r\n        );\r\n    }\r\n\r\n    observe(target: Element, callback: IntersectionObserverCallback = () => {}) {\r\n        super.observe(target);\r\n        this.callbacks.set(target, callback);\r\n    }\r\n\r\n    unobserve(target: Element) {\r\n        super.unobserve(target);\r\n        this.callbacks.delete(target);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disconnect();\r\n    }\r\n}\r\n","import {ElementRef, Inject, Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\nimport {IntersectionObserverDirective} from '../directives/intersection-observer.directive';\r\n\r\n@Injectable()\r\nexport class IntersectionObserveeService extends Observable<IntersectionObserverEntry[]> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\r\n        @Inject(IntersectionObserverDirective)\r\n        observer: IntersectionObserverDirective,\r\n    ) {\r\n        super(subscriber => {\r\n            observer.observe(nativeElement, entries => {\r\n                subscriber.next(entries);\r\n            });\r\n\r\n            return () => {\r\n                observer.unobserve(nativeElement);\r\n            };\r\n        });\r\n\r\n        return this.pipe(share());\r\n    }\r\n}\r\n","import {Directive, Inject} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {IntersectionObserveeService} from '../services/intersection-observee.service';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionObservee]',\r\n    outputs: ['waIntersectionObservee'],\r\n    providers: [IntersectionObserveeService],\r\n})\r\nexport class IntersectionObserveeDirective {\r\n    constructor(\r\n        @Inject(IntersectionObserveeService)\r\n        readonly waIntersectionObservee: Observable<IntersectionObserverEntry[]>,\r\n    ) {}\r\n}\r\n","import {Directive, ElementRef} from '@angular/core';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionRoot]',\r\n    providers: [\r\n        {\r\n            provide: INTERSECTION_ROOT,\r\n            useExisting: ElementRef,\r\n        },\r\n    ],\r\n})\r\nexport class IntersectionRootDirective {}\r\n","import {NgModule} from '@angular/core';\r\nimport {IntersectionObserveeDirective} from './directives/intersection-observee.directive';\r\nimport {IntersectionObserverDirective} from './directives/intersection-observer.directive';\r\nimport {IntersectionRootDirective} from './directives/intersection-root.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        IntersectionObserverDirective,\r\n        IntersectionObserveeDirective,\r\n        IntersectionRootDirective,\r\n    ],\r\n    exports: [\r\n        IntersectionObserverDirective,\r\n        IntersectionObserveeDirective,\r\n        IntersectionRootDirective,\r\n    ],\r\n})\r\nexport class IntersectionObserverModule {}\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from '@ng-web-apis/common';\r\n\r\nexport const INTERSECTION_OBSERVER_SUPPORT = new InjectionToken<boolean>(\r\n    'Intersection Observer API support',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => !!(inject(WINDOW) as any).IntersectionObserver,\r\n    },\r\n);\r\n","import {ElementRef, Inject, Injectable, Optional} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\nimport {INTERSECTION_ROOT_MARGIN} from '../tokens/intersection-root-margin';\r\nimport {INTERSECTION_THRESHOLD} from '../tokens/intersection-threshold';\r\nimport {INTERSECTION_OBSERVER_SUPPORT} from '../tokens/support';\r\n\r\n@Injectable()\r\nexport class IntersectionObserverService extends Observable<IntersectionObserverEntry[]> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\r\n        @Inject(INTERSECTION_OBSERVER_SUPPORT) support: boolean,\r\n        @Inject(INTERSECTION_ROOT_MARGIN) rootMargin: string,\r\n        @Inject(INTERSECTION_THRESHOLD) threshold: number | number[],\r\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\r\n    ) {\r\n        super(subscriber => {\r\n            if (!support) {\r\n                subscriber.error('IntersectionObserver is not supported in your browser');\r\n\r\n                return;\r\n            }\r\n\r\n            const observer = new IntersectionObserver(\r\n                entries => {\r\n                    subscriber.next(entries);\r\n                },\r\n                {\r\n                    root: root && root.nativeElement,\r\n                    rootMargin,\r\n                    threshold,\r\n                },\r\n            );\r\n\r\n            observer.observe(nativeElement);\r\n\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        });\r\n\r\n        return this.pipe(share());\r\n    }\r\n}\r\n","/**\r\n * Public API Surface of @ng-web-apis/intersection-observer\r\n */\r\n\r\n/* Directives */\r\nexport * from './directives/intersection-observee.directive';\r\nexport * from './directives/intersection-observer.directive';\r\nexport * from './directives/intersection-root.directive';\r\n\r\n/* Modules */\r\nexport * from './module';\r\n\r\n/* Services */\r\nexport * from './services/intersection-observee.service';\r\nexport * from './services/intersection-observer.service';\r\n\r\n/* Tokens */\r\nexport * from './tokens/intersection-root';\r\nexport * from './tokens/intersection-root-margin';\r\nexport * from './tokens/intersection-threshold';\r\nexport * from './tokens/support';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}