{"version":3,"file":"tinkoff-ng-event-plugins.js","sources":["../../../projects/ng-event-plugins/src/utils/dasharize.ts","../../../projects/ng-event-plugins/src/plugins/abstract.plugin.ts","../../../projects/ng-event-plugins/src/plugins/bind.plugin.ts","../../../projects/ng-event-plugins/src/plugins/options.plugin.ts","../../../projects/ng-event-plugins/src/plugins/prevent.plugin.ts","../../../projects/ng-event-plugins/src/plugins/self.plugin.ts","../../../projects/ng-event-plugins/src/plugins/silent.plugin.ts","../../../projects/ng-event-plugins/src/plugins/stop.plugin.ts","../../../projects/ng-event-plugins/src/plugins/zone.plugin.ts","../../../projects/ng-event-plugins/src/constants/plugins.ts","../../../projects/ng-event-plugins/src/decorators/should-call.ts","../../../projects/ng-event-plugins/src/utils/as-callable.ts","../../../projects/ng-event-plugins/src/module.ts","../../../projects/ng-event-plugins/src/public-api.ts","../../../projects/ng-event-plugins/src/tinkoff-ng-event-plugins.ts"],"sourcesContent":["export function dasharize(camel: string): string {\r\n    return camel.replace(/[a-z][A-Z]/g, letterLetter => {\r\n        return `${letterLetter[0]}-${letterLetter[1].toLowerCase()}`;\r\n    });\r\n}\r\n","import {EventManager} from '@angular/platform-browser';\r\n\r\n// TODO: A subject to change: https://github.com/angular/angular/issues/3929\r\ntype EventManagerArg = ConstructorParameters<typeof EventManager>[0][0];\r\n\r\ntype EventManagerPlugin = {\r\n    [K in keyof EventManagerArg]: EventManagerArg[K];\r\n};\r\n\r\nexport abstract class AbstractEventPlugin implements EventManagerPlugin {\r\n    protected abstract readonly modifier: string;\r\n\r\n    manager!: EventManager;\r\n\r\n    abstract addEventListener(\r\n        element: HTMLElement,\r\n        event: string,\r\n        handler: Function,\r\n    ): Function;\r\n\r\n    supports(event: string): boolean {\r\n        return event.includes(this.modifier);\r\n    }\r\n\r\n    /** This is not used in Ivy anymore */\r\n    addGlobalEventListener(): Function {\r\n        return () => {};\r\n    }\r\n\r\n    protected unwrap(event: string): string {\r\n        return event\r\n            .split('.')\r\n            .filter(v => !this.modifier.includes(v))\r\n            .join('.');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {concat, defer, EMPTY, Observable} from 'rxjs';\r\nimport {takeWhile} from 'rxjs/operators';\r\nimport {dasharize} from '../utils/dasharize';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class BindEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '$';\r\n\r\n    addEventListener(\r\n        element: HTMLElement & Record<string, Observable<unknown>>,\r\n        event: string,\r\n    ): Function {\r\n        element[event] = element[event] || EMPTY;\r\n\r\n        const method = this.getMethod(element, event);\r\n        const zone$ = this.manager.getZone().onStable;\r\n        const sub = concat(\r\n            zone$.pipe(takeWhile(() => element[event] === EMPTY)),\r\n            defer(() => element[event]),\r\n        ).subscribe(method);\r\n\r\n        return () => sub.unsubscribe();\r\n    }\r\n\r\n    private getMethod(\r\n        element: HTMLElement & Record<string, unknown>,\r\n        event: string,\r\n    ): (v: unknown) => void {\r\n        const [, key, value, unit = ''] = event.split('.');\r\n\r\n        if (event.endsWith('.attr')) {\r\n            return v =>\r\n                v === null\r\n                    ? element.removeAttribute(key)\r\n                    : element.setAttribute(key, String(v));\r\n        }\r\n\r\n        if (key === 'class') {\r\n            return v => element.classList.toggle(value, !!v);\r\n        }\r\n\r\n        if (key === 'style') {\r\n            return v => element.style.setProperty(dasharize(value), `${v}${unit}`);\r\n        }\r\n\r\n        return v => (element[key] = v);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class OptionsEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = 'capture.once.passive';\r\n\r\n    supports(event: string): boolean {\r\n        return event.includes('.') && !this.unwrap(event).includes('.');\r\n    }\r\n\r\n    addEventListener(\r\n        element: HTMLElement,\r\n        event: string,\r\n        handler: EventListener,\r\n    ): Function {\r\n        element.addEventListener(this.unwrap(event), handler, {\r\n            once: event.includes('.once'),\r\n            passive: event.includes('.passive'),\r\n            capture: event.includes('.capture'),\r\n        });\r\n\r\n        return () => element.removeEventListener(this.unwrap(event), handler);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class PreventEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.prevent';\r\n\r\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\r\n        const wrapped = (event: Event): void => {\r\n            event.preventDefault();\r\n            handler(event);\r\n        };\r\n\r\n        return this.manager.addEventListener(element, this.unwrap(event), wrapped);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class SelfEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.self';\r\n\r\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\r\n        const wrapped = (event: Event) => {\r\n            if (event.target === event.currentTarget) {\r\n                handler(event);\r\n            }\r\n        };\r\n\r\n        return this.manager.addEventListener(element, this.unwrap(event), wrapped);\r\n    }\r\n}\r\n","import {Injectable, NgZone} from '@angular/core';\r\n\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class SilentEventPlugin extends AbstractEventPlugin {\r\n    static ngZone?: NgZone;\r\n\r\n    protected readonly modifier = '.silent';\r\n\r\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\r\n        SilentEventPlugin.ngZone = this.manager.getZone();\r\n\r\n        return SilentEventPlugin.ngZone.runOutsideAngular(() =>\r\n            this.manager.addEventListener(element, this.unwrap(event), handler),\r\n        );\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n@Injectable()\r\nexport class StopEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.stop';\r\n\r\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\r\n        const wrapped = (event: Event): void => {\r\n            event.stopPropagation();\r\n            handler(event);\r\n        };\r\n\r\n        return this.manager.addEventListener(element, this.unwrap(event), wrapped);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {AbstractEventPlugin} from './abstract.plugin';\r\n\r\n/**\r\n * TODO: Remove in v4.0.0\r\n * @deprecated\r\n */\r\n@Injectable()\r\nexport class ZoneEventPlugin extends AbstractEventPlugin {\r\n    protected readonly modifier = '.init';\r\n\r\n    addEventListener(): Function {\r\n        console.warn('.init plugin is no longer necessary as of v3.1.0');\r\n\r\n        return () => {};\r\n    }\r\n}\r\n","import {Provider} from '@angular/core';\r\nimport {EVENT_MANAGER_PLUGINS} from '@angular/platform-browser';\r\n\r\nimport {BindEventPlugin} from '../plugins/bind.plugin';\r\nimport {OptionsEventPlugin} from '../plugins/options.plugin';\r\nimport {PreventEventPlugin} from '../plugins/prevent.plugin';\r\nimport {SelfEventPlugin} from '../plugins/self.plugin';\r\nimport {SilentEventPlugin} from '../plugins/silent.plugin';\r\nimport {StopEventPlugin} from '../plugins/stop.plugin';\r\nimport {ZoneEventPlugin} from '../plugins/zone.plugin';\r\n\r\nconst PLUGINS = [\r\n    SilentEventPlugin,\r\n    BindEventPlugin,\r\n    OptionsEventPlugin,\r\n    PreventEventPlugin,\r\n    SelfEventPlugin,\r\n    StopEventPlugin,\r\n    ZoneEventPlugin,\r\n];\r\n\r\nexport const NG_EVENT_PLUGINS: Provider[] = PLUGINS.map(useClass => ({\r\n    provide: EVENT_MANAGER_PLUGINS,\r\n    multi: true,\r\n    useClass,\r\n}));\r\n","import {SilentEventPlugin} from '../plugins/silent.plugin';\r\nimport {Predicate} from '../types/predicate';\r\n\r\nexport function shouldCall<T>(predicate: Predicate<T>): MethodDecorator {\r\n    return (_target, _key, desc: PropertyDescriptor) => {\r\n        const {value} = desc;\r\n\r\n        desc.value = function (this: T, ...args: any[]) {\r\n            if (!predicate.apply(this, args)) {\r\n                return;\r\n            }\r\n\r\n            if (SilentEventPlugin.ngZone) {\r\n                SilentEventPlugin.ngZone.run(() => value.apply(this, args));\r\n            } else {\r\n                value.apply(this, args);\r\n            }\r\n        };\r\n    };\r\n}\r\n","export function asCallable<T>(a: T): T & Function {\r\n    return a as any;\r\n}\r\n","import {Inject, NgModule} from '@angular/core';\r\nimport {EVENT_MANAGER_PLUGINS} from '@angular/platform-browser';\r\n\r\nimport {NG_EVENT_PLUGINS} from './constants/plugins';\r\nimport {SilentEventPlugin} from './plugins/silent.plugin';\r\n\r\n@NgModule({\r\n    providers: NG_EVENT_PLUGINS,\r\n})\r\nexport class EventPluginsModule {\r\n    static initialized = false;\r\n\r\n    constructor(@Inject(EVENT_MANAGER_PLUGINS) [plugin]: readonly unknown[]) {\r\n        console.assert(\r\n            !(plugin instanceof SilentEventPlugin) || EventPluginsModule.initialized,\r\n            'EventPluginsModule must come after BrowserModule in imports',\r\n        );\r\n\r\n        EventPluginsModule.initialized = true;\r\n    }\r\n}\r\n","/**\r\n * Public API Surface of @tinkoff/ng-event-plugins\r\n */\r\nexport * from './constants/plugins';\r\nexport * from './decorators/should-call';\r\nexport * from './plugins/bind.plugin';\r\nexport * from './plugins/options.plugin';\r\nexport * from './plugins/prevent.plugin';\r\nexport * from './plugins/silent.plugin';\r\nexport * from './plugins/stop.plugin';\r\nexport * from './plugins/zone.plugin';\r\nexport * from './types/predicate';\r\nexport * from './utils/as-callable';\r\nexport * from './module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;AAAM,SAAU,SAAS,CAAC,KAAa,EAAA;IACnC,OAAO,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,IAAG;AAC/C,QAAA,OAAO,CAAG,EAAA,YAAY,CAAC,CAAC,CAAC,CAAI,CAAA,EAAA,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;AACjE,KAAC,CAAC,CAAC;AACP;;MCKsB,mBAAmB,CAAA;AAWrC,IAAA,QAAQ,CAAC,KAAa,EAAA;QAClB,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACxC;;IAGD,sBAAsB,GAAA;AAClB,QAAA,OAAO,MAAO,GAAC,CAAC;KACnB;AAES,IAAA,MAAM,CAAC,KAAa,EAAA;AAC1B,QAAA,OAAO,KAAK;aACP,KAAK,CAAC,GAAG,CAAC;AACV,aAAA,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACvC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB;AACJ;;AC5BK,MAAO,eAAgB,SAAQ,mBAAmB,CAAA;AADxD,IAAA,WAAA,GAAA;;QAEuB,IAAQ,CAAA,QAAA,GAAG,GAAG,CAAC;AAyCrC,KAAA;IAvCG,gBAAgB,CACZ,OAA0D,EAC1D,KAAa,EAAA;QAEb,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;QAEzC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;AAC9C,QAAA,MAAM,GAAG,GAAG,MAAM,CACd,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,EACrD,KAAK,CAAC,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,CAC9B,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAEpB,QAAA,OAAO,MAAM,GAAG,CAAC,WAAW,EAAE,CAAC;KAClC;IAEO,SAAS,CACb,OAA8C,EAC9C,KAAa,EAAA;AAEb,QAAA,MAAM,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAEnD,QAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AACzB,YAAA,OAAO,CAAC,IACJ,CAAC,KAAK,IAAI;AACN,kBAAE,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC;AAC9B,kBAAE,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,SAAA;QAED,IAAI,GAAG,KAAK,OAAO,EAAE;AACjB,YAAA,OAAO,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,SAAA;QAED,IAAI,GAAG,KAAK,OAAO,EAAE;YACjB,OAAO,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAA,EAAG,CAAC,CAAG,EAAA,IAAI,CAAE,CAAA,CAAC,CAAC;AAC1E,SAAA;AAED,QAAA,OAAO,CAAC,KAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAClC;;gIAzCQ,eAAe,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;oIAAf,eAAe,EAAA,CAAA,CAAA;4FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;;;ACFL,MAAO,kBAAmB,SAAQ,mBAAmB,CAAA;AAD3D,IAAA,WAAA,GAAA;;QAEuB,IAAQ,CAAA,QAAA,GAAG,sBAAsB,CAAC;AAmBxD,KAAA;AAjBG,IAAA,QAAQ,CAAC,KAAa,EAAA;AAClB,QAAA,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACnE;AAED,IAAA,gBAAgB,CACZ,OAAoB,EACpB,KAAa,EACb,OAAsB,EAAA;QAEtB,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE;AAClD,YAAA,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC7B,YAAA,OAAO,EAAE,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC;AACnC,YAAA,OAAO,EAAE,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC;AACtC,SAAA,CAAC,CAAC;AAEH,QAAA,OAAO,MAAM,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;KACzE;;mIAnBQ,kBAAkB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;uIAAlB,kBAAkB,EAAA,CAAA,CAAA;4FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,UAAU;;;ACEL,MAAO,kBAAmB,SAAQ,mBAAmB,CAAA;AAD3D,IAAA,WAAA,GAAA;;QAEuB,IAAQ,CAAA,QAAA,GAAG,UAAU,CAAC;AAU5C,KAAA;AARG,IAAA,gBAAgB,CAAC,OAAoB,EAAE,KAAa,EAAE,OAAiB,EAAA;AACnE,QAAA,MAAM,OAAO,GAAG,CAAC,KAAY,KAAU;YACnC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO,CAAC,KAAK,CAAC,CAAC;AACnB,SAAC,CAAC;AAEF,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;KAC9E;;mIAVQ,kBAAkB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;uIAAlB,kBAAkB,EAAA,CAAA,CAAA;4FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,UAAU;;;ACAL,MAAO,eAAgB,SAAQ,mBAAmB,CAAA;AADxD,IAAA,WAAA,GAAA;;QAEuB,IAAQ,CAAA,QAAA,GAAG,OAAO,CAAC;AAWzC,KAAA;AATG,IAAA,gBAAgB,CAAC,OAAoB,EAAE,KAAa,EAAE,OAAiB,EAAA;AACnE,QAAA,MAAM,OAAO,GAAG,CAAC,KAAY,KAAI;AAC7B,YAAA,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,aAAa,EAAE;gBACtC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClB,aAAA;AACL,SAAC,CAAC;AAEF,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;KAC9E;;gIAXQ,eAAe,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;oIAAf,eAAe,EAAA,CAAA,CAAA;4FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;;;ACEL,MAAO,iBAAkB,SAAQ,mBAAmB,CAAA;AAD1D,IAAA,WAAA,GAAA;;QAIuB,IAAQ,CAAA,QAAA,GAAG,SAAS,CAAC;AAS3C,KAAA;AAPG,IAAA,gBAAgB,CAAC,OAAoB,EAAE,KAAa,EAAE,OAAiB,EAAA;QACnE,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAElD,OAAO,iBAAiB,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAC9C,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CACtE,CAAC;KACL;;kIAXQ,iBAAiB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;sIAAjB,iBAAiB,EAAA,CAAA,CAAA;4FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;;;ACCL,MAAO,eAAgB,SAAQ,mBAAmB,CAAA;AADxD,IAAA,WAAA,GAAA;;QAEuB,IAAQ,CAAA,QAAA,GAAG,OAAO,CAAC;AAUzC,KAAA;AARG,IAAA,gBAAgB,CAAC,OAAoB,EAAE,KAAa,EAAE,OAAiB,EAAA;AACnE,QAAA,MAAM,OAAO,GAAG,CAAC,KAAY,KAAU;YACnC,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,OAAO,CAAC,KAAK,CAAC,CAAC;AACnB,SAAC,CAAC;AAEF,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;KAC9E;;gIAVQ,eAAe,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;oIAAf,eAAe,EAAA,CAAA,CAAA;4FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;;;ACAX;;;AAGG;AAEG,MAAO,eAAgB,SAAQ,mBAAmB,CAAA;AADxD,IAAA,WAAA,GAAA;;QAEuB,IAAQ,CAAA,QAAA,GAAG,OAAO,CAAC;AAOzC,KAAA;IALG,gBAAgB,GAAA;AACZ,QAAA,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;AAEjE,QAAA,OAAO,MAAO,GAAC,CAAC;KACnB;;gIAPQ,eAAe,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;oIAAf,eAAe,EAAA,CAAA,CAAA;4FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;;;ACGX,MAAM,OAAO,GAAG;IACZ,iBAAiB;IACjB,eAAe;IACf,kBAAkB;IAClB,kBAAkB;IAClB,eAAe;IACf,eAAe;IACf,eAAe;CAClB,CAAC;AAEK,MAAM,gBAAgB,GAAe,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK;AACjE,IAAA,OAAO,EAAE,qBAAqB;AAC9B,IAAA,KAAK,EAAE,IAAI;IACX,QAAQ;AACX,CAAA,CAAC;;ACtBI,SAAU,UAAU,CAAI,SAAuB,EAAA;AACjD,IAAA,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAwB,KAAI;AAC/C,QAAA,MAAM,EAAC,KAAK,EAAC,GAAG,IAAI,CAAC;AAErB,QAAA,IAAI,CAAC,KAAK,GAAG,UAAmB,GAAG,IAAW,EAAA;YAC1C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBAC9B,OAAO;AACV,aAAA;YAED,IAAI,iBAAiB,CAAC,MAAM,EAAE;AAC1B,gBAAA,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/D,aAAA;AAAM,iBAAA;AACH,gBAAA,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC3B,aAAA;AACL,SAAC,CAAC;AACN,KAAC,CAAC;AACN;;ACnBM,SAAU,UAAU,CAAI,CAAI,EAAA;AAC9B,IAAA,OAAO,CAAQ,CAAC;AACpB;;MCOa,kBAAkB,CAAA;IAG3B,WAA2C,CAAA,CAAC,MAAM,CAAqB,EAAA;AACnE,QAAA,OAAO,CAAC,MAAM,CACV,EAAE,MAAM,YAAY,iBAAiB,CAAC,IAAI,kBAAkB,CAAC,WAAW,EACxE,6DAA6D,CAChE,CAAC;AAEF,QAAA,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC;KACzC;;AATM,kBAAW,CAAA,WAAA,GAAG,KAAK,CAAC;AADlB,mBAAA,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,kBAGP,qBAAqB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oIAHhC,kBAAkB,EAAA,CAAA,CAAA;AAAlB,mBAAA,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,aAFhB,gBAAgB,EAAA,CAAA,CAAA;4FAElB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,SAAS,EAAE,gBAAgB;AAC9B,iBAAA,CAAA;;0BAIgB,MAAM;2BAAC,qBAAqB,CAAA;;;ACZ7C;;AAEG;;ACFH;;AAEG;;;;"}