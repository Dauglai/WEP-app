import { Directive, Self } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.
 */
export class PolymorpheusTemplate {
    constructor(template, cdr) {
        this.template = template;
        this.cdr = cdr;
        this.polymorpheus = '';
    }
    check() {
        this.cdr.markForCheck();
    }
    static ngTemplateContextGuard(_dir, _ctx) {
        return true;
    }
}
/** @nocollapse */ PolymorpheusTemplate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.0", ngImport: i0, type: PolymorpheusTemplate, deps: [{ token: i0.TemplateRef, self: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ PolymorpheusTemplate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.0", type: PolymorpheusTemplate, selector: "ng-template[polymorpheus]", inputs: { polymorpheus: "polymorpheus" }, exportAs: ["polymorpheus"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.0", ngImport: i0, type: PolymorpheusTemplate, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ng-template[polymorpheus]',
                    exportAs: 'polymorpheus',
                    inputs: ['polymorpheus'],
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{
                    type: Self
                }] }, { type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1wb2x5bW9ycGhldXMvc3JjL2RpcmVjdGl2ZXMvdGVtcGxhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFvQixTQUFTLEVBQUUsSUFBSSxFQUFjLE1BQU0sZUFBZSxDQUFDOztBQUU5RTs7R0FFRztBQU1ILE1BQU0sT0FBTyxvQkFBb0I7SUFHN0IsWUFDcUIsUUFBd0IsRUFDeEIsR0FBc0I7UUFEdEIsYUFBUSxHQUFSLFFBQVEsQ0FBZ0I7UUFDeEIsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFKM0MsaUJBQVksR0FBVyxFQUFFLENBQUM7SUFLdkIsQ0FBQztJQUVKLEtBQUs7UUFDRCxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFRCxNQUFNLENBQUMsc0JBQXNCLENBQ3pCLElBQTZCLEVBQzdCLElBQVM7UUFFVCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOztvSUFqQlEsb0JBQW9CO3dIQUFwQixvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFMaEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxRQUFRLEVBQUUsY0FBYztvQkFDeEIsTUFBTSxFQUFFLENBQUMsY0FBYyxDQUFDO2lCQUMzQjs7MEJBS1EsSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0b3JSZWYsIERpcmVjdGl2ZSwgU2VsZiwgVGVtcGxhdGVSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIG5nLXRlbXBsYXRlIHdyYXBwZXIgZGlyZWN0aXZlIGFsc28gc3RvcmVzIHtAbGluayBDaGFuZ2VEZXRlY3RvclJlZn0gdG8gcHJvcGVybHkgaGFuZGxlIGNoYW5nZSBkZXRlY3Rpb24uXHJcbiAqL1xyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnbmctdGVtcGxhdGVbcG9seW1vcnBoZXVzXScsXHJcbiAgICBleHBvcnRBczogJ3BvbHltb3JwaGV1cycsXHJcbiAgICBpbnB1dHM6IFsncG9seW1vcnBoZXVzJ10sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQb2x5bW9ycGhldXNUZW1wbGF0ZTxDID0gYW55PiB7XHJcbiAgICBwb2x5bW9ycGhldXM6IEMgfCAnJyA9ICcnO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIEBTZWxmKCkgcmVhZG9ubHkgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPEM+LFxyXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICAgICkge31cclxuXHJcbiAgICBjaGVjaygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmNkci5tYXJrRm9yQ2hlY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgbmdUZW1wbGF0ZUNvbnRleHRHdWFyZDxUPihcclxuICAgICAgICBfZGlyOiBQb2x5bW9ycGhldXNUZW1wbGF0ZTxUPixcclxuICAgICAgICBfY3R4OiBhbnksXHJcbiAgICApOiBfY3R4IGlzIFQgZXh0ZW5kcyAnJyA/IGFueSA6IFQge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==