import { DoCheck, Injector, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import { PolymorpheusContext } from '../classes/context';
import { PolymorpheusContent } from '../types/content';
import { PolymorpheusPrimitive } from '../types/primitive';
import * as i0 from "@angular/core";
export declare class PolymorpheusOutletDirective<C> implements OnChanges, DoCheck {
    private readonly vcr;
    private readonly i;
    private readonly t;
    private v?;
    private c?;
    content: PolymorpheusContent<C>;
    context?: C;
    constructor(vcr: ViewContainerRef, i: Injector, t: TemplateRef<PolymorpheusContext<PolymorpheusPrimitive>>);
    private get template();
    ngOnChanges({ content }: SimpleChanges): void;
    ngDoCheck(): void;
    static ngTemplateContextGuard<T>(_dir: PolymorpheusOutletDirective<T>, _ctx: any): _ctx is PolymorpheusContext<string>;
    private getContext;
    private process;
    static ɵfac: i0.ɵɵFactoryDeclaration<PolymorpheusOutletDirective<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PolymorpheusOutletDirective<any>, "[polymorpheusOutlet]", never, { "content": "polymorpheusOutlet"; "context": "polymorpheusOutletContext"; }, {}, never>;
}
