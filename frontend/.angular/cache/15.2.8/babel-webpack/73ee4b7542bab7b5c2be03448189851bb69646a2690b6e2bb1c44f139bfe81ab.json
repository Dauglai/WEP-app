{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nlet LoginComponent = class LoginComponent {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n    this.authToken = '';\n    this.formLogin = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {\n    // this.getUserWithToken(localStorage.getItem('my-token'));\n  }\n  login() {\n    const form = this.formLogin.value;\n    console.log(form);\n    // this.createAccount(form.email!, form.password!, form.password2!);\n    this.getToken(form.email, form.password);\n    this.getUserWithToken(localStorage.getItem('my-token'));\n  }\n  getToken(email, password) {\n    this.accountService.getToken(email, password).subscribe(data => {\n      console.log(data);\n      localStorage.setItem('my-token', data.auth_token);\n    }, error => {\n      console.log(error);\n    });\n  }\n  getUserWithToken(MyToken) {\n    this.accountService.getAccountWhithToken(MyToken).subscribe(data => {\n      console.log(data);\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAG/C,SAAQC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;AAO1D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EACzBC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,mBAAc,GAAdD,cAAc;IAA0B,WAAM,GAANC,MAAM;IAC1D,cAAS,GAAG,EAAE;IAMtB,cAAS,GAAG,IAAIL,SAAS,CAAC;MACxBM,KAAK,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MAC/CC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ;KAClD,CAAC;EAV4E;EAG9EE,QAAQ;IACN;EAAA;EAQFC,KAAK;IACH,MAAMC,IAAI,GAAG,IAAI,CAACC,SAAS,CAACC,KAAK;IACjCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB;IACA,IAAI,CAACK,QAAQ,CAACL,IAAI,CAACL,KAAM,EAAEK,IAAI,CAACH,QAAS,CAAC;IAC1C,IAAI,CAACS,gBAAgB,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;EACzD;EAEAH,QAAQ,CAACV,KAAa,EAAEE,QAAgB;IACtC,IAAI,CAACJ,cAAc,CAACY,QAAQ,CAACV,KAAK,EAAEE,QAAQ,CAAC,CAACY,SAAS,CACrDC,IAAI,IAAG;MACLP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MACjBH,YAAY,CAACI,OAAO,CAAC,UAAU,EAAED,IAAI,CAACE,UAAU,CAAC;IACnD,CAAC,EACDC,KAAK,IAAG;MACNV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAP,gBAAgB,CAACQ,OAAY;IAC3B,IAAI,CAACrB,cAAc,CAACsB,oBAAoB,CAACD,OAAO,CAAC,CAACL,SAAS,CACzDC,IAAI,IAAG;MACLP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;IACnB,CAAC,EACDG,KAAK,IAAG;MACNV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IACpB,CAAC,CACF;EACH;CACD;AA3CYtB,cAAc,eAL1BJ,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW3B,cAAc,CA2C1B;SA3CYA,cAAc","names":["Component","FormControl","FormGroup","Validators","LoginComponent","constructor","accountService","router","email","required","password","ngOnInit","login","form","formLogin","value","console","log","getToken","getUserWithToken","localStorage","getItem","subscribe","data","setItem","auth_token","error","MyToken","getAccountWhithToken","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\denis\\PycharmProjects\\example_project\\frontend\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AccountService} from \"../../servicies/account.service\";\nimport {Router} from \"@angular/router\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  constructor(private accountService: AccountService, private router: Router) { }\n  private authToken = ''\n\n  ngOnInit() {\n    // this.getUserWithToken(localStorage.getItem('my-token'));\n  }\n\n  formLogin = new FormGroup({\n    email: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  })\n\n  login(): void {\n    const form = this.formLogin.value;\n    console.log(form)\n    // this.createAccount(form.email!, form.password!, form.password2!);\n    this.getToken(form.email!, form.password!);\n    this.getUserWithToken(localStorage.getItem('my-token'))\n  }\n\n  getToken(email: string, password: string): void {\n    this.accountService.getToken(email, password).subscribe(\n      data => {\n        console.log(data);\n        localStorage.setItem('my-token', data.auth_token)\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n\n  getUserWithToken(MyToken: any): void {\n    this.accountService.getAccountWhithToken(MyToken).subscribe(\n      data => {\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}