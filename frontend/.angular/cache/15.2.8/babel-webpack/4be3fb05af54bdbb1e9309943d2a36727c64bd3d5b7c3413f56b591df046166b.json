{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Self, Inject, SkipSelf } from '@angular/core';\nimport { TuiDestroyService, AbstractTuiControl } from '@taiga-ui/cdk';\nimport * as i1 from 'rxjs';\nimport { Observable, merge } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass TuiDriver extends Observable {}\nfunction tuiAsDriver(useExisting) {\n  return {\n    provide: TuiDriver,\n    multi: true,\n    useExisting\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass TuiVehicle {}\nfunction tuiAsVehicle(useExisting) {\n  return {\n    provide: TuiVehicle,\n    multi: true,\n    useExisting\n  };\n}\nclass AbstractTuiDriverDirective {\n  constructor(destroy$, drivers, vehicles) {\n    this.destroy$ = destroy$;\n    this.drivers = drivers;\n    this.vehicles = vehicles;\n  }\n  ngOnInit() {\n    const vehicle = this.vehicles.find(({\n      type\n    }) => type === this.type);\n    merge(...this.drivers.filter(({\n      type\n    }) => type === this.type)).pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe(value => {\n      vehicle === null || vehicle === void 0 ? void 0 : vehicle.toggle(value);\n    });\n  }\n}\nAbstractTuiDriverDirective.ɵfac = function AbstractTuiDriverDirective_Factory(t) {\n  return new (t || AbstractTuiDriverDirective)(i0.ɵɵdirectiveInject(TuiDestroyService, 2), i0.ɵɵdirectiveInject(TuiDriver), i0.ɵɵdirectiveInject(TuiVehicle));\n};\nAbstractTuiDriverDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiDriverDirective\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiDriverDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i1.Observable,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [TuiDestroyService]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TuiDriver]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TuiVehicle]\n      }]\n    }];\n  }, null);\n})();\nclass AbstractTuiTextfieldHost {\n  constructor(host) {\n    this.host = host;\n  }\n  get readOnly() {\n    return this.host.readOnly;\n  }\n  get disabled() {\n    return this.host.computedDisabled;\n  }\n  get invalid() {\n    return this.host.computedInvalid;\n  }\n  get focusable() {\n    return this.host.computedFocusable;\n  }\n  get inputMode() {\n    return `text`;\n  }\n  get value() {\n    var _a;\n    return ((_a = this.host.value) === null || _a === void 0 ? void 0 : _a.toString()) || ``;\n  }\n  process(_input) {}\n}\nAbstractTuiTextfieldHost.ɵfac = function AbstractTuiTextfieldHost_Factory(t) {\n  return new (t || AbstractTuiTextfieldHost)(i0.ɵɵdirectiveInject(AbstractTuiControl));\n};\nAbstractTuiTextfieldHost.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiTextfieldHost\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiTextfieldHost, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [AbstractTuiControl]\n      }]\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass TuiPositionAccessor {}\nfunction tuiPositionAccessorFor(type) {\n  return {\n    provide: TuiPositionAccessor,\n    deps: [[new SkipSelf(), TuiPositionAccessor]],\n    useFactory: accessors => accessors.find(accessor => accessor.type === type)\n  };\n}\nfunction tuiAsPositionAccessor(useExisting) {\n  return {\n    provide: TuiPositionAccessor,\n    multi: true,\n    useExisting\n  };\n}\n\n// TODO: Rename to getBoundingClientRect to match the DOM API\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass TuiRectAccessor {}\nfunction tuiRectAccessorFor(type, fallback) {\n  return {\n    provide: TuiRectAccessor,\n    deps: [[new SkipSelf(), TuiRectAccessor], fallback],\n    useFactory: tuiFallbackRectAccessor(type)\n  };\n}\nfunction tuiFallbackRectAccessor(type) {\n  return (accessors, fallback) => accessors.find(accessor => accessor !== fallback && accessor.type === type) || fallback;\n}\nfunction tuiAsRectAccessor(useExisting) {\n  return {\n    provide: TuiRectAccessor,\n    multi: true,\n    useExisting\n  };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractTuiDriverDirective, AbstractTuiTextfieldHost, TuiDriver, TuiPositionAccessor, TuiRectAccessor, TuiVehicle, tuiAsDriver, tuiAsPositionAccessor, tuiAsRectAccessor, tuiAsVehicle, tuiFallbackRectAccessor, tuiPositionAccessorFor, tuiRectAccessorFor };","map":{"version":3,"names":["i0","Directive","Self","Inject","SkipSelf","TuiDestroyService","AbstractTuiControl","i1","Observable","merge","distinctUntilChanged","takeUntil","TuiDriver","tuiAsDriver","useExisting","provide","multi","TuiVehicle","tuiAsVehicle","AbstractTuiDriverDirective","constructor","destroy$","drivers","vehicles","ngOnInit","vehicle","find","type","filter","pipe","subscribe","value","toggle","ɵfac","ɵdir","decorators","args","undefined","AbstractTuiTextfieldHost","host","readOnly","disabled","computedDisabled","invalid","computedInvalid","focusable","computedFocusable","inputMode","_a","toString","process","_input","TuiPositionAccessor","tuiPositionAccessorFor","deps","useFactory","accessors","accessor","tuiAsPositionAccessor","TuiRectAccessor","tuiRectAccessorFor","fallback","tuiFallbackRectAccessor","tuiAsRectAccessor"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-abstract.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Self, Inject, SkipSelf } from '@angular/core';\nimport { TuiDestroyService, AbstractTuiControl } from '@taiga-ui/cdk';\nimport * as i1 from 'rxjs';\nimport { Observable, merge } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass TuiDriver extends Observable {\n}\nfunction tuiAsDriver(useExisting) {\n    return {\n        provide: TuiDriver,\n        multi: true,\n        useExisting,\n    };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass TuiVehicle {\n}\nfunction tuiAsVehicle(useExisting) {\n    return {\n        provide: TuiVehicle,\n        multi: true,\n        useExisting,\n    };\n}\n\nclass AbstractTuiDriverDirective {\n    constructor(destroy$, drivers, vehicles) {\n        this.destroy$ = destroy$;\n        this.drivers = drivers;\n        this.vehicles = vehicles;\n    }\n    ngOnInit() {\n        const vehicle = this.vehicles.find(({ type }) => type === this.type);\n        merge(...this.drivers.filter(({ type }) => type === this.type))\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy$))\n            .subscribe(value => {\n            vehicle === null || vehicle === void 0 ? void 0 : vehicle.toggle(value);\n        });\n    }\n}\nAbstractTuiDriverDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiDriverDirective, deps: [{ token: TuiDestroyService, self: true }, { token: TuiDriver }, { token: TuiVehicle }], target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiDriverDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiDriverDirective, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiDriverDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [TuiDestroyService]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TuiDriver]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TuiVehicle]\n                }] }]; } });\n\nclass AbstractTuiTextfieldHost {\n    constructor(host) {\n        this.host = host;\n    }\n    get readOnly() {\n        return this.host.readOnly;\n    }\n    get disabled() {\n        return this.host.computedDisabled;\n    }\n    get invalid() {\n        return this.host.computedInvalid;\n    }\n    get focusable() {\n        return this.host.computedFocusable;\n    }\n    get inputMode() {\n        return `text`;\n    }\n    get value() {\n        var _a;\n        return ((_a = this.host.value) === null || _a === void 0 ? void 0 : _a.toString()) || ``;\n    }\n    process(_input) { }\n}\nAbstractTuiTextfieldHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiTextfieldHost, deps: [{ token: AbstractTuiControl }], target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiTextfieldHost.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiTextfieldHost, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiTextfieldHost, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [AbstractTuiControl]\n                }] }]; } });\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass TuiPositionAccessor {\n}\nfunction tuiPositionAccessorFor(type) {\n    return {\n        provide: TuiPositionAccessor,\n        deps: [[new SkipSelf(), TuiPositionAccessor]],\n        useFactory: (accessors) => accessors.find(accessor => accessor.type === type),\n    };\n}\nfunction tuiAsPositionAccessor(useExisting) {\n    return {\n        provide: TuiPositionAccessor,\n        multi: true,\n        useExisting,\n    };\n}\n\n// TODO: Rename to getBoundingClientRect to match the DOM API\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass TuiRectAccessor {\n}\nfunction tuiRectAccessorFor(type, fallback) {\n    return {\n        provide: TuiRectAccessor,\n        deps: [[new SkipSelf(), TuiRectAccessor], fallback],\n        useFactory: tuiFallbackRectAccessor(type),\n    };\n}\nfunction tuiFallbackRectAccessor(type) {\n    return (accessors, fallback) => accessors.find(accessor => accessor !== fallback && accessor.type === type) ||\n        fallback;\n}\nfunction tuiAsRectAccessor(useExisting) {\n    return {\n        provide: TuiRectAccessor,\n        multi: true,\n        useExisting,\n    };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractTuiDriverDirective, AbstractTuiTextfieldHost, TuiDriver, TuiPositionAccessor, TuiRectAccessor, TuiVehicle, tuiAsDriver, tuiAsPositionAccessor, tuiAsRectAccessor, tuiAsVehicle, tuiFallbackRectAccessor, tuiPositionAccessorFor, tuiRectAccessorFor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}