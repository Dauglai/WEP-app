{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_CHECKBOX_OPTIONS, TuiPrimitiveCheckboxModule } from '@taiga-ui/core';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"focusableElement\"];\nclass TuiCheckboxComponent extends AbstractTuiNullableControl {\n  constructor(control, options, cdr) {\n    super(control, cdr);\n    this.options = options;\n    this.size = this.options.size;\n  }\n  get nativeFocusableElement() {\n    return !this.focusableElement || this.computedDisabled ? null : this.focusableElement.nativeElement;\n  }\n  get focused() {\n    return tuiIsNativeFocused(this.nativeFocusableElement);\n  }\n  get computedFocusable() {\n    return this.interactive && this.focusable;\n  }\n  /** @deprecated use 'value' setter */\n  onChecked(checked) {\n    this.value = checked;\n  }\n  onFocused(focused) {\n    this.updateFocused(focused);\n  }\n  onFocusVisible(focusVisible) {\n    this.updateFocusVisible(focusVisible);\n  }\n}\nTuiCheckboxComponent.ɵfac = function TuiCheckboxComponent_Factory(t) {\n  return new (t || TuiCheckboxComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(TUI_CHECKBOX_OPTIONS), i0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\nTuiCheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiCheckboxComponent,\n  selectors: [[\"tui-checkbox\"]],\n  viewQuery: function TuiCheckboxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusableElement = _t.first);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function TuiCheckboxComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"data-size\", ctx.size);\n    }\n  },\n  inputs: {\n    size: \"size\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiCheckboxComponent), tuiAsControl(TuiCheckboxComponent)]), i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 11,\n  consts: [[3, \"size\", \"disabled\", \"focused\", \"hovered\", \"pressed\", \"invalid\", \"value\"], [\"type\", \"checkbox\", \"automation-id\", \"tui-checkbox__native\", 1, \"t-native\", 3, \"disabled\", \"id\", \"tuiFocusable\", \"tuiChecked\", \"tuiCheckedChange\", \"tuiFocusedChange\", \"tuiFocusVisibleChange\"], [\"focusableElement\", \"\"]],\n  template: function TuiCheckboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"tui-primitive-checkbox\", 0)(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"tuiCheckedChange\", function TuiCheckboxComponent_Template_input_tuiCheckedChange_1_listener($event) {\n        return ctx.value = $event;\n      })(\"tuiFocusedChange\", function TuiCheckboxComponent_Template_input_tuiFocusedChange_1_listener($event) {\n        return ctx.onFocused($event);\n      })(\"tuiFocusVisibleChange\", function TuiCheckboxComponent_Template_input_tuiFocusVisibleChange_1_listener($event) {\n        return ctx.onFocusVisible($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"size\", ctx.size)(\"disabled\", ctx.disabled)(\"focused\", ctx.computedFocusVisible)(\"hovered\", ctx.pseudoHover)(\"pressed\", ctx.pseudoActive)(\"invalid\", ctx.computedInvalid)(\"value\", ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"id\", ctx.id)(\"tuiFocusable\", ctx.computedFocusable)(\"tuiChecked\", ctx.value);\n    }\n  },\n  dependencies: [i1.TuiPrimitiveCheckboxComponent, i2.TuiCheckedDirective, i2.TuiFocusableDirective, i2.TuiFocusedDirective, i2.TuiFocusVisibleDirective],\n  styles: [\"[_nghost-%COMP%]{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;flex-shrink:0}[data-size=m][_nghost-%COMP%]{width:1rem;height:1rem}[data-size=l][_nghost-%COMP%]{width:1.5rem;height:1.5rem}._readonly[_nghost-%COMP%]   tui-primitive-checkbox[_ngcontent-%COMP%]{pointer-events:none}.t-native[_ngcontent-%COMP%]{padding:0;margin:0;border:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}.t-native[_ngcontent-%COMP%]:-webkit-autofill, .t-native[_ngcontent-%COMP%]:-webkit-autofill:hover, .t-native[_ngcontent-%COMP%]:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiCheckboxComponent.prototype, \"size\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-checkbox',\n      templateUrl: './checkbox.template.html',\n      styleUrls: ['./checkbox.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiCheckboxComponent), tuiAsControl(TuiCheckboxComponent)]\n    }]\n  }], function () {\n    return [{\n      type: i3.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_CHECKBOX_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }];\n  }, {\n    focusableElement: [{\n      type: ViewChild,\n      args: ['focusableElement']\n    }],\n    size: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.data-size']\n    }]\n  });\n})();\nclass TuiCheckboxModule {}\nTuiCheckboxModule.ɵfac = function TuiCheckboxModule_Factory(t) {\n  return new (t || TuiCheckboxModule)();\n};\nTuiCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiCheckboxModule\n});\nTuiCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule, TuiPrimitiveCheckboxModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule, TuiPrimitiveCheckboxModule],\n      declarations: [TuiCheckboxComponent],\n      exports: [TuiCheckboxComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCheckboxComponent, TuiCheckboxModule };","map":{"version":3,"names":["__decorate","i0","ChangeDetectorRef","Component","ChangeDetectionStrategy","Optional","Self","Inject","ViewChild","Input","HostBinding","NgModule","i3","NgControl","i2","AbstractTuiNullableControl","tuiIsNativeFocused","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","TuiCheckedModule","TuiFocusableModule","TuiFocusedModule","TuiFocusVisibleModule","i1","TUI_CHECKBOX_OPTIONS","TuiPrimitiveCheckboxModule","CommonModule","TuiCheckboxComponent","constructor","control","options","cdr","size","nativeFocusableElement","focusableElement","computedDisabled","nativeElement","focused","computedFocusable","interactive","focusable","onChecked","checked","value","onFocused","updateFocused","onFocusVisible","focusVisible","updateFocusVisible","ɵfac","ɵcmp","TuiPrimitiveCheckboxComponent","TuiCheckedDirective","TuiFocusableDirective","TuiFocusedDirective","TuiFocusVisibleDirective","prototype","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","decorators","undefined","TuiCheckboxModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-checkbox.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_CHECKBOX_OPTIONS, TuiPrimitiveCheckboxModule } from '@taiga-ui/core';\nimport { CommonModule } from '@angular/common';\n\nclass TuiCheckboxComponent extends AbstractTuiNullableControl {\n    constructor(control, options, cdr) {\n        super(control, cdr);\n        this.options = options;\n        this.size = this.options.size;\n    }\n    get nativeFocusableElement() {\n        return !this.focusableElement || this.computedDisabled\n            ? null\n            : this.focusableElement.nativeElement;\n    }\n    get focused() {\n        return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get computedFocusable() {\n        return this.interactive && this.focusable;\n    }\n    /** @deprecated use 'value' setter */\n    onChecked(checked) {\n        this.value = checked;\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n    }\n    onFocusVisible(focusVisible) {\n        this.updateFocusVisible(focusVisible);\n    }\n}\nTuiCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: TUI_CHECKBOX_OPTIONS }, { token: ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTuiCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiCheckboxComponent, selector: \"tui-checkbox\", inputs: { size: \"size\" }, host: { properties: { \"attr.data-size\": \"this.size\" } }, providers: [\n        tuiAsFocusableItemAccessor(TuiCheckboxComponent),\n        tuiAsControl(TuiCheckboxComponent),\n    ], viewQueries: [{ propertyName: \"focusableElement\", first: true, predicate: [\"focusableElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tui-primitive-checkbox\\n    [size]=\\\"size\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [focused]=\\\"computedFocusVisible\\\"\\n    [hovered]=\\\"pseudoHover\\\"\\n    [pressed]=\\\"pseudoActive\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [value]=\\\"value\\\"\\n>\\n    <input\\n        #focusableElement\\n        type=\\\"checkbox\\\"\\n        automation-id=\\\"tui-checkbox__native\\\"\\n        class=\\\"t-native\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [id]=\\\"id\\\"\\n        [tuiFocusable]=\\\"computedFocusable\\\"\\n        [(tuiChecked)]=\\\"value\\\"\\n        (tuiFocusedChange)=\\\"onFocused($event)\\\"\\n        (tuiFocusVisibleChange)=\\\"onFocusVisible($event)\\\"\\n    />\\n</tui-primitive-checkbox>\\n\", styles: [\":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;flex-shrink:0}:host[data-size=m]{width:1rem;height:1rem}:host[data-size=l]{width:1.5rem;height:1.5rem}:host._readonly tui-primitive-checkbox{pointer-events:none}.t-native{padding:0;margin:0;border:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}.t-native:-webkit-autofill,.t-native:-webkit-autofill:hover,.t-native:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}\\n\"], components: [{ type: i1.TuiPrimitiveCheckboxComponent, selector: \"tui-primitive-checkbox\", inputs: [\"size\", \"disabled\", \"focused\", \"hovered\", \"pressed\", \"invalid\", \"value\"] }], directives: [{ type: i2.TuiCheckedDirective, selector: \"input[tuiChecked], input[tuiCheckedChange]\", inputs: [\"tuiChecked\"], outputs: [\"tuiCheckedChange\"] }, { type: i2.TuiFocusableDirective, selector: \"[tuiFocusable]\", inputs: [\"tuiFocusable\"] }, { type: i2.TuiFocusedDirective, selector: \"[tuiFocusedChange]\", outputs: [\"tuiFocusedChange\"] }, { type: i2.TuiFocusVisibleDirective, selector: \"[tuiFocusVisibleChange]\", outputs: [\"tuiFocusVisibleChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiCheckboxComponent.prototype, \"size\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-checkbox',\n                    templateUrl: './checkbox.template.html',\n                    styleUrls: ['./checkbox.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiCheckboxComponent),\n                        tuiAsControl(TuiCheckboxComponent),\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i3.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_CHECKBOX_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }]; }, propDecorators: { focusableElement: [{\n                type: ViewChild,\n                args: ['focusableElement']\n            }], size: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['attr.data-size']\n            }] } });\n\nclass TuiCheckboxModule {\n}\nTuiCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxModule, declarations: [TuiCheckboxComponent], imports: [CommonModule,\n        TuiCheckedModule,\n        TuiFocusableModule,\n        TuiFocusedModule,\n        TuiFocusVisibleModule,\n        TuiPrimitiveCheckboxModule], exports: [TuiCheckboxComponent] });\nTuiCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxModule, imports: [[\n            CommonModule,\n            TuiCheckedModule,\n            TuiFocusableModule,\n            TuiFocusedModule,\n            TuiFocusVisibleModule,\n            TuiPrimitiveCheckboxModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TuiCheckedModule,\n                        TuiFocusableModule,\n                        TuiFocusedModule,\n                        TuiFocusVisibleModule,\n                        TuiPrimitiveCheckboxModule,\n                    ],\n                    declarations: [TuiCheckboxComponent],\n                    exports: [TuiCheckboxComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCheckboxComponent, TuiCheckboxModule };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,iBAAiB,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,eAAe;AACtJ,OAAO,KAAKC,EAAE,MAAM,gBAAgB;AACpC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,0BAA0B,EAAEC,kBAAkB,EAAEC,0BAA0B,EAAEC,YAAY,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,qBAAqB,QAAQ,eAAe;AACvN,OAAO,KAAKC,EAAE,MAAM,gBAAgB;AACpC,SAASC,oBAAoB,EAAEC,0BAA0B,QAAQ,gBAAgB;AACjF,SAASC,YAAY,QAAQ,iBAAiB;AAAC;AAE/C,MAAMC,oBAAoB,SAASb,0BAA0B,CAAC;EAC1Dc,WAAW,CAACC,OAAO,EAAEC,OAAO,EAAEC,GAAG,EAAE;IAC/B,KAAK,CAACF,OAAO,EAAEE,GAAG,CAAC;IACnB,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,IAAI,GAAG,IAAI,CAACF,OAAO,CAACE,IAAI;EACjC;EACA,IAAIC,sBAAsB,GAAG;IACzB,OAAO,CAAC,IAAI,CAACC,gBAAgB,IAAI,IAAI,CAACC,gBAAgB,GAChD,IAAI,GACJ,IAAI,CAACD,gBAAgB,CAACE,aAAa;EAC7C;EACA,IAAIC,OAAO,GAAG;IACV,OAAOtB,kBAAkB,CAAC,IAAI,CAACkB,sBAAsB,CAAC;EAC1D;EACA,IAAIK,iBAAiB,GAAG;IACpB,OAAO,IAAI,CAACC,WAAW,IAAI,IAAI,CAACC,SAAS;EAC7C;EACA;EACAC,SAAS,CAACC,OAAO,EAAE;IACf,IAAI,CAACC,KAAK,GAAGD,OAAO;EACxB;EACAE,SAAS,CAACP,OAAO,EAAE;IACf,IAAI,CAACQ,aAAa,CAACR,OAAO,CAAC;EAC/B;EACAS,cAAc,CAACC,YAAY,EAAE;IACzB,IAAI,CAACC,kBAAkB,CAACD,YAAY,CAAC;EACzC;AACJ;AACApB,oBAAoB,CAACsB,IAAI;EAAA,iBAAyFtB,oBAAoB,EAA9B3B,EAAE,mBAA8CY,SAAS,OAAzDZ,EAAE,mBAAgGwB,oBAAoB,GAAtHxB,EAAE,mBAAiIC,iBAAiB;AAAA,CAA4C;AACxS0B,oBAAoB,CAACuB,IAAI,kBAD+ElD,EAAE;EAAA,MACJ2B,oBAAoB;EAAA;EAAA;IAAA;MADlB3B,EAAE;IAAA;IAAA;MAAA;MAAFA,EAAE,qBAAFA,EAAE;IAAA;EAAA;EAAA;EAAA;IAAA;MAAFA,EAAE;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAAFA,EAAE,oBAC0I,CAC5OgB,0BAA0B,CAACW,oBAAoB,CAAC,EAChDV,YAAY,CAACU,oBAAoB,CAAC,CACrC,GAJmG3B,EAAE;EAAA;EAAA;EAAA;EAAA;IAAA;MAAFA,EAAE,+CAIgT;MAJlTA,EAAE;QAAA;MAAA,EAIokB;QAAA,OAA+B,qBAAiB;MAAA,EAAhD;QAAA,OAAsF,0BAAsB;MAAA,EAA5G;MAJtkBA,EAAE,eAI0rB;IAAA;IAAA;MAJ5rBA,EAAE,6BAI+G;MAJjHA,EAAE,aAI+d;MAJjeA,EAAE,qCAI+d;IAAA;EAAA;EAAA,eAAswCuB,EAAE,CAAC4B,6BAA6B,EAAiJtC,EAAE,CAACuC,mBAAmB,EAA2HvC,EAAE,CAACwC,qBAAqB,EAAkExC,EAAE,CAACyC,mBAAmB,EAA2EzC,EAAE,CAAC0C,wBAAwB;EAAA;EAAA;AAAA,EAAmI;AAC1+ExD,UAAU,CAAC,CACPmB,cAAc,EAAE,CACnB,EAAES,oBAAoB,CAAC6B,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAClD;EAAA,mDARwGxD,EAAE,mBAQd2B,oBAAoB,EAAc,CAAC;IACnH8B,IAAI,EAAEvD,SAAS;IACfwD,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,cAAc;MACxBC,WAAW,EAAE,0BAA0B;MACvCC,SAAS,EAAE,CAAC,uBAAuB,CAAC;MACpCC,eAAe,EAAE3D,uBAAuB,CAAC4D,MAAM;MAC/CC,SAAS,EAAE,CACPhD,0BAA0B,CAACW,oBAAoB,CAAC,EAChDV,YAAY,CAACU,oBAAoB,CAAC;IAE1C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE8B,IAAI,EAAE9C,EAAE,CAACC,SAAS;MAAEqD,UAAU,EAAE,CAAC;QACjER,IAAI,EAAErD;MACV,CAAC,EAAE;QACCqD,IAAI,EAAEpD;MACV,CAAC,EAAE;QACCoD,IAAI,EAAEnD,MAAM;QACZoD,IAAI,EAAE,CAAC9C,SAAS;MACpB,CAAC;IAAE,CAAC,EAAE;MAAE6C,IAAI,EAAES,SAAS;MAAED,UAAU,EAAE,CAAC;QAClCR,IAAI,EAAEnD,MAAM;QACZoD,IAAI,EAAE,CAAClC,oBAAoB;MAC/B,CAAC;IAAE,CAAC,EAAE;MAAEiC,IAAI,EAAEzD,EAAE,CAACC,iBAAiB;MAAEgE,UAAU,EAAE,CAAC;QAC7CR,IAAI,EAAEnD,MAAM;QACZoD,IAAI,EAAE,CAACzD,iBAAiB;MAC5B,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEiC,gBAAgB,EAAE,CAAC;MAC/CuB,IAAI,EAAElD,SAAS;MACfmD,IAAI,EAAE,CAAC,kBAAkB;IAC7B,CAAC,CAAC;IAAE1B,IAAI,EAAE,CAAC;MACPyB,IAAI,EAAEjD;IACV,CAAC,EAAE;MACCiD,IAAI,EAAEhD,WAAW;MACjBiD,IAAI,EAAE,CAAC,gBAAgB;IAC3B,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMS,iBAAiB,CAAC;AAExBA,iBAAiB,CAAClB,IAAI;EAAA,iBAAyFkB,iBAAiB;AAAA,CAAkD;AAClLA,iBAAiB,CAACC,IAAI,kBA9CkFpE,EAAE;EAAA,MA8CMmE;AAAiB,EAK1D;AACvEA,iBAAiB,CAACE,IAAI,kBApDkFrE,EAAE;EAAA,UAoDmC,CACjI0B,YAAY,EACZP,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAChBC,qBAAqB,EACrBG,0BAA0B,CAC7B;AAAA,EAAI;AACb;EAAA,mDA5DwGzB,EAAE,mBA4DdmE,iBAAiB,EAAc,CAAC;IAChHV,IAAI,EAAE/C,QAAQ;IACdgD,IAAI,EAAE,CAAC;MACCY,OAAO,EAAE,CACL5C,YAAY,EACZP,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAChBC,qBAAqB,EACrBG,0BAA0B,CAC7B;MACD8C,YAAY,EAAE,CAAC5C,oBAAoB,CAAC;MACpC6C,OAAO,EAAE,CAAC7C,oBAAoB;IAClC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASA,oBAAoB,EAAEwC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}