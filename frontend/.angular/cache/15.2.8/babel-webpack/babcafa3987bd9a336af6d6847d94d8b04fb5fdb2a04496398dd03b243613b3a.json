{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuestionService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://127.0.0.1:8000/api/question/';\n  }\n  getQuestion(idTest) {\n    return this.http.get(this.apiUrl + idTest, {\n      headers: {\n        Authorization: 'Token ' + localStorage.getItem('my-token')\n      }\n    });\n  }\n  createQuestion(newQuestion) {\n    this.http.post(this.apiUrl, newQuestion);\n  }\n}\nQuestionService.ɵfac = function QuestionService_Factory(t) {\n  return new (t || QuestionService)(i0.ɵɵinject(i1.HttpClient));\n};\nQuestionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuestionService,\n  factory: QuestionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAC5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACd,WAAM,GAAG,qCAAqC;EADhB;EAGtCC,WAAW,CAACC,MAAc;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACC,MAAM,GAAGF,MAAM,EAAE;MAACG,OAAO,EACtD;QAACC,aAAa,EAAE,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU;MAAC;KAC9D,CAAC;EACJ;EAEAC,cAAc,CAACC,WAAgB;IAC3B,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACP,MAAM,EAAEM,WAAW,CAAC;EAC5C;;AAZWZ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAc,SAAfd,eAAe;EAAAe,YAFd;AAAM","names":["QuestionService","constructor","http","getQuestion","idTest","get","apiUrl","headers","Authorization","localStorage","getItem","createQuestion","newQuestion","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\denis\\PycharmProjects\\example_project\\frontend\\src\\app\\servicies\\question.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {ITest} from \"../interfaces/interface.test\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\nconstructor(private http: HttpClient) { }\n  private apiUrl = 'http://127.0.0.1:8000/api/question/';\n\n  getQuestion(idTest: number): Observable<any> {\n      return this.http.get<any>(this.apiUrl + idTest, {headers:\n        {Authorization: 'Token ' + localStorage.getItem('my-token')}\n    });\n  }\n\n  createQuestion(newQuestion: any) {\n      this.http.post(this.apiUrl, newQuestion);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}