{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../servicies/group.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../navigation-bar/navigation-bar.component\";\nimport * as i5 from \"../header/header.component\";\nimport * as i6 from \"../dialog-window/dialog-window.component\";\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction GroupsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10)(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const group_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, ctx_r0.getRandomColor()));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", group_r2.group_name, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"login: \", group_r2.login, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u043F\\u0430\\u0440\\u043E\\u043B\\u044C: \", group_r2.password, \"\");\n  }\n}\nfunction GroupsComponent_app_dialog_window_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-dialog-window\", 11);\n    i0.ɵɵlistener(\"isOpen\", function GroupsComponent_app_dialog_window_11_Template_app_dialog_window_isOpen_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.manageDialog($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nexport class GroupsComponent {\n  constructor(groupService, router) {\n    this.groupService = groupService;\n    this.router = router;\n    this.groups = [];\n    this.isOpen = false;\n  }\n  ngOnInit() {\n    this.groupService.getGroups().subscribe(groups => {\n      console.log(groups);\n      this.groups = groups;\n    });\n  }\n  showDialog() {\n    this.isOpen = true;\n  }\n  manageDialog(isOpen) {\n    // if (isOpen)\n    this.isOpen = false;\n  }\n  getRandomColor() {\n    return 'rgba(123,37,70, 0.34 )';\n    // return \"rgba(\" + Math.floor(Math.random() * 255) + \",\" + Math.floor(Math.random() * 255) + \",\"\n    //   + Math.floor(Math.random() * 255) + \", 0.34 )\";\n  }\n}\n\nGroupsComponent.ɵfac = function GroupsComponent_Factory(t) {\n  return new (t || GroupsComponent)(i0.ɵɵdirectiveInject(i1.GroupService), i0.ɵɵdirectiveInject(i2.Router));\n};\nGroupsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GroupsComponent,\n  selectors: [[\"app-groups\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"main-block\"], [1, \"groups__container\"], [1, \"groups__nav-container\"], [1, \"groups__title\"], [1, \"groups__btn-add\", 3, \"click\"], [1, \"groups__block-container\"], [\"class\", \"groups__block-group\", 4, \"ngFor\", \"ngForOf\"], [3, \"isOpen\", 4, \"ngIf\"], [1, \"groups__block-group\"], [1, \"groups__block-group_header\", 3, \"ngStyle\"], [1, \"groups__block-group_body\"], [3, \"isOpen\"]],\n  template: function GroupsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"app-navigation-bar\");\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"h2\", 3);\n      i0.ɵɵtext(6, \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u044B\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function GroupsComponent_Template_button_click_7_listener() {\n        return ctx.showDialog();\n      });\n      i0.ɵɵtext(8, \"+ \\u041D\\u043E\\u0432\\u0430\\u044F \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵtemplate(10, GroupsComponent_div_10_Template, 8, 6, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, GroupsComponent_app_dialog_window_11_Template, 1, 0, \"app-dialog-window\", 7);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i3.NgStyle, i4.NavigationBarComponent, i5.HeaderComponent, i6.DialogWindowComponent],\n  styles: [\".groups__container[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  padding: 10px 50px 50px 20px;\\r\\n}\\r\\n\\r\\n.groups__nav-container[_ngcontent-%COMP%] {\\r\\n  font-family: 'Inter', sans-serif;\\r\\n  font-style: normal;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-between;\\r\\n  width: 100%;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.groups__title[_ngcontent-%COMP%] {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-weight: 600;\\r\\n  font-size: 20px;\\r\\n  line-height: 40px;\\r\\n}\\r\\n\\r\\n.groups__btn-add[_ngcontent-%COMP%] {\\r\\n  padding: 10px 30px;\\r\\n  \\r\\n  align-items: center;\\r\\n  background: var(--blue-main);\\r\\n  border: 1px solid var(--blue-main);\\r\\n  border-radius: 15px;\\r\\n  color: var(--color-navbar-text);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.groups__block-container[_ngcontent-%COMP%] {\\r\\n  \\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  position: relative;\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\n.groups__block-group[_ngcontent-%COMP%] {\\r\\n  width: 60%;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  flex-direction: column;\\r\\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.groups__block-group_header[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  \\r\\n  background: var(--group-header);\\r\\n\\r\\n  padding: 5px 20px 5px 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.groups__block-group_body[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  height: 60px;\\r\\n  background: #ffffff;\\r\\n\\r\\n  padding: 10px 30px 10px 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ncm91cHMvZ3JvdXBzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UsZ0NBQWdDO0VBQ2hDLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDhCQUE4QjtFQUM5QixXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsU0FBUztFQUNULFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLDRCQUE0QjtFQUM1QixrQ0FBa0M7RUFDbEMsbUJBQW1CO0VBQ25CLCtCQUErQjtFQUMvQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsMkNBQTJDO0VBQzNDLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsK0JBQStCOztFQUUvQiwwQkFBMEI7QUFDNUI7OztBQUdBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7O0VBRW5CLDRCQUE0QjtBQUM5QiIsInNvdXJjZXNDb250ZW50IjpbIi5ncm91cHNfX2NvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHBhZGRpbmc6IDEwcHggNTBweCA1MHB4IDIwcHg7XHJcbn1cclxuXHJcbi5ncm91cHNfX25hdi1jb250YWluZXIge1xyXG4gIGZvbnQtZmFtaWx5OiAnSW50ZXInLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5ncm91cHNfX3RpdGxlIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBsaW5lLWhlaWdodDogNDBweDtcclxufVxyXG5cclxuLmdyb3Vwc19fYnRuLWFkZCB7XHJcbiAgcGFkZGluZzogMTBweCAzMHB4O1xyXG4gIC8qaGVpZ2h0OiAzMHB4OyovXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kOiB2YXIoLS1ibHVlLW1haW4pO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJsdWUtbWFpbik7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICBjb2xvcjogdmFyKC0tY29sb3ItbmF2YmFyLXRleHQpO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmdyb3Vwc19fYmxvY2stY29udGFpbmVyIHtcclxuICAvKnBhZGRpbmctcmlnaHQ6IDEwMHB4OyovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiA5MCU7XHJcbn1cclxuXHJcbi5ncm91cHNfX2Jsb2NrLWdyb3VwIHtcclxuICB3aWR0aDogNjAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGJveC1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XHJcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG5cclxuLmdyb3Vwc19fYmxvY2stZ3JvdXBfaGVhZGVyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICAvKmhlaWdodDogMzBweDsqL1xyXG4gIGJhY2tncm91bmQ6IHZhcigtLWdyb3VwLWhlYWRlcik7XHJcblxyXG4gIHBhZGRpbmc6IDVweCAyMHB4IDVweCAxMHB4O1xyXG59XHJcblxyXG5cclxuLmdyb3Vwc19fYmxvY2stZ3JvdXBfYm9keSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA2MHB4O1xyXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcblxyXG4gIHBhZGRpbmc6IDEwcHggMzBweCAxMHB4IDEwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;IASMA,8BAA8D;IAE1DA,YACF;IAAAA,iBAAM;IACNA,+BAAsC;IAC/BA,YAAwB;IAAAA,iBAAM;IACnCA,2BAAK;IAAAA,YAA4B;IAAAA,iBAAM;;;;;IALDA,eAAkD;IAAlDA,6EAAkD;IACxFA,eACF;IADEA,oDACF;IAEOA,eAAwB;IAAxBA,oDAAwB;IACxBA,eAA4B;IAA5BA,sFAA4B;;;;;;IAKzCA,6CAAkE;IAAhCA;MAAAA;MAAA;MAAA,OAAUA,0CAAoB;IAAA,EAAC;IAACA,iBAAoB;;;ACTxF,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;IADpD,WAAM,GAAY,EAAE;IAWvB,WAAM,GAAG,KAAK;EAVsD;EAE3EC,QAAQ;IACN,IAAI,CAACF,YAAY,CAACG,SAAS,EAAE,CAACC,SAAS,CACrCC,MAAM,IAAG;MACPC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACxB,CAAC,CAAC;EACJ;EAIOG,UAAU;IACf,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEUC,YAAY,CAACD,MAAe;IACpC;IACA,IAAI,CAACA,MAAM,GAAG,KAAK;EACrB;EAEAE,cAAc;IACZ,OAAO,wBAAwB;IAC/B;IACA;EACF;;;AA3BWb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX5BnB,6BAAyB;MAEzBA,8BAAwB;MAGQA,oDAAM;MAAAA,iBAAK;MACrCA,iCAAuD;MAAvBA;QAAA,OAASoB,gBAAY;MAAA,EAAC;MAACpB,qFAAc;MAAAA,iBAAS;MAEhFA,8BAAqC;MACnCA,kEAQM;MACRA,iBAAM;MAERA,8FAAsF;MACxFA,iBAAM;;;MAZuBA,gBAAS;MAATA,oCAAS;MAWhBA,eAAY;MAAZA,iCAAY","names":["i0","GroupsComponent","constructor","groupService","router","ngOnInit","getGroups","subscribe","groups","console","log","showDialog","isOpen","manageDialog","getRandomColor","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\denis\\PycharmProjects\\example_project\\frontend\\src\\app\\components\\groups\\groups.component.html","C:\\Users\\denis\\PycharmProjects\\example_project\\frontend\\src\\app\\components\\groups\\groups.component.ts"],"sourcesContent":["<app-header></app-header>\n<app-navigation-bar></app-navigation-bar>\n<div class=\"main-block\">\n  <div class=\"groups__container\">\n    <div class=\"groups__nav-container\">\n      <h2 class=\"groups__title\">Группы</h2>\n      <button class=\"groups__btn-add\" (click)=\"showDialog()\">+ Новая группа</button>\n    </div>\n    <div class=\"groups__block-container\">\n      <div *ngFor=\"let group of groups\" class=\"groups__block-group\">\n        <div class=\"groups__block-group_header\" [ngStyle]=\"{'background-color': getRandomColor()}\">\n          {{ group.group_name }}\n        </div>\n        <div class=\"groups__block-group_body\">\n          <div>login: {{ group.login }}</div>\n          <div>пароль: {{ group.password }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <app-dialog-window *ngIf=\"isOpen\" (isOpen)=\"manageDialog($event)\"></app-dialog-window>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {GroupService} from \"../../servicies/group.service\";\nimport {Group} from \"../../interfaces/interface.group\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit{\n  protected groups: Group[] = [];\n  constructor(private groupService: GroupService, private router: Router) {  }\n\n  ngOnInit() {\n    this.groupService.getGroups().subscribe(\n      groups => {\n        console.log(groups)\n        this.groups = groups;\n    });\n  }\n\n  public isOpen = false;\n\n  public showDialog() {\n    this.isOpen = true;\n  }\n\n  protected manageDialog(isOpen: boolean) {\n    // if (isOpen)\n    this.isOpen = false;\n  }\n\n  getRandomColor(): string {\n    return 'rgba(123,37,70, 0.34 )'\n    // return \"rgba(\" + Math.floor(Math.random() * 255) + \",\" + Math.floor(Math.random() * 255) + \",\"\n    //   + Math.floor(Math.random() * 255) + \", 0.34 )\";\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}