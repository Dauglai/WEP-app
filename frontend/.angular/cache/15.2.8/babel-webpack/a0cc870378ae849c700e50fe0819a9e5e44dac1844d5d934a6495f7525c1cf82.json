{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://127.0.0.1:8000/api/account/registr/';\n    this.apiGetToken = 'http://127.0.0.1:8000/auth-token/token/login/';\n    this.apiGetAccount = 'http://127.0.0.1:8000/api/account/user/by/token/';\n    this.apiLogoutAccount = 'http://127.0.0.1:8000/auth-token/token/logout/';\n  }\n  createAccount(last_name, first_name, patronymic, location, school_number, email, password, password2, is_teacher, gender) {\n    const account = {\n      last_name: last_name,\n      first_name: first_name,\n      patronymic: patronymic,\n      location: location,\n      school_number: school_number,\n      email: email,\n      password: password,\n      password2: password2,\n      is_teacher: is_teacher,\n      gender: gender\n    };\n    return this.http.post(this.apiUrl, account);\n  }\n  getToken(email, password) {\n    const account = {\n      email: email,\n      password: password\n    };\n    return this.http.post(this.apiGetToken, account);\n  }\n  getAccountWhithToken(Token) {\n    const myHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Token ' + Token\n    });\n    const body = {};\n    return this.http.post(this.apiGetAccount, body, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + Token\n      }\n    });\n  }\n  logout() {\n    // const myHeaders = new HttpHeaders(\n    //   {'Content-Type': 'application/json', Authorization: 'Token ' + Token}\n    // );\n    const body = {};\n    return this.http.post(this.apiLogoutAccount, body);\n    // {headers: {'Content-Type': 'application/json', Authorization: 'Token ' + Token}})\n  }\n}\n\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAM5D,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAChB,WAAM,GAAG,4CAA4C;IACrD,gBAAW,GAAG,+CAA+C;IAC7D,kBAAa,GAAG,kDAAkD;IAClE,qBAAgB,GAAG,gDAAgD;EAJnC;EAMxCC,aAAa,CAACC,SAAiB,EAAEC,UAAkB,EAAEC,UAAkB,EAAEC,QAAgB,EAC3EC,aAAqB,EAAEC,KAAa,EAAEC,QAAgB,EAAEC,SAAiB,EACzEC,UAAmB,EAAEC,MAAc;IAC/C,MAAMC,OAAO,GAAG;MAAEV,SAAS,EAAEA,SAAS;MAAEC,UAAU,EAAEA,UAAU;MAAEC,UAAU,EAAEA,UAAU;MACpFC,QAAQ,EAAEA,QAAQ;MAAEC,aAAa,EAAEA,aAAa;MAAEC,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA,QAAQ;MAClFC,SAAS,EAAEA,SAAS;MAAEC,UAAU,EAAEA,UAAU;MAAEC,MAAM,EAAEA;IAAM,CAAC;IAC/D,OAAO,IAAI,CAACX,IAAI,CAACa,IAAI,CAAC,IAAI,CAACC,MAAM,EAAEF,OAAO,CAAC;EAC7C;EAEAG,QAAQ,CAACR,KAAa,EAAEC,QAAgB;IACtC,MAAMI,OAAO,GAAG;MAAEL,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;IACnD,OAAO,IAAI,CAACR,IAAI,CAACa,IAAI,CAAC,IAAI,CAACG,WAAW,EAAEJ,OAAO,CAAC;EAClD;EAEAK,oBAAoB,CAACC,KAAU;IAC7B,MAAMC,SAAS,GAAG,IAAItB,WAAW,CAC/B;MAAC,cAAc,EAAE,kBAAkB;MAAEuB,aAAa,EAAE,QAAQ,GAAGF;IAAK,CAAC,CACtE;IACD,MAAMG,IAAI,GAAG,EAAE;IACf,OAAO,IAAI,CAACrB,IAAI,CAACa,IAAI,CAAC,IAAI,CAACS,aAAa,EAAED,IAAI,EAC5C;MAACE,OAAO,EAAE;QAAC,cAAc,EAAE,kBAAkB;QAAEH,aAAa,EAAE,QAAQ,GAAGF;MAAK;IAAC,CAAC,CAAC;EACrF;EAEAM,MAAM;IACJ;IACA;IACA;IACA,MAAMH,IAAI,GAAG,EAAE;IACf,OAAO,IAAI,CAACrB,IAAI,CAACa,IAAI,CAAC,IAAI,CAACY,gBAAgB,EAAEJ,IAAI,CAAC;IAChD;EACJ;;;AAtCWvB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA4B,SAAd5B,cAAc;EAAA6B,YAFb;AAAM","names":["HttpHeaders","AccountService","constructor","http","createAccount","last_name","first_name","patronymic","location","school_number","email","password","password2","is_teacher","gender","account","post","apiUrl","getToken","apiGetToken","getAccountWhithToken","Token","myHeaders","Authorization","body","apiGetAccount","headers","logout","apiLogoutAccount","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\denis\\PycharmProjects\\example_project\\frontend\\src\\app\\servicies\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n  private apiUrl = 'http://127.0.0.1:8000/api/account/registr/';\n  private apiGetToken = 'http://127.0.0.1:8000/auth-token/token/login/';\n  private apiGetAccount = 'http://127.0.0.1:8000/api/account/user/by/token/';\n  private apiLogoutAccount = 'http://127.0.0.1:8000/auth-token/token/logout/';\n\n  createAccount(last_name: string, first_name: string, patronymic: string, location: string,\n                school_number: number, email: string, password: string, password2: string,\n                is_teacher: boolean, gender: string): Observable<any> {\n    const account = { last_name: last_name, first_name: first_name, patronymic: patronymic,\n      location: location, school_number: school_number, email: email, password: password,\n      password2: password2, is_teacher: is_teacher, gender: gender};\n    return this.http.post(this.apiUrl, account);\n  }\n\n  getToken(email: string, password: string):Observable<any> {\n    const account = { email: email, password: password};\n    return this.http.post(this.apiGetToken, account)\n  }\n\n  getAccountWhithToken(Token: any) {\n    const myHeaders = new HttpHeaders(\n      {'Content-Type': 'application/json', Authorization: 'Token ' + Token}\n    );\n    const body = {}\n    return this.http.post(this.apiGetAccount, body,\n      {headers: {'Content-Type': 'application/json', Authorization: 'Token ' + Token}})\n  }\n\n  logout() {\n    // const myHeaders = new HttpHeaders(\n    //   {'Content-Type': 'application/json', Authorization: 'Token ' + Token}\n    // );\n    const body = {}\n    return this.http.post(this.apiLogoutAccount, body)\n      // {headers: {'Content-Type': 'application/json', Authorization: 'Token ' + Token}})\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}