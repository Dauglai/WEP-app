{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, Directive, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiIsPresent, tuiClamp, TUI_IS_MOBILE, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, tuiPure } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/core';\nimport { tuiCreateNumberMask, tuiEnableAutoCorrectDecimalSymbol, tuiMaskedNumberStringToNumber, tuiFormatNumber, TUI_TEXTFIELD_WATCHED_CONTROLLER, TUI_NUMBER_FORMAT, TEXTFIELD_CONTROLLER_PROVIDER, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiButtonModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/kit/components/input-number';\nimport { TUI_PLUS_MINUS_TEXTS } from '@taiga-ui/kit/tokens';\nimport * as i3 from '@taiga-ui/kit/directives';\nimport { TextMaskModule, TuiValueAccessorModule } from '@taiga-ui/kit/directives';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'rxjs';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n\n/** Default values for the input count options. */\nfunction TuiInputCountComponent_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"section\", 2)(2, \"button\", 3);\n    i0.ɵɵlistener(\"mousedown\", function TuiInputCountComponent_ng_container_3_ng_container_1_Template_button_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.onButtonMouseDown($event, ctx_r3.plusButtonDisabled));\n    })(\"click\", function TuiInputCountComponent_ng_container_3_ng_container_1_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.increaseValue());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵlistener(\"mousedown\", function TuiInputCountComponent_ng_container_3_ng_container_1_Template_button_mousedown_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onButtonMouseDown($event, ctx_r6.minusButtonDisabled));\n    })(\"click\", function TuiInputCountComponent_ng_container_3_ng_container_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.decreaseValue());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const texts_r2 = ctx.ngIf;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", ctx_r1.iconUp)(\"appearance\", ctx_r1.options.appearance)(\"title\", texts_r2[0])(\"disabled\", ctx_r1.plusButtonDisabled)(\"focusable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r1.iconDown)(\"appearance\", ctx_r1.options.appearance)(\"disabled\", ctx_r1.minusButtonDisabled)(\"focusable\", false)(\"title\", texts_r2[1]);\n  }\n}\nfunction TuiInputCountComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiInputCountComponent_ng_container_3_ng_container_1_Template, 4, 10, \"ng-container\", 1);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.minusTexts$));\n  }\n}\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nconst TUI_INPUT_COUNT_DEFAULT_OPTIONS = {\n  icons: {\n    up: `tuiIconPlus`,\n    down: `tuiIconMinus`\n  },\n  appearance: `textfield`,\n  hideButtons: false,\n  min: 0,\n  max: Number.MAX_SAFE_INTEGER,\n  step: 1,\n  postfix: ``\n};\n/**\n * Default parameters for input count component\n */\nconst TUI_INPUT_COUNT_OPTIONS = new InjectionToken(`[TUI_INPUT_COUNT_OPTIONS]`, {\n  factory: () => TUI_INPUT_COUNT_DEFAULT_OPTIONS\n});\nconst tuiInputCountOptionsProvider = options => ({\n  provide: TUI_INPUT_COUNT_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_INPUT_COUNT_DEFAULT_OPTIONS), options)\n});\nclass TuiInputCountComponent extends AbstractTuiNullableControl {\n  constructor(control, cdr, textfieldController, minusTexts$, isMobile, options, numberFormat) {\n    super(control, cdr);\n    this.textfieldController = textfieldController;\n    this.minusTexts$ = minusTexts$;\n    this.isMobile = isMobile;\n    this.options = options;\n    this.numberFormat = numberFormat;\n    this.step = this.options.step;\n    this.min = this.options.min;\n    this.max = this.options.max;\n    this.hideButtons = this.options.hideButtons;\n    /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */\n    this.prefix = '';\n    /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n    this.postfix = this.options.postfix;\n  }\n  getMask(allowNegative) {\n    return {\n      mask: tuiCreateNumberMask({\n        allowNegative,\n        decimalSymbol: this.numberFormat.decimalSeparator,\n        thousandSymbol: this.numberFormat.thousandSeparator,\n        autoCorrectDecimalSymbol: tuiEnableAutoCorrectDecimalSymbol(this.numberFormat)\n      }),\n      guide: false\n    };\n  }\n  get buttonsHidden() {\n    return this.hideButtons || this.textfieldController.appearance === 'table';\n  }\n  get iconUp() {\n    return this.options.icons.up;\n  }\n  get iconDown() {\n    return this.options.icons.down;\n  }\n  get nativeFocusableElement() {\n    return !this.inputNumber || this.computedDisabled ? null : this.inputNumber.nativeFocusableElement;\n  }\n  get size() {\n    return this.textfieldController.size;\n  }\n  get focused() {\n    return tuiIsNativeFocused(this.nativeFocusableElement);\n  }\n  get minusButtonDisabled() {\n    return !this.interactive || tuiIsPresent(this.value) && this.value <= this.min;\n  }\n  get plusButtonDisabled() {\n    return !this.interactive || tuiIsPresent(this.value) && this.value >= this.max;\n  }\n  onButtonMouseDown(event, disabled = false) {\n    if (disabled || !this.nativeFocusableElement || this.isMobile) {\n      return;\n    }\n    event.preventDefault();\n    this.nativeFocusableElement.focus();\n  }\n  onFocused(focused) {\n    this.updateFocused(focused);\n  }\n  /**\n   * @deprecated\n   * TODO: drop in v4.0 as unused method\n   */\n  onInputNumberChange(value) {\n    this.value = value;\n  }\n  /** @deprecated */\n  onValueChange(value) {\n    this.value = tuiMaskedNumberStringToNumber(value, this.numberFormat.decimalSeparator, this.numberFormat.thousandSeparator);\n  }\n  decreaseValue() {\n    if (this.readOnly) {\n      return;\n    }\n    const newValue = (this.value || 0) - this.step;\n    this.safeUpdateValue(newValue);\n  }\n  increaseValue() {\n    if (this.readOnly) {\n      return;\n    }\n    const newValue = (this.value || 0) + this.step;\n    this.safeUpdateValue(newValue);\n  }\n  onKeydown(event) {\n    switch (event.key) {\n      case 'ArrowUp':\n      case 'Up':\n        this.increaseValue();\n        event.preventDefault();\n        break;\n      case 'ArrowDown':\n      case 'Down':\n        this.decreaseValue();\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  }\n  set nativeValue(value) {\n    if (!this.nativeFocusableElement) {\n      return;\n    }\n    this.nativeFocusableElement.value = value;\n  }\n  safeUpdateValue(newValue) {\n    const value = tuiClamp(newValue, this.min, this.max);\n    this.value = value;\n    this.nativeValue = this.formatNumber(value);\n  }\n  formatNumber(value) {\n    return this.isNotNumber(value) ? '' : tuiFormatNumber(value, this.numberFormat);\n  }\n  isNotNumber(value) {\n    return Number.isNaN(value) || !tuiIsPresent(value);\n  }\n}\nTuiInputCountComponent.ɵfac = function TuiInputCountComponent_Factory(t) {\n  return new (t || TuiInputCountComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_WATCHED_CONTROLLER), i0.ɵɵdirectiveInject(TUI_PLUS_MINUS_TEXTS), i0.ɵɵdirectiveInject(TUI_IS_MOBILE), i0.ɵɵdirectiveInject(TUI_INPUT_COUNT_OPTIONS), i0.ɵɵdirectiveInject(TUI_NUMBER_FORMAT));\n};\nTuiInputCountComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiInputCountComponent,\n  selectors: [[\"tui-input-count\"]],\n  viewQuery: function TuiInputCountComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TuiInputNumberComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputNumber = _t.first);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function TuiInputCountComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"data-size\", ctx.size);\n      i0.ɵɵclassProp(\"_hide-buttons\", ctx.buttonsHidden);\n    }\n  },\n  inputs: {\n    step: \"step\",\n    min: \"min\",\n    max: \"max\",\n    hideButtons: \"hideButtons\",\n    prefix: \"prefix\",\n    postfix: \"postfix\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputCountComponent), tuiAsControl(TuiInputCountComponent), TEXTFIELD_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 15,\n  consts: [[1, \"t-textfield\", 3, \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"pseudoActive\", \"focusable\", \"min\", \"max\", \"prefix\", \"postfix\", \"disabled\", \"readOnly\", \"textMask\", \"nativeId\", \"ngModel\", \"ngModelChange\", \"keydown\", \"focusedChange\"], [4, \"ngIf\"], [1, \"t-buttons\"], [\"tuiIconButton\", \"\", \"type\", \"button\", \"automation-id\", \"tui-input-count__plus-button\", \"size\", \"s\", 1, \"t-button\", \"t-button_plus\", 3, \"icon\", \"appearance\", \"title\", \"disabled\", \"focusable\", \"mousedown\", \"click\"], [\"tuiIconButton\", \"\", \"type\", \"button\", \"automation-id\", \"tui-input-count__minus-button\", \"size\", \"s\", 1, \"t-button\", \"t-button_minus\", 3, \"icon\", \"appearance\", \"disabled\", \"focusable\", \"title\", \"mousedown\", \"click\"]],\n  template: function TuiInputCountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"tui-input-number\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function TuiInputCountComponent_Template_tui_input_number_ngModelChange_0_listener($event) {\n        return ctx.value = $event;\n      })(\"keydown\", function TuiInputCountComponent_Template_tui_input_number_keydown_0_listener($event) {\n        return ctx.onKeydown($event);\n      })(\"focusedChange\", function TuiInputCountComponent_Template_tui_input_number_focusedChange_0_listener($event) {\n        return ctx.onFocused($event);\n      });\n      i0.ɵɵprojection(1);\n      i0.ɵɵprojection(2, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TuiInputCountComponent_ng_container_3_Template, 3, 3, \"ng-container\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoInvalid\", ctx.pseudoInvalid)(\"pseudoActive\", ctx.pseudoActive)(\"focusable\", ctx.focusable)(\"min\", ctx.min)(\"max\", ctx.max)(\"prefix\", ctx.prefix)(\"postfix\", ctx.postfix)(\"disabled\", ctx.computedDisabled)(\"readOnly\", ctx.readOnly)(\"textMask\", ctx.getMask(ctx.min < 0))(\"nativeId\", ctx.nativeId)(\"ngModel\", ctx.value);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.buttonsHidden);\n    }\n  },\n  dependencies: [i1.TuiInputNumberComponent, i2.TuiButtonComponent, i1.TuiInputNumberDirective, i3.MaskedInputDirective, i4.NgControlStatus, i4.NgModel, i5.NgIf, i5.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{display:flex;font:var(--tui-font-text-s);border-radius:var(--tui-radius-m);height:var(--tui-height-m);color:var(--tui-text-01);text-align:left}._disabled[_nghost-%COMP%]{pointer-events:none}[data-size=l][_nghost-%COMP%]{font:var(--tui-font-text-m);height:var(--tui-height-l)}.t-textfield[_ngcontent-%COMP%]{position:relative;border-radius:inherit;text-align:inherit;flex-grow:1;min-width:0}[_nghost-%COMP%]:not(._hide-buttons)   .t-textfield[_ngcontent-%COMP%]{border-top-right-radius:0;border-bottom-right-radius:0}.t-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-left:.125rem;height:100%}.t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]{display:flex;width:calc(var(--tui-height-m) * .75);height:calc(50% - .0625rem)}.t-buttons[_ngcontent-%COMP%]   .t-button_plus[_ngcontent-%COMP%]{margin-bottom:.125rem;border-radius:0 var(--tui-radius-m) 0 0}.t-buttons[_ngcontent-%COMP%]   .t-button_minus[_ngcontent-%COMP%]{border-radius:0 0 var(--tui-radius-m)}[data-size=l][_nghost-%COMP%]   .t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]{width:calc(var(--tui-height-l) * .75)}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiInputCountComponent.prototype, \"step\", void 0);\n__decorate([tuiDefaultProp()], TuiInputCountComponent.prototype, \"min\", void 0);\n__decorate([tuiDefaultProp()], TuiInputCountComponent.prototype, \"max\", void 0);\n__decorate([tuiDefaultProp()], TuiInputCountComponent.prototype, \"hideButtons\", void 0);\n__decorate([tuiDefaultProp()], TuiInputCountComponent.prototype, \"prefix\", void 0);\n__decorate([tuiDefaultProp()], TuiInputCountComponent.prototype, \"postfix\", void 0);\n__decorate([tuiPure], TuiInputCountComponent.prototype, \"getMask\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputCountComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-input-count',\n      templateUrl: './input-count.template.html',\n      styleUrls: ['./input-count.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputCountComponent), tuiAsControl(TuiInputCountComponent), TEXTFIELD_CONTROLLER_PROVIDER]\n    }]\n  }], function () {\n    return [{\n      type: i4.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i2.TuiTextfieldController,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]\n      }]\n    }, {\n      type: i6.Observable,\n      decorators: [{\n        type: Inject,\n        args: [TUI_PLUS_MINUS_TEXTS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_IS_MOBILE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_INPUT_COUNT_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_NUMBER_FORMAT]\n      }]\n    }];\n  }, {\n    inputNumber: [{\n      type: ViewChild,\n      args: [TuiInputNumberComponent]\n    }],\n    step: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    hideButtons: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    postfix: [{\n      type: Input\n    }],\n    getMask: [],\n    buttonsHidden: [{\n      type: HostBinding,\n      args: ['class._hide-buttons']\n    }],\n    size: [{\n      type: HostBinding,\n      args: ['attr.data-size']\n    }]\n  });\n})();\nclass TuiInputCountDirective extends AbstractTuiTextfieldHost {\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n  ngAfterViewInit() {\n    if (this.host.nativeFocusableElement) {\n      const {\n        nativeFocusableElement\n      } = this.host;\n      nativeFocusableElement.autocomplete = 'off';\n      nativeFocusableElement.inputMode = 'numeric';\n      nativeFocusableElement.maxLength = nativeFocusableElement.maxLength > -1 ? nativeFocusableElement.maxLength : 18;\n    }\n  }\n}\nTuiInputCountDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiInputCountDirective_BaseFactory;\n  return function TuiInputCountDirective_Factory(t) {\n    return (ɵTuiInputCountDirective_BaseFactory || (ɵTuiInputCountDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputCountDirective)))(t || TuiInputCountDirective);\n  };\n}();\nTuiInputCountDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiInputCountDirective,\n  selectors: [[\"tui-input-count\"]],\n  features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputCountDirective)]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputCountDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tui-input-count',\n      providers: [tuiAsTextfieldHost(TuiInputCountDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiInputCountModule {}\nTuiInputCountModule.ɵfac = function TuiInputCountModule_Factory(t) {\n  return new (t || TuiInputCountModule)();\n};\nTuiInputCountModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiInputCountModule\n});\nTuiInputCountModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TextMaskModule, FormsModule, TuiButtonModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule, PolymorpheusModule, TuiInputNumberModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputCountModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TextMaskModule, FormsModule, TuiButtonModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule, PolymorpheusModule, TuiInputNumberModule],\n      declarations: [TuiInputCountComponent, TuiInputCountDirective],\n      exports: [TuiInputCountComponent, TuiInputCountDirective, TuiTextfieldComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_COUNT_DEFAULT_OPTIONS, TUI_INPUT_COUNT_OPTIONS, TuiInputCountComponent, TuiInputCountDirective, TuiInputCountModule, tuiInputCountOptionsProvider };","map":{"version":3,"names":["__decorate","i0","InjectionToken","ChangeDetectorRef","Component","ChangeDetectionStrategy","Optional","Self","Inject","ViewChild","Input","HostBinding","Directive","NgModule","i4","NgControl","FormsModule","AbstractTuiNullableControl","tuiIsNativeFocused","tuiIsPresent","tuiClamp","TUI_IS_MOBILE","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","tuiPure","i2","tuiCreateNumberMask","tuiEnableAutoCorrectDecimalSymbol","tuiMaskedNumberStringToNumber","tuiFormatNumber","TUI_TEXTFIELD_WATCHED_CONTROLLER","TUI_NUMBER_FORMAT","TEXTFIELD_CONTROLLER_PROVIDER","AbstractTuiTextfieldHost","tuiAsTextfieldHost","TuiButtonModule","TuiPrimitiveTextfieldModule","TuiTextfieldControllerModule","TuiTextfieldComponent","i1","TuiInputNumberComponent","TuiInputNumberModule","TUI_PLUS_MINUS_TEXTS","i3","TextMaskModule","TuiValueAccessorModule","i5","CommonModule","i6","PolymorpheusModule","TUI_INPUT_COUNT_DEFAULT_OPTIONS","icons","up","down","appearance","hideButtons","min","max","Number","MAX_SAFE_INTEGER","step","postfix","TUI_INPUT_COUNT_OPTIONS","factory","tuiInputCountOptionsProvider","options","provide","useValue","Object","assign","TuiInputCountComponent","constructor","control","cdr","textfieldController","minusTexts$","isMobile","numberFormat","prefix","getMask","allowNegative","mask","decimalSymbol","decimalSeparator","thousandSymbol","thousandSeparator","autoCorrectDecimalSymbol","guide","buttonsHidden","iconUp","iconDown","nativeFocusableElement","inputNumber","computedDisabled","size","focused","minusButtonDisabled","interactive","value","plusButtonDisabled","onButtonMouseDown","event","disabled","preventDefault","focus","onFocused","updateFocused","onInputNumberChange","onValueChange","decreaseValue","readOnly","newValue","safeUpdateValue","increaseValue","onKeydown","key","nativeValue","formatNumber","isNotNumber","isNaN","ɵfac","ɵcmp","TuiButtonComponent","TuiInputNumberDirective","MaskedInputDirective","NgControlStatus","NgModel","NgIf","AsyncPipe","prototype","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","decorators","TuiTextfieldController","Observable","undefined","TuiInputCountDirective","host","ngAfterViewInit","autocomplete","inputMode","maxLength","ɵdir","TuiInputCountModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-input-count.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, Directive, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiIsPresent, tuiClamp, TUI_IS_MOBILE, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, tuiPure } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/core';\nimport { tuiCreateNumberMask, tuiEnableAutoCorrectDecimalSymbol, tuiMaskedNumberStringToNumber, tuiFormatNumber, TUI_TEXTFIELD_WATCHED_CONTROLLER, TUI_NUMBER_FORMAT, TEXTFIELD_CONTROLLER_PROVIDER, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiButtonModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/kit/components/input-number';\nimport { TUI_PLUS_MINUS_TEXTS } from '@taiga-ui/kit/tokens';\nimport * as i3 from '@taiga-ui/kit/directives';\nimport { TextMaskModule, TuiValueAccessorModule } from '@taiga-ui/kit/directives';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'rxjs';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n\n/** Default values for the input count options. */\nconst TUI_INPUT_COUNT_DEFAULT_OPTIONS = {\n    icons: {\n        up: `tuiIconPlus`,\n        down: `tuiIconMinus`,\n    },\n    appearance: `textfield`,\n    hideButtons: false,\n    min: 0,\n    max: Number.MAX_SAFE_INTEGER,\n    step: 1,\n    postfix: ``,\n};\n/**\n * Default parameters for input count component\n */\nconst TUI_INPUT_COUNT_OPTIONS = new InjectionToken(`[TUI_INPUT_COUNT_OPTIONS]`, {\n    factory: () => TUI_INPUT_COUNT_DEFAULT_OPTIONS,\n});\nconst tuiInputCountOptionsProvider = (options) => ({\n    provide: TUI_INPUT_COUNT_OPTIONS,\n    useValue: Object.assign(Object.assign({}, TUI_INPUT_COUNT_DEFAULT_OPTIONS), options),\n});\n\nclass TuiInputCountComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, textfieldController, minusTexts$, isMobile, options, numberFormat) {\n        super(control, cdr);\n        this.textfieldController = textfieldController;\n        this.minusTexts$ = minusTexts$;\n        this.isMobile = isMobile;\n        this.options = options;\n        this.numberFormat = numberFormat;\n        this.step = this.options.step;\n        this.min = this.options.min;\n        this.max = this.options.max;\n        this.hideButtons = this.options.hideButtons;\n        /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */\n        this.prefix = '';\n        /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n        this.postfix = this.options.postfix;\n    }\n    getMask(allowNegative) {\n        return {\n            mask: tuiCreateNumberMask({\n                allowNegative,\n                decimalSymbol: this.numberFormat.decimalSeparator,\n                thousandSymbol: this.numberFormat.thousandSeparator,\n                autoCorrectDecimalSymbol: tuiEnableAutoCorrectDecimalSymbol(this.numberFormat),\n            }),\n            guide: false,\n        };\n    }\n    get buttonsHidden() {\n        return this.hideButtons || this.textfieldController.appearance === 'table';\n    }\n    get iconUp() {\n        return this.options.icons.up;\n    }\n    get iconDown() {\n        return this.options.icons.down;\n    }\n    get nativeFocusableElement() {\n        return !this.inputNumber || this.computedDisabled\n            ? null\n            : this.inputNumber.nativeFocusableElement;\n    }\n    get size() {\n        return this.textfieldController.size;\n    }\n    get focused() {\n        return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get minusButtonDisabled() {\n        return !this.interactive || (tuiIsPresent(this.value) && this.value <= this.min);\n    }\n    get plusButtonDisabled() {\n        return !this.interactive || (tuiIsPresent(this.value) && this.value >= this.max);\n    }\n    onButtonMouseDown(event, disabled = false) {\n        if (disabled || !this.nativeFocusableElement || this.isMobile) {\n            return;\n        }\n        event.preventDefault();\n        this.nativeFocusableElement.focus();\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n    }\n    /**\n     * @deprecated\n     * TODO: drop in v4.0 as unused method\n     */\n    onInputNumberChange(value) {\n        this.value = value;\n    }\n    /** @deprecated */\n    onValueChange(value) {\n        this.value = tuiMaskedNumberStringToNumber(value, this.numberFormat.decimalSeparator, this.numberFormat.thousandSeparator);\n    }\n    decreaseValue() {\n        if (this.readOnly) {\n            return;\n        }\n        const newValue = (this.value || 0) - this.step;\n        this.safeUpdateValue(newValue);\n    }\n    increaseValue() {\n        if (this.readOnly) {\n            return;\n        }\n        const newValue = (this.value || 0) + this.step;\n        this.safeUpdateValue(newValue);\n    }\n    onKeydown(event) {\n        switch (event.key) {\n            case 'ArrowUp':\n            case 'Up':\n                this.increaseValue();\n                event.preventDefault();\n                break;\n            case 'ArrowDown':\n            case 'Down':\n                this.decreaseValue();\n                event.preventDefault();\n                break;\n            default:\n                break;\n        }\n    }\n    set nativeValue(value) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n        this.nativeFocusableElement.value = value;\n    }\n    safeUpdateValue(newValue) {\n        const value = tuiClamp(newValue, this.min, this.max);\n        this.value = value;\n        this.nativeValue = this.formatNumber(value);\n    }\n    formatNumber(value) {\n        return this.isNotNumber(value) ? '' : tuiFormatNumber(value, this.numberFormat);\n    }\n    isNotNumber(value) {\n        return Number.isNaN(value) || !tuiIsPresent(value);\n    }\n}\nTuiInputCountComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputCountComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TUI_TEXTFIELD_WATCHED_CONTROLLER }, { token: TUI_PLUS_MINUS_TEXTS }, { token: TUI_IS_MOBILE }, { token: TUI_INPUT_COUNT_OPTIONS }, { token: TUI_NUMBER_FORMAT }], target: i0.ɵɵFactoryTarget.Component });\nTuiInputCountComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputCountComponent, selector: \"tui-input-count\", inputs: { step: \"step\", min: \"min\", max: \"max\", hideButtons: \"hideButtons\", prefix: \"prefix\", postfix: \"postfix\" }, host: { properties: { \"class._hide-buttons\": \"this.buttonsHidden\", \"attr.data-size\": \"this.size\" } }, providers: [\n        tuiAsFocusableItemAccessor(TuiInputCountComponent),\n        tuiAsControl(TuiInputCountComponent),\n        TEXTFIELD_CONTROLLER_PROVIDER,\n    ], viewQueries: [{ propertyName: \"inputNumber\", first: true, predicate: TuiInputNumberComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tui-input-number\\n    class=\\\"t-textfield\\\"\\n    [pseudoFocus]=\\\"pseudoFocus\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [pseudoInvalid]=\\\"pseudoInvalid\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [focusable]=\\\"focusable\\\"\\n    [min]=\\\"min\\\"\\n    [max]=\\\"max\\\"\\n    [prefix]=\\\"prefix\\\"\\n    [postfix]=\\\"postfix\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [textMask]=\\\"getMask(min < 0)\\\"\\n    [nativeId]=\\\"nativeId\\\"\\n    [(ngModel)]=\\\"value\\\"\\n    (keydown)=\\\"onKeydown($event)\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n>\\n    <ng-content></ng-content>\\n    <ng-content\\n        select=\\\"input\\\"\\n        ngProjectAs=\\\"input\\\"\\n    ></ng-content>\\n</tui-input-number>\\n<ng-container *ngIf=\\\"!buttonsHidden\\\">\\n    <ng-container *ngIf=\\\"minusTexts$ | async as texts\\\">\\n        <section class=\\\"t-buttons\\\">\\n            <button\\n                tuiIconButton\\n                type=\\\"button\\\"\\n                automation-id=\\\"tui-input-count__plus-button\\\"\\n                size=\\\"s\\\"\\n                class=\\\"t-button t-button_plus\\\"\\n                [icon]=\\\"iconUp\\\"\\n                [appearance]=\\\"options.appearance\\\"\\n                [title]=\\\"texts[0]\\\"\\n                [disabled]=\\\"plusButtonDisabled\\\"\\n                [focusable]=\\\"false\\\"\\n                (mousedown)=\\\"onButtonMouseDown($event, plusButtonDisabled)\\\"\\n                (click)=\\\"increaseValue()\\\"\\n            ></button>\\n            <button\\n                tuiIconButton\\n                type=\\\"button\\\"\\n                automation-id=\\\"tui-input-count__minus-button\\\"\\n                size=\\\"s\\\"\\n                class=\\\"t-button t-button_minus\\\"\\n                [icon]=\\\"iconDown\\\"\\n                [appearance]=\\\"options.appearance\\\"\\n                [disabled]=\\\"minusButtonDisabled\\\"\\n                [focusable]=\\\"false\\\"\\n                [title]=\\\"texts[1]\\\"\\n                (mousedown)=\\\"onButtonMouseDown($event, minusButtonDisabled)\\\"\\n                (click)=\\\"decreaseValue()\\\"\\n            ></button>\\n        </section>\\n    </ng-container>\\n</ng-container>\\n\", styles: [\":host{display:flex;font:var(--tui-font-text-s);border-radius:var(--tui-radius-m);height:var(--tui-height-m);color:var(--tui-text-01);text-align:left}:host._disabled{pointer-events:none}:host[data-size=l]{font:var(--tui-font-text-m);height:var(--tui-height-l)}.t-textfield{position:relative;border-radius:inherit;text-align:inherit;flex-grow:1;min-width:0}:host:not(._hide-buttons) .t-textfield{border-top-right-radius:0;border-bottom-right-radius:0}.t-buttons{display:flex;flex-direction:column;margin-left:.125rem;height:100%}.t-buttons .t-button{display:flex;width:calc(var(--tui-height-m) * .75);height:calc(50% - .0625rem)}.t-buttons .t-button_plus{margin-bottom:.125rem;border-radius:0 var(--tui-radius-m) 0 0}.t-buttons .t-button_minus{border-radius:0 0 var(--tui-radius-m)}:host[data-size=l] .t-buttons .t-button{width:calc(var(--tui-height-l) * .75)}\\n\"], components: [{ type: i1.TuiInputNumberComponent, selector: \"tui-input-number\", inputs: [\"min\", \"max\", \"decimal\", \"precision\", \"prefix\", \"postfix\"] }, { type: i2.TuiButtonComponent, selector: \"button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]\", inputs: [\"appearance\", \"disabled\", \"icon\", \"iconRight\", \"shape\", \"showLoader\", \"size\"] }], directives: [{ type: i1.TuiInputNumberDirective, selector: \"tui-input-number\" }, { type: i3.MaskedInputDirective, selector: \"[textMask]\", inputs: [\"textMask\"], exportAs: [\"textMask\"] }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"async\": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiInputCountComponent.prototype, \"step\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputCountComponent.prototype, \"min\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputCountComponent.prototype, \"max\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputCountComponent.prototype, \"hideButtons\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputCountComponent.prototype, \"prefix\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputCountComponent.prototype, \"postfix\", void 0);\n__decorate([\n    tuiPure\n], TuiInputCountComponent.prototype, \"getMask\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputCountComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-input-count',\n                    templateUrl: './input-count.template.html',\n                    styleUrls: ['./input-count.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiInputCountComponent),\n                        tuiAsControl(TuiInputCountComponent),\n                        TEXTFIELD_CONTROLLER_PROVIDER,\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i4.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i2.TuiTextfieldController, decorators: [{\n                    type: Inject,\n                    args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]\n                }] }, { type: i6.Observable, decorators: [{\n                    type: Inject,\n                    args: [TUI_PLUS_MINUS_TEXTS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_IS_MOBILE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_INPUT_COUNT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_NUMBER_FORMAT]\n                }] }]; }, propDecorators: { inputNumber: [{\n                type: ViewChild,\n                args: [TuiInputNumberComponent]\n            }], step: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], hideButtons: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], postfix: [{\n                type: Input\n            }], getMask: [], buttonsHidden: [{\n                type: HostBinding,\n                args: ['class._hide-buttons']\n            }], size: [{\n                type: HostBinding,\n                args: ['attr.data-size']\n            }] } });\n\nclass TuiInputCountDirective extends AbstractTuiTextfieldHost {\n    onValueChange(value) {\n        this.host.onValueChange(value);\n    }\n    ngAfterViewInit() {\n        if (this.host.nativeFocusableElement) {\n            const { nativeFocusableElement } = this.host;\n            nativeFocusableElement.autocomplete = 'off';\n            nativeFocusableElement.inputMode = 'numeric';\n            nativeFocusableElement.maxLength =\n                nativeFocusableElement.maxLength > -1\n                    ? nativeFocusableElement.maxLength\n                    : 18;\n        }\n    }\n}\nTuiInputCountDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputCountDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiInputCountDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputCountDirective, selector: \"tui-input-count\", providers: [tuiAsTextfieldHost(TuiInputCountDirective)], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputCountDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'tui-input-count',\n                    providers: [tuiAsTextfieldHost(TuiInputCountDirective)],\n                }]\n        }] });\n\nclass TuiInputCountModule {\n}\nTuiInputCountModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputCountModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiInputCountModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputCountModule, declarations: [TuiInputCountComponent, TuiInputCountDirective], imports: [CommonModule,\n        TextMaskModule,\n        FormsModule,\n        TuiButtonModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiValueAccessorModule,\n        PolymorpheusModule,\n        TuiInputNumberModule], exports: [TuiInputCountComponent, TuiInputCountDirective, TuiTextfieldComponent] });\nTuiInputCountModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputCountModule, imports: [[\n            CommonModule,\n            TextMaskModule,\n            FormsModule,\n            TuiButtonModule,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiValueAccessorModule,\n            PolymorpheusModule,\n            TuiInputNumberModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputCountModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TextMaskModule,\n                        FormsModule,\n                        TuiButtonModule,\n                        TuiPrimitiveTextfieldModule,\n                        TuiTextfieldControllerModule,\n                        TuiValueAccessorModule,\n                        PolymorpheusModule,\n                        TuiInputNumberModule,\n                    ],\n                    declarations: [TuiInputCountComponent, TuiInputCountDirective],\n                    exports: [TuiInputCountComponent, TuiInputCountDirective, TuiTextfieldComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_COUNT_DEFAULT_OPTIONS, TUI_INPUT_COUNT_OPTIONS, TuiInputCountComponent, TuiInputCountDirective, TuiInputCountModule, tuiInputCountOptionsProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}