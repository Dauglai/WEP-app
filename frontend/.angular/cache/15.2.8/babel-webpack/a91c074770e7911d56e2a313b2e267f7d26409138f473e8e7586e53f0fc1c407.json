{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injector, Directive, Self, TemplateRef, ChangeDetectorRef, ComponentFactoryResolver, NgModule } from '@angular/core';\n\n/**\r\n * Use this token to access context within your components when\r\n * instantiating them through {@link PolymorpheusOutletDirective}\r\n */\nconst POLYMORPHEUS_CONTEXT = new InjectionToken('POLYMORPHEUS_CONTEXT');\n\n/**\r\n * Wrapper class for a component that will be used as content for {@link PolymorpheusOutletDirective}\r\n *\r\n * @param component — an Angular component to be dynamically created\r\n * @param injector — optional {@link Injector} for lazy loaded module case\r\n *\r\n * TODO: Remove second generic as it is irrelevant, remove `null` from injector type\r\n */\nclass PolymorpheusComponent {\n  constructor(component, i) {\n    this.component = component;\n    this.i = i;\n  }\n  createInjector(injector, useValue) {\n    return Injector.create({\n      parent: this.i || injector,\n      providers: [{\n        provide: POLYMORPHEUS_CONTEXT,\n        useValue\n      }]\n    });\n  }\n}\n\n/**\r\n * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.\r\n */\nclass PolymorpheusTemplate {\n  constructor(template, cdr) {\n    this.template = template;\n    this.cdr = cdr;\n    this.polymorpheus = '';\n  }\n  check() {\n    this.cdr.markForCheck();\n  }\n  static ngTemplateContextGuard(_dir, _ctx) {\n    return true;\n  }\n}\n/** @nocollapse */\nPolymorpheusTemplate.ɵfac = function PolymorpheusTemplate_Factory(t) {\n  return new (t || PolymorpheusTemplate)(i0.ɵɵdirectiveInject(i0.TemplateRef, 2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\nPolymorpheusTemplate.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PolymorpheusTemplate,\n  selectors: [[\"ng-template\", \"polymorpheus\", \"\"]],\n  inputs: {\n    polymorpheus: \"polymorpheus\"\n  },\n  exportAs: [\"polymorpheus\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolymorpheusTemplate, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[polymorpheus]',\n      exportAs: 'polymorpheus',\n      inputs: ['polymorpheus']\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Self\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\nclass PolymorpheusContext {\n  constructor($implicit) {\n    this.$implicit = $implicit;\n  }\n  get polymorpheusOutlet() {\n    return this.$implicit;\n  }\n}\n/**\r\n * @deprecated: use {@link PolymorpheusContext} instead\r\n * Primitive types used as content by {@link PolymorpheusOutletDirective}\r\n */\nclass PrimitiveContext extends PolymorpheusContext {}\nclass PolymorpheusOutletDirective {\n  constructor(vcr, i, t) {\n    this.vcr = vcr;\n    this.i = i;\n    this.t = t;\n    this.content = '';\n  }\n  get template() {\n    if (isDirective(this.content)) {\n      return this.content.template;\n    }\n    return this.content instanceof TemplateRef ? this.content : this.t;\n  }\n  ngOnChanges({\n    content\n  }) {\n    var _a;\n    const context = this.getContext();\n    if (this.v) {\n      this.v.context = context;\n    }\n    (_a = this.c) === null || _a === void 0 ? void 0 : _a.injector.get(ChangeDetectorRef).markForCheck();\n    if (!content) {\n      return;\n    }\n    this.vcr.clear();\n    if (isComponent(this.content)) {\n      this.process(this.content);\n    } else if (\n    // tslint:disable-next-line:triple-equals\n    (context instanceof PolymorpheusContext && context.$implicit) != null) {\n      this.v = this.vcr.createEmbeddedView(this.template, context);\n    }\n  }\n  ngDoCheck() {\n    if (isDirective(this.content)) {\n      this.content.check();\n    }\n  }\n  static ngTemplateContextGuard(_dir, _ctx) {\n    return true;\n  }\n  getContext() {\n    if (isTemplate(this.content) || isComponent(this.content)) {\n      return this.context;\n    }\n    return new PolymorpheusContext(typeof this.content === 'function' ? this.content(this.context) : this.content);\n  }\n  process(content) {\n    const injector = content.createInjector(this.i, this.context && new Proxy(this.context, {\n      get: (_, key) => {\n        var _a;\n        return (_a = this.context) === null || _a === void 0 ? void 0 : _a[key];\n      }\n    }));\n    this.c = this.vcr.createComponent(injector.get(ComponentFactoryResolver).resolveComponentFactory(content.component), 0, injector);\n  }\n}\n/** @nocollapse */\nPolymorpheusOutletDirective.ɵfac = function PolymorpheusOutletDirective_Factory(t) {\n  return new (t || PolymorpheusOutletDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n/** @nocollapse */\nPolymorpheusOutletDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PolymorpheusOutletDirective,\n  selectors: [[\"\", \"polymorpheusOutlet\", \"\"]],\n  inputs: {\n    content: [\"polymorpheusOutlet\", \"content\"],\n    context: [\"polymorpheusOutletContext\", \"context\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolymorpheusOutletDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[polymorpheusOutlet]',\n      inputs: ['content: polymorpheusOutlet', 'context: polymorpheusOutletContext']\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\nfunction isDirective(content) {\n  return content instanceof PolymorpheusTemplate;\n}\nfunction isComponent(content) {\n  return content instanceof PolymorpheusComponent;\n}\nfunction isTemplate(content) {\n  return isDirective(content) || content instanceof TemplateRef;\n}\nclass PolymorpheusModule {}\n/** @nocollapse */\nPolymorpheusModule.ɵfac = function PolymorpheusModule_Factory(t) {\n  return new (t || PolymorpheusModule)();\n};\n/** @nocollapse */\nPolymorpheusModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PolymorpheusModule\n});\n/** @nocollapse */\nPolymorpheusModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolymorpheusModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [PolymorpheusOutletDirective, PolymorpheusTemplate],\n      exports: [PolymorpheusOutletDirective, PolymorpheusTemplate]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Public API Surface of ng-polymorpheus\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, PolymorpheusModule, PolymorpheusOutletDirective, PolymorpheusTemplate };","map":{"version":3,"names":["i0","InjectionToken","Injector","Directive","Self","TemplateRef","ChangeDetectorRef","ComponentFactoryResolver","NgModule","POLYMORPHEUS_CONTEXT","PolymorpheusComponent","constructor","component","i","createInjector","injector","useValue","create","parent","providers","provide","PolymorpheusTemplate","template","cdr","polymorpheus","check","markForCheck","ngTemplateContextGuard","_dir","_ctx","ɵfac","ɵdir","type","args","selector","exportAs","inputs","decorators","PolymorpheusContext","$implicit","polymorpheusOutlet","PrimitiveContext","PolymorpheusOutletDirective","vcr","t","content","isDirective","ngOnChanges","_a","context","getContext","v","c","get","clear","isComponent","process","createEmbeddedView","ngDoCheck","isTemplate","Proxy","_","key","createComponent","resolveComponentFactory","ViewContainerRef","PolymorpheusModule","ɵmod","ɵinj","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@tinkoff/ng-polymorpheus/fesm2015/tinkoff-ng-polymorpheus.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injector, Directive, Self, TemplateRef, ChangeDetectorRef, ComponentFactoryResolver, NgModule } from '@angular/core';\n\n/**\r\n * Use this token to access context within your components when\r\n * instantiating them through {@link PolymorpheusOutletDirective}\r\n */\r\nconst POLYMORPHEUS_CONTEXT = new InjectionToken('POLYMORPHEUS_CONTEXT');\n\n/**\r\n * Wrapper class for a component that will be used as content for {@link PolymorpheusOutletDirective}\r\n *\r\n * @param component — an Angular component to be dynamically created\r\n * @param injector — optional {@link Injector} for lazy loaded module case\r\n *\r\n * TODO: Remove second generic as it is irrelevant, remove `null` from injector type\r\n */\r\nclass PolymorpheusComponent {\r\n    constructor(component, i) {\r\n        this.component = component;\r\n        this.i = i;\r\n    }\r\n    createInjector(injector, useValue) {\r\n        return Injector.create({\r\n            parent: this.i || injector,\r\n            providers: [\r\n                {\r\n                    provide: POLYMORPHEUS_CONTEXT,\r\n                    useValue,\r\n                },\r\n            ],\r\n        });\r\n    }\r\n}\n\n/**\r\n * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.\r\n */\r\nclass PolymorpheusTemplate {\r\n    constructor(template, cdr) {\r\n        this.template = template;\r\n        this.cdr = cdr;\r\n        this.polymorpheus = '';\r\n    }\r\n    check() {\r\n        this.cdr.markForCheck();\r\n    }\r\n    static ngTemplateContextGuard(_dir, _ctx) {\r\n        return true;\r\n    }\r\n}\r\n/** @nocollapse */ PolymorpheusTemplate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: PolymorpheusTemplate, deps: [{ token: i0.TemplateRef, self: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ PolymorpheusTemplate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: PolymorpheusTemplate, selector: \"ng-template[polymorpheus]\", inputs: { polymorpheus: \"polymorpheus\" }, exportAs: [\"polymorpheus\"], ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: PolymorpheusTemplate, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'ng-template[polymorpheus]',\r\n                    exportAs: 'polymorpheus',\r\n                    inputs: ['polymorpheus'],\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\r\n                    type: Self\r\n                }] }, { type: i0.ChangeDetectorRef }]; } });\n\nclass PolymorpheusContext {\r\n    constructor($implicit) {\r\n        this.$implicit = $implicit;\r\n    }\r\n    get polymorpheusOutlet() {\r\n        return this.$implicit;\r\n    }\r\n}\r\n/**\r\n * @deprecated: use {@link PolymorpheusContext} instead\r\n * Primitive types used as content by {@link PolymorpheusOutletDirective}\r\n */\r\nclass PrimitiveContext extends PolymorpheusContext {\r\n}\n\nclass PolymorpheusOutletDirective {\r\n    constructor(vcr, i, t) {\r\n        this.vcr = vcr;\r\n        this.i = i;\r\n        this.t = t;\r\n        this.content = '';\r\n    }\r\n    get template() {\r\n        if (isDirective(this.content)) {\r\n            return this.content.template;\r\n        }\r\n        return this.content instanceof TemplateRef ? this.content : this.t;\r\n    }\r\n    ngOnChanges({ content }) {\r\n        var _a;\r\n        const context = this.getContext();\r\n        if (this.v) {\r\n            this.v.context = context;\r\n        }\r\n        (_a = this.c) === null || _a === void 0 ? void 0 : _a.injector.get(ChangeDetectorRef).markForCheck();\r\n        if (!content) {\r\n            return;\r\n        }\r\n        this.vcr.clear();\r\n        if (isComponent(this.content)) {\r\n            this.process(this.content);\r\n        }\r\n        else if (\r\n        // tslint:disable-next-line:triple-equals\r\n        (context instanceof PolymorpheusContext && context.$implicit) != null) {\r\n            this.v = this.vcr.createEmbeddedView(this.template, context);\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (isDirective(this.content)) {\r\n            this.content.check();\r\n        }\r\n    }\r\n    static ngTemplateContextGuard(_dir, _ctx) {\r\n        return true;\r\n    }\r\n    getContext() {\r\n        if (isTemplate(this.content) || isComponent(this.content)) {\r\n            return this.context;\r\n        }\r\n        return new PolymorpheusContext(typeof this.content === 'function'\r\n            ? this.content(this.context)\r\n            : this.content);\r\n    }\r\n    process(content) {\r\n        const injector = content.createInjector(this.i, this.context &&\r\n            new Proxy(this.context, {\r\n                get: (_, key) => { var _a; return (_a = this.context) === null || _a === void 0 ? void 0 : _a[key]; },\r\n            }));\r\n        this.c = this.vcr.createComponent(injector\r\n            .get(ComponentFactoryResolver)\r\n            .resolveComponentFactory(content.component), 0, injector);\r\n    }\r\n}\r\n/** @nocollapse */ PolymorpheusOutletDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: PolymorpheusOutletDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.Injector }, { token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ PolymorpheusOutletDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: PolymorpheusOutletDirective, selector: \"[polymorpheusOutlet]\", inputs: { content: [\"polymorpheusOutlet\", \"content\"], context: [\"polymorpheusOutletContext\", \"context\"] }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: PolymorpheusOutletDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[polymorpheusOutlet]',\r\n                    inputs: ['content: polymorpheusOutlet', 'context: polymorpheusOutletContext'],\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.Injector }, { type: i0.TemplateRef }]; } });\r\nfunction isDirective(content) {\r\n    return content instanceof PolymorpheusTemplate;\r\n}\r\nfunction isComponent(content) {\r\n    return content instanceof PolymorpheusComponent;\r\n}\r\nfunction isTemplate(content) {\r\n    return isDirective(content) || content instanceof TemplateRef;\r\n}\n\nclass PolymorpheusModule {\r\n}\r\n/** @nocollapse */ PolymorpheusModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: PolymorpheusModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ PolymorpheusModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: PolymorpheusModule, declarations: [PolymorpheusOutletDirective, PolymorpheusTemplate], exports: [PolymorpheusOutletDirective, PolymorpheusTemplate] });\r\n/** @nocollapse */ PolymorpheusModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: PolymorpheusModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: PolymorpheusModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [PolymorpheusOutletDirective, PolymorpheusTemplate],\r\n                    exports: [PolymorpheusOutletDirective, PolymorpheusTemplate],\r\n                }]\r\n        }] });\n\n/**\r\n * Public API Surface of ng-polymorpheus\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, PolymorpheusModule, PolymorpheusOutletDirective, PolymorpheusTemplate };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}