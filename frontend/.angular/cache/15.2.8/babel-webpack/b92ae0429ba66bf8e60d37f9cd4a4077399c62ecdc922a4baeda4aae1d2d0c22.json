{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, Inject, ChangeDetectorRef, Injector, Component, ChangeDetectionStrategy, Optional, Self, ViewChild, Input, HostListener, NgModule } from '@angular/core';\nimport * as i7 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { DATE_FILLER_LENGTH, TuiDay, TUI_DATE_FORMAT, AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, TuiMonth, changeDateSeparator, tuiDateClamp, tuiNullableSame, TUI_IS_MOBILE, TUI_DATE_SEPARATOR, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiPreventDefaultModule, TuiLetModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_HOST, TUI_DEFAULT_MARKER_HANDLER, TuiDialogService, TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiWrapperModule, TuiCalendarModule, TuiSvgModule, TuiLinkModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { EMPTY_MASK } from '@taiga-ui/kit/constants';\nimport { TUI_MOBILE_CALENDAR, TUI_DATE_TEXTS, TUI_DATE_VALUE_TRANSFORMER, TUI_INPUT_DATE_OPTIONS, tuiDateStreamWithTransformer } from '@taiga-ui/kit/tokens';\nimport { tuiCreateDateMask, tuiCreateAutoCorrectedDatePipe } from '@taiga-ui/kit/utils/mask';\nimport * as i4 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i3 from '@taiga-ui/kit/directives';\nimport { TextMaskModule, TuiValueAccessorModule } from '@taiga-ui/kit/directives';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i8 from 'rxjs';\nfunction TuiInputDateComponent_tui_primitive_textfield_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 5);\n    i0.ɵɵlistener(\"valueChange\", function TuiInputDateComponent_tui_primitive_textfield_1_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onValueChange($event));\n    })(\"focusedChange\", function TuiInputDateComponent_tui_primitive_textfield_1_Template_tui_primitive_textfield_focusedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onFocused($event));\n    });\n    i0.ɵɵprojection(1);\n    i0.ɵɵprojection(2, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const filler_r5 = ctx.tuiLet;\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"tuiTextfieldIcon\", ctx_r0.calendarIcon && _r1)(\"tuiTextfieldFiller\", ctx_r0.getComputedFiller(filler_r5 || \"\"))(\"pseudoFocus\", ctx_r0.pseudoFocus)(\"pseudoHover\", ctx_r0.pseudoHover)(\"invalid\", ctx_r0.computedInvalid)(\"nativeId\", ctx_r0.nativeId)(\"readOnly\", ctx_r0.readOnly)(\"focusable\", ctx_r0.computedFocusable)(\"disabled\", ctx_r0.computedDisabled)(\"textMask\", ctx_r0.computedMask)(\"value\", ctx_r0.computedValue);\n  }\n}\nfunction TuiInputDateComponent_ng_template_3_tui_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-svg\", 8);\n    i0.ɵɵlistener(\"click\", function TuiInputDateComponent_ng_template_3_tui_svg_0_Template_tui_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onIconClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const src_r11 = ctx.polymorpheusOutlet;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-icon\", !ctx_r9.computedDisabled);\n    i0.ɵɵproperty(\"src\", src_r11);\n  }\n}\nfunction TuiInputDateComponent_ng_template_3_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 9);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction TuiInputDateComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiInputDateComponent_ng_template_3_tui_svg_0_Template, 1, 3, \"tui-svg\", 6);\n    i0.ɵɵtemplate(1, TuiInputDateComponent_ng_template_3_input_1_Template, 1, 0, \"input\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.calendarIcon)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(3, _c0, ctx_r2.size));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isMobile && ctx_r2.nativePicker);\n  }\n}\nfunction TuiInputDateComponent_ng_template_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TuiInputDateComponent_ng_template_5_div_1_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDayClick(ctx_r15.items[0].day));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.items[0], \" \");\n  }\n}\nfunction TuiInputDateComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-calendar\", 10);\n    i0.ɵɵlistener(\"dayClick\", function TuiInputDateComponent_ng_template_5_Template_tui_calendar_dayClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onDayClick($event));\n    })(\"monthChange\", function TuiInputDateComponent_ng_template_5_Template_tui_calendar_monthChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onMonthChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(1, TuiInputDateComponent_ng_template_5_div_1_Template, 3, 1, \"div\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"min\", ctx_r4.min)(\"max\", ctx_r4.max)(\"markerHandler\", ctx_r4.markerHandler)(\"disabledItemHandler\", ctx_r4.disabledItemHandler)(\"month\", ctx_r4.computedActiveYearMonth)(\"value\", ctx_r4.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.items.length === 1);\n  }\n}\nconst _c1 = [\"*\", [[\"input\"]]];\nconst _c2 = [\"*\", \"input\"];\nclass TuiNativeDateDirective {\n  constructor(host, dateFormat) {\n    this.host = host;\n    this.dateFormat = dateFormat;\n  }\n  get value() {\n    return this.host.value.length === DATE_FILLER_LENGTH ? TuiDay.normalizeParse(this.host.value, this.dateFormat).toString('YMD', '-') : '';\n  }\n  onChange(value) {\n    this.host.onValueChange(value ? TuiDay.normalizeParse(value, 'YMD').toString(this.dateFormat) : '');\n  }\n}\nTuiNativeDateDirective.ɵfac = function TuiNativeDateDirective_Factory(t) {\n  return new (t || TuiNativeDateDirective)(i0.ɵɵdirectiveInject(TUI_TEXTFIELD_HOST), i0.ɵɵdirectiveInject(TUI_DATE_FORMAT));\n};\nTuiNativeDateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiNativeDateDirective,\n  selectors: [[\"input\", \"tuiDate\", \"\"]],\n  hostAttrs: [\"type\", \"date\"],\n  hostVars: 2,\n  hostBindings: function TuiNativeDateDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function TuiNativeDateDirective_change_HostBindingHandler($event) {\n        return ctx.onChange($event.target.value);\n      })(\"click.stop.silent\", function TuiNativeDateDirective_click_stop_silent_HostBindingHandler() {\n        return 0;\n      })(\"input.stop.silent\", function TuiNativeDateDirective_input_stop_silent_HostBindingHandler() {\n        return 0;\n      })(\"mousedown.stop.silent\", function TuiNativeDateDirective_mousedown_stop_silent_HostBindingHandler() {\n        return 0;\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", -1)(\"value\", ctx.value);\n    }\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiNativeDateDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[tuiDate]',\n      host: {\n        type: 'date',\n        '[tabIndex]': '-1',\n        '[value]': 'value',\n        '(change)': 'onChange($event.target.value)',\n        '(click.stop.silent)': '0',\n        '(input.stop.silent)': '0',\n        '(mousedown.stop.silent)': '0'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TEXTFIELD_HOST]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_DATE_FORMAT]\n      }]\n    }];\n  }, null);\n})();\nclass TuiInputDateComponent extends AbstractTuiNullableControl {\n  constructor(control, cdr, injector, isMobile, dialogs, mobileCalendar, textfieldSize, dateFormat, dateSeparator, dateTexts$, valueTransformer, options) {\n    super(control, cdr, valueTransformer);\n    this.injector = injector;\n    this.isMobile = isMobile;\n    this.dialogs = dialogs;\n    this.mobileCalendar = mobileCalendar;\n    this.textfieldSize = textfieldSize;\n    this.dateFormat = dateFormat;\n    this.dateSeparator = dateSeparator;\n    this.dateTexts$ = dateTexts$;\n    this.valueTransformer = valueTransformer;\n    this.options = options;\n    this.month = null;\n    this.textMaskOptions = {\n      mask: tuiCreateDateMask(this.dateFormat, this.dateSeparator),\n      pipe: tuiCreateAutoCorrectedDatePipe(this),\n      guide: false\n    };\n    this.min = this.options.min;\n    this.max = this.options.max;\n    this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n    this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;\n    this.items = [];\n    this.defaultActiveYearMonth = TuiMonth.currentLocal();\n    this.open = false;\n    this.filler$ = this.dateTexts$.pipe(map(dateTexts => changeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator)));\n  }\n  get nativeFocusableElement() {\n    return this.textfield ? this.textfield.nativeFocusableElement : null;\n  }\n  get focused() {\n    return !!this.textfield && this.textfield.focused;\n  }\n  get computedMobile() {\n    return this.isMobile && (!!this.mobileCalendar || this.nativePicker);\n  }\n  get nativePicker() {\n    return this.options.nativePicker;\n  }\n  get calendarIcon() {\n    return this.options.icon;\n  }\n  get computedValue() {\n    const {\n      value,\n      nativeValue,\n      activeItem\n    } = this;\n    if (activeItem) {\n      return String(activeItem);\n    }\n    return value ? value.toString(this.dateFormat, this.dateSeparator) : nativeValue;\n  }\n  get computedActiveYearMonth() {\n    if (this.items[0] && this.value && this.value.daySame(this.items[0].day)) {\n      return this.items[0].displayDay;\n    }\n    return this.month || this.value || tuiDateClamp(this.defaultActiveYearMonth, this.min, this.max);\n  }\n  get nativeValue() {\n    return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n  }\n  set nativeValue(value) {\n    if (!this.nativeFocusableElement) {\n      return;\n    }\n    this.nativeFocusableElement.value = value;\n  }\n  get canOpen() {\n    return this.interactive && !this.computedMobile;\n  }\n  get computedMask() {\n    return this.activeItem ? EMPTY_MASK : this.textMaskOptions;\n  }\n  get activeItem() {\n    const {\n      value\n    } = this;\n    return value && this.items.find(item => item.day.daySame(value)) || null;\n  }\n  get size() {\n    return this.textfieldSize.size;\n  }\n  onClick() {\n    if (!this.isMobile) {\n      this.open = !this.open;\n    }\n  }\n  getComputedFiller(filler) {\n    return this.activeItem ? '' : filler;\n  }\n  // noinspection JSUnusedGlobalSymbols\n  /**\n   * TODO: Remove in 4.0\n   * @deprecated: use {@link onIconClick} instead\n   */\n  onMobileClick() {\n    this.onIconClick();\n  }\n  onIconClick() {\n    if (!this.computedMobile || !this.mobileCalendar) {\n      return;\n    }\n    this.dialogs.open(new PolymorpheusComponent(this.mobileCalendar, this.injector), {\n      size: 'fullscreen',\n      closeable: false,\n      data: {\n        single: true,\n        min: this.min,\n        max: this.max,\n        disabledItemHandler: this.disabledItemHandler\n      }\n    }).pipe(takeUntil(this.destroy$)).subscribe(value => {\n      this.value = value;\n    });\n  }\n  onValueChange(value) {\n    if (this.control) {\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    if (!value) {\n      this.onOpenChange(true);\n    }\n    this.value = value.length !== DATE_FILLER_LENGTH ? null : TuiDay.normalizeParse(value, this.dateFormat);\n  }\n  onDayClick(value) {\n    this.value = value;\n    this.open = false;\n  }\n  onMonthChange(month) {\n    this.month = month;\n  }\n  onOpenChange(open) {\n    this.open = open;\n  }\n  onFocused(focused) {\n    this.updateFocused(focused);\n  }\n  setDisabledState() {\n    super.setDisabledState();\n    this.open = false;\n  }\n  writeValue(value) {\n    super.writeValue(value);\n    this.nativeValue = value ? this.computedValue : '';\n  }\n  valueIdenticalComparator(oldValue, newValue) {\n    return tuiNullableSame(oldValue, newValue, (a, b) => a.daySame(b));\n  }\n}\nTuiInputDateComponent.ɵfac = function TuiInputDateComponent_Factory(t) {\n  return new (t || TuiInputDateComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(Injector), i0.ɵɵdirectiveInject(TUI_IS_MOBILE), i0.ɵɵdirectiveInject(TuiDialogService), i0.ɵɵdirectiveInject(TUI_MOBILE_CALENDAR, 8), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE), i0.ɵɵdirectiveInject(TUI_DATE_FORMAT), i0.ɵɵdirectiveInject(TUI_DATE_SEPARATOR), i0.ɵɵdirectiveInject(TUI_DATE_TEXTS), i0.ɵɵdirectiveInject(TUI_DATE_VALUE_TRANSFORMER, 8), i0.ɵɵdirectiveInject(TUI_INPUT_DATE_OPTIONS));\n};\nTuiInputDateComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiInputDateComponent,\n  selectors: [[\"tui-input-date\"]],\n  viewQuery: function TuiInputDateComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n    }\n  },\n  hostBindings: function TuiInputDateComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function TuiInputDateComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    disabledItemHandler: \"disabledItemHandler\",\n    markerHandler: \"markerHandler\",\n    items: \"items\",\n    defaultActiveYearMonth: \"defaultActiveYearMonth\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputDateComponent), tuiAsControl(TuiInputDateComponent), tuiDateStreamWithTransformer(TUI_DATE_VALUE_TRANSFORMER)]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 7,\n  consts: [[1, \"t-hosted\", 3, \"canOpen\", \"open\", \"content\", \"openChange\"], [\"automation-id\", \"tui-input-date-range__textfield\", \"tuiValueAccessor\", \"\", \"class\", \"t-textfield\", 3, \"tuiTextfieldIcon\", \"tuiTextfieldFiller\", \"pseudoFocus\", \"pseudoHover\", \"invalid\", \"nativeId\", \"readOnly\", \"focusable\", \"disabled\", \"textMask\", \"value\", \"valueChange\", \"focusedChange\", 4, \"tuiLet\"], [\"iconContent\", \"\"], [3, \"polymorpheus\"], [\"dropdown\", \"polymorpheus\"], [\"automation-id\", \"tui-input-date-range__textfield\", \"tuiValueAccessor\", \"\", 1, \"t-textfield\", 3, \"tuiTextfieldIcon\", \"tuiTextfieldFiller\", \"pseudoFocus\", \"pseudoHover\", \"invalid\", \"nativeId\", \"readOnly\", \"focusable\", \"disabled\", \"textMask\", \"value\", \"valueChange\", \"focusedChange\"], [\"tuiWrapper\", \"\", \"appearance\", \"icon\", \"automation-id\", \"tui-input-date-range__icon\", 3, \"t-icon\", \"src\", \"click\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"tuiDate\", \"\", \"class\", \"t-native-input\", 4, \"ngIf\"], [\"tuiWrapper\", \"\", \"appearance\", \"icon\", \"automation-id\", \"tui-input-date-range__icon\", 3, \"src\", \"click\"], [\"tuiDate\", \"\", 1, \"t-native-input\"], [\"tuiPreventDefault\", \"mousedown\", \"automation-id\", \"tui-input-date__calendar\", 3, \"min\", \"max\", \"markerHandler\", \"disabledItemHandler\", \"month\", \"value\", \"dayClick\", \"monthChange\"], [\"tuiPreventDefault\", \"mousedown\", \"class\", \"t-button\", 4, \"ngIf\"], [\"tuiPreventDefault\", \"mousedown\", 1, \"t-button\"], [\"tuiLink\", \"\", \"type\", \"button\", 3, \"click\"]],\n  template: function TuiInputDateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c1);\n      i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 0);\n      i0.ɵɵlistener(\"openChange\", function TuiInputDateComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n        return ctx.onOpenChange($event);\n      });\n      i0.ɵɵtemplate(1, TuiInputDateComponent_tui_primitive_textfield_1_Template, 3, 11, \"tui-primitive-textfield\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵtemplate(3, TuiInputDateComponent_ng_template_3_Template, 2, 5, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(5, TuiInputDateComponent_ng_template_5_Template, 2, 7, \"ng-template\", 3, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(6);\n      i0.ɵɵproperty(\"canOpen\", ctx.canOpen)(\"open\", ctx.open && ctx.canOpen)(\"content\", _r3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(2, 5, ctx.filler$));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"polymorpheus\", ctx.type);\n    }\n  },\n  dependencies: [i1.TuiHostedDropdownComponent, i1.TuiPrimitiveTextfieldComponent, i1.TuiSvgComponent, i1.TuiCalendarComponent, i1.TuiLinkComponent, i2.TuiLetDirective, i1.TuiPrimitiveTextfieldDirective, i3.TuiValueAccessorDirective, i1.TuiTextfieldIconDirective, i1.TuiTextfieldFillerDirective, i3.MaskedInputDirective, i4.PolymorpheusOutletDirective, i1.TuiWrapperDirective, i5.NgIf, TuiNativeDateDirective, i4.PolymorpheusTemplate, i2.TuiPreventDefaultDirective, i5.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}.t-icon[_ngcontent-%COMP%]{pointer-events:auto}.t-button[_ngcontent-%COMP%]{display:flex;height:2.75rem;justify-content:center;box-shadow:inset 0 1px var(--tui-base-03)}.t-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{flex:1;text-align:center}.t-native-input[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;pointer-events:auto;font-size:2rem}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiInputDateComponent.prototype, \"min\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateComponent.prototype, \"max\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateComponent.prototype, \"disabledItemHandler\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateComponent.prototype, \"markerHandler\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateComponent.prototype, \"items\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateComponent.prototype, \"defaultActiveYearMonth\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-input-date',\n      templateUrl: './input-date.template.html',\n      styleUrls: ['./input-date.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputDateComponent), tuiAsControl(TuiInputDateComponent), tuiDateStreamWithTransformer(TUI_DATE_VALUE_TRANSFORMER)]\n    }]\n  }], function () {\n    return [{\n      type: i7.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i0.Injector,\n      decorators: [{\n        type: Inject,\n        args: [Injector]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_IS_MOBILE]\n      }]\n    }, {\n      type: i1.TuiDialogService,\n      decorators: [{\n        type: Inject,\n        args: [TuiDialogService]\n      }]\n    }, {\n      type: i0.Type,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TUI_MOBILE_CALENDAR]\n      }]\n    }, {\n      type: i1.TuiTextfieldSizeDirective,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TEXTFIELD_SIZE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_DATE_FORMAT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_DATE_SEPARATOR]\n      }]\n    }, {\n      type: i8.Observable,\n      decorators: [{\n        type: Inject,\n        args: [TUI_DATE_TEXTS]\n      }]\n    }, {\n      type: i2.AbstractTuiValueTransformer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TUI_DATE_VALUE_TRANSFORMER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_INPUT_DATE_OPTIONS]\n      }]\n    }];\n  }, {\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    markerHandler: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    defaultActiveYearMonth: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\nclass TuiInputDateDirective extends AbstractTuiTextfieldHost {\n  get value() {\n    return this.host.computedValue;\n  }\n  onValueChange(value) {\n    if (!value) {\n      this.host.nativeValue = '';\n    }\n    this.host.onValueChange(value);\n  }\n  process(input) {\n    input.inputMode = 'numeric';\n  }\n}\nTuiInputDateDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiInputDateDirective_BaseFactory;\n  return function TuiInputDateDirective_Factory(t) {\n    return (ɵTuiInputDateDirective_BaseFactory || (ɵTuiInputDateDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputDateDirective)))(t || TuiInputDateDirective);\n  };\n}();\nTuiInputDateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiInputDateDirective,\n  selectors: [[\"tui-input-date\"]],\n  features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputDateDirective)]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tui-input-date',\n      providers: [tuiAsTextfieldHost(TuiInputDateDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiInputDateModule {}\nTuiInputDateModule.ɵfac = function TuiInputDateModule_Factory(t) {\n  return new (t || TuiInputDateModule)();\n};\nTuiInputDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiInputDateModule\n});\nTuiInputDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TextMaskModule, PolymorpheusModule, TuiWrapperModule, TuiPreventDefaultModule, TuiCalendarModule, TuiSvgModule, TuiLinkModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiValueAccessorModule, TuiLetModule, TuiTextfieldControllerModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TextMaskModule, PolymorpheusModule, TuiWrapperModule, TuiPreventDefaultModule, TuiCalendarModule, TuiSvgModule, TuiLinkModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiValueAccessorModule, TuiLetModule, TuiTextfieldControllerModule],\n      declarations: [TuiInputDateComponent, TuiInputDateDirective, TuiNativeDateDirective],\n      exports: [TuiInputDateComponent, TuiInputDateDirective, TuiTextfieldComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputDateComponent, TuiInputDateDirective, TuiInputDateModule };","map":{"version":3,"names":["__decorate","i0","Directive","Inject","ChangeDetectorRef","Injector","Component","ChangeDetectionStrategy","Optional","Self","ViewChild","Input","HostListener","NgModule","i7","NgControl","i2","DATE_FILLER_LENGTH","TuiDay","TUI_DATE_FORMAT","AbstractTuiNullableControl","ALWAYS_FALSE_HANDLER","TuiMonth","changeDateSeparator","tuiDateClamp","tuiNullableSame","TUI_IS_MOBILE","TUI_DATE_SEPARATOR","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","TuiPreventDefaultModule","TuiLetModule","i1","TUI_TEXTFIELD_HOST","TUI_DEFAULT_MARKER_HANDLER","TuiDialogService","TUI_TEXTFIELD_SIZE","TuiPrimitiveTextfieldComponent","AbstractTuiTextfieldHost","tuiAsTextfieldHost","TuiWrapperModule","TuiCalendarModule","TuiSvgModule","TuiLinkModule","TuiHostedDropdownModule","TuiPrimitiveTextfieldModule","TuiTextfieldControllerModule","TuiTextfieldComponent","EMPTY_MASK","TUI_MOBILE_CALENDAR","TUI_DATE_TEXTS","TUI_DATE_VALUE_TRANSFORMER","TUI_INPUT_DATE_OPTIONS","tuiDateStreamWithTransformer","tuiCreateDateMask","tuiCreateAutoCorrectedDatePipe","i4","PolymorpheusComponent","PolymorpheusModule","map","takeUntil","i3","TextMaskModule","TuiValueAccessorModule","i5","CommonModule","i8","TuiNativeDateDirective","constructor","host","dateFormat","value","length","normalizeParse","toString","onChange","onValueChange","ɵfac","ɵdir","type","args","selector","undefined","decorators","TuiInputDateComponent","control","cdr","injector","isMobile","dialogs","mobileCalendar","textfieldSize","dateSeparator","dateTexts$","valueTransformer","options","month","textMaskOptions","mask","pipe","guide","min","max","disabledItemHandler","markerHandler","items","defaultActiveYearMonth","currentLocal","open","filler$","dateTexts","nativeFocusableElement","textfield","focused","computedMobile","nativePicker","calendarIcon","icon","computedValue","nativeValue","activeItem","String","computedActiveYearMonth","daySame","day","displayDay","canOpen","interactive","computedMask","find","item","size","onClick","getComputedFiller","filler","onMobileClick","onIconClick","closeable","data","single","destroy$","subscribe","updateValueAndValidity","emitEvent","onOpenChange","onDayClick","onMonthChange","onFocused","updateFocused","setDisabledState","writeValue","valueIdenticalComparator","oldValue","newValue","a","b","ɵcmp","TuiHostedDropdownComponent","TuiSvgComponent","TuiCalendarComponent","TuiLinkComponent","TuiLetDirective","TuiPrimitiveTextfieldDirective","TuiValueAccessorDirective","TuiTextfieldIconDirective","TuiTextfieldFillerDirective","MaskedInputDirective","PolymorpheusOutletDirective","TuiWrapperDirective","NgIf","PolymorpheusTemplate","TuiPreventDefaultDirective","AsyncPipe","prototype","templateUrl","styleUrls","changeDetection","OnPush","providers","Type","TuiTextfieldSizeDirective","Observable","AbstractTuiValueTransformer","TuiInputDateDirective","process","input","inputMode","TuiInputDateModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-input-date.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, Inject, ChangeDetectorRef, Injector, Component, ChangeDetectionStrategy, Optional, Self, ViewChild, Input, HostListener, NgModule } from '@angular/core';\nimport * as i7 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { DATE_FILLER_LENGTH, TuiDay, TUI_DATE_FORMAT, AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, TuiMonth, changeDateSeparator, tuiDateClamp, tuiNullableSame, TUI_IS_MOBILE, TUI_DATE_SEPARATOR, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiPreventDefaultModule, TuiLetModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_HOST, TUI_DEFAULT_MARKER_HANDLER, TuiDialogService, TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiWrapperModule, TuiCalendarModule, TuiSvgModule, TuiLinkModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { EMPTY_MASK } from '@taiga-ui/kit/constants';\nimport { TUI_MOBILE_CALENDAR, TUI_DATE_TEXTS, TUI_DATE_VALUE_TRANSFORMER, TUI_INPUT_DATE_OPTIONS, tuiDateStreamWithTransformer } from '@taiga-ui/kit/tokens';\nimport { tuiCreateDateMask, tuiCreateAutoCorrectedDatePipe } from '@taiga-ui/kit/utils/mask';\nimport * as i4 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i3 from '@taiga-ui/kit/directives';\nimport { TextMaskModule, TuiValueAccessorModule } from '@taiga-ui/kit/directives';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i8 from 'rxjs';\n\nclass TuiNativeDateDirective {\n    constructor(host, dateFormat) {\n        this.host = host;\n        this.dateFormat = dateFormat;\n    }\n    get value() {\n        return this.host.value.length === DATE_FILLER_LENGTH\n            ? TuiDay.normalizeParse(this.host.value, this.dateFormat).toString('YMD', '-')\n            : '';\n    }\n    onChange(value) {\n        this.host.onValueChange(value ? TuiDay.normalizeParse(value, 'YMD').toString(this.dateFormat) : '');\n    }\n}\nTuiNativeDateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiNativeDateDirective, deps: [{ token: TUI_TEXTFIELD_HOST }, { token: TUI_DATE_FORMAT }], target: i0.ɵɵFactoryTarget.Directive });\nTuiNativeDateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiNativeDateDirective, selector: \"input[tuiDate]\", host: { attributes: { \"type\": \"date\" }, listeners: { \"change\": \"onChange($event.target.value)\", \"click.stop.silent\": \"0\", \"input.stop.silent\": \"0\", \"mousedown.stop.silent\": \"0\" }, properties: { \"tabIndex\": \"-1\", \"value\": \"value\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiNativeDateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[tuiDate]',\n                    host: {\n                        type: 'date',\n                        '[tabIndex]': '-1',\n                        '[value]': 'value',\n                        '(change)': 'onChange($event.target.value)',\n                        '(click.stop.silent)': '0',\n                        '(input.stop.silent)': '0',\n                        '(mousedown.stop.silent)': '0',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_TEXTFIELD_HOST]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_DATE_FORMAT]\n                }] }]; } });\n\nclass TuiInputDateComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, injector, isMobile, dialogs, mobileCalendar, textfieldSize, dateFormat, dateSeparator, dateTexts$, valueTransformer, options) {\n        super(control, cdr, valueTransformer);\n        this.injector = injector;\n        this.isMobile = isMobile;\n        this.dialogs = dialogs;\n        this.mobileCalendar = mobileCalendar;\n        this.textfieldSize = textfieldSize;\n        this.dateFormat = dateFormat;\n        this.dateSeparator = dateSeparator;\n        this.dateTexts$ = dateTexts$;\n        this.valueTransformer = valueTransformer;\n        this.options = options;\n        this.month = null;\n        this.textMaskOptions = {\n            mask: tuiCreateDateMask(this.dateFormat, this.dateSeparator),\n            pipe: tuiCreateAutoCorrectedDatePipe(this),\n            guide: false,\n        };\n        this.min = this.options.min;\n        this.max = this.options.max;\n        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n        this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;\n        this.items = [];\n        this.defaultActiveYearMonth = TuiMonth.currentLocal();\n        this.open = false;\n        this.filler$ = this.dateTexts$.pipe(map(dateTexts => changeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator)));\n    }\n    get nativeFocusableElement() {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n    get focused() {\n        return !!this.textfield && this.textfield.focused;\n    }\n    get computedMobile() {\n        return this.isMobile && (!!this.mobileCalendar || this.nativePicker);\n    }\n    get nativePicker() {\n        return this.options.nativePicker;\n    }\n    get calendarIcon() {\n        return this.options.icon;\n    }\n    get computedValue() {\n        const { value, nativeValue, activeItem } = this;\n        if (activeItem) {\n            return String(activeItem);\n        }\n        return value ? value.toString(this.dateFormat, this.dateSeparator) : nativeValue;\n    }\n    get computedActiveYearMonth() {\n        if (this.items[0] && this.value && this.value.daySame(this.items[0].day)) {\n            return this.items[0].displayDay;\n        }\n        return (this.month ||\n            this.value ||\n            tuiDateClamp(this.defaultActiveYearMonth, this.min, this.max));\n    }\n    get nativeValue() {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n    set nativeValue(value) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n        this.nativeFocusableElement.value = value;\n    }\n    get canOpen() {\n        return this.interactive && !this.computedMobile;\n    }\n    get computedMask() {\n        return this.activeItem ? EMPTY_MASK : this.textMaskOptions;\n    }\n    get activeItem() {\n        const { value } = this;\n        return (value && this.items.find(item => item.day.daySame(value))) || null;\n    }\n    get size() {\n        return this.textfieldSize.size;\n    }\n    onClick() {\n        if (!this.isMobile) {\n            this.open = !this.open;\n        }\n    }\n    getComputedFiller(filler) {\n        return this.activeItem ? '' : filler;\n    }\n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * TODO: Remove in 4.0\n     * @deprecated: use {@link onIconClick} instead\n     */\n    onMobileClick() {\n        this.onIconClick();\n    }\n    onIconClick() {\n        if (!this.computedMobile || !this.mobileCalendar) {\n            return;\n        }\n        this.dialogs\n            .open(new PolymorpheusComponent(this.mobileCalendar, this.injector), {\n            size: 'fullscreen',\n            closeable: false,\n            data: {\n                single: true,\n                min: this.min,\n                max: this.max,\n                disabledItemHandler: this.disabledItemHandler,\n            },\n        })\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => {\n            this.value = value;\n        });\n    }\n    onValueChange(value) {\n        if (this.control) {\n            this.control.updateValueAndValidity({ emitEvent: false });\n        }\n        if (!value) {\n            this.onOpenChange(true);\n        }\n        this.value =\n            value.length !== DATE_FILLER_LENGTH\n                ? null\n                : TuiDay.normalizeParse(value, this.dateFormat);\n    }\n    onDayClick(value) {\n        this.value = value;\n        this.open = false;\n    }\n    onMonthChange(month) {\n        this.month = month;\n    }\n    onOpenChange(open) {\n        this.open = open;\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n    }\n    setDisabledState() {\n        super.setDisabledState();\n        this.open = false;\n    }\n    writeValue(value) {\n        super.writeValue(value);\n        this.nativeValue = value ? this.computedValue : '';\n    }\n    valueIdenticalComparator(oldValue, newValue) {\n        return tuiNullableSame(oldValue, newValue, (a, b) => a.daySame(b));\n    }\n}\nTuiInputDateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: Injector }, { token: TUI_IS_MOBILE }, { token: TuiDialogService }, { token: TUI_MOBILE_CALENDAR, optional: true }, { token: TUI_TEXTFIELD_SIZE }, { token: TUI_DATE_FORMAT }, { token: TUI_DATE_SEPARATOR }, { token: TUI_DATE_TEXTS }, { token: TUI_DATE_VALUE_TRANSFORMER, optional: true }, { token: TUI_INPUT_DATE_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nTuiInputDateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputDateComponent, selector: \"tui-input-date\", inputs: { min: \"min\", max: \"max\", disabledItemHandler: \"disabledItemHandler\", markerHandler: \"markerHandler\", items: \"items\", defaultActiveYearMonth: \"defaultActiveYearMonth\" }, host: { listeners: { \"click\": \"onClick()\" } }, providers: [\n        tuiAsFocusableItemAccessor(TuiInputDateComponent),\n        tuiAsControl(TuiInputDateComponent),\n        tuiDateStreamWithTransformer(TUI_DATE_VALUE_TRANSFORMER),\n    ], viewQueries: [{ propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tui-hosted-dropdown\\n    class=\\\"t-hosted\\\"\\n    [canOpen]=\\\"canOpen\\\"\\n    [open]=\\\"open && canOpen\\\"\\n    [content]=\\\"dropdown\\\"\\n    (openChange)=\\\"onOpenChange($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        *tuiLet=\\\"filler$ | async as filler\\\"\\n        automation-id=\\\"tui-input-date-range__textfield\\\"\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon && iconContent\\\"\\n        [tuiTextfieldFiller]=\\\"getComputedFiller(filler || '')\\\"\\n        [pseudoFocus]=\\\"pseudoFocus\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [focusable]=\\\"computedFocusable\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [textMask]=\\\"computedMask\\\"\\n        [value]=\\\"computedValue\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n        (focusedChange)=\\\"onFocused($event)\\\"\\n    >\\n        <ng-content></ng-content>\\n        <ng-content\\n            select=\\\"input\\\"\\n            ngProjectAs=\\\"input\\\"\\n        ></ng-content>\\n    </tui-primitive-textfield>\\n\\n    <ng-template #iconContent>\\n        <tui-svg\\n            *polymorpheusOutlet=\\\"calendarIcon as src; context: {$implicit: size}\\\"\\n            tuiWrapper\\n            appearance=\\\"icon\\\"\\n            automation-id=\\\"tui-input-date-range__icon\\\"\\n            [class.t-icon]=\\\"!computedDisabled\\\"\\n            [src]=\\\"src\\\"\\n            (click)=\\\"onIconClick()\\\"\\n        ></tui-svg>\\n        <input\\n            *ngIf=\\\"isMobile && nativePicker\\\"\\n            tuiDate\\n            class=\\\"t-native-input\\\"\\n        />\\n    </ng-template>\\n\\n    <ng-template\\n        #dropdown=\\\"polymorpheus\\\"\\n        [polymorpheus]=\\\"type\\\"\\n    >\\n        <tui-calendar\\n            tuiPreventDefault=\\\"mousedown\\\"\\n            automation-id=\\\"tui-input-date__calendar\\\"\\n            [min]=\\\"min\\\"\\n            [max]=\\\"max\\\"\\n            [markerHandler]=\\\"markerHandler\\\"\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [month]=\\\"computedActiveYearMonth\\\"\\n            [value]=\\\"value\\\"\\n            (dayClick)=\\\"onDayClick($event)\\\"\\n            (monthChange)=\\\"onMonthChange($event)\\\"\\n        ></tui-calendar>\\n        <div\\n            *ngIf=\\\"items.length === 1\\\"\\n            tuiPreventDefault=\\\"mousedown\\\"\\n            class=\\\"t-button\\\"\\n        >\\n            <button\\n                tuiLink\\n                type=\\\"button\\\"\\n                (click)=\\\"onDayClick(items[0].day)\\\"\\n            >\\n                {{ items[0] }}\\n            </button>\\n        </div>\\n    </ng-template>\\n</tui-hosted-dropdown>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}.t-icon{pointer-events:auto}.t-button{display:flex;height:2.75rem;justify-content:center;box-shadow:inset 0 1px var(--tui-base-03)}.t-button button{flex:1;text-align:center}.t-native-input{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;pointer-events:auto;font-size:2rem}\\n\"], components: [{ type: i1.TuiHostedDropdownComponent, selector: \"tui-hosted-dropdown\", inputs: [\"content\", \"sided\", \"canOpen\", \"open\"], outputs: [\"openChange\", \"focusedChange\"] }, { type: i1.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"filler\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"prefix\", \"postfix\", \"value\"], outputs: [\"valueChange\"] }, { type: i1.TuiSvgComponent, selector: \"tui-svg\", inputs: [\"src\"] }, { type: i1.TuiCalendarComponent, selector: \"tui-calendar\", inputs: [\"month\", \"disabledItemHandler\", \"min\", \"max\", \"minViewedMonth\", \"maxViewedMonth\", \"hoveredItem\", \"showAdjacent\", \"markerHandler\", \"value\"], outputs: [\"dayClick\", \"monthChange\", \"hoveredItemChange\"] }, { type: i1.TuiLinkComponent, selector: \"a[tuiLink], button[tuiLink]\", inputs: [\"pseudo\", \"icon\", \"iconAlign\", \"iconRotated\", \"mode\"], exportAs: [\"tuiLink\"] }], directives: [{ type: i2.TuiLetDirective, selector: \"[tuiLet]\", inputs: [\"tuiLet\"] }, { type: i1.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { type: i3.TuiValueAccessorDirective, selector: \"[tuiValueAccessor]\" }, { type: i1.TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: [\"tuiTextfieldIcon\"] }, { type: i1.TuiTextfieldFillerDirective, selector: \"[tuiTextfieldFiller]\", inputs: [\"tuiTextfieldFiller\"] }, { type: i3.MaskedInputDirective, selector: \"[textMask]\", inputs: [\"textMask\"], exportAs: [\"textMask\"] }, { type: i4.PolymorpheusOutletDirective, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { type: i1.TuiWrapperDirective, selector: \"[tuiWrapper]\", inputs: [\"disabled\", \"readOnly\", \"hover\", \"active\", \"focus\", \"invalid\", \"appearance\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TuiNativeDateDirective, selector: \"input[tuiDate]\" }, { type: i4.PolymorpheusTemplate, selector: \"ng-template[polymorpheus]\", inputs: [\"polymorpheus\"], exportAs: [\"polymorpheus\"] }, { type: i2.TuiPreventDefaultDirective, selector: \"[tuiPreventDefault]\", inputs: [\"tuiPreventDefault\"] }], pipes: { \"async\": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateComponent.prototype, \"min\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateComponent.prototype, \"max\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateComponent.prototype, \"disabledItemHandler\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateComponent.prototype, \"markerHandler\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateComponent.prototype, \"items\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateComponent.prototype, \"defaultActiveYearMonth\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-input-date',\n                    templateUrl: './input-date.template.html',\n                    styleUrls: ['./input-date.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiInputDateComponent),\n                        tuiAsControl(TuiInputDateComponent),\n                        tuiDateStreamWithTransformer(TUI_DATE_VALUE_TRANSFORMER),\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i7.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i0.Injector, decorators: [{\n                    type: Inject,\n                    args: [Injector]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_IS_MOBILE]\n                }] }, { type: i1.TuiDialogService, decorators: [{\n                    type: Inject,\n                    args: [TuiDialogService]\n                }] }, { type: i0.Type, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TUI_MOBILE_CALENDAR]\n                }] }, { type: i1.TuiTextfieldSizeDirective, decorators: [{\n                    type: Inject,\n                    args: [TUI_TEXTFIELD_SIZE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_DATE_FORMAT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_DATE_SEPARATOR]\n                }] }, { type: i8.Observable, decorators: [{\n                    type: Inject,\n                    args: [TUI_DATE_TEXTS]\n                }] }, { type: i2.AbstractTuiValueTransformer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TUI_DATE_VALUE_TRANSFORMER]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_INPUT_DATE_OPTIONS]\n                }] }]; }, propDecorators: { textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], disabledItemHandler: [{\n                type: Input\n            }], markerHandler: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], defaultActiveYearMonth: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TuiInputDateDirective extends AbstractTuiTextfieldHost {\n    get value() {\n        return this.host.computedValue;\n    }\n    onValueChange(value) {\n        if (!value) {\n            this.host.nativeValue = '';\n        }\n        this.host.onValueChange(value);\n    }\n    process(input) {\n        input.inputMode = 'numeric';\n    }\n}\nTuiInputDateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiInputDateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputDateDirective, selector: \"tui-input-date\", providers: [tuiAsTextfieldHost(TuiInputDateDirective)], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'tui-input-date',\n                    providers: [tuiAsTextfieldHost(TuiInputDateDirective)],\n                }]\n        }] });\n\nclass TuiInputDateModule {\n}\nTuiInputDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiInputDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateModule, declarations: [TuiInputDateComponent, TuiInputDateDirective, TuiNativeDateDirective], imports: [CommonModule,\n        TextMaskModule,\n        PolymorpheusModule,\n        TuiWrapperModule,\n        TuiPreventDefaultModule,\n        TuiCalendarModule,\n        TuiSvgModule,\n        TuiLinkModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiValueAccessorModule,\n        TuiLetModule,\n        TuiTextfieldControllerModule], exports: [TuiInputDateComponent, TuiInputDateDirective, TuiTextfieldComponent] });\nTuiInputDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateModule, imports: [[\n            CommonModule,\n            TextMaskModule,\n            PolymorpheusModule,\n            TuiWrapperModule,\n            TuiPreventDefaultModule,\n            TuiCalendarModule,\n            TuiSvgModule,\n            TuiLinkModule,\n            TuiHostedDropdownModule,\n            TuiPrimitiveTextfieldModule,\n            TuiValueAccessorModule,\n            TuiLetModule,\n            TuiTextfieldControllerModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TextMaskModule,\n                        PolymorpheusModule,\n                        TuiWrapperModule,\n                        TuiPreventDefaultModule,\n                        TuiCalendarModule,\n                        TuiSvgModule,\n                        TuiLinkModule,\n                        TuiHostedDropdownModule,\n                        TuiPrimitiveTextfieldModule,\n                        TuiValueAccessorModule,\n                        TuiLetModule,\n                        TuiTextfieldControllerModule,\n                    ],\n                    declarations: [TuiInputDateComponent, TuiInputDateDirective, TuiNativeDateDirective],\n                    exports: [TuiInputDateComponent, TuiInputDateDirective, TuiTextfieldComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputDateComponent, TuiInputDateDirective, TuiInputDateModule };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,SAAS,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,eAAe;AAC5K,OAAO,KAAKC,EAAE,MAAM,gBAAgB;AACpC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,kBAAkB,EAAEC,MAAM,EAAEC,eAAe,EAAEC,0BAA0B,EAAEC,oBAAoB,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,YAAY,EAAEC,eAAe,EAAEC,aAAa,EAAEC,kBAAkB,EAAEC,0BAA0B,EAAEC,YAAY,EAAEC,cAAc,EAAEC,uBAAuB,EAAEC,YAAY,QAAQ,eAAe;AAC/T,OAAO,KAAKC,EAAE,MAAM,gBAAgB;AACpC,SAASC,kBAAkB,EAAEC,0BAA0B,EAAEC,gBAAgB,EAAEC,kBAAkB,EAAEC,8BAA8B,EAAEC,wBAAwB,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,aAAa,EAAEC,uBAAuB,EAAEC,2BAA2B,EAAEC,4BAA4B,EAAEC,qBAAqB,QAAQ,gBAAgB;AAChX,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,mBAAmB,EAAEC,cAAc,EAAEC,0BAA0B,EAAEC,sBAAsB,EAAEC,4BAA4B,QAAQ,sBAAsB;AAC5J,SAASC,iBAAiB,EAAEC,8BAA8B,QAAQ,0BAA0B;AAC5F,OAAO,KAAKC,EAAE,MAAM,0BAA0B;AAC9C,SAASC,qBAAqB,EAAEC,kBAAkB,QAAQ,0BAA0B;AACpF,SAASC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AAC/C,OAAO,KAAKC,EAAE,MAAM,0BAA0B;AAC9C,SAASC,cAAc,EAAEC,sBAAsB,QAAQ,0BAA0B;AACjF,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAO,KAAKC,EAAE,MAAM,MAAM;AAAC;EAAA;IAAA,YAgB+ElE,EAAE;IAAFA,EAAE,gDAsL8+B;IAtLh/BA,EAAE;MAAFA,EAAE;MAAA,eAAFA,EAAE;MAAA,OAAFA,EAAE,aAsLi6B,4BAAqB;IAAA,EAAE;MAtL17BA,EAAE;MAAA,eAAFA,EAAE;MAAA,OAAFA,EAAE,aAsLo9B,wBAAiB;IAAA,EAA7C;IAtL17BA,EAAE,gBAsLihC;IAtLnhCA,EAAE,2DAsL+nC;IAtLjoCA,EAAE,eAsL+pC;EAAA;EAAA;IAAA;IAAA,eAtLjqCA,EAAE;IAAA,YAAFA,EAAE;IAAFA,EAAE,2DAsLkf;EAAA;AAAA;AAAA;EAAA;IAAA,aAtLpfA,EAAE;IAAFA,EAAE,gCAsL0hD;IAtL5hDA,EAAE;MAAFA,EAAE;MAAA,gBAAFA,EAAE;MAAA,OAAFA,EAAE,aAsLggD,qBAAa;IAAA,EAAE;IAtLjhDA,EAAE,eAsLoiD;EAAA;EAAA;IAAA;IAAA,eAtLtiDA,EAAE;IAAFA,EAAE,gDAsL68C;IAtL/8CA,EAAE,2BAsLw+C;EAAA;AAAA;AAAA;EAAA;IAtL1+CA,EAAE,yBAsL2qD;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAtL7qDA,EAAE,0FAsLoiD;IAtLtiDA,EAAE,sFAsL2qD;EAAA;EAAA;IAAA,eAtL7qDA,EAAE;IAAFA,EAAE,sDAsLowC,8BAtLtwCA,EAAE,sCAsLowC;IAtLtwCA,EAAE,aAsLkmD;IAtLpmDA,EAAE,2DAsLkmD;EAAA;AAAA;AAAA;EAAA;IAAA,aAtLpmDA,EAAE;IAAFA,EAAE,6BAsLy5E;IAtL35EA,EAAE;MAAFA,EAAE;MAAA,gBAAFA,EAAE;MAAA,OAAFA,EAAE,aAsLogF,iCAAiB,CAAC,MAAM;IAAA,EAAE;IAtLhiFA,EAAE,UAsL2lF;IAtL7lFA,EAAE,eAsLomF;EAAA;EAAA;IAAA,gBAtLtmFA,EAAE;IAAFA,EAAE,aAsL2lF;IAtL7lFA,EAAE,+CAsL2lF;EAAA;AAAA;AAAA;EAAA;IAAA,aAtL7lFA,EAAE;IAAFA,EAAE,sCAsL0vE;IAtL5vEA,EAAE;MAAFA,EAAE;MAAA,gBAAFA,EAAE;MAAA,OAAFA,EAAE,aAsLsqE,0BAAkB;IAAA,EAAE;MAtL5rEA,EAAE;MAAA,gBAAFA,EAAE;MAAA,OAAFA,EAAE,aAsLwtE,6BAAqB;IAAA,EAAnD;IAtL5rEA,EAAE,eAsLywE;IAtL3wEA,EAAE,mFAsLonF;EAAA;EAAA;IAAA,eAtLtnFA,EAAE;IAAFA,EAAE,8BAsLs7D;IAtLx7DA,EAAE,aAsL+zE;IAtLj0EA,EAAE,8CAsL+zE;EAAA;AAAA;AAAA;AAAA;AApM36E,MAAMmE,sBAAsB,CAAC;EACzBC,WAAW,CAACC,IAAI,EAAEC,UAAU,EAAE;IAC1B,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAChC;EACA,IAAIC,KAAK,GAAG;IACR,OAAO,IAAI,CAACF,IAAI,CAACE,KAAK,CAACC,MAAM,KAAKxD,kBAAkB,GAC9CC,MAAM,CAACwD,cAAc,CAAC,IAAI,CAACJ,IAAI,CAACE,KAAK,EAAE,IAAI,CAACD,UAAU,CAAC,CAACI,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,GAC5E,EAAE;EACZ;EACAC,QAAQ,CAACJ,KAAK,EAAE;IACZ,IAAI,CAACF,IAAI,CAACO,aAAa,CAACL,KAAK,GAAGtD,MAAM,CAACwD,cAAc,CAACF,KAAK,EAAE,KAAK,CAAC,CAACG,QAAQ,CAAC,IAAI,CAACJ,UAAU,CAAC,GAAG,EAAE,CAAC;EACvG;AACJ;AACAH,sBAAsB,CAACU,IAAI;EAAA,iBAAyFV,sBAAsB,EAAhCnE,EAAE,mBAAgDiC,kBAAkB,GAApEjC,EAAE,mBAA+EkB,eAAe;AAAA,CAA4C;AACtPiD,sBAAsB,CAACW,IAAI,kBAD+E9E,EAAE;EAAA,MACJmE,sBAAsB;EAAA;EAAA,oBAA4D,MAAM;EAAA;EAAA;IAAA;MADtFnE,EAAE;QAAA,OACJ,iCAA6B;MAAA;QAAA,OAA7B,CAAC;MAAA;QAAA,OAAD,CAAC;MAAA;QAAA,OAAD,CAAC;MAAA;IAAA;IAAA;MADCA,EAAE;IAAA;EAAA;AAAA,EACyS;AACrZ;EAAA,mDAF0GA,EAAE,mBAEhBmE,sBAAsB,EAAc,CAAC;IACrHY,IAAI,EAAE9E,SAAS;IACf+E,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,gBAAgB;MAC1BZ,IAAI,EAAE;QACFU,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,IAAI;QAClB,SAAS,EAAE,OAAO;QAClB,UAAU,EAAE,+BAA+B;QAC3C,qBAAqB,EAAE,GAAG;QAC1B,qBAAqB,EAAE,GAAG;QAC1B,yBAAyB,EAAE;MAC/B;IACJ,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEA,IAAI,EAAEG,SAAS;MAAEC,UAAU,EAAE,CAAC;QAC9DJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC/C,kBAAkB;MAC7B,CAAC;IAAE,CAAC,EAAE;MAAE8C,IAAI,EAAEG,SAAS;MAAEC,UAAU,EAAE,CAAC;QAClCJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC9D,eAAe;MAC1B,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AAExB,MAAMkE,qBAAqB,SAASjE,0BAA0B,CAAC;EAC3DiD,WAAW,CAACiB,OAAO,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,cAAc,EAAEC,aAAa,EAAErB,UAAU,EAAEsB,aAAa,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,OAAO,EAAE;IACpJ,KAAK,CAACV,OAAO,EAAEC,GAAG,EAAEQ,gBAAgB,CAAC;IACrC,IAAI,CAACP,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACrB,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACsB,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,eAAe,GAAG;MACnBC,IAAI,EAAE5C,iBAAiB,CAAC,IAAI,CAACgB,UAAU,EAAE,IAAI,CAACsB,aAAa,CAAC;MAC5DO,IAAI,EAAE5C,8BAA8B,CAAC,IAAI,CAAC;MAC1C6C,KAAK,EAAE;IACX,CAAC;IACD,IAAI,CAACC,GAAG,GAAG,IAAI,CAACN,OAAO,CAACM,GAAG;IAC3B,IAAI,CAACC,GAAG,GAAG,IAAI,CAACP,OAAO,CAACO,GAAG;IAC3B,IAAI,CAACC,mBAAmB,GAAGnF,oBAAoB;IAC/C,IAAI,CAACoF,aAAa,GAAGtE,0BAA0B;IAC/C,IAAI,CAACuE,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,sBAAsB,GAAGrF,QAAQ,CAACsF,YAAY,EAAE;IACrD,IAAI,CAACC,IAAI,GAAG,KAAK;IACjB,IAAI,CAACC,OAAO,GAAG,IAAI,CAAChB,UAAU,CAACM,IAAI,CAACxC,GAAG,CAACmD,SAAS,IAAIxF,mBAAmB,CAACwF,SAAS,CAAC,IAAI,CAACxC,UAAU,CAAC,EAAE,IAAI,CAACsB,aAAa,CAAC,CAAC,CAAC;EAC9H;EACA,IAAImB,sBAAsB,GAAG;IACzB,OAAO,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACD,sBAAsB,GAAG,IAAI;EACxE;EACA,IAAIE,OAAO,GAAG;IACV,OAAO,CAAC,CAAC,IAAI,CAACD,SAAS,IAAI,IAAI,CAACA,SAAS,CAACC,OAAO;EACrD;EACA,IAAIC,cAAc,GAAG;IACjB,OAAO,IAAI,CAAC1B,QAAQ,KAAK,CAAC,CAAC,IAAI,CAACE,cAAc,IAAI,IAAI,CAACyB,YAAY,CAAC;EACxE;EACA,IAAIA,YAAY,GAAG;IACf,OAAO,IAAI,CAACpB,OAAO,CAACoB,YAAY;EACpC;EACA,IAAIC,YAAY,GAAG;IACf,OAAO,IAAI,CAACrB,OAAO,CAACsB,IAAI;EAC5B;EACA,IAAIC,aAAa,GAAG;IAChB,MAAM;MAAE/C,KAAK;MAAEgD,WAAW;MAAEC;IAAW,CAAC,GAAG,IAAI;IAC/C,IAAIA,UAAU,EAAE;MACZ,OAAOC,MAAM,CAACD,UAAU,CAAC;IAC7B;IACA,OAAOjD,KAAK,GAAGA,KAAK,CAACG,QAAQ,CAAC,IAAI,CAACJ,UAAU,EAAE,IAAI,CAACsB,aAAa,CAAC,GAAG2B,WAAW;EACpF;EACA,IAAIG,uBAAuB,GAAG;IAC1B,IAAI,IAAI,CAACjB,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAClC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACoD,OAAO,CAAC,IAAI,CAAClB,KAAK,CAAC,CAAC,CAAC,CAACmB,GAAG,CAAC,EAAE;MACtE,OAAO,IAAI,CAACnB,KAAK,CAAC,CAAC,CAAC,CAACoB,UAAU;IACnC;IACA,OAAQ,IAAI,CAAC7B,KAAK,IACd,IAAI,CAACzB,KAAK,IACVhD,YAAY,CAAC,IAAI,CAACmF,sBAAsB,EAAE,IAAI,CAACL,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC;EACrE;EACA,IAAIiB,WAAW,GAAG;IACd,OAAO,IAAI,CAACR,sBAAsB,GAAG,IAAI,CAACA,sBAAsB,CAACxC,KAAK,GAAG,EAAE;EAC/E;EACA,IAAIgD,WAAW,CAAChD,KAAK,EAAE;IACnB,IAAI,CAAC,IAAI,CAACwC,sBAAsB,EAAE;MAC9B;IACJ;IACA,IAAI,CAACA,sBAAsB,CAACxC,KAAK,GAAGA,KAAK;EAC7C;EACA,IAAIuD,OAAO,GAAG;IACV,OAAO,IAAI,CAACC,WAAW,IAAI,CAAC,IAAI,CAACb,cAAc;EACnD;EACA,IAAIc,YAAY,GAAG;IACf,OAAO,IAAI,CAACR,UAAU,GAAGxE,UAAU,GAAG,IAAI,CAACiD,eAAe;EAC9D;EACA,IAAIuB,UAAU,GAAG;IACb,MAAM;MAAEjD;IAAM,CAAC,GAAG,IAAI;IACtB,OAAQA,KAAK,IAAI,IAAI,CAACkC,KAAK,CAACwB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACN,GAAG,CAACD,OAAO,CAACpD,KAAK,CAAC,CAAC,IAAK,IAAI;EAC9E;EACA,IAAI4D,IAAI,GAAG;IACP,OAAO,IAAI,CAACxC,aAAa,CAACwC,IAAI;EAClC;EACAC,OAAO,GAAG;IACN,IAAI,CAAC,IAAI,CAAC5C,QAAQ,EAAE;MAChB,IAAI,CAACoB,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI;IAC1B;EACJ;EACAyB,iBAAiB,CAACC,MAAM,EAAE;IACtB,OAAO,IAAI,CAACd,UAAU,GAAG,EAAE,GAAGc,MAAM;EACxC;EACA;EACA;AACJ;AACA;AACA;EACIC,aAAa,GAAG;IACZ,IAAI,CAACC,WAAW,EAAE;EACtB;EACAA,WAAW,GAAG;IACV,IAAI,CAAC,IAAI,CAACtB,cAAc,IAAI,CAAC,IAAI,CAACxB,cAAc,EAAE;MAC9C;IACJ;IACA,IAAI,CAACD,OAAO,CACPmB,IAAI,CAAC,IAAInD,qBAAqB,CAAC,IAAI,CAACiC,cAAc,EAAE,IAAI,CAACH,QAAQ,CAAC,EAAE;MACrE4C,IAAI,EAAE,YAAY;MAClBM,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE;QACFC,MAAM,EAAE,IAAI;QACZtC,GAAG,EAAE,IAAI,CAACA,GAAG;QACbC,GAAG,EAAE,IAAI,CAACA,GAAG;QACbC,mBAAmB,EAAE,IAAI,CAACA;MAC9B;IACJ,CAAC,CAAC,CACGJ,IAAI,CAACvC,SAAS,CAAC,IAAI,CAACgF,QAAQ,CAAC,CAAC,CAC9BC,SAAS,CAACtE,KAAK,IAAI;MACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;IACtB,CAAC,CAAC;EACN;EACAK,aAAa,CAACL,KAAK,EAAE;IACjB,IAAI,IAAI,CAACc,OAAO,EAAE;MACd,IAAI,CAACA,OAAO,CAACyD,sBAAsB,CAAC;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;IAC7D;IACA,IAAI,CAACxE,KAAK,EAAE;MACR,IAAI,CAACyE,YAAY,CAAC,IAAI,CAAC;IAC3B;IACA,IAAI,CAACzE,KAAK,GACNA,KAAK,CAACC,MAAM,KAAKxD,kBAAkB,GAC7B,IAAI,GACJC,MAAM,CAACwD,cAAc,CAACF,KAAK,EAAE,IAAI,CAACD,UAAU,CAAC;EAC3D;EACA2E,UAAU,CAAC1E,KAAK,EAAE;IACd,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACqC,IAAI,GAAG,KAAK;EACrB;EACAsC,aAAa,CAAClD,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACAgD,YAAY,CAACpC,IAAI,EAAE;IACf,IAAI,CAACA,IAAI,GAAGA,IAAI;EACpB;EACAuC,SAAS,CAAClC,OAAO,EAAE;IACf,IAAI,CAACmC,aAAa,CAACnC,OAAO,CAAC;EAC/B;EACAoC,gBAAgB,GAAG;IACf,KAAK,CAACA,gBAAgB,EAAE;IACxB,IAAI,CAACzC,IAAI,GAAG,KAAK;EACrB;EACA0C,UAAU,CAAC/E,KAAK,EAAE;IACd,KAAK,CAAC+E,UAAU,CAAC/E,KAAK,CAAC;IACvB,IAAI,CAACgD,WAAW,GAAGhD,KAAK,GAAG,IAAI,CAAC+C,aAAa,GAAG,EAAE;EACtD;EACAiC,wBAAwB,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACzC,OAAOjI,eAAe,CAACgI,QAAQ,EAAEC,QAAQ,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC/B,OAAO,CAACgC,CAAC,CAAC,CAAC;EACtE;AACJ;AACAvE,qBAAqB,CAACP,IAAI;EAAA,iBAAyFO,qBAAqB,EAjL9BpF,EAAE,mBAiL8Cc,SAAS,OAjLzDd,EAAE,mBAiLgGG,iBAAiB,GAjLnHH,EAAE,mBAiL8HI,QAAQ,GAjLxIJ,EAAE,mBAiLmJyB,aAAa,GAjLlKzB,EAAE,mBAiL6KmC,gBAAgB,GAjL/LnC,EAAE,mBAiL0MiD,mBAAmB,MAjL/NjD,EAAE,mBAiL0PoC,kBAAkB,GAjL9QpC,EAAE,mBAiLyRkB,eAAe,GAjL1SlB,EAAE,mBAiLqT0B,kBAAkB,GAjLzU1B,EAAE,mBAiLoVkD,cAAc,GAjLpWlD,EAAE,mBAiL+WmD,0BAA0B,MAjL3YnD,EAAE,mBAiLsaoD,sBAAsB;AAAA,CAA4C;AACplBgC,qBAAqB,CAACwE,IAAI,kBAlLgF5J,EAAE;EAAA,MAkLLoF,qBAAqB;EAAA;EAAA;IAAA;MAlLlBpF,EAAE,aAsLlCqC,8BAA8B;IAAA;IAAA;MAAA;MAtLErC,EAAE,qBAAFA,EAAE;IAAA;EAAA;EAAA;IAAA;MAAFA,EAAE;QAAA,OAkLL,aAAS;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAlLNA,EAAE,oBAkL0R,CAC9X2B,0BAA0B,CAACyD,qBAAqB,CAAC,EACjDxD,YAAY,CAACwD,qBAAqB,CAAC,EACnC/B,4BAA4B,CAACF,0BAA0B,CAAC,CAC3D,GAtLqGnD,EAAE;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAFA,EAAE;MAAFA,EAAE,4CAsLqP;MAtLvPA,EAAE;QAAA,OAsL4N,wBAAoB;MAAA,EAAE;MAtLpPA,EAAE,6GAsL+pC;MAtLjqCA,EAAE;MAAFA,EAAE,2FAAFA,EAAE,wBAsL+rD;MAtLjsDA,EAAE,wFAAFA,EAAE,wBAsLwoF;MAtL1oFA,EAAE,eAsLgqF;IAAA;IAAA;MAAA,YAtLlqFA,EAAE;MAAFA,EAAE,mCAsL2I;MAtL7IA,EAAE,aAsLuT;MAtLzTA,EAAE,sBAAFA,EAAE,gCAsLuT;MAtLzTA,EAAE,aAsLwxD;MAtL1xDA,EAAE,qCAsLwxD;IAAA;EAAA;EAAA,eAA43CgC,EAAE,CAAC6H,0BAA0B,EAAwI7H,EAAE,CAACK,8BAA8B,EAA2LL,EAAE,CAAC8H,eAAe,EAAkD9H,EAAE,CAAC+H,oBAAoB,EAAsP/H,EAAE,CAACgI,gBAAgB,EAA0JjJ,EAAE,CAACkJ,eAAe,EAAsDjI,EAAE,CAACkI,8BAA8B,EAAiDrG,EAAE,CAACsG,yBAAyB,EAA4CnI,EAAE,CAACoI,yBAAyB,EAA0EpI,EAAE,CAACqI,2BAA2B,EAA8ExG,EAAE,CAACyG,oBAAoB,EAAkF9G,EAAE,CAAC+G,2BAA2B,EAA2GvI,EAAE,CAACwI,mBAAmB,EAA6HxG,EAAE,CAACyG,IAAI,EAA0EtG,sBAAsB,EAAwCX,EAAE,CAACkH,oBAAoB,EAAyG3J,EAAE,CAAC4J,0BAA0B,EAAuF3G,EAAE,CAAC4G,SAAS;EAAA;EAAA;AAAA,EAAyD;AACh4K7K,UAAU,CAAC,CACP8B,cAAc,EAAE,CACnB,EAAEuD,qBAAqB,CAACyF,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAClD9K,UAAU,CAAC,CACP8B,cAAc,EAAE,CACnB,EAAEuD,qBAAqB,CAACyF,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAClD9K,UAAU,CAAC,CACP8B,cAAc,EAAE,CACnB,EAAEuD,qBAAqB,CAACyF,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;AAClE9K,UAAU,CAAC,CACP8B,cAAc,EAAE,CACnB,EAAEuD,qBAAqB,CAACyF,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAC5D9K,UAAU,CAAC,CACP8B,cAAc,EAAE,CACnB,EAAEuD,qBAAqB,CAACyF,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACpD9K,UAAU,CAAC,CACP8B,cAAc,EAAE,CACnB,EAAEuD,qBAAqB,CAACyF,SAAS,EAAE,wBAAwB,EAAE,KAAK,CAAC,CAAC;AACrE;EAAA,mDAzM0G7K,EAAE,mBAyMhBoF,qBAAqB,EAAc,CAAC;IACpHL,IAAI,EAAE1E,SAAS;IACf2E,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,gBAAgB;MAC1B6F,WAAW,EAAE,4BAA4B;MACzCC,SAAS,EAAE,CAAC,yBAAyB,CAAC;MACtCC,eAAe,EAAE1K,uBAAuB,CAAC2K,MAAM;MAC/CC,SAAS,EAAE,CACPvJ,0BAA0B,CAACyD,qBAAqB,CAAC,EACjDxD,YAAY,CAACwD,qBAAqB,CAAC,EACnC/B,4BAA4B,CAACF,0BAA0B,CAAC;IAEhE,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE4B,IAAI,EAAElE,EAAE,CAACC,SAAS;MAAEqE,UAAU,EAAE,CAAC;QACjEJ,IAAI,EAAExE;MACV,CAAC,EAAE;QACCwE,IAAI,EAAEvE;MACV,CAAC,EAAE;QACCuE,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAClE,SAAS;MACpB,CAAC;IAAE,CAAC,EAAE;MAAEiE,IAAI,EAAE/E,EAAE,CAACG,iBAAiB;MAAEgF,UAAU,EAAE,CAAC;QAC7CJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC7E,iBAAiB;MAC5B,CAAC;IAAE,CAAC,EAAE;MAAE4E,IAAI,EAAE/E,EAAE,CAACI,QAAQ;MAAE+E,UAAU,EAAE,CAAC;QACpCJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC5E,QAAQ;MACnB,CAAC;IAAE,CAAC,EAAE;MAAE2E,IAAI,EAAEG,SAAS;MAAEC,UAAU,EAAE,CAAC;QAClCJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAACvD,aAAa;MACxB,CAAC;IAAE,CAAC,EAAE;MAAEsD,IAAI,EAAE/C,EAAE,CAACG,gBAAgB;MAAEgD,UAAU,EAAE,CAAC;QAC5CJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC7C,gBAAgB;MAC3B,CAAC;IAAE,CAAC,EAAE;MAAE4C,IAAI,EAAE/E,EAAE,CAACmL,IAAI;MAAEhG,UAAU,EAAE,CAAC;QAChCJ,IAAI,EAAExE;MACV,CAAC,EAAE;QACCwE,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC/B,mBAAmB;MAC9B,CAAC;IAAE,CAAC,EAAE;MAAE8B,IAAI,EAAE/C,EAAE,CAACoJ,yBAAyB;MAAEjG,UAAU,EAAE,CAAC;QACrDJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC5C,kBAAkB;MAC7B,CAAC;IAAE,CAAC,EAAE;MAAE2C,IAAI,EAAEG,SAAS;MAAEC,UAAU,EAAE,CAAC;QAClCJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC9D,eAAe;MAC1B,CAAC;IAAE,CAAC,EAAE;MAAE6D,IAAI,EAAEG,SAAS;MAAEC,UAAU,EAAE,CAAC;QAClCJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAACtD,kBAAkB;MAC7B,CAAC;IAAE,CAAC,EAAE;MAAEqD,IAAI,EAAEb,EAAE,CAACmH,UAAU;MAAElG,UAAU,EAAE,CAAC;QACtCJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC9B,cAAc;MACzB,CAAC;IAAE,CAAC,EAAE;MAAE6B,IAAI,EAAEhE,EAAE,CAACuK,2BAA2B;MAAEnG,UAAU,EAAE,CAAC;QACvDJ,IAAI,EAAExE;MACV,CAAC,EAAE;QACCwE,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC7B,0BAA0B;MACrC,CAAC;IAAE,CAAC,EAAE;MAAE4B,IAAI,EAAEG,SAAS;MAAEC,UAAU,EAAE,CAAC;QAClCJ,IAAI,EAAE7E,MAAM;QACZ8E,IAAI,EAAE,CAAC5B,sBAAsB;MACjC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE4D,SAAS,EAAE,CAAC;MACxCjC,IAAI,EAAEtE,SAAS;MACfuE,IAAI,EAAE,CAAC3C,8BAA8B;IACzC,CAAC,CAAC;IAAEgE,GAAG,EAAE,CAAC;MACNtB,IAAI,EAAErE;IACV,CAAC,CAAC;IAAE4F,GAAG,EAAE,CAAC;MACNvB,IAAI,EAAErE;IACV,CAAC,CAAC;IAAE6F,mBAAmB,EAAE,CAAC;MACtBxB,IAAI,EAAErE;IACV,CAAC,CAAC;IAAE8F,aAAa,EAAE,CAAC;MAChBzB,IAAI,EAAErE;IACV,CAAC,CAAC;IAAE+F,KAAK,EAAE,CAAC;MACR1B,IAAI,EAAErE;IACV,CAAC,CAAC;IAAEgG,sBAAsB,EAAE,CAAC;MACzB3B,IAAI,EAAErE;IACV,CAAC,CAAC;IAAE0H,OAAO,EAAE,CAAC;MACVrD,IAAI,EAAEpE,YAAY;MAClBqE,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMuG,qBAAqB,SAASjJ,wBAAwB,CAAC;EACzD,IAAIiC,KAAK,GAAG;IACR,OAAO,IAAI,CAACF,IAAI,CAACiD,aAAa;EAClC;EACA1C,aAAa,CAACL,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,EAAE;MACR,IAAI,CAACF,IAAI,CAACkD,WAAW,GAAG,EAAE;IAC9B;IACA,IAAI,CAAClD,IAAI,CAACO,aAAa,CAACL,KAAK,CAAC;EAClC;EACAiH,OAAO,CAACC,KAAK,EAAE;IACXA,KAAK,CAACC,SAAS,GAAG,SAAS;EAC/B;AACJ;AACAH,qBAAqB,CAAC1G,IAAI;EAAA;EAAA;IAAA,oFApSgF7E,EAAE,uBAoSOuL,qBAAqB,SAArBA,qBAAqB;EAAA;AAAA,GAAqD;AAC7LA,qBAAqB,CAACzG,IAAI,kBArSgF9E,EAAE;EAAA,MAqSLuL,qBAAqB;EAAA;EAAA,WArSlBvL,EAAE,oBAqSyD,CAACuC,kBAAkB,CAACgJ,qBAAqB,CAAC,CAAC,GArStGvL,EAAE;AAAA,EAqS4I;AACxP;EAAA,mDAtS0GA,EAAE,mBAsShBuL,qBAAqB,EAAc,CAAC;IACpHxG,IAAI,EAAE9E,SAAS;IACf+E,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,gBAAgB;MAC1BiG,SAAS,EAAE,CAAC3I,kBAAkB,CAACgJ,qBAAqB,CAAC;IACzD,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAMI,kBAAkB,CAAC;AAEzBA,kBAAkB,CAAC9G,IAAI;EAAA,iBAAyF8G,kBAAkB;AAAA,CAAkD;AACpLA,kBAAkB,CAACC,IAAI,kBAjTmF5L,EAAE;EAAA,MAiTK2L;AAAkB,EAYX;AACxHA,kBAAkB,CAACE,IAAI,kBA9TmF7L,EAAE;EAAA,UA8TmC,CACnIiE,YAAY,EACZH,cAAc,EACdJ,kBAAkB,EAClBlB,gBAAgB,EAChBV,uBAAuB,EACvBW,iBAAiB,EACjBC,YAAY,EACZC,aAAa,EACbC,uBAAuB,EACvBC,2BAA2B,EAC3BkB,sBAAsB,EACtBhC,YAAY,EACZe,4BAA4B,CAC/B;AAAA,EAAI;AACb;EAAA,mDA7U0G9C,EAAE,mBA6UhB2L,kBAAkB,EAAc,CAAC;IACjH5G,IAAI,EAAEnE,QAAQ;IACdoE,IAAI,EAAE,CAAC;MACC8G,OAAO,EAAE,CACL7H,YAAY,EACZH,cAAc,EACdJ,kBAAkB,EAClBlB,gBAAgB,EAChBV,uBAAuB,EACvBW,iBAAiB,EACjBC,YAAY,EACZC,aAAa,EACbC,uBAAuB,EACvBC,2BAA2B,EAC3BkB,sBAAsB,EACtBhC,YAAY,EACZe,4BAA4B,CAC/B;MACDiJ,YAAY,EAAE,CAAC3G,qBAAqB,EAAEmG,qBAAqB,EAAEpH,sBAAsB,CAAC;MACpF6H,OAAO,EAAE,CAAC5G,qBAAqB,EAAEmG,qBAAqB,EAAExI,qBAAqB;IACjF,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASqC,qBAAqB,EAAEmG,qBAAqB,EAAEI,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}