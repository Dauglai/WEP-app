{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, SkipSelf, Optional, SecurityContext, ElementRef, Component, ChangeDetectionStrategy, Inject, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WINDOW } from '@ng-web-apis/common';\nimport * as i1 from '@taiga-ui/cdk';\nimport { tuiSvgLinearGradientProcessor, tuiIsString, tuiAssert, tuiGetDocumentOrShadowRoot, TuiStaticRequestService, tuiRequiredSetter, tuiPure, TuiLetModule } from '@taiga-ui/cdk';\nimport { TUI_CACHE_BUSTING_PAYLOAD, TUI_ICON_ERROR } from '@taiga-ui/core/constants';\nimport * as i3 from '@taiga-ui/core/services';\nimport { TuiSvgService } from '@taiga-ui/core/services';\nimport { TUI_ICONS_PATH, TUI_SVG_SRC_PROCESSOR, TUI_SVG_CONTENT_PROCESSOR, TUI_SANITIZER } from '@taiga-ui/core/tokens';\nimport { tuiIsPresumedHTMLString } from '@taiga-ui/core/utils/miscellaneous';\nimport { identity, ReplaySubject, of } from 'rxjs';\nimport { switchMap, startWith, catchError, map } from 'rxjs/operators';\nimport { tuiIconsPathFactory } from '@taiga-ui/core/utils';\nfunction TuiSvgComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 3);\n  }\n  if (rf & 2) {\n    const innerHTML_r1 = i0.ɵɵnextContext().tuiLet;\n    i0.ɵɵproperty(\"innerHTML\", innerHTML_r1, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction TuiSvgComponent_ng_container_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 4);\n    i0.ɵɵlistener(\"error\", function TuiSvgComponent_ng_container_0_ng_template_2_Template__svg_svg_error_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onError());\n    });\n    i0.ɵɵelement(1, \"use\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r4.use, null, \"xlink\");\n  }\n}\nfunction TuiSvgComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiSvgComponent_ng_container_0_div_1_Template, 1, 1, \"div\", 1);\n    i0.ɵɵtemplate(2, TuiSvgComponent_ng_container_0_ng_template_2_Template, 2, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(3);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isInnerHTML)(\"ngIfElse\", _r3);\n  }\n}\nconst TUI_DEPRECATED_ICONS = {\n  tuiIconAttach: `tuiIconPaperclip`,\n  tuiIconAttention: `tuiIconAlertCircle`,\n  tuiIconBackCircle: `tuiIconArrowLeftCircle`,\n  tuiIconCall: `tuiIconPhone`,\n  tuiIconCallIn: `tuiIconPhoneIncoming`,\n  tuiIconCallOut: `tuiIconPhoneOutgoing`,\n  tuiIconCallTransfer: `tuiIconPhoneForwarded`,\n  tuiIconCancel: `tuiIconXCircle`,\n  tuiIconCancelCircle: `tuiIconSlash`,\n  tuiIconCard: `tuiIconCreditCard`,\n  tuiIconCards: `tuiIconCreditCard`,\n  tuiIconChartBar: `tuiIconBarChart`,\n  tuiIconChart: `tuiIconBarChart`,\n  tuiIconCheckList: `tuiIconClipboard`,\n  tuiIconCloseCircle: `tuiIconXCircle`,\n  tuiIconCollapse: `tuiIconMinimize`,\n  tuiIconComment: `tuiIconMessageSquare`,\n  tuiIconCommentFw: `tuiIconMessageForward`,\n  tuiIconCompany: `tuiIconBriefcase`,\n  tuiIconDefaultDoc: `tuiIconFile`,\n  tuiIconDesktop: `tuiIconMonitor`,\n  tuiIconDesktopOff: `tuiIconMonitorOff`,\n  tuiIconDislike: `tuiIconThumbsDown`,\n  tuiIconDone: `tuiIconCheckCircle`,\n  tuiIconDraft: `tuiIconEdit2`,\n  tuiIconEyeOpen: `tuiIconEye`,\n  tuiIconEyeClosed: `tuiIconEyeOff`,\n  tuiIconExpand: `tuiIconMaximize`,\n  tuiIconExternal: `tuiIconExternalLink`,\n  tuiIconFrame: `tuiIconLayout`,\n  tuiIconGeo: `tuiIconMapPin`,\n  tuiIconHeartFilled: `tuiIconHeart`,\n  tuiIconHide: `tuiIconEyeOff`,\n  tuiIconImg: `tuiIconImage`,\n  tuiIconInfoCircle: `tuiIconInfo`,\n  tuiIconLike: `tuiIconThumbsUp`,\n  tuiIconLockOpen: `tuiIconUnlock`,\n  tuiIconMobile: `tuiIconSmartphone`,\n  tuiIconMoreHor: `tuiIconMoreHorizontal`,\n  tuiIconMoreVer: `tuiIconMoreVertical`,\n  tuiIconMoreVert: `tuiIconMoreVertical`,\n  tuiIconPicture: `tuiIconImage`,\n  tuiIconPin: `tuiIconMapPin`,\n  tuiIconPrint: `tuiIconPrinter`,\n  tuiIconRefresh: `tuiIconRefreshCw`,\n  tuiIconRemove: `tuiIconX`,\n  tuiIconShow: `tuiIconEye`,\n  tuiIconSound: `tuiIconVolume`,\n  tuiIconSoundOff: `tuiIconVolumeX`,\n  tuiIconStarFilled: `tuiIconStar`,\n  tuiIconStop: `tuiIconSquare`,\n  tuiIconStructure: `tuiIconGrid`,\n  tuiIconTime: `tuiIconClock`,\n  tuiIconTooltip: `tuiIconHelpCircle`,\n  tuiIconViewList: `tuiIconList`,\n  tuiIconWifiOn: `tuiIconWifi`\n};\nconst TUI_SVG_DEFAULT_OPTIONS = {\n  path: tuiIconsPathFactory(`assets/taiga-ui/icons`),\n  srcProcessor: identity,\n  contentProcessor: tuiSvgLinearGradientProcessor,\n  deprecated: src => {\n    const oldIcon = src.replace(`Large`, ``).replace(`Outline`, ``);\n    const newIcon = TUI_DEPRECATED_ICONS[oldIcon];\n    return newIcon ? `${oldIcon}/(Large|Outline) is deprecated, use ${newIcon}/(Large|Outline) instead` : ``;\n  }\n};\n/**\n * SVG component options\n */\nconst TUI_SVG_OPTIONS = new InjectionToken(`[TUI_SVG_OPTIONS]`, {\n  factory: () => ({\n    path: inject(TUI_ICONS_PATH),\n    deprecated: TUI_SVG_DEFAULT_OPTIONS.deprecated,\n    srcProcessor: inject(TUI_SVG_SRC_PROCESSOR),\n    contentProcessor: inject(TUI_SVG_CONTENT_PROCESSOR)\n  })\n});\nconst tuiSvgOptionsProvider = options => ({\n  provide: TUI_SVG_OPTIONS,\n  deps: [[new SkipSelf(), new Optional(), TUI_SVG_OPTIONS]],\n  useFactory: fallback => Object.assign(Object.assign(Object.assign({}, fallback || TUI_SVG_DEFAULT_OPTIONS), options), {\n    path: tuiIsString(options.path) ? tuiIconsPathFactory(options.path) : options.path || (fallback === null || fallback === void 0 ? void 0 : fallback.path) || TUI_SVG_DEFAULT_OPTIONS.path\n  })\n});\nconst UNDEFINED_NAMED_ICON = 'Attempted to use undefined named icon';\nconst MISSING_EXTERNAL_ICON = 'External icon is missing on the given URL';\nconst FAILED_EXTERNAL_ICON = 'Failed to load external SVG';\n// TODO: Consider moving to CDK along with SvgService and SvgDefsHostComponent\nclass TuiSvgComponent {\n  constructor(doc, win, options, tuiSanitizer, svgService, staticRequestService, sanitizer, el) {\n    this.doc = doc;\n    this.win = win;\n    this.options = options;\n    this.tuiSanitizer = tuiSanitizer;\n    this.svgService = svgService;\n    this.staticRequestService = staticRequestService;\n    this.sanitizer = sanitizer;\n    this.el = el;\n    this.src$ = new ReplaySubject(1);\n    this.icon = '';\n    this.innerHTML$ = this.src$.pipe(switchMap(() => {\n      if (tuiIsString(this.icon)) {\n        return this.isExternal ? this.getExternalIcon(this.icon) : of(this.getSafeHtml(this.icon));\n      }\n      return of(this.icon);\n    }), startWith(''));\n  }\n  set src(src) {\n    const deprecated = this.options.deprecated(String(src));\n    ngDevMode && tuiAssert.assert(!deprecated, deprecated);\n    this.icon = this.options.srcProcessor(src);\n    this.src$.next();\n  }\n  get src() {\n    return this.icon;\n  }\n  get use() {\n    if (tuiIsString(this.icon)) {\n      return this.icon.includes('.svg#') ? this.icon : this.resolveName(this.icon, this.options.path);\n    }\n    return '';\n  }\n  get isInnerHTML() {\n    return !tuiIsString(this.icon) || this.isSrc || this.isExternal || this.isName && this.isShadowDOM;\n  }\n  get isShadowDOM() {\n    return tuiGetDocumentOrShadowRoot(this.el.nativeElement) !== this.doc;\n  }\n  get isUse() {\n    return this.use.replace(TUI_CACHE_BUSTING_PAYLOAD, '').includes('.svg#');\n  }\n  get isExternal() {\n    return this.isUrl || this.isCrossDomain;\n  }\n  get isUrl() {\n    return tuiIsString(this.icon) && this.icon.endsWith('.svg');\n  }\n  get isSrc() {\n    return tuiIsString(this.icon) && tuiIsPresumedHTMLString(this.icon);\n  }\n  get isName() {\n    return !this.isUrl && !this.isUse && !this.isSrc;\n  }\n  get isCrossDomain() {\n    const {\n      use,\n      isUse,\n      win\n    } = this;\n    return isUse && use.startsWith('http') && !!win.origin && !use.startsWith(win.origin);\n  }\n  onError(message = MISSING_EXTERNAL_ICON) {\n    const {\n      icon\n    } = this;\n    const event = new CustomEvent(TUI_ICON_ERROR, {\n      bubbles: true,\n      detail: {\n        message,\n        icon: icon\n      }\n    });\n    ngDevMode && tuiAssert.assert(false, message, icon);\n    this.el.nativeElement.dispatchEvent(event);\n  }\n  resolveName(name, iconsPath) {\n    return iconsPath(name);\n  }\n  getSafeHtml(src) {\n    return this.isSrc ? this.sanitize(src) : this.process(src);\n  }\n  process(src) {\n    const icon = this.svgService.getOriginal(src);\n    if (this.isName && !icon && !!src) {\n      this.onError(UNDEFINED_NAMED_ICON);\n    }\n    // Empty line for innerHTML when icon is shown through USE tag\n    return !this.isShadowDOM || !this.isName ? '' : this.sanitize(icon || '');\n  }\n  sanitize(src) {\n    src = this.options.contentProcessor(src);\n    return this.tuiSanitizer && tuiIsString(src) ? this.sanitizer.bypassSecurityTrustHtml(this.tuiSanitizer.sanitize(SecurityContext.HTML, src) || '') : src;\n  }\n  getExternalIcon(src) {\n    const url = src.includes('.svg') ? src : this.use;\n    return this.staticRequestService.request(url).pipe(catchError(() => {\n      this.onError(FAILED_EXTERNAL_ICON);\n      return of('');\n    }), map(response => this.sanitize(response.replace('<svg', '<svg focusable=\"false\"'))));\n  }\n}\nTuiSvgComponent.ɵfac = function TuiSvgComponent_Factory(t) {\n  return new (t || TuiSvgComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(WINDOW), i0.ɵɵdirectiveInject(TUI_SVG_OPTIONS), i0.ɵɵdirectiveInject(TUI_SANITIZER, 8), i0.ɵɵdirectiveInject(TuiSvgService), i0.ɵɵdirectiveInject(TuiStaticRequestService), i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(ElementRef));\n};\nTuiSvgComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiSvgComponent,\n  selectors: [[\"tui-svg\"]],\n  inputs: {\n    src: \"src\"\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"tuiLet\"], [\"class\", \"t-src\", 3, \"innerHTML\", 4, \"ngIf\", \"ngIfElse\"], [\"useTemplate\", \"\"], [1, \"t-src\", 3, \"innerHTML\"], [\"version\", \"1.1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"focusable\", \"false\", \"width\", \"100%\", \"height\", \"100%\", 1, \"t-svg\", 3, \"error\"]],\n  template: function TuiSvgComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TuiSvgComponent_ng_container_0_Template, 4, 2, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(1, 1, ctx.innerHTML$));\n    }\n  },\n  dependencies: [i1.TuiLetDirective, i2.NgIf, i2.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{display:inline-flex;vertical-align:middle;flex-shrink:0;align-items:center;justify-content:center;line-height:0;height:1.5rem;width:1.5rem;fill:transparent;stroke:transparent;font-size:1rem}.t-src[_ngcontent-%COMP%]{display:flex;width:100%;height:100%;align-items:center;justify-content:center}.t-svg[_ngcontent-%COMP%]{overflow:visible}\"],\n  changeDetection: 0\n});\n__decorate([tuiRequiredSetter()], TuiSvgComponent.prototype, \"src\", null);\n__decorate([tuiPure], TuiSvgComponent.prototype, \"resolveName\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSvgComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-svg',\n      templateUrl: './svg.template.html',\n      styleUrls: ['./svg.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: Window,\n      decorators: [{\n        type: Inject,\n        args: [WINDOW]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_SVG_OPTIONS]\n      }]\n    }, {\n      type: i0.Sanitizer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TUI_SANITIZER]\n      }]\n    }, {\n      type: i3.TuiSvgService,\n      decorators: [{\n        type: Inject,\n        args: [TuiSvgService]\n      }]\n    }, {\n      type: i1.TuiStaticRequestService,\n      decorators: [{\n        type: Inject,\n        args: [TuiStaticRequestService]\n      }]\n    }, {\n      type: i4.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }];\n  }, {\n    src: [{\n      type: Input\n    }],\n    resolveName: []\n  });\n})();\nclass TuiSvgModule {}\nTuiSvgModule.ɵfac = function TuiSvgModule_Factory(t) {\n  return new (t || TuiSvgModule)();\n};\nTuiSvgModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiSvgModule\n});\nTuiSvgModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TuiLetModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSvgModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiLetModule],\n      declarations: [TuiSvgComponent],\n      exports: [TuiSvgComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_DEPRECATED_ICONS, TUI_SVG_DEFAULT_OPTIONS, TUI_SVG_OPTIONS, TuiSvgComponent, TuiSvgModule, tuiSvgOptionsProvider };","map":{"version":3,"names":["__decorate","i2","DOCUMENT","CommonModule","i0","InjectionToken","inject","SkipSelf","Optional","SecurityContext","ElementRef","Component","ChangeDetectionStrategy","Inject","Input","NgModule","i4","DomSanitizer","WINDOW","i1","tuiSvgLinearGradientProcessor","tuiIsString","tuiAssert","tuiGetDocumentOrShadowRoot","TuiStaticRequestService","tuiRequiredSetter","tuiPure","TuiLetModule","TUI_CACHE_BUSTING_PAYLOAD","TUI_ICON_ERROR","i3","TuiSvgService","TUI_ICONS_PATH","TUI_SVG_SRC_PROCESSOR","TUI_SVG_CONTENT_PROCESSOR","TUI_SANITIZER","tuiIsPresumedHTMLString","identity","ReplaySubject","of","switchMap","startWith","catchError","map","tuiIconsPathFactory","TUI_DEPRECATED_ICONS","tuiIconAttach","tuiIconAttention","tuiIconBackCircle","tuiIconCall","tuiIconCallIn","tuiIconCallOut","tuiIconCallTransfer","tuiIconCancel","tuiIconCancelCircle","tuiIconCard","tuiIconCards","tuiIconChartBar","tuiIconChart","tuiIconCheckList","tuiIconCloseCircle","tuiIconCollapse","tuiIconComment","tuiIconCommentFw","tuiIconCompany","tuiIconDefaultDoc","tuiIconDesktop","tuiIconDesktopOff","tuiIconDislike","tuiIconDone","tuiIconDraft","tuiIconEyeOpen","tuiIconEyeClosed","tuiIconExpand","tuiIconExternal","tuiIconFrame","tuiIconGeo","tuiIconHeartFilled","tuiIconHide","tuiIconImg","tuiIconInfoCircle","tuiIconLike","tuiIconLockOpen","tuiIconMobile","tuiIconMoreHor","tuiIconMoreVer","tuiIconMoreVert","tuiIconPicture","tuiIconPin","tuiIconPrint","tuiIconRefresh","tuiIconRemove","tuiIconShow","tuiIconSound","tuiIconSoundOff","tuiIconStarFilled","tuiIconStop","tuiIconStructure","tuiIconTime","tuiIconTooltip","tuiIconViewList","tuiIconWifiOn","TUI_SVG_DEFAULT_OPTIONS","path","srcProcessor","contentProcessor","deprecated","src","oldIcon","replace","newIcon","TUI_SVG_OPTIONS","factory","tuiSvgOptionsProvider","options","provide","deps","useFactory","fallback","Object","assign","UNDEFINED_NAMED_ICON","MISSING_EXTERNAL_ICON","FAILED_EXTERNAL_ICON","TuiSvgComponent","constructor","doc","win","tuiSanitizer","svgService","staticRequestService","sanitizer","el","src$","icon","innerHTML$","pipe","isExternal","getExternalIcon","getSafeHtml","String","ngDevMode","assert","next","use","includes","resolveName","isInnerHTML","isSrc","isName","isShadowDOM","nativeElement","isUse","isUrl","isCrossDomain","endsWith","startsWith","origin","onError","message","event","CustomEvent","bubbles","detail","dispatchEvent","name","iconsPath","sanitize","process","getOriginal","bypassSecurityTrustHtml","HTML","url","request","response","ɵfac","ɵcmp","TuiLetDirective","NgIf","AsyncPipe","prototype","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","Document","decorators","Window","undefined","Sanitizer","TuiSvgModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-components-svg.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, SkipSelf, Optional, SecurityContext, ElementRef, Component, ChangeDetectionStrategy, Inject, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WINDOW } from '@ng-web-apis/common';\nimport * as i1 from '@taiga-ui/cdk';\nimport { tuiSvgLinearGradientProcessor, tuiIsString, tuiAssert, tuiGetDocumentOrShadowRoot, TuiStaticRequestService, tuiRequiredSetter, tuiPure, TuiLetModule } from '@taiga-ui/cdk';\nimport { TUI_CACHE_BUSTING_PAYLOAD, TUI_ICON_ERROR } from '@taiga-ui/core/constants';\nimport * as i3 from '@taiga-ui/core/services';\nimport { TuiSvgService } from '@taiga-ui/core/services';\nimport { TUI_ICONS_PATH, TUI_SVG_SRC_PROCESSOR, TUI_SVG_CONTENT_PROCESSOR, TUI_SANITIZER } from '@taiga-ui/core/tokens';\nimport { tuiIsPresumedHTMLString } from '@taiga-ui/core/utils/miscellaneous';\nimport { identity, ReplaySubject, of } from 'rxjs';\nimport { switchMap, startWith, catchError, map } from 'rxjs/operators';\nimport { tuiIconsPathFactory } from '@taiga-ui/core/utils';\n\nconst TUI_DEPRECATED_ICONS = {\n    tuiIconAttach: `tuiIconPaperclip`,\n    tuiIconAttention: `tuiIconAlertCircle`,\n    tuiIconBackCircle: `tuiIconArrowLeftCircle`,\n    tuiIconCall: `tuiIconPhone`,\n    tuiIconCallIn: `tuiIconPhoneIncoming`,\n    tuiIconCallOut: `tuiIconPhoneOutgoing`,\n    tuiIconCallTransfer: `tuiIconPhoneForwarded`,\n    tuiIconCancel: `tuiIconXCircle`,\n    tuiIconCancelCircle: `tuiIconSlash`,\n    tuiIconCard: `tuiIconCreditCard`,\n    tuiIconCards: `tuiIconCreditCard`,\n    tuiIconChartBar: `tuiIconBarChart`,\n    tuiIconChart: `tuiIconBarChart`,\n    tuiIconCheckList: `tuiIconClipboard`,\n    tuiIconCloseCircle: `tuiIconXCircle`,\n    tuiIconCollapse: `tuiIconMinimize`,\n    tuiIconComment: `tuiIconMessageSquare`,\n    tuiIconCommentFw: `tuiIconMessageForward`,\n    tuiIconCompany: `tuiIconBriefcase`,\n    tuiIconDefaultDoc: `tuiIconFile`,\n    tuiIconDesktop: `tuiIconMonitor`,\n    tuiIconDesktopOff: `tuiIconMonitorOff`,\n    tuiIconDislike: `tuiIconThumbsDown`,\n    tuiIconDone: `tuiIconCheckCircle`,\n    tuiIconDraft: `tuiIconEdit2`,\n    tuiIconEyeOpen: `tuiIconEye`,\n    tuiIconEyeClosed: `tuiIconEyeOff`,\n    tuiIconExpand: `tuiIconMaximize`,\n    tuiIconExternal: `tuiIconExternalLink`,\n    tuiIconFrame: `tuiIconLayout`,\n    tuiIconGeo: `tuiIconMapPin`,\n    tuiIconHeartFilled: `tuiIconHeart`,\n    tuiIconHide: `tuiIconEyeOff`,\n    tuiIconImg: `tuiIconImage`,\n    tuiIconInfoCircle: `tuiIconInfo`,\n    tuiIconLike: `tuiIconThumbsUp`,\n    tuiIconLockOpen: `tuiIconUnlock`,\n    tuiIconMobile: `tuiIconSmartphone`,\n    tuiIconMoreHor: `tuiIconMoreHorizontal`,\n    tuiIconMoreVer: `tuiIconMoreVertical`,\n    tuiIconMoreVert: `tuiIconMoreVertical`,\n    tuiIconPicture: `tuiIconImage`,\n    tuiIconPin: `tuiIconMapPin`,\n    tuiIconPrint: `tuiIconPrinter`,\n    tuiIconRefresh: `tuiIconRefreshCw`,\n    tuiIconRemove: `tuiIconX`,\n    tuiIconShow: `tuiIconEye`,\n    tuiIconSound: `tuiIconVolume`,\n    tuiIconSoundOff: `tuiIconVolumeX`,\n    tuiIconStarFilled: `tuiIconStar`,\n    tuiIconStop: `tuiIconSquare`,\n    tuiIconStructure: `tuiIconGrid`,\n    tuiIconTime: `tuiIconClock`,\n    tuiIconTooltip: `tuiIconHelpCircle`,\n    tuiIconViewList: `tuiIconList`,\n    tuiIconWifiOn: `tuiIconWifi`,\n};\n\nconst TUI_SVG_DEFAULT_OPTIONS = {\n    path: tuiIconsPathFactory(`assets/taiga-ui/icons`),\n    srcProcessor: identity,\n    contentProcessor: tuiSvgLinearGradientProcessor,\n    deprecated: src => {\n        const oldIcon = src.replace(`Large`, ``).replace(`Outline`, ``);\n        const newIcon = TUI_DEPRECATED_ICONS[oldIcon];\n        return newIcon\n            ? `${oldIcon}/(Large|Outline) is deprecated, use ${newIcon}/(Large|Outline) instead`\n            : ``;\n    },\n};\n/**\n * SVG component options\n */\nconst TUI_SVG_OPTIONS = new InjectionToken(`[TUI_SVG_OPTIONS]`, {\n    factory: () => ({\n        path: inject(TUI_ICONS_PATH),\n        deprecated: TUI_SVG_DEFAULT_OPTIONS.deprecated,\n        srcProcessor: inject(TUI_SVG_SRC_PROCESSOR),\n        contentProcessor: inject(TUI_SVG_CONTENT_PROCESSOR),\n    }),\n});\nconst tuiSvgOptionsProvider = options => ({\n    provide: TUI_SVG_OPTIONS,\n    deps: [[new SkipSelf(), new Optional(), TUI_SVG_OPTIONS]],\n    useFactory: (fallback) => (Object.assign(Object.assign(Object.assign({}, (fallback || TUI_SVG_DEFAULT_OPTIONS)), options), { path: tuiIsString(options.path)\n            ? tuiIconsPathFactory(options.path)\n            : options.path || (fallback === null || fallback === void 0 ? void 0 : fallback.path) || TUI_SVG_DEFAULT_OPTIONS.path })),\n});\n\nconst UNDEFINED_NAMED_ICON = 'Attempted to use undefined named icon';\nconst MISSING_EXTERNAL_ICON = 'External icon is missing on the given URL';\nconst FAILED_EXTERNAL_ICON = 'Failed to load external SVG';\n// TODO: Consider moving to CDK along with SvgService and SvgDefsHostComponent\nclass TuiSvgComponent {\n    constructor(doc, win, options, tuiSanitizer, svgService, staticRequestService, sanitizer, el) {\n        this.doc = doc;\n        this.win = win;\n        this.options = options;\n        this.tuiSanitizer = tuiSanitizer;\n        this.svgService = svgService;\n        this.staticRequestService = staticRequestService;\n        this.sanitizer = sanitizer;\n        this.el = el;\n        this.src$ = new ReplaySubject(1);\n        this.icon = '';\n        this.innerHTML$ = this.src$.pipe(switchMap(() => {\n            if (tuiIsString(this.icon)) {\n                return this.isExternal\n                    ? this.getExternalIcon(this.icon)\n                    : of(this.getSafeHtml(this.icon));\n            }\n            return of(this.icon);\n        }), startWith(''));\n    }\n    set src(src) {\n        const deprecated = this.options.deprecated(String(src));\n        ngDevMode && tuiAssert.assert(!deprecated, deprecated);\n        this.icon = this.options.srcProcessor(src);\n        this.src$.next();\n    }\n    get src() {\n        return this.icon;\n    }\n    get use() {\n        if (tuiIsString(this.icon)) {\n            return this.icon.includes('.svg#')\n                ? this.icon\n                : this.resolveName(this.icon, this.options.path);\n        }\n        return '';\n    }\n    get isInnerHTML() {\n        return (!tuiIsString(this.icon) ||\n            this.isSrc ||\n            this.isExternal ||\n            (this.isName && this.isShadowDOM));\n    }\n    get isShadowDOM() {\n        return tuiGetDocumentOrShadowRoot(this.el.nativeElement) !== this.doc;\n    }\n    get isUse() {\n        return this.use.replace(TUI_CACHE_BUSTING_PAYLOAD, '').includes('.svg#');\n    }\n    get isExternal() {\n        return this.isUrl || this.isCrossDomain;\n    }\n    get isUrl() {\n        return tuiIsString(this.icon) && this.icon.endsWith('.svg');\n    }\n    get isSrc() {\n        return tuiIsString(this.icon) && tuiIsPresumedHTMLString(this.icon);\n    }\n    get isName() {\n        return !this.isUrl && !this.isUse && !this.isSrc;\n    }\n    get isCrossDomain() {\n        const { use, isUse, win } = this;\n        return (isUse && use.startsWith('http') && !!win.origin && !use.startsWith(win.origin));\n    }\n    onError(message = MISSING_EXTERNAL_ICON) {\n        const { icon } = this;\n        const event = new CustomEvent(TUI_ICON_ERROR, {\n            bubbles: true,\n            detail: {\n                message,\n                icon: icon,\n            },\n        });\n        ngDevMode && tuiAssert.assert(false, message, icon);\n        this.el.nativeElement.dispatchEvent(event);\n    }\n    resolveName(name, iconsPath) {\n        return iconsPath(name);\n    }\n    getSafeHtml(src) {\n        return this.isSrc ? this.sanitize(src) : this.process(src);\n    }\n    process(src) {\n        const icon = this.svgService.getOriginal(src);\n        if (this.isName && !icon && !!src) {\n            this.onError(UNDEFINED_NAMED_ICON);\n        }\n        // Empty line for innerHTML when icon is shown through USE tag\n        return !this.isShadowDOM || !this.isName ? '' : this.sanitize(icon || '');\n    }\n    sanitize(src) {\n        src = this.options.contentProcessor(src);\n        return this.tuiSanitizer && tuiIsString(src)\n            ? this.sanitizer.bypassSecurityTrustHtml(this.tuiSanitizer.sanitize(SecurityContext.HTML, src) || '')\n            : src;\n    }\n    getExternalIcon(src) {\n        const url = src.includes('.svg') ? src : this.use;\n        return this.staticRequestService.request(url).pipe(catchError(() => {\n            this.onError(FAILED_EXTERNAL_ICON);\n            return of('');\n        }), map(response => this.sanitize(response.replace('<svg', '<svg focusable=\"false\"'))));\n    }\n}\nTuiSvgComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgComponent, deps: [{ token: DOCUMENT }, { token: WINDOW }, { token: TUI_SVG_OPTIONS }, { token: TUI_SANITIZER, optional: true }, { token: TuiSvgService }, { token: TuiStaticRequestService }, { token: DomSanitizer }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTuiSvgComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiSvgComponent, selector: \"tui-svg\", inputs: { src: \"src\" }, ngImport: i0, template: \"<ng-container *tuiLet=\\\"innerHTML$ | async as innerHTML\\\">\\n    <div\\n        *ngIf=\\\"isInnerHTML; else useTemplate\\\"\\n        class=\\\"t-src\\\"\\n        [innerHTML]=\\\"innerHTML\\\"\\n    ></div>\\n    <ng-template #useTemplate>\\n        <svg\\n            version=\\\"1.1\\\"\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n            focusable=\\\"false\\\"\\n            width=\\\"100%\\\"\\n            height=\\\"100%\\\"\\n            class=\\\"t-svg\\\"\\n            (error)=\\\"onError()\\\"\\n        >\\n            <use [attr.xlink:href]=\\\"use\\\"></use>\\n        </svg>\\n    </ng-template>\\n</ng-container>\\n\", styles: [\":host{display:inline-flex;vertical-align:middle;flex-shrink:0;align-items:center;justify-content:center;line-height:0;height:1.5rem;width:1.5rem;fill:transparent;stroke:transparent;font-size:1rem}.t-src{display:flex;width:100%;height:100%;align-items:center;justify-content:center}.t-svg{overflow:visible}\\n\"], directives: [{ type: i1.TuiLetDirective, selector: \"[tuiLet]\", inputs: [\"tuiLet\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"async\": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiRequiredSetter()\n], TuiSvgComponent.prototype, \"src\", null);\n__decorate([\n    tuiPure\n], TuiSvgComponent.prototype, \"resolveName\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-svg',\n                    templateUrl: './svg.template.html',\n                    styleUrls: ['./svg.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: Window, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_SVG_OPTIONS]\n                }] }, { type: i0.Sanitizer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TUI_SANITIZER]\n                }] }, { type: i3.TuiSvgService, decorators: [{\n                    type: Inject,\n                    args: [TuiSvgService]\n                }] }, { type: i1.TuiStaticRequestService, decorators: [{\n                    type: Inject,\n                    args: [TuiStaticRequestService]\n                }] }, { type: i4.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: i0.ElementRef, decorators: [{\n                    type: Inject,\n                    args: [ElementRef]\n                }] }]; }, propDecorators: { src: [{\n                type: Input\n            }], resolveName: [] } });\n\nclass TuiSvgModule {\n}\nTuiSvgModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiSvgModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgModule, declarations: [TuiSvgComponent], imports: [CommonModule, TuiLetModule], exports: [TuiSvgComponent] });\nTuiSvgModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgModule, imports: [[CommonModule, TuiLetModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, TuiLetModule],\n                    declarations: [TuiSvgComponent],\n                    exports: [TuiSvgComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_DEPRECATED_ICONS, TUI_SVG_DEFAULT_OPTIONS, TUI_SVG_OPTIONS, TuiSvgComponent, TuiSvgModule, tuiSvgOptionsProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}