{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp } from '@taiga-ui/cdk';\nimport * as i3 from '@taiga-ui/core';\nimport { TuiModeDirective, TUI_CHECKBOX_OPTIONS } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/checkbox';\nimport { TuiCheckboxComponent, TuiCheckboxModule } from '@taiga-ui/kit/components/checkbox';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\"];\nclass TuiCheckboxLabeledComponent extends AbstractTuiNullableControl {\n  constructor(control, cdr, modeDirective, options) {\n    super(control, cdr);\n    this.modeDirective = modeDirective;\n    this.options = options;\n    this.size = this.options.size;\n  }\n  get focused() {\n    return tuiIsNativeFocused(this.nativeFocusableElement);\n  }\n  get nativeFocusableElement() {\n    return this.checkbox ? this.checkbox.nativeFocusableElement : null;\n  }\n  get hostMode() {\n    return this.modeDirective ? this.modeDirective.mode : null;\n  }\n  onFocused(focused) {\n    this.updateFocused(focused);\n  }\n  /** @deprecated use 'value' setter */\n  onModelChange(value) {\n    this.value = value;\n  }\n}\nTuiCheckboxLabeledComponent.ɵfac = function TuiCheckboxLabeledComponent_Factory(t) {\n  return new (t || TuiCheckboxLabeledComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TuiModeDirective, 8), i0.ɵɵdirectiveInject(TUI_CHECKBOX_OPTIONS));\n};\nTuiCheckboxLabeledComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiCheckboxLabeledComponent,\n  selectors: [[\"tui-checkbox-labeled\"]],\n  viewQuery: function TuiCheckboxLabeledComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TuiCheckboxComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkbox = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TuiCheckboxLabeledComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"data-size\", ctx.size)(\"data-mode\", ctx.hostMode);\n    }\n  },\n  inputs: {\n    size: \"size\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiCheckboxLabeledComponent), tuiAsControl(TuiCheckboxLabeledComponent)]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 12,\n  consts: [[1, \"t-wrapper\"], [3, \"disabled\", \"readOnly\", \"focusable\", \"nativeId\", \"pseudoInvalid\", \"pseudoFocus\", \"pseudoHover\", \"pseudoActive\", \"size\", \"ngModel\", \"ngModelChange\", \"focusedChange\"], [1, \"t-content\"]],\n  template: function TuiCheckboxLabeledComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"label\", 0)(1, \"tui-checkbox\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TuiCheckboxLabeledComponent_Template_tui_checkbox_ngModelChange_1_listener($event) {\n        return ctx.value = $event;\n      })(\"focusedChange\", function TuiCheckboxLabeledComponent_Template_tui_checkbox_focusedChange_1_listener($event) {\n        return ctx.onFocused($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵprojection(3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"readOnly\", ctx.readOnly)(\"focusable\", ctx.focusable)(\"nativeId\", ctx.nativeId)(\"pseudoInvalid\", ctx.computedInvalid)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoActive\", ctx.pseudoActive)(\"size\", ctx.size)(\"ngModel\", ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"t-content_disabled\", ctx.computedDisabled);\n    }\n  },\n  dependencies: [i1.TuiCheckboxComponent, i2.NgControlStatus, i2.NgModel],\n  styles: [\"[_nghost-%COMP%]{position:relative;display:block;line-height:0}._disabled[_nghost-%COMP%], ._readonly[_nghost-%COMP%]{pointer-events:none}.t-wrapper[_ngcontent-%COMP%]{display:inline-flex;max-width:100%;cursor:pointer}._disabled[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{cursor:default}[data-mode=onDark][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{color:var(--tui-text-01-night)}.t-content[_ngcontent-%COMP%]{font:var(--tui-font-text-s);line-height:1rem;word-wrap:break-word;min-width:0}.t-content_disabled[_ngcontent-%COMP%]{opacity:var(--tui-disabled-opacity)}[data-size=m][_nghost-%COMP%]   .t-content[_ngcontent-%COMP%]{margin-left:.5rem}[data-size=l][_nghost-%COMP%]   .t-content[_ngcontent-%COMP%]{font:var(--tui-font-text-m);margin-left:.75rem}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiCheckboxLabeledComponent.prototype, \"size\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCheckboxLabeledComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-checkbox-labeled',\n      templateUrl: './checkbox-labeled.template.html',\n      styleUrls: ['./checkbox-labeled.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiCheckboxLabeledComponent), tuiAsControl(TuiCheckboxLabeledComponent)]\n    }]\n  }], function () {\n    return [{\n      type: i2.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i3.TuiModeDirective,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TuiModeDirective]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_CHECKBOX_OPTIONS]\n      }]\n    }];\n  }, {\n    checkbox: [{\n      type: ViewChild,\n      args: [TuiCheckboxComponent]\n    }],\n    size: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.data-size']\n    }],\n    hostMode: [{\n      type: HostBinding,\n      args: ['attr.data-mode']\n    }]\n  });\n})();\nclass TuiCheckboxLabeledModule {}\nTuiCheckboxLabeledModule.ɵfac = function TuiCheckboxLabeledModule_Factory(t) {\n  return new (t || TuiCheckboxLabeledModule)();\n};\nTuiCheckboxLabeledModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiCheckboxLabeledModule\n});\nTuiCheckboxLabeledModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, TuiCheckboxModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCheckboxLabeledModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, TuiCheckboxModule],\n      declarations: [TuiCheckboxLabeledComponent],\n      exports: [TuiCheckboxLabeledComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCheckboxLabeledComponent, TuiCheckboxLabeledModule };","map":{"version":3,"names":["__decorate","i0","ChangeDetectorRef","Component","ChangeDetectionStrategy","Optional","Self","Inject","ViewChild","Input","HostBinding","NgModule","i2","NgControl","FormsModule","AbstractTuiNullableControl","tuiIsNativeFocused","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","i3","TuiModeDirective","TUI_CHECKBOX_OPTIONS","i1","TuiCheckboxComponent","TuiCheckboxModule","CommonModule","TuiCheckboxLabeledComponent","constructor","control","cdr","modeDirective","options","size","focused","nativeFocusableElement","checkbox","hostMode","mode","onFocused","updateFocused","onModelChange","value","ɵfac","ɵcmp","NgControlStatus","NgModel","prototype","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","decorators","undefined","TuiCheckboxLabeledModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-checkbox-labeled.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp } from '@taiga-ui/cdk';\nimport * as i3 from '@taiga-ui/core';\nimport { TuiModeDirective, TUI_CHECKBOX_OPTIONS } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/checkbox';\nimport { TuiCheckboxComponent, TuiCheckboxModule } from '@taiga-ui/kit/components/checkbox';\nimport { CommonModule } from '@angular/common';\n\nclass TuiCheckboxLabeledComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, modeDirective, options) {\n        super(control, cdr);\n        this.modeDirective = modeDirective;\n        this.options = options;\n        this.size = this.options.size;\n    }\n    get focused() {\n        return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get nativeFocusableElement() {\n        return this.checkbox ? this.checkbox.nativeFocusableElement : null;\n    }\n    get hostMode() {\n        return this.modeDirective ? this.modeDirective.mode : null;\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n    }\n    /** @deprecated use 'value' setter */\n    onModelChange(value) {\n        this.value = value;\n    }\n}\nTuiCheckboxLabeledComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxLabeledComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TuiModeDirective, optional: true }, { token: TUI_CHECKBOX_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nTuiCheckboxLabeledComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiCheckboxLabeledComponent, selector: \"tui-checkbox-labeled\", inputs: { size: \"size\" }, host: { properties: { \"attr.data-size\": \"this.size\", \"attr.data-mode\": \"this.hostMode\" } }, providers: [\n        tuiAsFocusableItemAccessor(TuiCheckboxLabeledComponent),\n        tuiAsControl(TuiCheckboxLabeledComponent),\n    ], viewQueries: [{ propertyName: \"checkbox\", first: true, predicate: TuiCheckboxComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<label class=\\\"t-wrapper\\\">\\n    <tui-checkbox\\n        [disabled]=\\\"computedDisabled\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [focusable]=\\\"focusable\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoInvalid]=\\\"computedInvalid\\\"\\n        [pseudoFocus]=\\\"pseudoFocus\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [pseudoActive]=\\\"pseudoActive\\\"\\n        [size]=\\\"size\\\"\\n        [(ngModel)]=\\\"value\\\"\\n        (focusedChange)=\\\"onFocused($event)\\\"\\n    ></tui-checkbox>\\n    <div\\n        class=\\\"t-content\\\"\\n        [class.t-content_disabled]=\\\"computedDisabled\\\"\\n    >\\n        <ng-content></ng-content>\\n    </div>\\n</label>\\n\", styles: [\":host{position:relative;display:block;line-height:0}:host._disabled,:host._readonly{pointer-events:none}.t-wrapper{display:inline-flex;max-width:100%;cursor:pointer}:host._disabled .t-wrapper{cursor:default}:host[data-mode=onDark] .t-wrapper{color:var(--tui-text-01-night)}.t-content{font:var(--tui-font-text-s);line-height:1rem;word-wrap:break-word;min-width:0}.t-content_disabled{opacity:var(--tui-disabled-opacity)}:host[data-size=m] .t-content{margin-left:.5rem}:host[data-size=l] .t-content{font:var(--tui-font-text-m);margin-left:.75rem}\\n\"], components: [{ type: i1.TuiCheckboxComponent, selector: \"tui-checkbox\", inputs: [\"size\"] }], directives: [{ type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiCheckboxLabeledComponent.prototype, \"size\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxLabeledComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-checkbox-labeled',\n                    templateUrl: './checkbox-labeled.template.html',\n                    styleUrls: ['./checkbox-labeled.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiCheckboxLabeledComponent),\n                        tuiAsControl(TuiCheckboxLabeledComponent),\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i2.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i3.TuiModeDirective, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TuiModeDirective]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_CHECKBOX_OPTIONS]\n                }] }]; }, propDecorators: { checkbox: [{\n                type: ViewChild,\n                args: [TuiCheckboxComponent]\n            }], size: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['attr.data-size']\n            }], hostMode: [{\n                type: HostBinding,\n                args: ['attr.data-mode']\n            }] } });\n\nclass TuiCheckboxLabeledModule {\n}\nTuiCheckboxLabeledModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxLabeledModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiCheckboxLabeledModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxLabeledModule, declarations: [TuiCheckboxLabeledComponent], imports: [CommonModule, FormsModule, TuiCheckboxModule], exports: [TuiCheckboxLabeledComponent] });\nTuiCheckboxLabeledModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxLabeledModule, imports: [[CommonModule, FormsModule, TuiCheckboxModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxLabeledModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule, TuiCheckboxModule],\n                    declarations: [TuiCheckboxLabeledComponent],\n                    exports: [TuiCheckboxLabeledComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCheckboxLabeledComponent, TuiCheckboxLabeledModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}