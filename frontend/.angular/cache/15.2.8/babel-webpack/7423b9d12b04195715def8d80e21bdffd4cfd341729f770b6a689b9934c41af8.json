{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Inject, LOCALE_ID, ElementRef, NgZone, Optional, Self, SecurityContext } from '@angular/core';\nimport { WINDOW, ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { TUI_MEDIA, TUI_SANITIZER, TUI_ICONS } from '@taiga-ui/core/tokens';\nimport * as i1 from 'rxjs';\nimport { Observable, fromEvent, merge, of, BehaviorSubject, timer, EMPTY } from 'rxjs';\nimport { map, startWith, shareReplay, share, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i3 from '@taiga-ui/cdk';\nimport { tuiZonefree, tuiZoneOptimized, TuiDestroyService, tuiAssert, TUI_IS_WEBKIT } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/core/abstract';\nimport { TuiPositionAccessor } from '@taiga-ui/core/abstract';\nimport * as i1$1 from '@angular/router';\nimport { RouterLinkActive } from '@angular/router';\nimport * as i1$2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { tuiProcessIcon } from '@taiga-ui/core/utils/dom';\n\n/**\n * Service to provide the current breakpoint based on Taiga UI's media queries\n */\nclass TuiBreakpointService extends Observable {\n  constructor(media, win) {\n    const breakpoints = getBreakpoints(media);\n    const events$ = breakpoints.map(({\n      query\n    }) => fromEvent(win.matchMedia(query), `change`));\n    const media$ = merge(...events$).pipe(map(() => currentBreakpoint(breakpoints, win.innerWidth).name), startWith(currentBreakpoint(breakpoints, win.innerWidth).name), shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    super(subscriber => media$.subscribe(subscriber));\n  }\n}\nTuiBreakpointService.ɵfac = function TuiBreakpointService_Factory(t) {\n  return new (t || TuiBreakpointService)(i0.ɵɵinject(TUI_MEDIA), i0.ɵɵinject(WINDOW));\n};\nTuiBreakpointService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TuiBreakpointService,\n  factory: TuiBreakpointService.ɵfac,\n  providedIn: `root`\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiBreakpointService, [{\n    type: Injectable,\n    args: [{\n      providedIn: `root`\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_MEDIA]\n      }]\n    }, {\n      type: Window,\n      decorators: [{\n        type: Inject,\n        args: [WINDOW]\n      }]\n    }];\n  }, null);\n})();\nfunction getBreakpoints(media) {\n  return Object.entries(media).map(([name, width]) => ({\n    name: name,\n    /**\n     * @note:\n     * min-width query in css is inclusive, but in window.matchMedia it is exclusive\n     * so we need to subtract 1px to get the same result\n     */\n    query: `(max-width: ${width - 1}px)`,\n    width\n  }));\n}\nfunction currentBreakpoint(breakpoints, innerWidth) {\n  var _a;\n  return (_a = breakpoints.find(({\n    width\n  }) => innerWidth < width)) !== null && _a !== void 0 ? _a : breakpoints.slice(-1)[0];\n}\nclass TuiFormatDateService {\n  constructor(locale) {\n    this.locale = locale;\n  }\n  format(timestamp) {\n    return of(new Date(timestamp).toLocaleTimeString(this.locale, {\n      hour: `numeric`,\n      minute: `2-digit`\n    }));\n  }\n}\nTuiFormatDateService.ɵfac = function TuiFormatDateService_Factory(t) {\n  return new (t || TuiFormatDateService)(i0.ɵɵinject(LOCALE_ID));\n};\nTuiFormatDateService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TuiFormatDateService,\n  factory: TuiFormatDateService.ɵfac,\n  providedIn: `root`\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiFormatDateService, [{\n    type: Injectable,\n    args: [{\n      providedIn: `root`\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Service for displaying hints/tooltips\n */\nclass TuiHintService extends BehaviorSubject {\n  constructor() {\n    super([]);\n  }\n  add(directive) {\n    this.next(this.value.concat(directive));\n  }\n  remove(directive) {\n    if (this.value.includes(directive)) {\n      this.next(this.value.filter(hint => hint !== directive));\n    }\n  }\n}\nTuiHintService.ɵfac = function TuiHintService_Factory(t) {\n  return new (t || TuiHintService)();\n};\nTuiHintService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TuiHintService,\n  factory: TuiHintService.ɵfac,\n  providedIn: `root`\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiHintService, [{\n    type: Injectable,\n    args: [{\n      providedIn: `root`\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass TuiNightThemeService extends Observable {\n  constructor(win) {\n    const media = win.matchMedia(`(prefers-color-scheme: dark)`);\n    const media$ = fromEvent(media, `change`).pipe(startWith(null), map(() => media.matches), share());\n    super(subscriber => media$.subscribe(subscriber));\n  }\n}\nTuiNightThemeService.ɵfac = function TuiNightThemeService_Factory(t) {\n  return new (t || TuiNightThemeService)(i0.ɵɵinject(WINDOW));\n};\nTuiNightThemeService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TuiNightThemeService,\n  factory: TuiNightThemeService.ɵfac,\n  providedIn: `root`\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiNightThemeService, [{\n    type: Injectable,\n    args: [{\n      providedIn: `root`\n    }]\n  }], function () {\n    return [{\n      type: Window,\n      decorators: [{\n        type: Inject,\n        args: [WINDOW]\n      }]\n    }];\n  }, null);\n})();\nclass TuiPositionService extends Observable {\n  constructor({\n    nativeElement\n  }, animationFrame, ngZone, accessor) {\n    super(subscriber => animationFrame.pipe(map(() => nativeElement.getBoundingClientRect()), map(rect => accessor.getPosition(rect)), tuiZonefree(ngZone)).subscribe(subscriber));\n  }\n}\nTuiPositionService.ɵfac = function TuiPositionService_Factory(t) {\n  return new (t || TuiPositionService)(i0.ɵɵinject(ElementRef), i0.ɵɵinject(ANIMATION_FRAME), i0.ɵɵinject(NgZone), i0.ɵɵinject(TuiPositionAccessor));\n};\nTuiPositionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TuiPositionService,\n  factory: TuiPositionService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiPositionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: i1.Observable,\n      decorators: [{\n        type: Inject,\n        args: [ANIMATION_FRAME]\n      }]\n    }, {\n      type: i0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: i2.TuiPositionAccessor,\n      decorators: [{\n        type: Inject,\n        args: [TuiPositionAccessor]\n      }]\n    }];\n  }, null);\n})();\n\n// TODO: Remove when Angular is update and `RouterLinkActive` has output\nclass TuiRouterLinkActiveService extends Observable {\n  constructor(routerLinkActive, ngZone, animationFrame$, destroy$) {\n    const stream$ = routerLinkActive ? merge(timer(0),\n    // SSR (animationFrame$ never emits value during SSR)\n    animationFrame$).pipe(map(() => routerLinkActive.isActive), distinctUntilChanged(), tuiZoneOptimized(ngZone), takeUntil(destroy$)) : EMPTY;\n    super(subscriber => stream$.subscribe(subscriber));\n  }\n}\nTuiRouterLinkActiveService.ɵfac = function TuiRouterLinkActiveService_Factory(t) {\n  return new (t || TuiRouterLinkActiveService)(i0.ɵɵinject(RouterLinkActive, 8), i0.ɵɵinject(NgZone), i0.ɵɵinject(ANIMATION_FRAME), i0.ɵɵinject(TuiDestroyService, 2));\n};\nTuiRouterLinkActiveService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TuiRouterLinkActiveService,\n  factory: TuiRouterLinkActiveService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiRouterLinkActiveService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.RouterLinkActive,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RouterLinkActive]\n      }]\n    }, {\n      type: i0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: i1.Observable,\n      decorators: [{\n        type: Inject,\n        args: [ANIMATION_FRAME]\n      }]\n    }, {\n      type: i3.TuiDestroyService,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [TuiDestroyService]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Service for reusing SVGs without inlining each instance\n */\nclass TuiSvgService {\n  constructor(tuiSanitizer, sanitizer, icons) {\n    this.tuiSanitizer = tuiSanitizer;\n    this.sanitizer = sanitizer;\n    this.originals = {};\n    this.items$ = new BehaviorSubject(new Map());\n    this.define(icons);\n  }\n  define(icons) {\n    const {\n      value\n    } = this.items$;\n    Object.keys(icons).forEach(key => {\n      this.defineIcon(key, icons[key], value);\n    });\n    this.items$.next(value);\n  }\n  getOriginal(name) {\n    return this.originals[name] || null;\n  }\n  defineIcon(name, src, map) {\n    if (map.has(name)) {\n      return;\n    }\n    const parsed = this.parseSrc(name, src);\n    if (!parsed) {\n      ngDevMode && tuiAssert.assert(false, `Unable to parse given SVG src`);\n      return;\n    }\n    map.set(name, parsed);\n    this.originals = Object.assign(Object.assign({}, this.originals), {\n      [name]: src\n    });\n  }\n  parseSrc(name, src) {\n    return this.sanitize(tuiProcessIcon(src, name));\n  }\n  sanitize(src) {\n    return this.sanitizer.bypassSecurityTrustHtml((this.tuiSanitizer ? this.tuiSanitizer.sanitize(SecurityContext.HTML, src) : this.sanitizer.sanitize(SecurityContext.HTML, src)) || ``);\n  }\n}\nTuiSvgService.ɵfac = function TuiSvgService_Factory(t) {\n  return new (t || TuiSvgService)(i0.ɵɵinject(TUI_SANITIZER, 8), i0.ɵɵinject(DomSanitizer), i0.ɵɵinject(TUI_ICONS));\n};\nTuiSvgService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TuiSvgService,\n  factory: TuiSvgService.ɵfac,\n  providedIn: `root`\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSvgService, [{\n    type: Injectable,\n    args: [{\n      providedIn: `root`\n    }]\n  }], function () {\n    return [{\n      type: i0.Sanitizer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TUI_SANITIZER]\n      }]\n    }, {\n      type: i1$2.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_ICONS]\n      }]\n    }];\n  }, null);\n})();\nclass TuiVisualViewportService {\n  constructor(win, isWebkit) {\n    this.win = win;\n    this.isWebkit = isWebkit;\n  }\n  // https://bugs.webkit.org/show_bug.cgi?id=207089\n  correct(point) {\n    var _a, _b, _c, _d;\n    return this.isWebkit ? [point[0] + ((_b = (_a = this.win.visualViewport) === null || _a === void 0 ? void 0 : _a.offsetTop) !== null && _b !== void 0 ? _b : 0), point[1] + ((_d = (_c = this.win.visualViewport) === null || _c === void 0 ? void 0 : _c.offsetLeft) !== null && _d !== void 0 ? _d : 0)] : point;\n  }\n}\nTuiVisualViewportService.ɵfac = function TuiVisualViewportService_Factory(t) {\n  return new (t || TuiVisualViewportService)(i0.ɵɵinject(WINDOW), i0.ɵɵinject(TUI_IS_WEBKIT));\n};\nTuiVisualViewportService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TuiVisualViewportService,\n  factory: TuiVisualViewportService.ɵfac,\n  providedIn: `root`\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiVisualViewportService, [{\n    type: Injectable,\n    args: [{\n      providedIn: `root`\n    }]\n  }], function () {\n    return [{\n      type: Window,\n      decorators: [{\n        type: Inject,\n        args: [WINDOW]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_IS_WEBKIT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiBreakpointService, TuiFormatDateService, TuiHintService, TuiNightThemeService, TuiPositionService, TuiRouterLinkActiveService, TuiSvgService, TuiVisualViewportService };","map":{"version":3,"names":["i0","Injectable","Inject","LOCALE_ID","ElementRef","NgZone","Optional","Self","SecurityContext","WINDOW","ANIMATION_FRAME","TUI_MEDIA","TUI_SANITIZER","TUI_ICONS","i1","Observable","fromEvent","merge","of","BehaviorSubject","timer","EMPTY","map","startWith","shareReplay","share","distinctUntilChanged","takeUntil","i3","tuiZonefree","tuiZoneOptimized","TuiDestroyService","tuiAssert","TUI_IS_WEBKIT","i2","TuiPositionAccessor","i1$1","RouterLinkActive","i1$2","DomSanitizer","tuiProcessIcon","TuiBreakpointService","constructor","media","win","breakpoints","getBreakpoints","events$","query","matchMedia","media$","pipe","currentBreakpoint","innerWidth","name","bufferSize","refCount","subscriber","subscribe","ɵfac","ɵprov","type","args","providedIn","undefined","decorators","Window","Object","entries","width","_a","find","slice","TuiFormatDateService","locale","format","timestamp","Date","toLocaleTimeString","hour","minute","TuiHintService","add","directive","next","value","concat","remove","includes","filter","hint","TuiNightThemeService","matches","TuiPositionService","nativeElement","animationFrame","ngZone","accessor","getBoundingClientRect","rect","getPosition","TuiRouterLinkActiveService","routerLinkActive","animationFrame$","destroy$","stream$","isActive","TuiSvgService","tuiSanitizer","sanitizer","icons","originals","items$","Map","define","keys","forEach","key","defineIcon","getOriginal","src","has","parsed","parseSrc","ngDevMode","assert","set","assign","sanitize","bypassSecurityTrustHtml","HTML","Sanitizer","TuiVisualViewportService","isWebkit","correct","point","_b","_c","_d","visualViewport","offsetTop","offsetLeft"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-services.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Inject, LOCALE_ID, ElementRef, NgZone, Optional, Self, SecurityContext } from '@angular/core';\nimport { WINDOW, ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { TUI_MEDIA, TUI_SANITIZER, TUI_ICONS } from '@taiga-ui/core/tokens';\nimport * as i1 from 'rxjs';\nimport { Observable, fromEvent, merge, of, BehaviorSubject, timer, EMPTY } from 'rxjs';\nimport { map, startWith, shareReplay, share, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i3 from '@taiga-ui/cdk';\nimport { tuiZonefree, tuiZoneOptimized, TuiDestroyService, tuiAssert, TUI_IS_WEBKIT } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/core/abstract';\nimport { TuiPositionAccessor } from '@taiga-ui/core/abstract';\nimport * as i1$1 from '@angular/router';\nimport { RouterLinkActive } from '@angular/router';\nimport * as i1$2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { tuiProcessIcon } from '@taiga-ui/core/utils/dom';\n\n/**\n * Service to provide the current breakpoint based on Taiga UI's media queries\n */\nclass TuiBreakpointService extends Observable {\n    constructor(media, win) {\n        const breakpoints = getBreakpoints(media);\n        const events$ = breakpoints.map(({ query }) => fromEvent(win.matchMedia(query), `change`));\n        const media$ = merge(...events$).pipe(map(() => currentBreakpoint(breakpoints, win.innerWidth).name), startWith(currentBreakpoint(breakpoints, win.innerWidth).name), shareReplay({ bufferSize: 1, refCount: true }));\n        super(subscriber => media$.subscribe(subscriber));\n    }\n}\nTuiBreakpointService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreakpointService, deps: [{ token: TUI_MEDIA }, { token: WINDOW }], target: i0.ɵɵFactoryTarget.Injectable });\nTuiBreakpointService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreakpointService, providedIn: `root` });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreakpointService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: `root`,\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_MEDIA]\n                }] }, { type: Window, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }]; } });\nfunction getBreakpoints(media) {\n    return Object.entries(media).map(([name, width]) => ({\n        name: name,\n        /**\n         * @note:\n         * min-width query in css is inclusive, but in window.matchMedia it is exclusive\n         * so we need to subtract 1px to get the same result\n         */\n        query: `(max-width: ${width - 1}px)`,\n        width,\n    }));\n}\nfunction currentBreakpoint(breakpoints, innerWidth) {\n    var _a;\n    return (_a = breakpoints.find(({ width }) => innerWidth < width)) !== null && _a !== void 0 ? _a : breakpoints.slice(-1)[0];\n}\n\nclass TuiFormatDateService {\n    constructor(locale) {\n        this.locale = locale;\n    }\n    format(timestamp) {\n        return of(new Date(timestamp).toLocaleTimeString(this.locale, {\n            hour: `numeric`,\n            minute: `2-digit`,\n        }));\n    }\n}\nTuiFormatDateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFormatDateService, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nTuiFormatDateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFormatDateService, providedIn: `root` });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFormatDateService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: `root`,\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }]; } });\n\n/**\n * Service for displaying hints/tooltips\n */\nclass TuiHintService extends BehaviorSubject {\n    constructor() {\n        super([]);\n    }\n    add(directive) {\n        this.next(this.value.concat(directive));\n    }\n    remove(directive) {\n        if (this.value.includes(directive)) {\n            this.next(this.value.filter(hint => hint !== directive));\n        }\n    }\n}\nTuiHintService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiHintService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTuiHintService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiHintService, providedIn: `root` });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiHintService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: `root`,\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass TuiNightThemeService extends Observable {\n    constructor(win) {\n        const media = win.matchMedia(`(prefers-color-scheme: dark)`);\n        const media$ = fromEvent(media, `change`).pipe(startWith(null), map(() => media.matches), share());\n        super(subscriber => media$.subscribe(subscriber));\n    }\n}\nTuiNightThemeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiNightThemeService, deps: [{ token: WINDOW }], target: i0.ɵɵFactoryTarget.Injectable });\nTuiNightThemeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiNightThemeService, providedIn: `root` });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiNightThemeService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: `root`,\n                }]\n        }], ctorParameters: function () { return [{ type: Window, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }]; } });\n\nclass TuiPositionService extends Observable {\n    constructor({ nativeElement }, animationFrame, ngZone, accessor) {\n        super(subscriber => animationFrame\n            .pipe(map(() => nativeElement.getBoundingClientRect()), map(rect => accessor.getPosition(rect)), tuiZonefree(ngZone))\n            .subscribe(subscriber));\n    }\n}\nTuiPositionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiPositionService, deps: [{ token: ElementRef }, { token: ANIMATION_FRAME }, { token: NgZone }, { token: TuiPositionAccessor }], target: i0.ɵɵFactoryTarget.Injectable });\nTuiPositionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiPositionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiPositionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{\n                    type: Inject,\n                    args: [ElementRef]\n                }] }, { type: i1.Observable, decorators: [{\n                    type: Inject,\n                    args: [ANIMATION_FRAME]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Inject,\n                    args: [NgZone]\n                }] }, { type: i2.TuiPositionAccessor, decorators: [{\n                    type: Inject,\n                    args: [TuiPositionAccessor]\n                }] }]; } });\n\n// TODO: Remove when Angular is update and `RouterLinkActive` has output\nclass TuiRouterLinkActiveService extends Observable {\n    constructor(routerLinkActive, ngZone, animationFrame$, destroy$) {\n        const stream$ = routerLinkActive\n            ? merge(timer(0), // SSR (animationFrame$ never emits value during SSR)\n            animationFrame$).pipe(map(() => routerLinkActive.isActive), distinctUntilChanged(), tuiZoneOptimized(ngZone), takeUntil(destroy$))\n            : EMPTY;\n        super(subscriber => stream$.subscribe(subscriber));\n    }\n}\nTuiRouterLinkActiveService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiRouterLinkActiveService, deps: [{ token: RouterLinkActive, optional: true }, { token: NgZone }, { token: ANIMATION_FRAME }, { token: TuiDestroyService, self: true }], target: i0.ɵɵFactoryTarget.Injectable });\nTuiRouterLinkActiveService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiRouterLinkActiveService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiRouterLinkActiveService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.RouterLinkActive, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RouterLinkActive]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Inject,\n                    args: [NgZone]\n                }] }, { type: i1.Observable, decorators: [{\n                    type: Inject,\n                    args: [ANIMATION_FRAME]\n                }] }, { type: i3.TuiDestroyService, decorators: [{\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [TuiDestroyService]\n                }] }]; } });\n\n/**\n * Service for reusing SVGs without inlining each instance\n */\nclass TuiSvgService {\n    constructor(tuiSanitizer, sanitizer, icons) {\n        this.tuiSanitizer = tuiSanitizer;\n        this.sanitizer = sanitizer;\n        this.originals = {};\n        this.items$ = new BehaviorSubject(new Map());\n        this.define(icons);\n    }\n    define(icons) {\n        const { value } = this.items$;\n        Object.keys(icons).forEach(key => {\n            this.defineIcon(key, icons[key], value);\n        });\n        this.items$.next(value);\n    }\n    getOriginal(name) {\n        return this.originals[name] || null;\n    }\n    defineIcon(name, src, map) {\n        if (map.has(name)) {\n            return;\n        }\n        const parsed = this.parseSrc(name, src);\n        if (!parsed) {\n            ngDevMode && tuiAssert.assert(false, `Unable to parse given SVG src`);\n            return;\n        }\n        map.set(name, parsed);\n        this.originals = Object.assign(Object.assign({}, this.originals), { [name]: src });\n    }\n    parseSrc(name, src) {\n        return this.sanitize(tuiProcessIcon(src, name));\n    }\n    sanitize(src) {\n        return this.sanitizer.bypassSecurityTrustHtml((this.tuiSanitizer\n            ? this.tuiSanitizer.sanitize(SecurityContext.HTML, src)\n            : this.sanitizer.sanitize(SecurityContext.HTML, src)) || ``);\n    }\n}\nTuiSvgService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgService, deps: [{ token: TUI_SANITIZER, optional: true }, { token: DomSanitizer }, { token: TUI_ICONS }], target: i0.ɵɵFactoryTarget.Injectable });\nTuiSvgService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgService, providedIn: `root` });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiSvgService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: `root`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Sanitizer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TUI_SANITIZER]\n                }] }, { type: i1$2.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_ICONS]\n                }] }]; } });\n\nclass TuiVisualViewportService {\n    constructor(win, isWebkit) {\n        this.win = win;\n        this.isWebkit = isWebkit;\n    }\n    // https://bugs.webkit.org/show_bug.cgi?id=207089\n    correct(point) {\n        var _a, _b, _c, _d;\n        return this.isWebkit\n            ? [\n                point[0] + ((_b = (_a = this.win.visualViewport) === null || _a === void 0 ? void 0 : _a.offsetTop) !== null && _b !== void 0 ? _b : 0),\n                point[1] + ((_d = (_c = this.win.visualViewport) === null || _c === void 0 ? void 0 : _c.offsetLeft) !== null && _d !== void 0 ? _d : 0),\n            ]\n            : point;\n    }\n}\nTuiVisualViewportService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiVisualViewportService, deps: [{ token: WINDOW }, { token: TUI_IS_WEBKIT }], target: i0.ɵɵFactoryTarget.Injectable });\nTuiVisualViewportService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiVisualViewportService, providedIn: `root` });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiVisualViewportService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: `root`,\n                }]\n        }], ctorParameters: function () { return [{ type: Window, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_IS_WEBKIT]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiBreakpointService, TuiFormatDateService, TuiHintService, TuiNightThemeService, TuiPositionService, TuiRouterLinkActiveService, TuiSvgService, TuiVisualViewportService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}