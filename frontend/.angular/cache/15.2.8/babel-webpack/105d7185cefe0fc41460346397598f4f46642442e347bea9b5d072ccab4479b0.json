{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Injector, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostListener, Directive, NgModule } from '@angular/core';\nimport * as i7 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i3 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, TuiMonth, changeDateSeparator, tuiNullableSame, DATE_RANGE_FILLER_LENGTH, TuiDayRange, DATE_FILLER_LENGTH, RANGE_SEPARATOR_CHAR, TUI_IS_MOBILE, TUI_DATE_FORMAT, TUI_DATE_SEPARATOR, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiActiveZoneModule, TuiLetModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_DEFAULT_MARKER_HANDLER, TuiDialogService, TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiWrapperModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiHostedDropdownModule, TuiSvgModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { MAX_DAY_RANGE_LENGTH_MAPPER, EMPTY_MASK } from '@taiga-ui/kit/constants';\nimport { TUI_MOBILE_CALENDAR, TUI_DATE_TEXTS, TUI_DATE_RANGE_VALUE_TRANSFORMER, TUI_INPUT_DATE_OPTIONS, tuiDateStreamWithTransformer } from '@taiga-ui/kit/tokens';\nimport { tuiCreateDateRangeMask, tuiCreateAutoCorrectedDateRangePipe } from '@taiga-ui/kit/utils/mask';\nimport * as i5 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i2 from '@taiga-ui/kit/components/calendar-range';\nimport { TuiCalendarRangeModule } from '@taiga-ui/kit/components/calendar-range';\nimport * as i4 from '@taiga-ui/kit/directives';\nimport { TextMaskModule, TuiValueAccessorModule } from '@taiga-ui/kit/directives';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i8 from 'rxjs';\nfunction TuiInputDateRangeComponent_tui_primitive_textfield_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 4);\n    i0.ɵɵlistener(\"valueChange\", function TuiInputDateRangeComponent_tui_primitive_textfield_1_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onValueChange($event));\n    });\n    i0.ɵɵprojection(1);\n    i0.ɵɵprojection(2, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dateFiller_r5 = ctx.tuiLet;\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"tuiTextfieldIcon\", ctx_r0.calendarIcon && _r1)(\"tuiTextfieldFiller\", ctx_r0.getComputedRangeFiller(dateFiller_r5 || \"\"))(\"pseudoFocus\", ctx_r0.innerPseudoFocused)(\"pseudoHover\", ctx_r0.pseudoHover)(\"pseudoActive\", ctx_r0.pseudoActive)(\"invalid\", ctx_r0.computedInvalid)(\"nativeId\", ctx_r0.nativeId)(\"readOnly\", ctx_r0.readOnly)(\"disabled\", ctx_r0.computedDisabled)(\"textMask\", ctx_r0.computedMask)(\"value\", ctx_r0.computedValue);\n  }\n}\nfunction TuiInputDateRangeComponent_ng_template_3_tui_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-svg\", 6);\n    i0.ɵɵlistener(\"click\", function TuiInputDateRangeComponent_ng_template_3_tui_svg_0_Template_tui_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onIconClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const src_r9 = ctx.polymorpheusOutlet;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-icon\", !ctx_r8.computedDisabled);\n    i0.ɵɵproperty(\"src\", src_r9);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction TuiInputDateRangeComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiInputDateRangeComponent_ng_template_3_tui_svg_0_Template, 1, 3, \"tui-svg\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.calendarIcon)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r2.size));\n  }\n}\nfunction TuiInputDateRangeComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-calendar-range\", 7);\n    i0.ɵɵlistener(\"valueChange\", function TuiInputDateRangeComponent_ng_template_5_Template_tui_calendar_range_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onRangeChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"defaultViewedMonth\", ctx_r4.defaultViewedMonth)(\"disabledItemHandler\", ctx_r4.disabledItemHandler)(\"items\", ctx_r4.items)(\"min\", ctx_r4.min)(\"max\", ctx_r4.max)(\"markerHandler\", ctx_r4.markerHandler)(\"minLength\", ctx_r4.minLength)(\"maxLength\", ctx_r4.maxLength)(\"value\", ctx_r4.value);\n  }\n}\nconst _c1 = [\"*\", [[\"input\"]]];\nconst _c2 = [\"*\", \"input\"];\nclass TuiInputDateRangeComponent extends AbstractTuiNullableControl {\n  constructor(control, cdr, injector, isMobile, dialogs, mobileCalendar, textfieldSize, dateFormat, dateSeparator, dateTexts$, valueTransformer, options) {\n    super(control, cdr, valueTransformer);\n    this.injector = injector;\n    this.isMobile = isMobile;\n    this.dialogs = dialogs;\n    this.mobileCalendar = mobileCalendar;\n    this.textfieldSize = textfieldSize;\n    this.dateFormat = dateFormat;\n    this.dateSeparator = dateSeparator;\n    this.dateTexts$ = dateTexts$;\n    this.valueTransformer = valueTransformer;\n    this.options = options;\n    this.textMaskOptions = {\n      mask: tuiCreateDateRangeMask(this.dateFormat, this.dateSeparator),\n      pipe: tuiCreateAutoCorrectedDateRangePipe(this),\n      guide: false\n    };\n    this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n    this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;\n    this.defaultViewedMonth = TuiMonth.currentLocal();\n    this.items = [];\n    this.min = this.options.min;\n    this.max = this.options.max;\n    this.minLength = null;\n    this.maxLength = null;\n    this.open = false;\n    this.maxLengthMapper = MAX_DAY_RANGE_LENGTH_MAPPER;\n    this.dateFiller$ = this.dateTexts$.pipe(map(dateTexts => changeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator)));\n  }\n  get nativeFocusableElement() {\n    return this.textfield ? this.textfield.nativeFocusableElement : null;\n  }\n  get focused() {\n    return !!this.textfield && this.textfield.focused;\n  }\n  get computedMobile() {\n    return this.isMobile && !!this.mobileCalendar;\n  }\n  get calendarIcon() {\n    return this.options.icon;\n  }\n  get canOpen() {\n    return this.interactive && !this.computedMobile;\n  }\n  get computedExampleText() {\n    var _a, _b;\n    return this.items.length ? ((_b = (_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) === null || _b === void 0 ? void 0 : _b.placeholder) || '' : '';\n  }\n  get computedMask() {\n    return this.activePeriod ? EMPTY_MASK : this.textMaskOptions;\n  }\n  get activePeriod() {\n    return this.items.find(item => tuiNullableSame(this.value, item.range, (a, b) => a.from.daySame(b.from.dayLimit(this.min, this.max)) && a.to.daySame(b.to.dayLimit(this.min, this.max)))) || null;\n  }\n  get computedValue() {\n    const {\n      value,\n      nativeValue,\n      activePeriod\n    } = this;\n    if (activePeriod) {\n      return String(activePeriod);\n    }\n    return value ? value.getFormattedDayRange(this.dateFormat, this.dateSeparator) : nativeValue;\n  }\n  get innerPseudoFocused() {\n    if (this.pseudoFocus === false) {\n      return false;\n    }\n    if (this.open || this.computedFocused) {\n      return true;\n    }\n    return null;\n  }\n  get nativeValue() {\n    return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n  }\n  set nativeValue(value) {\n    if (!this.nativeFocusableElement) {\n      return;\n    }\n    this.nativeFocusableElement.value = value;\n  }\n  get size() {\n    return this.textfieldSize.size;\n  }\n  onClick() {\n    if (!this.isMobile) {\n      this.toggle();\n    }\n  }\n  getComputedRangeFiller(dateFiller) {\n    return this.activePeriod ? '' : this.getDateRangeFiller(dateFiller);\n  }\n  onIconClick() {\n    if (!this.computedMobile || !this.mobileCalendar) {\n      return;\n    }\n    this.dialogs.open(new PolymorpheusComponent(this.mobileCalendar, this.injector), {\n      size: 'fullscreen',\n      closeable: false,\n      data: {\n        single: false,\n        min: this.maxLengthMapper(this.min, this.value, this.maxLength, true),\n        max: this.maxLengthMapper(this.max, this.value, this.maxLength, false),\n        disabledItemHandler: this.disabledItemHandler\n      }\n    }).pipe(takeUntil(this.destroy$)).subscribe(value => {\n      this.value = value;\n    });\n  }\n  onOpenChange(open) {\n    this.open = open;\n  }\n  onValueChange(value) {\n    if (this.control) {\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    if (!value) {\n      this.onOpenChange(true);\n    }\n    if (value.length !== DATE_RANGE_FILLER_LENGTH) {\n      this.value = null;\n      return;\n    }\n    const parsedValue = TuiDayRange.normalizeParse(value, this.dateFormat);\n    this.value = !this.minLength && !this.maxLength ? parsedValue : this.clampValue(parsedValue);\n  }\n  onRangeChange(range) {\n    this.toggle();\n    this.focusInput();\n    if (!range) {\n      this.nativeValue = '';\n    }\n    this.value = range;\n  }\n  onItemSelect(item) {\n    this.toggle();\n    this.focusInput();\n    if (typeof item !== 'string') {\n      this.value = item.range.dayLimit(this.min, this.max);\n      return;\n    }\n    if (this.activePeriod === null) {\n      return;\n    }\n    this.value = null;\n    this.nativeValue = '';\n  }\n  onActiveZone(focused) {\n    this.updateFocused(focused);\n    if (!focused && !this.itemSelected && (this.nativeValue.length === DATE_FILLER_LENGTH || this.nativeValue.length === DATE_FILLER_LENGTH + RANGE_SEPARATOR_CHAR.length)) {\n      this.value = TuiDayRange.normalizeParse(this.nativeValue, this.dateFormat);\n    }\n  }\n  writeValue(value) {\n    super.writeValue(value);\n    this.nativeValue = value ? this.computedValue : '';\n  }\n  valueIdenticalComparator(oldValue, newValue) {\n    return tuiNullableSame(oldValue, newValue, (a, b) => a.daySame(b));\n  }\n  get itemSelected() {\n    return this.items.findIndex(item => String(item) === this.nativeValue) !== -1;\n  }\n  toggle() {\n    this.open = !this.open;\n  }\n  focusInput(preventScroll = false) {\n    if (this.nativeFocusableElement) {\n      this.nativeFocusableElement.focus({\n        preventScroll\n      });\n    }\n  }\n  clampValue(value) {\n    const clampedBottom = this.minLength && value.from.append(this.minLength).dayAfter(value.to) ? new TuiDayRange(value.from, value.from.append(this.minLength).append({\n      day: -1\n    })) : value;\n    const availableMax = this.maxLength ? clampedBottom.from.append(this.maxLength).append({\n      day: -1\n    }) : this.max;\n    return clampedBottom.to.dayAfter(availableMax) ? new TuiDayRange(clampedBottom.from, availableMax) : clampedBottom;\n  }\n  getDateRangeFiller(dateFiller) {\n    return `${dateFiller}${RANGE_SEPARATOR_CHAR}${dateFiller}`;\n  }\n}\nTuiInputDateRangeComponent.ɵfac = function TuiInputDateRangeComponent_Factory(t) {\n  return new (t || TuiInputDateRangeComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(Injector), i0.ɵɵdirectiveInject(TUI_IS_MOBILE), i0.ɵɵdirectiveInject(TuiDialogService), i0.ɵɵdirectiveInject(TUI_MOBILE_CALENDAR, 8), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE), i0.ɵɵdirectiveInject(TUI_DATE_FORMAT), i0.ɵɵdirectiveInject(TUI_DATE_SEPARATOR), i0.ɵɵdirectiveInject(TUI_DATE_TEXTS), i0.ɵɵdirectiveInject(TUI_DATE_RANGE_VALUE_TRANSFORMER, 8), i0.ɵɵdirectiveInject(TUI_INPUT_DATE_OPTIONS));\n};\nTuiInputDateRangeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiInputDateRangeComponent,\n  selectors: [[\"tui-input-date-range\"]],\n  viewQuery: function TuiInputDateRangeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n    }\n  },\n  hostBindings: function TuiInputDateRangeComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function TuiInputDateRangeComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    disabledItemHandler: \"disabledItemHandler\",\n    markerHandler: \"markerHandler\",\n    defaultViewedMonth: \"defaultViewedMonth\",\n    items: \"items\",\n    min: \"min\",\n    max: \"max\",\n    minLength: \"minLength\",\n    maxLength: \"maxLength\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputDateRangeComponent), tuiAsControl(TuiInputDateRangeComponent), tuiDateStreamWithTransformer(TUI_DATE_RANGE_VALUE_TRANSFORMER)]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 6,\n  consts: [[1, \"t-hosted\", 3, \"canOpen\", \"content\", \"open\", \"openChange\", \"tuiActiveZoneChange\"], [\"automation-id\", \"tui-input-date-range__textfield\", \"tuiValueAccessor\", \"\", \"class\", \"t-textfield\", 3, \"tuiTextfieldIcon\", \"tuiTextfieldFiller\", \"pseudoFocus\", \"pseudoHover\", \"pseudoActive\", \"invalid\", \"nativeId\", \"readOnly\", \"disabled\", \"textMask\", \"value\", \"valueChange\", 4, \"tuiLet\"], [\"iconContent\", \"\"], [\"dropdown\", \"\"], [\"automation-id\", \"tui-input-date-range__textfield\", \"tuiValueAccessor\", \"\", 1, \"t-textfield\", 3, \"tuiTextfieldIcon\", \"tuiTextfieldFiller\", \"pseudoFocus\", \"pseudoHover\", \"pseudoActive\", \"invalid\", \"nativeId\", \"readOnly\", \"disabled\", \"textMask\", \"value\", \"valueChange\"], [\"tuiWrapper\", \"\", \"appearance\", \"icon\", \"automation-id\", \"tui-input-date-range__icon\", 3, \"t-icon\", \"src\", \"click\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"tuiWrapper\", \"\", \"appearance\", \"icon\", \"automation-id\", \"tui-input-date-range__icon\", 3, \"src\", \"click\"], [3, \"defaultViewedMonth\", \"disabledItemHandler\", \"items\", \"min\", \"max\", \"markerHandler\", \"minLength\", \"maxLength\", \"value\", \"valueChange\"]],\n  template: function TuiInputDateRangeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c1);\n      i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 0);\n      i0.ɵɵlistener(\"openChange\", function TuiInputDateRangeComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n        return ctx.onOpenChange($event);\n      })(\"tuiActiveZoneChange\", function TuiInputDateRangeComponent_Template_tui_hosted_dropdown_tuiActiveZoneChange_0_listener($event) {\n        return ctx.onActiveZone($event);\n      });\n      i0.ɵɵtemplate(1, TuiInputDateRangeComponent_tui_primitive_textfield_1_Template, 3, 11, \"tui-primitive-textfield\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵtemplate(3, TuiInputDateRangeComponent_ng_template_3_Template, 1, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(5, TuiInputDateRangeComponent_ng_template_5_Template, 1, 9, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(6);\n      i0.ɵɵproperty(\"canOpen\", ctx.canOpen)(\"content\", _r3)(\"open\", ctx.open && ctx.canOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(2, 4, ctx.dateFiller$));\n    }\n  },\n  dependencies: [i1.TuiHostedDropdownComponent, i1.TuiPrimitiveTextfieldComponent, i1.TuiSvgComponent, i2.TuiCalendarRangeComponent, i3.TuiActiveZoneDirective, i3.TuiLetDirective, i1.TuiPrimitiveTextfieldDirective, i4.TuiValueAccessorDirective, i1.TuiTextfieldIconDirective, i1.TuiTextfieldFillerDirective, i4.MaskedInputDirective, i5.PolymorpheusOutletDirective, i1.TuiWrapperDirective, i6.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}._disabled[_nghost-%COMP%]{pointer-events:none}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}.t-icon[_ngcontent-%COMP%]{pointer-events:auto}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiInputDateRangeComponent.prototype, \"disabledItemHandler\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateRangeComponent.prototype, \"markerHandler\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateRangeComponent.prototype, \"defaultViewedMonth\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateRangeComponent.prototype, \"items\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateRangeComponent.prototype, \"min\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateRangeComponent.prototype, \"max\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateRangeComponent.prototype, \"minLength\", void 0);\n__decorate([tuiDefaultProp()], TuiInputDateRangeComponent.prototype, \"maxLength\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateRangeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-input-date-range',\n      templateUrl: './input-date-range.template.html',\n      styleUrls: ['./input-date-range.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputDateRangeComponent), tuiAsControl(TuiInputDateRangeComponent), tuiDateStreamWithTransformer(TUI_DATE_RANGE_VALUE_TRANSFORMER)]\n    }]\n  }], function () {\n    return [{\n      type: i7.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i0.Injector,\n      decorators: [{\n        type: Inject,\n        args: [Injector]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_IS_MOBILE]\n      }]\n    }, {\n      type: i1.TuiDialogService,\n      decorators: [{\n        type: Inject,\n        args: [TuiDialogService]\n      }]\n    }, {\n      type: i0.Type,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TUI_MOBILE_CALENDAR]\n      }]\n    }, {\n      type: i1.TuiTextfieldSizeDirective,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TEXTFIELD_SIZE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_DATE_FORMAT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_DATE_SEPARATOR]\n      }]\n    }, {\n      type: i8.Observable,\n      decorators: [{\n        type: Inject,\n        args: [TUI_DATE_TEXTS]\n      }]\n    }, {\n      type: i3.AbstractTuiValueTransformer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TUI_DATE_RANGE_VALUE_TRANSFORMER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_INPUT_DATE_OPTIONS]\n      }]\n    }];\n  }, {\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    markerHandler: [{\n      type: Input\n    }],\n    defaultViewedMonth: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\nclass TuiInputDateRangeDirective extends AbstractTuiTextfieldHost {\n  get value() {\n    return this.host.computedValue;\n  }\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n  process(input) {\n    input.inputMode = 'numeric';\n  }\n  ngDoCheck() {\n    if (this.host.nativeFocusableElement) {\n      this.host.nativeFocusableElement.placeholder = this.host.computedExampleText;\n    }\n  }\n}\nTuiInputDateRangeDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiInputDateRangeDirective_BaseFactory;\n  return function TuiInputDateRangeDirective_Factory(t) {\n    return (ɵTuiInputDateRangeDirective_BaseFactory || (ɵTuiInputDateRangeDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputDateRangeDirective)))(t || TuiInputDateRangeDirective);\n  };\n}();\nTuiInputDateRangeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiInputDateRangeDirective,\n  selectors: [[\"tui-input-date-range\"]],\n  features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputDateRangeDirective)]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateRangeDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tui-input-date-range',\n      providers: [tuiAsTextfieldHost(TuiInputDateRangeDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiInputDateRangeModule {}\nTuiInputDateRangeModule.ɵfac = function TuiInputDateRangeModule_Factory(t) {\n  return new (t || TuiInputDateRangeModule)();\n};\nTuiInputDateRangeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiInputDateRangeModule\n});\nTuiInputDateRangeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TextMaskModule, TuiActiveZoneModule, TuiLetModule, PolymorpheusModule, TuiWrapperModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiHostedDropdownModule, TuiSvgModule, TuiCalendarRangeModule, TuiValueAccessorModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateRangeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TextMaskModule, TuiActiveZoneModule, TuiLetModule, PolymorpheusModule, TuiWrapperModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiHostedDropdownModule, TuiSvgModule, TuiCalendarRangeModule, TuiValueAccessorModule],\n      declarations: [TuiInputDateRangeComponent, TuiInputDateRangeDirective],\n      exports: [TuiInputDateRangeComponent, TuiInputDateRangeDirective, TuiTextfieldComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputDateRangeComponent, TuiInputDateRangeDirective, TuiInputDateRangeModule };","map":{"version":3,"names":["__decorate","i0","ChangeDetectorRef","Injector","Component","ChangeDetectionStrategy","Optional","Self","Inject","ViewChild","Input","HostListener","Directive","NgModule","i7","NgControl","i3","AbstractTuiNullableControl","ALWAYS_FALSE_HANDLER","TuiMonth","changeDateSeparator","tuiNullableSame","DATE_RANGE_FILLER_LENGTH","TuiDayRange","DATE_FILLER_LENGTH","RANGE_SEPARATOR_CHAR","TUI_IS_MOBILE","TUI_DATE_FORMAT","TUI_DATE_SEPARATOR","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","TuiActiveZoneModule","TuiLetModule","i1","TUI_DEFAULT_MARKER_HANDLER","TuiDialogService","TUI_TEXTFIELD_SIZE","TuiPrimitiveTextfieldComponent","AbstractTuiTextfieldHost","tuiAsTextfieldHost","TuiWrapperModule","TuiPrimitiveTextfieldModule","TuiTextfieldControllerModule","TuiHostedDropdownModule","TuiSvgModule","TuiTextfieldComponent","MAX_DAY_RANGE_LENGTH_MAPPER","EMPTY_MASK","TUI_MOBILE_CALENDAR","TUI_DATE_TEXTS","TUI_DATE_RANGE_VALUE_TRANSFORMER","TUI_INPUT_DATE_OPTIONS","tuiDateStreamWithTransformer","tuiCreateDateRangeMask","tuiCreateAutoCorrectedDateRangePipe","i5","PolymorpheusComponent","PolymorpheusModule","map","takeUntil","i2","TuiCalendarRangeModule","i4","TextMaskModule","TuiValueAccessorModule","i6","CommonModule","i8","TuiInputDateRangeComponent","constructor","control","cdr","injector","isMobile","dialogs","mobileCalendar","textfieldSize","dateFormat","dateSeparator","dateTexts$","valueTransformer","options","textMaskOptions","mask","pipe","guide","disabledItemHandler","markerHandler","defaultViewedMonth","currentLocal","items","min","max","minLength","maxLength","open","maxLengthMapper","dateFiller$","dateTexts","nativeFocusableElement","textfield","focused","computedMobile","calendarIcon","icon","canOpen","interactive","computedExampleText","_a","_b","length","placeholder","computedMask","activePeriod","find","item","value","range","a","b","from","daySame","dayLimit","to","computedValue","nativeValue","String","getFormattedDayRange","innerPseudoFocused","pseudoFocus","computedFocused","size","onClick","toggle","getComputedRangeFiller","dateFiller","getDateRangeFiller","onIconClick","closeable","data","single","destroy$","subscribe","onOpenChange","onValueChange","updateValueAndValidity","emitEvent","parsedValue","normalizeParse","clampValue","onRangeChange","focusInput","onItemSelect","onActiveZone","updateFocused","itemSelected","writeValue","valueIdenticalComparator","oldValue","newValue","findIndex","preventScroll","focus","clampedBottom","append","dayAfter","day","availableMax","ɵfac","ɵcmp","TuiHostedDropdownComponent","TuiSvgComponent","TuiCalendarRangeComponent","TuiActiveZoneDirective","TuiLetDirective","TuiPrimitiveTextfieldDirective","TuiValueAccessorDirective","TuiTextfieldIconDirective","TuiTextfieldFillerDirective","MaskedInputDirective","PolymorpheusOutletDirective","TuiWrapperDirective","AsyncPipe","prototype","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","decorators","undefined","Type","TuiTextfieldSizeDirective","Observable","AbstractTuiValueTransformer","TuiInputDateRangeDirective","host","process","input","inputMode","ngDoCheck","ɵdir","TuiInputDateRangeModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-input-date-range.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Injector, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostListener, Directive, NgModule } from '@angular/core';\nimport * as i7 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i3 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, TuiMonth, changeDateSeparator, tuiNullableSame, DATE_RANGE_FILLER_LENGTH, TuiDayRange, DATE_FILLER_LENGTH, RANGE_SEPARATOR_CHAR, TUI_IS_MOBILE, TUI_DATE_FORMAT, TUI_DATE_SEPARATOR, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiActiveZoneModule, TuiLetModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_DEFAULT_MARKER_HANDLER, TuiDialogService, TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiWrapperModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiHostedDropdownModule, TuiSvgModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { MAX_DAY_RANGE_LENGTH_MAPPER, EMPTY_MASK } from '@taiga-ui/kit/constants';\nimport { TUI_MOBILE_CALENDAR, TUI_DATE_TEXTS, TUI_DATE_RANGE_VALUE_TRANSFORMER, TUI_INPUT_DATE_OPTIONS, tuiDateStreamWithTransformer } from '@taiga-ui/kit/tokens';\nimport { tuiCreateDateRangeMask, tuiCreateAutoCorrectedDateRangePipe } from '@taiga-ui/kit/utils/mask';\nimport * as i5 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i2 from '@taiga-ui/kit/components/calendar-range';\nimport { TuiCalendarRangeModule } from '@taiga-ui/kit/components/calendar-range';\nimport * as i4 from '@taiga-ui/kit/directives';\nimport { TextMaskModule, TuiValueAccessorModule } from '@taiga-ui/kit/directives';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i8 from 'rxjs';\n\nclass TuiInputDateRangeComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, injector, isMobile, dialogs, mobileCalendar, textfieldSize, dateFormat, dateSeparator, dateTexts$, valueTransformer, options) {\n        super(control, cdr, valueTransformer);\n        this.injector = injector;\n        this.isMobile = isMobile;\n        this.dialogs = dialogs;\n        this.mobileCalendar = mobileCalendar;\n        this.textfieldSize = textfieldSize;\n        this.dateFormat = dateFormat;\n        this.dateSeparator = dateSeparator;\n        this.dateTexts$ = dateTexts$;\n        this.valueTransformer = valueTransformer;\n        this.options = options;\n        this.textMaskOptions = {\n            mask: tuiCreateDateRangeMask(this.dateFormat, this.dateSeparator),\n            pipe: tuiCreateAutoCorrectedDateRangePipe(this),\n            guide: false,\n        };\n        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n        this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;\n        this.defaultViewedMonth = TuiMonth.currentLocal();\n        this.items = [];\n        this.min = this.options.min;\n        this.max = this.options.max;\n        this.minLength = null;\n        this.maxLength = null;\n        this.open = false;\n        this.maxLengthMapper = MAX_DAY_RANGE_LENGTH_MAPPER;\n        this.dateFiller$ = this.dateTexts$.pipe(map(dateTexts => changeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator)));\n    }\n    get nativeFocusableElement() {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n    get focused() {\n        return !!this.textfield && this.textfield.focused;\n    }\n    get computedMobile() {\n        return this.isMobile && !!this.mobileCalendar;\n    }\n    get calendarIcon() {\n        return this.options.icon;\n    }\n    get canOpen() {\n        return this.interactive && !this.computedMobile;\n    }\n    get computedExampleText() {\n        var _a, _b;\n        return this.items.length\n            ? ((_b = (_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) === null || _b === void 0 ? void 0 : _b.placeholder) || ''\n            : '';\n    }\n    get computedMask() {\n        return this.activePeriod ? EMPTY_MASK : this.textMaskOptions;\n    }\n    get activePeriod() {\n        return (this.items.find(item => tuiNullableSame(this.value, item.range, (a, b) => a.from.daySame(b.from.dayLimit(this.min, this.max)) &&\n            a.to.daySame(b.to.dayLimit(this.min, this.max)))) || null);\n    }\n    get computedValue() {\n        const { value, nativeValue, activePeriod } = this;\n        if (activePeriod) {\n            return String(activePeriod);\n        }\n        return value\n            ? value.getFormattedDayRange(this.dateFormat, this.dateSeparator)\n            : nativeValue;\n    }\n    get innerPseudoFocused() {\n        if (this.pseudoFocus === false) {\n            return false;\n        }\n        if (this.open || this.computedFocused) {\n            return true;\n        }\n        return null;\n    }\n    get nativeValue() {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n    set nativeValue(value) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n        this.nativeFocusableElement.value = value;\n    }\n    get size() {\n        return this.textfieldSize.size;\n    }\n    onClick() {\n        if (!this.isMobile) {\n            this.toggle();\n        }\n    }\n    getComputedRangeFiller(dateFiller) {\n        return this.activePeriod ? '' : this.getDateRangeFiller(dateFiller);\n    }\n    onIconClick() {\n        if (!this.computedMobile || !this.mobileCalendar) {\n            return;\n        }\n        this.dialogs\n            .open(new PolymorpheusComponent(this.mobileCalendar, this.injector), {\n            size: 'fullscreen',\n            closeable: false,\n            data: {\n                single: false,\n                min: this.maxLengthMapper(this.min, this.value, this.maxLength, true),\n                max: this.maxLengthMapper(this.max, this.value, this.maxLength, false),\n                disabledItemHandler: this.disabledItemHandler,\n            },\n        })\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => {\n            this.value = value;\n        });\n    }\n    onOpenChange(open) {\n        this.open = open;\n    }\n    onValueChange(value) {\n        if (this.control) {\n            this.control.updateValueAndValidity({ emitEvent: false });\n        }\n        if (!value) {\n            this.onOpenChange(true);\n        }\n        if (value.length !== DATE_RANGE_FILLER_LENGTH) {\n            this.value = null;\n            return;\n        }\n        const parsedValue = TuiDayRange.normalizeParse(value, this.dateFormat);\n        this.value =\n            !this.minLength && !this.maxLength\n                ? parsedValue\n                : this.clampValue(parsedValue);\n    }\n    onRangeChange(range) {\n        this.toggle();\n        this.focusInput();\n        if (!range) {\n            this.nativeValue = '';\n        }\n        this.value = range;\n    }\n    onItemSelect(item) {\n        this.toggle();\n        this.focusInput();\n        if (typeof item !== 'string') {\n            this.value = item.range.dayLimit(this.min, this.max);\n            return;\n        }\n        if (this.activePeriod === null) {\n            return;\n        }\n        this.value = null;\n        this.nativeValue = '';\n    }\n    onActiveZone(focused) {\n        this.updateFocused(focused);\n        if (!focused &&\n            !this.itemSelected &&\n            (this.nativeValue.length === DATE_FILLER_LENGTH ||\n                this.nativeValue.length ===\n                    DATE_FILLER_LENGTH + RANGE_SEPARATOR_CHAR.length)) {\n            this.value = TuiDayRange.normalizeParse(this.nativeValue, this.dateFormat);\n        }\n    }\n    writeValue(value) {\n        super.writeValue(value);\n        this.nativeValue = value ? this.computedValue : '';\n    }\n    valueIdenticalComparator(oldValue, newValue) {\n        return tuiNullableSame(oldValue, newValue, (a, b) => a.daySame(b));\n    }\n    get itemSelected() {\n        return this.items.findIndex(item => String(item) === this.nativeValue) !== -1;\n    }\n    toggle() {\n        this.open = !this.open;\n    }\n    focusInput(preventScroll = false) {\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.focus({ preventScroll });\n        }\n    }\n    clampValue(value) {\n        const clampedBottom = this.minLength && value.from.append(this.minLength).dayAfter(value.to)\n            ? new TuiDayRange(value.from, value.from.append(this.minLength).append({ day: -1 }))\n            : value;\n        const availableMax = this.maxLength\n            ? clampedBottom.from.append(this.maxLength).append({ day: -1 })\n            : this.max;\n        return clampedBottom.to.dayAfter(availableMax)\n            ? new TuiDayRange(clampedBottom.from, availableMax)\n            : clampedBottom;\n    }\n    getDateRangeFiller(dateFiller) {\n        return `${dateFiller}${RANGE_SEPARATOR_CHAR}${dateFiller}`;\n    }\n}\nTuiInputDateRangeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateRangeComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: Injector }, { token: TUI_IS_MOBILE }, { token: TuiDialogService }, { token: TUI_MOBILE_CALENDAR, optional: true }, { token: TUI_TEXTFIELD_SIZE }, { token: TUI_DATE_FORMAT }, { token: TUI_DATE_SEPARATOR }, { token: TUI_DATE_TEXTS }, { token: TUI_DATE_RANGE_VALUE_TRANSFORMER, optional: true }, { token: TUI_INPUT_DATE_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nTuiInputDateRangeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputDateRangeComponent, selector: \"tui-input-date-range\", inputs: { disabledItemHandler: \"disabledItemHandler\", markerHandler: \"markerHandler\", defaultViewedMonth: \"defaultViewedMonth\", items: \"items\", min: \"min\", max: \"max\", minLength: \"minLength\", maxLength: \"maxLength\" }, host: { listeners: { \"click\": \"onClick()\" } }, providers: [\n        tuiAsFocusableItemAccessor(TuiInputDateRangeComponent),\n        tuiAsControl(TuiInputDateRangeComponent),\n        tuiDateStreamWithTransformer(TUI_DATE_RANGE_VALUE_TRANSFORMER),\n    ], viewQueries: [{ propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tui-hosted-dropdown\\n    class=\\\"t-hosted\\\"\\n    [canOpen]=\\\"canOpen\\\"\\n    [content]=\\\"dropdown\\\"\\n    [open]=\\\"open && canOpen\\\"\\n    (openChange)=\\\"onOpenChange($event)\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        *tuiLet=\\\"dateFiller$ | async as dateFiller\\\"\\n        automation-id=\\\"tui-input-date-range__textfield\\\"\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon && iconContent\\\"\\n        [tuiTextfieldFiller]=\\\"getComputedRangeFiller(dateFiller || '')\\\"\\n        [pseudoFocus]=\\\"innerPseudoFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [pseudoActive]=\\\"pseudoActive\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [textMask]=\\\"computedMask\\\"\\n        [value]=\\\"computedValue\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content></ng-content>\\n        <ng-content\\n            select=\\\"input\\\"\\n            ngProjectAs=\\\"input\\\"\\n        ></ng-content>\\n    </tui-primitive-textfield>\\n\\n    <ng-template #iconContent>\\n        <tui-svg\\n            *polymorpheusOutlet=\\\"calendarIcon as src; context: {$implicit: size}\\\"\\n            tuiWrapper\\n            appearance=\\\"icon\\\"\\n            automation-id=\\\"tui-input-date-range__icon\\\"\\n            [class.t-icon]=\\\"!computedDisabled\\\"\\n            [src]=\\\"src\\\"\\n            (click)=\\\"onIconClick()\\\"\\n        ></tui-svg>\\n    </ng-template>\\n\\n    <ng-template #dropdown>\\n        <tui-calendar-range\\n            [defaultViewedMonth]=\\\"defaultViewedMonth\\\"\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [items]=\\\"items\\\"\\n            [min]=\\\"min\\\"\\n            [max]=\\\"max\\\"\\n            [markerHandler]=\\\"markerHandler\\\"\\n            [minLength]=\\\"minLength\\\"\\n            [maxLength]=\\\"maxLength\\\"\\n            [value]=\\\"value\\\"\\n            (valueChange)=\\\"onRangeChange($event)\\\"\\n        ></tui-calendar-range>\\n    </ng-template>\\n</tui-hosted-dropdown>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:left}:host._disabled{pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}.t-icon{pointer-events:auto}\\n\"], components: [{ type: i1.TuiHostedDropdownComponent, selector: \"tui-hosted-dropdown\", inputs: [\"content\", \"sided\", \"canOpen\", \"open\"], outputs: [\"openChange\", \"focusedChange\"] }, { type: i1.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"filler\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"prefix\", \"postfix\", \"value\"], outputs: [\"valueChange\"] }, { type: i1.TuiSvgComponent, selector: \"tui-svg\", inputs: [\"src\"] }, { type: i2.TuiCalendarRangeComponent, selector: \"tui-calendar-range\", inputs: [\"defaultViewedMonth\", \"disabledItemHandler\", \"markerHandler\", \"items\", \"min\", \"max\", \"minLength\", \"maxLength\", \"value\"], outputs: [\"valueChange\"] }], directives: [{ type: i3.TuiActiveZoneDirective, selector: \"[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)\", inputs: [\"tuiActiveZoneParent\"], outputs: [\"tuiActiveZoneChange\"], exportAs: [\"tuiActiveZone\"] }, { type: i3.TuiLetDirective, selector: \"[tuiLet]\", inputs: [\"tuiLet\"] }, { type: i1.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { type: i4.TuiValueAccessorDirective, selector: \"[tuiValueAccessor]\" }, { type: i1.TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: [\"tuiTextfieldIcon\"] }, { type: i1.TuiTextfieldFillerDirective, selector: \"[tuiTextfieldFiller]\", inputs: [\"tuiTextfieldFiller\"] }, { type: i4.MaskedInputDirective, selector: \"[textMask]\", inputs: [\"textMask\"], exportAs: [\"textMask\"] }, { type: i5.PolymorpheusOutletDirective, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { type: i1.TuiWrapperDirective, selector: \"[tuiWrapper]\", inputs: [\"disabled\", \"readOnly\", \"hover\", \"active\", \"focus\", \"invalid\", \"appearance\"] }], pipes: { \"async\": i6.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateRangeComponent.prototype, \"disabledItemHandler\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateRangeComponent.prototype, \"markerHandler\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateRangeComponent.prototype, \"defaultViewedMonth\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateRangeComponent.prototype, \"items\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateRangeComponent.prototype, \"min\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateRangeComponent.prototype, \"max\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateRangeComponent.prototype, \"minLength\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputDateRangeComponent.prototype, \"maxLength\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateRangeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-input-date-range',\n                    templateUrl: './input-date-range.template.html',\n                    styleUrls: ['./input-date-range.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiInputDateRangeComponent),\n                        tuiAsControl(TuiInputDateRangeComponent),\n                        tuiDateStreamWithTransformer(TUI_DATE_RANGE_VALUE_TRANSFORMER),\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i7.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i0.Injector, decorators: [{\n                    type: Inject,\n                    args: [Injector]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_IS_MOBILE]\n                }] }, { type: i1.TuiDialogService, decorators: [{\n                    type: Inject,\n                    args: [TuiDialogService]\n                }] }, { type: i0.Type, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TUI_MOBILE_CALENDAR]\n                }] }, { type: i1.TuiTextfieldSizeDirective, decorators: [{\n                    type: Inject,\n                    args: [TUI_TEXTFIELD_SIZE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_DATE_FORMAT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_DATE_SEPARATOR]\n                }] }, { type: i8.Observable, decorators: [{\n                    type: Inject,\n                    args: [TUI_DATE_TEXTS]\n                }] }, { type: i3.AbstractTuiValueTransformer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TUI_DATE_RANGE_VALUE_TRANSFORMER]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_INPUT_DATE_OPTIONS]\n                }] }]; }, propDecorators: { textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }], disabledItemHandler: [{\n                type: Input\n            }], markerHandler: [{\n                type: Input\n            }], defaultViewedMonth: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TuiInputDateRangeDirective extends AbstractTuiTextfieldHost {\n    get value() {\n        return this.host.computedValue;\n    }\n    onValueChange(value) {\n        this.host.onValueChange(value);\n    }\n    process(input) {\n        input.inputMode = 'numeric';\n    }\n    ngDoCheck() {\n        if (this.host.nativeFocusableElement) {\n            this.host.nativeFocusableElement.placeholder = this.host.computedExampleText;\n        }\n    }\n}\nTuiInputDateRangeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateRangeDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiInputDateRangeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputDateRangeDirective, selector: \"tui-input-date-range\", providers: [tuiAsTextfieldHost(TuiInputDateRangeDirective)], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateRangeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'tui-input-date-range',\n                    providers: [tuiAsTextfieldHost(TuiInputDateRangeDirective)],\n                }]\n        }] });\n\nclass TuiInputDateRangeModule {\n}\nTuiInputDateRangeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateRangeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiInputDateRangeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateRangeModule, declarations: [TuiInputDateRangeComponent, TuiInputDateRangeDirective], imports: [CommonModule,\n        TextMaskModule,\n        TuiActiveZoneModule,\n        TuiLetModule,\n        PolymorpheusModule,\n        TuiWrapperModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiHostedDropdownModule,\n        TuiSvgModule,\n        TuiCalendarRangeModule,\n        TuiValueAccessorModule], exports: [TuiInputDateRangeComponent,\n        TuiInputDateRangeDirective,\n        TuiTextfieldComponent] });\nTuiInputDateRangeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateRangeModule, imports: [[\n            CommonModule,\n            TextMaskModule,\n            TuiActiveZoneModule,\n            TuiLetModule,\n            PolymorpheusModule,\n            TuiWrapperModule,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiHostedDropdownModule,\n            TuiSvgModule,\n            TuiCalendarRangeModule,\n            TuiValueAccessorModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputDateRangeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TextMaskModule,\n                        TuiActiveZoneModule,\n                        TuiLetModule,\n                        PolymorpheusModule,\n                        TuiWrapperModule,\n                        TuiPrimitiveTextfieldModule,\n                        TuiTextfieldControllerModule,\n                        TuiHostedDropdownModule,\n                        TuiSvgModule,\n                        TuiCalendarRangeModule,\n                        TuiValueAccessorModule,\n                    ],\n                    declarations: [TuiInputDateRangeComponent, TuiInputDateRangeDirective],\n                    exports: [\n                        TuiInputDateRangeComponent,\n                        TuiInputDateRangeDirective,\n                        TuiTextfieldComponent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputDateRangeComponent, TuiInputDateRangeDirective, TuiInputDateRangeModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}