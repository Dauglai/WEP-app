{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, ElementRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport * as i7 from '@taiga-ui/cdk';\nimport { AbstractTuiControl, tuiIsNativeFocused, tuiRound, tuiClamp, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, tuiPure, TuiFocusableModule } from '@taiga-ui/cdk';\nimport * as i3 from '@taiga-ui/core';\nimport { tuiGetFractionPartPadded, TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldControllerModule } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/kit/components/input-number';\nimport * as i2 from '@taiga-ui/kit/components/slider';\nimport { tuiSliderOptionsProvider, TuiSliderComponent, TuiSliderModule } from '@taiga-ui/kit/components/slider';\nimport { TUI_FLOATING_PRECISION } from '@taiga-ui/kit/constants';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nfunction TuiInputSliderComponent_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r2 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", text_r2, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction TuiInputSliderComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TuiInputSliderComponent_div_2_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r0.valueContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.value));\n  }\n}\nconst _c1 = [\"*\"];\nclass TuiInputSliderComponent extends AbstractTuiControl {\n  constructor(control, cdr, controller) {\n    super(control, cdr);\n    this.controller = controller;\n    this.min = 0;\n    this.max = 100;\n    this.quantum = 1;\n    this.steps = 0;\n    this.segments = 1;\n    this.keySteps = null;\n    /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */\n    this.textfieldPrefix = '';\n    /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n    this.textfieldPostfix = '';\n  }\n  get prefix() {\n    return this.textfieldPrefix || this.controller.prefix;\n  }\n  get postfix() {\n    return this.textfieldPostfix || this.controller.postfix;\n  }\n  get nativeFocusableElement() {\n    var _a;\n    return !((_a = this.inputNumberRef) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || this.computedDisabled ? null : this.inputNumberRef.nativeFocusableElement;\n  }\n  get focused() {\n    var _a;\n    return tuiIsNativeFocused(this.nativeFocusableElement) || tuiIsNativeFocused(((_a = this.sliderRef) === null || _a === void 0 ? void 0 : _a.nativeElement) || null);\n  }\n  get computedSteps() {\n    return this.steps || (this.max - this.min) / this.quantum;\n  }\n  get precision() {\n    return tuiGetFractionPartPadded(this.quantum).length;\n  }\n  get decimal() {\n    return this.precision ? 'not-zero' : 'never';\n  }\n  get showValueContent() {\n    return Boolean(this.valueContent && !this.focused);\n  }\n  get step() {\n    return (this.max - this.min) / this.computedSteps;\n  }\n  computeKeySteps(keySteps, min, max) {\n    return keySteps || [[0, min], [100, max]];\n  }\n  focusTextInput() {\n    var _a;\n    const focusableElement = (_a = this.inputNumberRef) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement;\n    if (focusableElement) {\n      focusableElement.focus();\n    }\n  }\n  safelyUpdateValue(value) {\n    this.value = this.valueGuard(value !== null && value !== void 0 ? value : this.safeCurrentValue);\n  }\n  onVerticalArrowKeyDown(coefficient) {\n    if (this.readOnly || !this.step) {\n      return;\n    }\n    const value = this.value + coefficient * this.step;\n    if (value !== this.value) {\n      this.safelyUpdateValue(value);\n    }\n    this.updateTextInputValue(this.valueGuard(value));\n  }\n  onSliderChange(newValue) {\n    this.safelyUpdateValue(newValue);\n    this.updateTextInputValue(this.value);\n  }\n  onFocused(focused) {\n    const {\n      value,\n      textInputValue,\n      safeCurrentValue,\n      inputNumberRef\n    } = this;\n    if (!focused && textInputValue !== (inputNumberRef === null || inputNumberRef === void 0 ? void 0 : inputNumberRef.getFormattedValue(value))) {\n      this.updateTextInputValue(value !== null && value !== void 0 ? value : safeCurrentValue);\n    }\n    this.updateFocused(focused);\n  }\n  get textInputValue() {\n    var _a;\n    return ((_a = this.inputNumberRef) === null || _a === void 0 ? void 0 : _a.nativeValue) || '';\n  }\n  getFallbackValue() {\n    return 0;\n  }\n  valueGuard(value) {\n    const roundedValue = tuiRound(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);\n    return tuiClamp(roundedValue, this.min, this.max);\n  }\n  updateTextInputValue(value) {\n    if (this.inputNumberRef) {\n      this.inputNumberRef.nativeValue = this.inputNumberRef.getFormattedValue(value);\n    }\n  }\n}\nTuiInputSliderComponent.ɵfac = function TuiInputSliderComponent_Factory(t) {\n  return new (t || TuiInputSliderComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_WATCHED_CONTROLLER));\n};\nTuiInputSliderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiInputSliderComponent,\n  selectors: [[\"tui-input-slider\"]],\n  viewQuery: function TuiInputSliderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TuiInputNumberComponent, 5);\n      i0.ɵɵviewQuery(TuiSliderComponent, 5, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputNumberRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sliderRef = _t.first);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    quantum: \"quantum\",\n    steps: \"steps\",\n    segments: \"segments\",\n    keySteps: \"keySteps\",\n    valueContent: \"valueContent\",\n    textfieldPrefix: [\"prefix\", \"textfieldPrefix\"],\n    textfieldPostfix: [\"postfix\", \"textfieldPostfix\"]\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputSliderComponent), tuiAsControl(TuiInputSliderComponent), tuiSliderOptionsProvider({\n    trackColor: 'transparent'\n  }), TEXTFIELD_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 20,\n  consts: [[3, \"min\", \"max\", \"precision\", \"decimal\", \"tuiTextfieldPrefix\", \"tuiTextfieldPostfix\", \"disabled\", \"readOnly\", \"pseudoFocus\", \"pseudoHover\", \"pseudoActive\", \"pseudoInvalid\", \"ngModel\", \"ngModelChange\", \"focusedChange\", \"keydown.arrowUp.prevent\", \"keydown.arrowDown.prevent\"], [\"ngProjectAs\", \"tuiContent\", \"automation-id\", \"tui-input-slider__value-content\", 5, [\"tuiContent\"], 4, \"ngIf\"], [\"tuiSlider\", \"\", \"type\", \"range\", 3, \"tuiFocusable\", \"max\", \"segments\", \"keySteps\", \"ngModel\", \"ngModelChange\", \"click\"], [\"ngProjectAs\", \"tuiContent\", \"automation-id\", \"tui-input-slider__value-content\", 5, [\"tuiContent\"]], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"]],\n  template: function TuiInputSliderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"tui-input-number\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function TuiInputSliderComponent_Template_tui_input_number_ngModelChange_0_listener($event) {\n        return ctx.safelyUpdateValue($event);\n      })(\"focusedChange\", function TuiInputSliderComponent_Template_tui_input_number_focusedChange_0_listener($event) {\n        return ctx.onFocused($event);\n      })(\"keydown.arrowUp.prevent\", function TuiInputSliderComponent_Template_tui_input_number_keydown_arrowUp_prevent_0_listener() {\n        return ctx.onVerticalArrowKeyDown(1);\n      })(\"keydown.arrowDown.prevent\", function TuiInputSliderComponent_Template_tui_input_number_keydown_arrowDown_prevent_0_listener() {\n        return ctx.onVerticalArrowKeyDown(-1);\n      });\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, TuiInputSliderComponent_div_2_Template, 2, 4, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TuiInputSliderComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.onSliderChange($event);\n      })(\"click\", function TuiInputSliderComponent_Template_input_click_3_listener() {\n        return ctx.focusTextInput();\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"min\", ctx.min)(\"max\", ctx.max)(\"precision\", ctx.precision)(\"decimal\", ctx.decimal)(\"tuiTextfieldPrefix\", ctx.showValueContent ? \"\" : ctx.prefix)(\"tuiTextfieldPostfix\", ctx.showValueContent ? \"\" : ctx.postfix)(\"disabled\", ctx.computedDisabled)(\"readOnly\", ctx.readOnly)(\"pseudoFocus\", ctx.computedFocused)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoInvalid\", ctx.pseudoInvalid)(\"ngModel\", ctx.value);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showValueContent);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"tuiFocusable\", false)(\"max\", ctx.computedSteps)(\"segments\", ctx.segments)(\"keySteps\", ctx.computeKeySteps(ctx.keySteps, ctx.min, ctx.max))(\"ngModel\", ctx.value);\n      i0.ɵɵattribute(\"disabled\", ctx.readOnly || ctx.computedDisabled || null);\n    }\n  },\n  dependencies: [i1.TuiInputNumberComponent, i2.TuiSliderComponent, i1.TuiInputNumberDirective, i3.TuiTextfieldPrefixDirective, i3.TuiTextfieldPostfixDirective, i4.NgControlStatus, i4.NgModel, i5.NgIf, i6.PolymorpheusOutletDirective, i2.TuiSliderKeyStepsDirective, i4.RangeValueAccessor, i4.DefaultValueAccessor, i7.TuiFocusableDirective],\n  styles: [\"[_nghost-%COMP%]{position:relative;z-index:0;display:block;height:-webkit-max-content;height:max-content}input[type=range][_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;box-sizing:border-box;padding-left:calc(var(--tui-radius-m) / 2);height:1rem;margin:-.5625rem 0 0;border-top-left-radius:0;border-bottom-left-radius:calc(var(--tui-radius-m) * 5) calc(var(--tui-radius-m) * 1.5)}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiInputSliderComponent.prototype, \"min\", void 0);\n__decorate([tuiDefaultProp()], TuiInputSliderComponent.prototype, \"max\", void 0);\n__decorate([tuiDefaultProp(q => q > 0, 'Quantum must be positive')], TuiInputSliderComponent.prototype, \"quantum\", void 0);\n__decorate([tuiDefaultProp(s => s >= 0 && Number.isInteger(s), 'Steps must be non-negative integer')], TuiInputSliderComponent.prototype, \"steps\", void 0);\n__decorate([tuiDefaultProp(s => s > 0 && Number.isInteger(s), 'Segments must be positive integer')], TuiInputSliderComponent.prototype, \"segments\", void 0);\n__decorate([tuiDefaultProp()], TuiInputSliderComponent.prototype, \"keySteps\", void 0);\n__decorate([tuiDefaultProp()], TuiInputSliderComponent.prototype, \"textfieldPrefix\", void 0);\n__decorate([tuiDefaultProp()], TuiInputSliderComponent.prototype, \"textfieldPostfix\", void 0);\n__decorate([tuiPure], TuiInputSliderComponent.prototype, \"computeKeySteps\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputSliderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-input-slider',\n      templateUrl: './input-slider.template.html',\n      styleUrls: ['./input-slider.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputSliderComponent), tuiAsControl(TuiInputSliderComponent), tuiSliderOptionsProvider({\n        trackColor: 'transparent'\n      }), TEXTFIELD_CONTROLLER_PROVIDER]\n    }]\n  }], function () {\n    return [{\n      type: i4.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i3.TuiTextfieldController,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]\n      }]\n    }];\n  }, {\n    inputNumberRef: [{\n      type: ViewChild,\n      args: [TuiInputNumberComponent]\n    }],\n    sliderRef: [{\n      type: ViewChild,\n      args: [TuiSliderComponent, {\n        read: ElementRef\n      }]\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    quantum: [{\n      type: Input\n    }],\n    steps: [{\n      type: Input\n    }],\n    segments: [{\n      type: Input\n    }],\n    keySteps: [{\n      type: Input\n    }],\n    valueContent: [{\n      type: Input\n    }],\n    textfieldPrefix: [{\n      type: Input,\n      args: ['prefix']\n    }],\n    textfieldPostfix: [{\n      type: Input,\n      args: ['postfix']\n    }],\n    computeKeySteps: []\n  });\n})();\nclass TuiInputSliderModule {}\nTuiInputSliderModule.ɵfac = function TuiInputSliderModule_Factory(t) {\n  return new (t || TuiInputSliderModule)();\n};\nTuiInputSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiInputSliderModule\n});\nTuiInputSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, PolymorpheusModule, TuiFocusableModule, TuiInputNumberModule, TuiSliderModule, TuiTextfieldControllerModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, PolymorpheusModule, TuiFocusableModule, TuiInputNumberModule, TuiSliderModule, TuiTextfieldControllerModule],\n      declarations: [TuiInputSliderComponent],\n      exports: [TuiInputSliderComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputSliderComponent, TuiInputSliderModule };","map":{"version":3,"names":["__decorate","i0","ChangeDetectorRef","ElementRef","Component","ChangeDetectionStrategy","Optional","Self","Inject","ViewChild","Input","NgModule","i4","NgControl","FormsModule","i7","AbstractTuiControl","tuiIsNativeFocused","tuiRound","tuiClamp","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","tuiPure","TuiFocusableModule","i3","tuiGetFractionPartPadded","TUI_TEXTFIELD_WATCHED_CONTROLLER","TEXTFIELD_CONTROLLER_PROVIDER","TuiTextfieldControllerModule","i1","TuiInputNumberComponent","TuiInputNumberModule","i2","tuiSliderOptionsProvider","TuiSliderComponent","TuiSliderModule","TUI_FLOATING_PRECISION","i5","CommonModule","i6","PolymorpheusModule","TuiInputSliderComponent","constructor","control","cdr","controller","min","max","quantum","steps","segments","keySteps","textfieldPrefix","textfieldPostfix","prefix","postfix","nativeFocusableElement","_a","inputNumberRef","computedDisabled","focused","sliderRef","nativeElement","computedSteps","precision","length","decimal","showValueContent","Boolean","valueContent","step","computeKeySteps","focusTextInput","focusableElement","focus","safelyUpdateValue","value","valueGuard","safeCurrentValue","onVerticalArrowKeyDown","coefficient","readOnly","updateTextInputValue","onSliderChange","newValue","onFocused","textInputValue","getFormattedValue","updateFocused","nativeValue","getFallbackValue","roundedValue","Math","round","ɵfac","ɵcmp","trackColor","TuiInputNumberDirective","TuiTextfieldPrefixDirective","TuiTextfieldPostfixDirective","NgControlStatus","NgModel","NgIf","PolymorpheusOutletDirective","TuiSliderKeyStepsDirective","RangeValueAccessor","DefaultValueAccessor","TuiFocusableDirective","prototype","q","s","Number","isInteger","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","decorators","TuiTextfieldController","read","TuiInputSliderModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-input-slider.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, ElementRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport * as i7 from '@taiga-ui/cdk';\nimport { AbstractTuiControl, tuiIsNativeFocused, tuiRound, tuiClamp, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, tuiPure, TuiFocusableModule } from '@taiga-ui/cdk';\nimport * as i3 from '@taiga-ui/core';\nimport { tuiGetFractionPartPadded, TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldControllerModule } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/kit/components/input-number';\nimport * as i2 from '@taiga-ui/kit/components/slider';\nimport { tuiSliderOptionsProvider, TuiSliderComponent, TuiSliderModule } from '@taiga-ui/kit/components/slider';\nimport { TUI_FLOATING_PRECISION } from '@taiga-ui/kit/constants';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n\nclass TuiInputSliderComponent extends AbstractTuiControl {\n    constructor(control, cdr, controller) {\n        super(control, cdr);\n        this.controller = controller;\n        this.min = 0;\n        this.max = 100;\n        this.quantum = 1;\n        this.steps = 0;\n        this.segments = 1;\n        this.keySteps = null;\n        /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */\n        this.textfieldPrefix = '';\n        /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n        this.textfieldPostfix = '';\n    }\n    get prefix() {\n        return this.textfieldPrefix || this.controller.prefix;\n    }\n    get postfix() {\n        return this.textfieldPostfix || this.controller.postfix;\n    }\n    get nativeFocusableElement() {\n        var _a;\n        return !((_a = this.inputNumberRef) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || this.computedDisabled\n            ? null\n            : this.inputNumberRef.nativeFocusableElement;\n    }\n    get focused() {\n        var _a;\n        return (tuiIsNativeFocused(this.nativeFocusableElement) ||\n            tuiIsNativeFocused(((_a = this.sliderRef) === null || _a === void 0 ? void 0 : _a.nativeElement) || null));\n    }\n    get computedSteps() {\n        return this.steps || (this.max - this.min) / this.quantum;\n    }\n    get precision() {\n        return tuiGetFractionPartPadded(this.quantum).length;\n    }\n    get decimal() {\n        return this.precision ? 'not-zero' : 'never';\n    }\n    get showValueContent() {\n        return Boolean(this.valueContent && !this.focused);\n    }\n    get step() {\n        return (this.max - this.min) / this.computedSteps;\n    }\n    computeKeySteps(keySteps, min, max) {\n        return (keySteps || [\n            [0, min],\n            [100, max],\n        ]);\n    }\n    focusTextInput() {\n        var _a;\n        const focusableElement = (_a = this.inputNumberRef) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement;\n        if (focusableElement) {\n            focusableElement.focus();\n        }\n    }\n    safelyUpdateValue(value) {\n        this.value = this.valueGuard(value !== null && value !== void 0 ? value : this.safeCurrentValue);\n    }\n    onVerticalArrowKeyDown(coefficient) {\n        if (this.readOnly || !this.step) {\n            return;\n        }\n        const value = this.value + coefficient * this.step;\n        if (value !== this.value) {\n            this.safelyUpdateValue(value);\n        }\n        this.updateTextInputValue(this.valueGuard(value));\n    }\n    onSliderChange(newValue) {\n        this.safelyUpdateValue(newValue);\n        this.updateTextInputValue(this.value);\n    }\n    onFocused(focused) {\n        const { value, textInputValue, safeCurrentValue, inputNumberRef } = this;\n        if (!focused && textInputValue !== (inputNumberRef === null || inputNumberRef === void 0 ? void 0 : inputNumberRef.getFormattedValue(value))) {\n            this.updateTextInputValue(value !== null && value !== void 0 ? value : safeCurrentValue);\n        }\n        this.updateFocused(focused);\n    }\n    get textInputValue() {\n        var _a;\n        return ((_a = this.inputNumberRef) === null || _a === void 0 ? void 0 : _a.nativeValue) || '';\n    }\n    getFallbackValue() {\n        return 0;\n    }\n    valueGuard(value) {\n        const roundedValue = tuiRound(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);\n        return tuiClamp(roundedValue, this.min, this.max);\n    }\n    updateTextInputValue(value) {\n        if (this.inputNumberRef) {\n            this.inputNumberRef.nativeValue =\n                this.inputNumberRef.getFormattedValue(value);\n        }\n    }\n}\nTuiInputSliderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputSliderComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TUI_TEXTFIELD_WATCHED_CONTROLLER }], target: i0.ɵɵFactoryTarget.Component });\nTuiInputSliderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputSliderComponent, selector: \"tui-input-slider\", inputs: { min: \"min\", max: \"max\", quantum: \"quantum\", steps: \"steps\", segments: \"segments\", keySteps: \"keySteps\", valueContent: \"valueContent\", textfieldPrefix: [\"prefix\", \"textfieldPrefix\"], textfieldPostfix: [\"postfix\", \"textfieldPostfix\"] }, providers: [\n        tuiAsFocusableItemAccessor(TuiInputSliderComponent),\n        tuiAsControl(TuiInputSliderComponent),\n        tuiSliderOptionsProvider({ trackColor: 'transparent' }),\n        TEXTFIELD_CONTROLLER_PROVIDER,\n    ], viewQueries: [{ propertyName: \"inputNumberRef\", first: true, predicate: TuiInputNumberComponent, descendants: true }, { propertyName: \"sliderRef\", first: true, predicate: TuiSliderComponent, descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<tui-input-number\\n    [min]=\\\"min\\\"\\n    [max]=\\\"max\\\"\\n    [precision]=\\\"precision\\\"\\n    [decimal]=\\\"decimal\\\"\\n    [tuiTextfieldPrefix]=\\\"showValueContent ? '' : prefix\\\"\\n    [tuiTextfieldPostfix]=\\\"showValueContent ? '' : postfix\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [pseudoFocus]=\\\"computedFocused\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoInvalid]=\\\"pseudoInvalid\\\"\\n    [ngModel]=\\\"value\\\"\\n    (ngModelChange)=\\\"safelyUpdateValue($event)\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n    (keydown.arrowUp.prevent)=\\\"onVerticalArrowKeyDown(1)\\\"\\n    (keydown.arrowDown.prevent)=\\\"onVerticalArrowKeyDown(-1)\\\"\\n>\\n    <ng-content></ng-content>\\n    <div\\n        *ngIf=\\\"showValueContent\\\"\\n        ngProjectAs=\\\"tuiContent\\\"\\n        automation-id=\\\"tui-input-slider__value-content\\\"\\n    >\\n        <ng-container *polymorpheusOutlet=\\\"valueContent as text; context: {$implicit: value}\\\">\\n            {{ text }}\\n        </ng-container>\\n    </div>\\n</tui-input-number>\\n\\n<input\\n    tuiSlider\\n    type=\\\"range\\\"\\n    [tuiFocusable]=\\\"false\\\"\\n    [max]=\\\"computedSteps\\\"\\n    [segments]=\\\"segments\\\"\\n    [keySteps]=\\\"computeKeySteps(keySteps, min, max)\\\"\\n    [attr.disabled]=\\\"readOnly || computedDisabled || null\\\"\\n    [ngModel]=\\\"value\\\"\\n    (ngModelChange)=\\\"onSliderChange($event)\\\"\\n    (click)=\\\"focusTextInput()\\\"\\n/>\\n\", styles: [\":host{position:relative;z-index:0;display:block;height:-webkit-max-content;height:max-content}input[type=range]{position:absolute;top:100%;left:0;right:0;box-sizing:border-box;padding-left:calc(var(--tui-radius-m) / 2);height:1rem;margin:-.5625rem 0 0;border-top-left-radius:0;border-bottom-left-radius:calc(var(--tui-radius-m) * 5) calc(var(--tui-radius-m) * 1.5)}\\n\"], components: [{ type: i1.TuiInputNumberComponent, selector: \"tui-input-number\", inputs: [\"min\", \"max\", \"decimal\", \"precision\", \"prefix\", \"postfix\"] }, { type: i2.TuiSliderComponent, selector: \"input[type=range][tuiSlider]\", inputs: [\"size\", \"segments\"] }], directives: [{ type: i1.TuiInputNumberDirective, selector: \"tui-input-number\" }, { type: i3.TuiTextfieldPrefixDirective, selector: \"[tuiTextfieldPrefix]\", inputs: [\"tuiTextfieldPrefix\"] }, { type: i3.TuiTextfieldPostfixDirective, selector: \"[tuiTextfieldPostfix]\", inputs: [\"tuiTextfieldPostfix\"] }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.PolymorpheusOutletDirective, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { type: i2.TuiSliderKeyStepsDirective, selector: \"input[tuiSlider][keySteps]\", inputs: [\"keySteps\"] }, { type: i4.RangeValueAccessor, selector: \"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]\" }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i7.TuiFocusableDirective, selector: \"[tuiFocusable]\", inputs: [\"tuiFocusable\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiInputSliderComponent.prototype, \"min\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputSliderComponent.prototype, \"max\", void 0);\n__decorate([\n    tuiDefaultProp(q => q > 0, 'Quantum must be positive')\n], TuiInputSliderComponent.prototype, \"quantum\", void 0);\n__decorate([\n    tuiDefaultProp(s => s >= 0 && Number.isInteger(s), 'Steps must be non-negative integer')\n], TuiInputSliderComponent.prototype, \"steps\", void 0);\n__decorate([\n    tuiDefaultProp(s => s > 0 && Number.isInteger(s), 'Segments must be positive integer')\n], TuiInputSliderComponent.prototype, \"segments\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputSliderComponent.prototype, \"keySteps\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputSliderComponent.prototype, \"textfieldPrefix\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputSliderComponent.prototype, \"textfieldPostfix\", void 0);\n__decorate([\n    tuiPure\n], TuiInputSliderComponent.prototype, \"computeKeySteps\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputSliderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-input-slider',\n                    templateUrl: './input-slider.template.html',\n                    styleUrls: ['./input-slider.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiInputSliderComponent),\n                        tuiAsControl(TuiInputSliderComponent),\n                        tuiSliderOptionsProvider({ trackColor: 'transparent' }),\n                        TEXTFIELD_CONTROLLER_PROVIDER,\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i4.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i3.TuiTextfieldController, decorators: [{\n                    type: Inject,\n                    args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]\n                }] }]; }, propDecorators: { inputNumberRef: [{\n                type: ViewChild,\n                args: [TuiInputNumberComponent]\n            }], sliderRef: [{\n                type: ViewChild,\n                args: [TuiSliderComponent, { read: ElementRef }]\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], quantum: [{\n                type: Input\n            }], steps: [{\n                type: Input\n            }], segments: [{\n                type: Input\n            }], keySteps: [{\n                type: Input\n            }], valueContent: [{\n                type: Input\n            }], textfieldPrefix: [{\n                type: Input,\n                args: ['prefix']\n            }], textfieldPostfix: [{\n                type: Input,\n                args: ['postfix']\n            }], computeKeySteps: [] } });\n\nclass TuiInputSliderModule {\n}\nTuiInputSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiInputSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputSliderModule, declarations: [TuiInputSliderComponent], imports: [CommonModule,\n        FormsModule,\n        PolymorpheusModule,\n        TuiFocusableModule,\n        TuiInputNumberModule,\n        TuiSliderModule,\n        TuiTextfieldControllerModule], exports: [TuiInputSliderComponent] });\nTuiInputSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputSliderModule, imports: [[\n            CommonModule,\n            FormsModule,\n            PolymorpheusModule,\n            TuiFocusableModule,\n            TuiInputNumberModule,\n            TuiSliderModule,\n            TuiTextfieldControllerModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        PolymorpheusModule,\n                        TuiFocusableModule,\n                        TuiInputNumberModule,\n                        TuiSliderModule,\n                        TuiTextfieldControllerModule,\n                    ],\n                    declarations: [TuiInputSliderComponent],\n                    exports: [TuiInputSliderComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputSliderComponent, TuiInputSliderModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}