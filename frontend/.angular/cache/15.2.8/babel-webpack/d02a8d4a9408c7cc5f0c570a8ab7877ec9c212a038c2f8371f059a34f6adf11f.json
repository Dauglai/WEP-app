{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiHoveredModule, TuiPressedModule } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/core';\nimport { TuiModeDirective, TuiWrapperModule } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/checkbox';\nimport { TuiCheckboxComponent, TuiCheckboxModule } from '@taiga-ui/kit/components/checkbox';\nconst _c0 = [\"*\"];\nclass TuiCheckboxBlockComponent extends AbstractTuiNullableControl {\n  constructor(control, cdr, modeDirective) {\n    super(control, cdr);\n    this.modeDirective = modeDirective;\n    this.contentAlign = 'right';\n    this.hideCheckbox = false;\n    this.size = 'l';\n  }\n  get nativeFocusableElement() {\n    return this.checkbox ? this.checkbox.nativeFocusableElement : null;\n  }\n  get checked() {\n    return this.value !== false && this.hideCheckbox;\n  }\n  get checkboxSize() {\n    return this.size === 'l' ? 'l' : 'm';\n  }\n  get focused() {\n    return tuiIsNativeFocused(this.nativeFocusableElement);\n  }\n  get appearance() {\n    var _a;\n    if (!((_a = this.modeDirective) === null || _a === void 0 ? void 0 : _a.mode)) {\n      return this.checked ? \"whiteblock-active\" /* WhiteblockActive */ : \"whiteblock\" /* Whiteblock */;\n    }\n\n    return this.checked ? \"primary\" /* Primary */ : \"secondary\" /* Secondary */;\n  }\n\n  onFocused(focused) {\n    this.updateFocused(focused);\n  }\n  onFocusVisible(focusVisible) {\n    this.updateFocusVisible(focusVisible);\n  }\n  /** @deprecated use 'value' setter */\n  onModelChange(value) {\n    this.value = value;\n  }\n}\nTuiCheckboxBlockComponent.ɵfac = function TuiCheckboxBlockComponent_Factory(t) {\n  return new (t || TuiCheckboxBlockComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TuiModeDirective, 8));\n};\nTuiCheckboxBlockComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiCheckboxBlockComponent,\n  selectors: [[\"tui-checkbox-block\"]],\n  viewQuery: function TuiCheckboxBlockComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TuiCheckboxComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkbox = _t.first);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function TuiCheckboxBlockComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"data-align\", ctx.contentAlign)(\"data-size\", ctx.size);\n      i0.ɵɵclassProp(\"_hidden_input\", ctx.hideCheckbox)(\"_active\", ctx.checked);\n    }\n  },\n  inputs: {\n    contentAlign: \"contentAlign\",\n    hideCheckbox: \"hideCheckbox\",\n    size: \"size\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiCheckboxBlockComponent), tuiAsControl(TuiCheckboxBlockComponent)]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 15,\n  consts: [[\"tuiWrapper\", \"\", 1, \"t-wrapper\", 3, \"appearance\", \"disabled\", \"focus\", \"hover\", \"active\", \"invalid\"], [1, \"t-view\", 3, \"disabled\", \"nativeId\", \"pseudoInvalid\", \"pseudoFocus\", \"pseudoHover\", \"pseudoActive\", \"size\", \"focusable\", \"ngModel\", \"ngModelChange\", \"focusedChange\", \"focusVisibleChange\"], [1, \"t-label\"]],\n  template: function TuiCheckboxBlockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"label\", 0)(1, \"tui-checkbox\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TuiCheckboxBlockComponent_Template_tui_checkbox_ngModelChange_1_listener($event) {\n        return ctx.value = $event;\n      })(\"focusedChange\", function TuiCheckboxBlockComponent_Template_tui_checkbox_focusedChange_1_listener($event) {\n        return ctx.onFocused($event);\n      })(\"focusVisibleChange\", function TuiCheckboxBlockComponent_Template_tui_checkbox_focusVisibleChange_1_listener($event) {\n        return ctx.onFocusVisible($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵprojection(3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"appearance\", ctx.appearance)(\"disabled\", ctx.computedDisabled)(\"focus\", ctx.computedFocusVisible)(\"hover\", ctx.pseudoHover)(\"active\", ctx.pseudoActive)(\"invalid\", ctx.computedInvalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.computedDisabled || ctx.readOnly)(\"nativeId\", ctx.nativeId)(\"pseudoInvalid\", ctx.computedInvalid)(\"pseudoFocus\", false)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoActive\", ctx.pseudoActive)(\"size\", ctx.checkboxSize)(\"focusable\", ctx.focusable)(\"ngModel\", ctx.value);\n    }\n  },\n  dependencies: [i1.TuiCheckboxComponent, i2.TuiWrapperDirective, i3.NgControlStatus, i3.NgModel],\n  styles: [\"[_nghost-%COMP%]{font:var(--tui-font-text-s);color:var(--tui-text-01);display:inline-block;vertical-align:top;align-items:flex-start;border-radius:var(--tui-radius-m)}[data-size=m][_nghost-%COMP%], [data-size=l][_nghost-%COMP%]{font:var(--tui-font-text-m)}._disabled[_nghost-%COMP%], ._readonly[_nghost-%COMP%]{pointer-events:none}.t-wrapper[_ngcontent-%COMP%]{position:relative;display:flex;align-items:inherit;box-sizing:border-box;border-radius:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;padding:0 1rem 0 0}[data-align=right][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{flex-direction:row-reverse;padding:0 0 0 1rem}[data-size=s][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{min-height:var(--tui-height-s)}[data-size=m][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{min-height:var(--tui-height-m)}[data-size=l][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{min-height:var(--tui-height-l)}[data-size=s]._hidden_input[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding:0 1rem}[data-size=m]._hidden_input[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding:0 1.5rem}[data-size=l]._hidden_input[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding:0 2.25rem}[data-size=s][_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{margin:calc(var(--tui-height-s) / 2 - .5rem) .5rem}[data-size=m][_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{margin:calc(var(--tui-height-m) / 2 - .5rem) .75rem}[data-size=l][_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{margin:calc(var(--tui-height-l) / 2 - .75rem) 1rem}._hidden_input[_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{position:absolute;height:1px;width:1px;margin:-1px;border:0;padding:0;overflow:hidden;clip:rect(0,0,0,0);-webkit-clip-path:inset(0);clip-path:inset(0)}.t-label[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex-grow:1;align-self:center}._hidden_input[_nghost-%COMP%]   .t-label[_ngcontent-%COMP%]{text-align:center}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiCheckboxBlockComponent.prototype, \"contentAlign\", void 0);\n__decorate([tuiDefaultProp()], TuiCheckboxBlockComponent.prototype, \"hideCheckbox\", void 0);\n__decorate([tuiDefaultProp()], TuiCheckboxBlockComponent.prototype, \"size\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCheckboxBlockComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-checkbox-block',\n      templateUrl: './checkbox-block.template.html',\n      styleUrls: ['./checkbox-block.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiCheckboxBlockComponent), tuiAsControl(TuiCheckboxBlockComponent)]\n    }]\n  }], function () {\n    return [{\n      type: i3.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i2.TuiModeDirective,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TuiModeDirective]\n      }]\n    }];\n  }, {\n    checkbox: [{\n      type: ViewChild,\n      args: [TuiCheckboxComponent]\n    }],\n    contentAlign: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.data-align']\n    }],\n    hideCheckbox: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['class._hidden_input']\n    }],\n    size: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.data-size']\n    }],\n    checked: [{\n      type: HostBinding,\n      args: ['class._active']\n    }]\n  });\n})();\nclass TuiCheckboxBlockModule {}\nTuiCheckboxBlockModule.ɵfac = function TuiCheckboxBlockModule_Factory(t) {\n  return new (t || TuiCheckboxBlockModule)();\n};\nTuiCheckboxBlockModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiCheckboxBlockModule\n});\nTuiCheckboxBlockModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[FormsModule, TuiHoveredModule, TuiPressedModule, TuiCheckboxModule, TuiWrapperModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCheckboxBlockModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FormsModule, TuiHoveredModule, TuiPressedModule, TuiCheckboxModule, TuiWrapperModule],\n      declarations: [TuiCheckboxBlockComponent],\n      exports: [TuiCheckboxBlockComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCheckboxBlockComponent, TuiCheckboxBlockModule };","map":{"version":3,"names":["__decorate","i0","ChangeDetectorRef","Component","ChangeDetectionStrategy","Optional","Self","Inject","ViewChild","Input","HostBinding","NgModule","i3","NgControl","FormsModule","AbstractTuiNullableControl","tuiIsNativeFocused","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","TuiHoveredModule","TuiPressedModule","i2","TuiModeDirective","TuiWrapperModule","i1","TuiCheckboxComponent","TuiCheckboxModule","TuiCheckboxBlockComponent","constructor","control","cdr","modeDirective","contentAlign","hideCheckbox","size","nativeFocusableElement","checkbox","checked","value","checkboxSize","focused","appearance","_a","mode","onFocused","updateFocused","onFocusVisible","focusVisible","updateFocusVisible","onModelChange","ɵfac","ɵcmp","TuiWrapperDirective","NgControlStatus","NgModel","prototype","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","decorators","TuiCheckboxBlockModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-checkbox-block.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiHoveredModule, TuiPressedModule } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/core';\nimport { TuiModeDirective, TuiWrapperModule } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/checkbox';\nimport { TuiCheckboxComponent, TuiCheckboxModule } from '@taiga-ui/kit/components/checkbox';\n\nclass TuiCheckboxBlockComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, modeDirective) {\n        super(control, cdr);\n        this.modeDirective = modeDirective;\n        this.contentAlign = 'right';\n        this.hideCheckbox = false;\n        this.size = 'l';\n    }\n    get nativeFocusableElement() {\n        return this.checkbox ? this.checkbox.nativeFocusableElement : null;\n    }\n    get checked() {\n        return this.value !== false && this.hideCheckbox;\n    }\n    get checkboxSize() {\n        return this.size === 'l' ? 'l' : 'm';\n    }\n    get focused() {\n        return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get appearance() {\n        var _a;\n        if (!((_a = this.modeDirective) === null || _a === void 0 ? void 0 : _a.mode)) {\n            return this.checked\n                ? \"whiteblock-active\" /* WhiteblockActive */\n                : \"whiteblock\" /* Whiteblock */;\n        }\n        return this.checked ? \"primary\" /* Primary */ : \"secondary\" /* Secondary */;\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n    }\n    onFocusVisible(focusVisible) {\n        this.updateFocusVisible(focusVisible);\n    }\n    /** @deprecated use 'value' setter */\n    onModelChange(value) {\n        this.value = value;\n    }\n}\nTuiCheckboxBlockComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxBlockComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TuiModeDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nTuiCheckboxBlockComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiCheckboxBlockComponent, selector: \"tui-checkbox-block\", inputs: { contentAlign: \"contentAlign\", hideCheckbox: \"hideCheckbox\", size: \"size\" }, host: { properties: { \"attr.data-align\": \"this.contentAlign\", \"class._hidden_input\": \"this.hideCheckbox\", \"attr.data-size\": \"this.size\", \"class._active\": \"this.checked\" } }, providers: [\n        tuiAsFocusableItemAccessor(TuiCheckboxBlockComponent),\n        tuiAsControl(TuiCheckboxBlockComponent),\n    ], viewQueries: [{ propertyName: \"checkbox\", first: true, predicate: TuiCheckboxComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<label\\n    tuiWrapper\\n    class=\\\"t-wrapper\\\"\\n    [appearance]=\\\"appearance\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [focus]=\\\"computedFocusVisible\\\"\\n    [hover]=\\\"pseudoHover\\\"\\n    [active]=\\\"pseudoActive\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n>\\n    <tui-checkbox\\n        class=\\\"t-view\\\"\\n        [disabled]=\\\"computedDisabled || readOnly\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoInvalid]=\\\"computedInvalid\\\"\\n        [pseudoFocus]=\\\"false\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [pseudoActive]=\\\"pseudoActive\\\"\\n        [size]=\\\"checkboxSize\\\"\\n        [focusable]=\\\"focusable\\\"\\n        [(ngModel)]=\\\"value\\\"\\n        (focusedChange)=\\\"onFocused($event)\\\"\\n        (focusVisibleChange)=\\\"onFocusVisible($event)\\\"\\n    ></tui-checkbox>\\n    <div class=\\\"t-label\\\">\\n        <ng-content></ng-content>\\n    </div>\\n</label>\\n\", styles: [\":host{font:var(--tui-font-text-s);color:var(--tui-text-01);display:inline-block;vertical-align:top;align-items:flex-start;border-radius:var(--tui-radius-m)}:host[data-size=m],:host[data-size=l]{font:var(--tui-font-text-m)}:host._disabled,:host._readonly{pointer-events:none}.t-wrapper{position:relative;display:flex;align-items:inherit;box-sizing:border-box;border-radius:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;padding:0 1rem 0 0}:host[data-align=right] .t-wrapper{flex-direction:row-reverse;padding:0 0 0 1rem}:host[data-size=s] .t-wrapper{min-height:var(--tui-height-s)}:host[data-size=m] .t-wrapper{min-height:var(--tui-height-m)}:host[data-size=l] .t-wrapper{min-height:var(--tui-height-l)}:host[data-size=s]._hidden_input .t-wrapper{padding:0 1rem}:host[data-size=m]._hidden_input .t-wrapper{padding:0 1.5rem}:host[data-size=l]._hidden_input .t-wrapper{padding:0 2.25rem}:host[data-size=s] .t-view{margin:calc(var(--tui-height-s) / 2 - .5rem) .5rem}:host[data-size=m] .t-view{margin:calc(var(--tui-height-m) / 2 - .5rem) .75rem}:host[data-size=l] .t-view{margin:calc(var(--tui-height-l) / 2 - .75rem) 1rem}:host._hidden_input .t-view{position:absolute;height:1px;width:1px;margin:-1px;border:0;padding:0;overflow:hidden;clip:rect(0,0,0,0);-webkit-clip-path:inset(0);clip-path:inset(0)}.t-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex-grow:1;align-self:center}:host._hidden_input .t-label{text-align:center}\\n\"], components: [{ type: i1.TuiCheckboxComponent, selector: \"tui-checkbox\", inputs: [\"size\"] }], directives: [{ type: i2.TuiWrapperDirective, selector: \"[tuiWrapper]\", inputs: [\"disabled\", \"readOnly\", \"hover\", \"active\", \"focus\", \"invalid\", \"appearance\"] }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiCheckboxBlockComponent.prototype, \"contentAlign\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiCheckboxBlockComponent.prototype, \"hideCheckbox\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiCheckboxBlockComponent.prototype, \"size\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxBlockComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-checkbox-block',\n                    templateUrl: './checkbox-block.template.html',\n                    styleUrls: ['./checkbox-block.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiCheckboxBlockComponent),\n                        tuiAsControl(TuiCheckboxBlockComponent),\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i3.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i2.TuiModeDirective, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TuiModeDirective]\n                }] }]; }, propDecorators: { checkbox: [{\n                type: ViewChild,\n                args: [TuiCheckboxComponent]\n            }], contentAlign: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['attr.data-align']\n            }], hideCheckbox: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['class._hidden_input']\n            }], size: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['attr.data-size']\n            }], checked: [{\n                type: HostBinding,\n                args: ['class._active']\n            }] } });\n\nclass TuiCheckboxBlockModule {\n}\nTuiCheckboxBlockModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxBlockModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiCheckboxBlockModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxBlockModule, declarations: [TuiCheckboxBlockComponent], imports: [FormsModule,\n        TuiHoveredModule,\n        TuiPressedModule,\n        TuiCheckboxModule,\n        TuiWrapperModule], exports: [TuiCheckboxBlockComponent] });\nTuiCheckboxBlockModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxBlockModule, imports: [[\n            FormsModule,\n            TuiHoveredModule,\n            TuiPressedModule,\n            TuiCheckboxModule,\n            TuiWrapperModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCheckboxBlockModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        FormsModule,\n                        TuiHoveredModule,\n                        TuiPressedModule,\n                        TuiCheckboxModule,\n                        TuiWrapperModule,\n                    ],\n                    declarations: [TuiCheckboxBlockComponent],\n                    exports: [TuiCheckboxBlockComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCheckboxBlockComponent, TuiCheckboxBlockModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}