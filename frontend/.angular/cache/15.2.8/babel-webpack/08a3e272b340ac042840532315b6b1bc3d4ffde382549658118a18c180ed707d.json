{"ast":null,"code":"import { svgNodeFilter, CHAR_NO_BREAK_SPACE, CHAR_ZERO_WIDTH_SPACE } from '@taiga-ui/cdk';\nfunction tuiCheckFixedPosition(element) {\n  if (!element || typeof getComputedStyle === `undefined`) {\n    return false;\n  }\n  const style = getComputedStyle(element);\n  return style.getPropertyValue(`position`) === `fixed` || tuiCheckFixedPosition(element.parentElement);\n}\n\n/**\n * Calculates size of safe area on mobile devices (status bars)\n *\n * ATTENTION: Only use in browser environment\n */\nfunction tuiGetSafeAreaSize() {\n  if (!CSS.supports(`padding-top: env(safe-area-inset-top)`)) {\n    return 0;\n  }\n  const div = document.createElement(`div`);\n  div.style.paddingTop = `env(safe-area-inset-top)`;\n  document.body.appendChild(div);\n  const safeAreaSize = parseInt(window.getComputedStyle(div).paddingTop, 10) || 0;\n  document.body.removeChild(div);\n  return safeAreaSize;\n}\nfunction tuiGetScreenWidth(doc) {\n  return Math.max(doc.documentElement.clientWidth, doc.defaultView ? doc.defaultView.innerWidth : 0);\n}\n\n/**\n * @description:\n * Cross-browser @media (height)\n *\n * 1. window.innerWidth\n * 1.1. gets CSS viewport @media (height) which include scrollbars\n * 1.2. initial-scale and zoom variations may cause mobile values to\n *      wrongly scale down to what PPK calls the visual\n *      viewport and be smaller than the @media values\n *  1.3. zoom may cause values to be 1px off due to native rounding\n *\n *  2. document.documentElement.clientHeight\n *  2.1. equals CSS viewport width minus scrollbar width\n *  2.2. matches @media (height) when there is no scrollbar\n *  2.3. available cross-browser\n *  2.4. inaccurate if doctype is missing\n */\nfunction tuiGetViewportHeight({\n  document,\n  innerHeight\n}) {\n  return Math.max(document.documentElement.clientHeight || 0, innerHeight || 0);\n}\n\n/**\n * @description:\n * Cross-browser @media (width)\n *\n * 1. window.innerWidth\n * 1.1. gets CSS viewport @media (width) which include scrollbars\n * 1.2. initial-scale and zoom variations may cause mobile values to\n *      wrongly scale down to what PPK calls the visual\n *      viewport and be smaller than the @media values\n *  1.3. zoom may cause values to be 1px off due to native rounding\n *\n *  2. document.documentElement.clientWidth\n *  2.1. equals CSS viewport width minus scrollbar width\n *  2.2. matches @media (width) when there is no scrollbar\n *  2.3. available cross-browser\n *  2.4. inaccurate if doctype is missing\n */\nfunction tuiGetViewportWidth({\n  document,\n  innerWidth\n}) {\n  return Math.max(document.documentElement.clientWidth || 0, innerWidth || 0);\n}\n\n/**\n * Creates a cloned range with its boundaries set at word boundaries\n *\n * @param currentRange a range to clone\n * @return modified range\n */\n// eslint-disable-next-line max-statements\nfunction tuiGetWordRange(currentRange) {\n  const range = currentRange.cloneRange();\n  const {\n    startContainer,\n    startOffset,\n    endContainer,\n    endOffset\n  } = range;\n  const {\n    ownerDocument\n  } = startContainer;\n  if (!ownerDocument) {\n    return range;\n  }\n  const treeWalker = ownerDocument.createTreeWalker(ownerDocument.body, NodeFilter.SHOW_TEXT, svgNodeFilter);\n  treeWalker.currentNode = startContainer;\n  do {\n    const container = treeWalker.currentNode;\n    const textContent = container.textContent || ``;\n    const content = container === startContainer ? textContent.slice(0, Math.max(0, startOffset + 1)) : textContent;\n    const offset = Math.max(content.lastIndexOf(` `), content.lastIndexOf(CHAR_NO_BREAK_SPACE), content.lastIndexOf(CHAR_ZERO_WIDTH_SPACE)) + 1;\n    range.setStart(container, 0);\n    if (offset) {\n      range.setStart(container, offset);\n      break;\n    }\n  } while (treeWalker.previousNode());\n  treeWalker.currentNode = endContainer;\n  do {\n    const container = treeWalker.currentNode;\n    const textContent = container.textContent || ``;\n    const content = container === endContainer ? textContent.slice(endOffset + 1) : textContent;\n    const offset = [content.indexOf(` `), content.indexOf(CHAR_NO_BREAK_SPACE), content.indexOf(CHAR_ZERO_WIDTH_SPACE)].reduce((result, item) => result === -1 || item === -1 ? Math.max(result, item) : Math.min(result, item), -1);\n    range.setEnd(container, textContent.length);\n    if (offset !== -1) {\n      range.setEnd(container, offset + textContent.length - content.length);\n      break;\n    }\n  } while (treeWalker.nextNode());\n  return range;\n}\nconst WIDTH_SEARCH = `width=\"`;\nconst HEIGHT_SEARCH = `height=\"`;\nconst START = `<svg`;\nfunction tuiProcessIcon(source, name) {\n  if (source.includes(`id=\"${name}\"`)) {\n    return source;\n  }\n  const src = source.slice(Math.max(0, source.indexOf(START)));\n  const attributes = src.slice(0, Math.max(0, src.indexOf(`>`)));\n  if (!(attributes === null || attributes === void 0 ? void 0 : attributes.includes(WIDTH_SEARCH)) || !attributes.includes(HEIGHT_SEARCH)) {\n    return `${src.replace(START, `<svg xmlns=\"http://www.w3.org/2000/svg\"><g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg`)}</g></svg>`;\n  }\n  const indexOfWidth = attributes.indexOf(WIDTH_SEARCH);\n  const indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);\n  const widthOffset = indexOfWidth + WIDTH_SEARCH.length;\n  const heightOffset = indexOfHeight + HEIGHT_SEARCH.length;\n  const widthString = attributes.slice(widthOffset, attributes.indexOf(`\"`, widthOffset));\n  const heightString = attributes.slice(heightOffset, attributes.indexOf(`\"`, heightOffset));\n  if (!heightString || !widthString || widthString.includes(`%`) || heightString.includes(`%`) || widthString.includes(`em`) || heightString.includes(`em`)) {\n    return src.replace(START, `<svg id=\"${name}\"`);\n  }\n  const width = parseInt(widthString, 10);\n  const height = parseInt(heightString, 10);\n  return `<g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg  x=\"50%\" y=\"50%\" width=\"${width / 16}em\" height=\"${height / 16}em\" overflow=\"visible\" viewBox=\"0 0 ${width} ${height}\"><svg x=\"${-width / 2}\" y=\"${-height / 2}\">${src}</svg></svg></g>`;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiCheckFixedPosition, tuiGetSafeAreaSize, tuiGetScreenWidth, tuiGetViewportHeight, tuiGetViewportWidth, tuiGetWordRange, tuiProcessIcon };","map":{"version":3,"names":["svgNodeFilter","CHAR_NO_BREAK_SPACE","CHAR_ZERO_WIDTH_SPACE","tuiCheckFixedPosition","element","getComputedStyle","style","getPropertyValue","parentElement","tuiGetSafeAreaSize","CSS","supports","div","document","createElement","paddingTop","body","appendChild","safeAreaSize","parseInt","window","removeChild","tuiGetScreenWidth","doc","Math","max","documentElement","clientWidth","defaultView","innerWidth","tuiGetViewportHeight","innerHeight","clientHeight","tuiGetViewportWidth","tuiGetWordRange","currentRange","range","cloneRange","startContainer","startOffset","endContainer","endOffset","ownerDocument","treeWalker","createTreeWalker","NodeFilter","SHOW_TEXT","currentNode","container","textContent","content","slice","offset","lastIndexOf","setStart","previousNode","indexOf","reduce","result","item","min","setEnd","length","nextNode","WIDTH_SEARCH","HEIGHT_SEARCH","START","tuiProcessIcon","source","name","includes","src","attributes","replace","indexOfWidth","indexOfHeight","widthOffset","heightOffset","widthString","heightString","width","height"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-utils-dom.js"],"sourcesContent":["import { svgNodeFilter, CHAR_NO_BREAK_SPACE, CHAR_ZERO_WIDTH_SPACE } from '@taiga-ui/cdk';\n\nfunction tuiCheckFixedPosition(element) {\n    if (!element || typeof getComputedStyle === `undefined`) {\n        return false;\n    }\n    const style = getComputedStyle(element);\n    return (style.getPropertyValue(`position`) === `fixed` ||\n        tuiCheckFixedPosition(element.parentElement));\n}\n\n/**\n * Calculates size of safe area on mobile devices (status bars)\n *\n * ATTENTION: Only use in browser environment\n */\nfunction tuiGetSafeAreaSize() {\n    if (!CSS.supports(`padding-top: env(safe-area-inset-top)`)) {\n        return 0;\n    }\n    const div = document.createElement(`div`);\n    div.style.paddingTop = `env(safe-area-inset-top)`;\n    document.body.appendChild(div);\n    const safeAreaSize = parseInt(window.getComputedStyle(div).paddingTop, 10) || 0;\n    document.body.removeChild(div);\n    return safeAreaSize;\n}\n\nfunction tuiGetScreenWidth(doc) {\n    return Math.max(doc.documentElement.clientWidth, doc.defaultView ? doc.defaultView.innerWidth : 0);\n}\n\n/**\n * @description:\n * Cross-browser @media (height)\n *\n * 1. window.innerWidth\n * 1.1. gets CSS viewport @media (height) which include scrollbars\n * 1.2. initial-scale and zoom variations may cause mobile values to\n *      wrongly scale down to what PPK calls the visual\n *      viewport and be smaller than the @media values\n *  1.3. zoom may cause values to be 1px off due to native rounding\n *\n *  2. document.documentElement.clientHeight\n *  2.1. equals CSS viewport width minus scrollbar width\n *  2.2. matches @media (height) when there is no scrollbar\n *  2.3. available cross-browser\n *  2.4. inaccurate if doctype is missing\n */\nfunction tuiGetViewportHeight({ document, innerHeight }) {\n    return Math.max(document.documentElement.clientHeight || 0, innerHeight || 0);\n}\n\n/**\n * @description:\n * Cross-browser @media (width)\n *\n * 1. window.innerWidth\n * 1.1. gets CSS viewport @media (width) which include scrollbars\n * 1.2. initial-scale and zoom variations may cause mobile values to\n *      wrongly scale down to what PPK calls the visual\n *      viewport and be smaller than the @media values\n *  1.3. zoom may cause values to be 1px off due to native rounding\n *\n *  2. document.documentElement.clientWidth\n *  2.1. equals CSS viewport width minus scrollbar width\n *  2.2. matches @media (width) when there is no scrollbar\n *  2.3. available cross-browser\n *  2.4. inaccurate if doctype is missing\n */\nfunction tuiGetViewportWidth({ document, innerWidth }) {\n    return Math.max(document.documentElement.clientWidth || 0, innerWidth || 0);\n}\n\n/**\n * Creates a cloned range with its boundaries set at word boundaries\n *\n * @param currentRange a range to clone\n * @return modified range\n */\n// eslint-disable-next-line max-statements\nfunction tuiGetWordRange(currentRange) {\n    const range = currentRange.cloneRange();\n    const { startContainer, startOffset, endContainer, endOffset } = range;\n    const { ownerDocument } = startContainer;\n    if (!ownerDocument) {\n        return range;\n    }\n    const treeWalker = ownerDocument.createTreeWalker(ownerDocument.body, NodeFilter.SHOW_TEXT, svgNodeFilter);\n    treeWalker.currentNode = startContainer;\n    do {\n        const container = treeWalker.currentNode;\n        const textContent = container.textContent || ``;\n        const content = container === startContainer\n            ? textContent.slice(0, Math.max(0, startOffset + 1))\n            : textContent;\n        const offset = Math.max(content.lastIndexOf(` `), content.lastIndexOf(CHAR_NO_BREAK_SPACE), content.lastIndexOf(CHAR_ZERO_WIDTH_SPACE)) + 1;\n        range.setStart(container, 0);\n        if (offset) {\n            range.setStart(container, offset);\n            break;\n        }\n    } while (treeWalker.previousNode());\n    treeWalker.currentNode = endContainer;\n    do {\n        const container = treeWalker.currentNode;\n        const textContent = container.textContent || ``;\n        const content = container === endContainer ? textContent.slice(endOffset + 1) : textContent;\n        const offset = [\n            content.indexOf(` `),\n            content.indexOf(CHAR_NO_BREAK_SPACE),\n            content.indexOf(CHAR_ZERO_WIDTH_SPACE),\n        ].reduce((result, item) => result === -1 || item === -1\n            ? Math.max(result, item)\n            : Math.min(result, item), -1);\n        range.setEnd(container, textContent.length);\n        if (offset !== -1) {\n            range.setEnd(container, offset + textContent.length - content.length);\n            break;\n        }\n    } while (treeWalker.nextNode());\n    return range;\n}\n\nconst WIDTH_SEARCH = `width=\"`;\nconst HEIGHT_SEARCH = `height=\"`;\nconst START = `<svg`;\nfunction tuiProcessIcon(source, name) {\n    if (source.includes(`id=\"${name}\"`)) {\n        return source;\n    }\n    const src = source.slice(Math.max(0, source.indexOf(START)));\n    const attributes = src.slice(0, Math.max(0, src.indexOf(`>`)));\n    if (!(attributes === null || attributes === void 0 ? void 0 : attributes.includes(WIDTH_SEARCH)) || !attributes.includes(HEIGHT_SEARCH)) {\n        return `${src.replace(START, `<svg xmlns=\"http://www.w3.org/2000/svg\"><g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg`)}</g></svg>`;\n    }\n    const indexOfWidth = attributes.indexOf(WIDTH_SEARCH);\n    const indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);\n    const widthOffset = indexOfWidth + WIDTH_SEARCH.length;\n    const heightOffset = indexOfHeight + HEIGHT_SEARCH.length;\n    const widthString = attributes.slice(widthOffset, attributes.indexOf(`\"`, widthOffset));\n    const heightString = attributes.slice(heightOffset, attributes.indexOf(`\"`, heightOffset));\n    if (!heightString ||\n        !widthString ||\n        widthString.includes(`%`) ||\n        heightString.includes(`%`) ||\n        widthString.includes(`em`) ||\n        heightString.includes(`em`)) {\n        return src.replace(START, `<svg id=\"${name}\"`);\n    }\n    const width = parseInt(widthString, 10);\n    const height = parseInt(heightString, 10);\n    return `<g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg  x=\"50%\" y=\"50%\" width=\"${width / 16}em\" height=\"${height / 16}em\" overflow=\"visible\" viewBox=\"0 0 ${width} ${height}\"><svg x=\"${-width / 2}\" y=\"${-height / 2}\">${src}</svg></svg></g>`;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiCheckFixedPosition, tuiGetSafeAreaSize, tuiGetScreenWidth, tuiGetViewportHeight, tuiGetViewportWidth, tuiGetWordRange, tuiProcessIcon };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}