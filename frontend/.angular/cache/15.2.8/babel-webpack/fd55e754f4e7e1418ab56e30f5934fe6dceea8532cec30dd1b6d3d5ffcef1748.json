{"ast":null,"code":"import { tuiIsString } from '@taiga-ui/cdk/utils/miscellaneous';\n\n/**\n * @description:\n * Any ‘linearGradient’ attributes which are defined on the referenced\n * element which are not defined on this element are inherited by this element.\n * If this element has no defined gradient stops, and the referenced element does\n * (possibly due to its own ‘xlink:href’ attribute), then this element inherits\n * the gradient stop from the referenced element. Inheritance can be indirect\n * to an arbitrary level; thus, if the referenced element inherits attribute\n * or gradient stops due to its own ‘xlink:href’ attribute, then the current\n * element can inherit those attributes or gradient stops.\n *\n * Documentation: https://www.w3.org/TR/SVG11/pservers.html\n *\n */\nfunction tuiSvgLinearGradientProcessor(svg, salt) {\n  if (tuiIsString(svg)) {\n    const uniqueIds = extractLinearGradientIdsFromSvg(svg);\n    return uniqueIds.reduce((newSvg, previousId) => {\n      const escapedId = escapeRegExp(previousId);\n      const newId = `${previousId}_${salt || makeRandomSalt()}`;\n      return newSvg.replace(new RegExp(`\"${escapedId}\"`, `g`), `\"${newId}\"`).replace(new RegExp(`'${escapedId}'`, `g`), `'${newId}'`).replace(new RegExp(`url\\\\('#${escapedId}'\\\\)`, `g`), `url('#${newId}')`).replace(new RegExp(`url\\\\(\"#${escapedId}\"\\\\)`, `g`), `url(\"#${newId}\")`).replace(new RegExp(`url\\\\(#${escapedId}\\\\)`, `g`), `url(#${newId})`);\n    }, svg);\n  }\n  return svg;\n}\nfunction makeRandomSalt() {\n  return Math.floor(Math.random() * Date.now());\n}\nfunction escapeRegExp(search) {\n  return search.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, `\\\\$&`);\n}\nfunction extractLinearGradientIdsFromSvg(svg) {\n  var _a;\n  const ids = ((_a = svg.match(/url\\((\"?)('*)#(.*?)('*)\\)/g)) !== null && _a !== void 0 ? _a : []).map(url => url.slice(4, url.length - 1).replace(/['\"#]+/g, ``));\n  return Array.from(new Set(ids));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiSvgLinearGradientProcessor };","map":{"version":3,"names":["tuiIsString","tuiSvgLinearGradientProcessor","svg","salt","uniqueIds","extractLinearGradientIdsFromSvg","reduce","newSvg","previousId","escapedId","escapeRegExp","newId","makeRandomSalt","replace","RegExp","Math","floor","random","Date","now","search","_a","ids","match","map","url","slice","length","Array","from","Set"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/cdk/fesm2015/taiga-ui-cdk-utils-svg.js"],"sourcesContent":["import { tuiIsString } from '@taiga-ui/cdk/utils/miscellaneous';\n\n/**\n * @description:\n * Any ‘linearGradient’ attributes which are defined on the referenced\n * element which are not defined on this element are inherited by this element.\n * If this element has no defined gradient stops, and the referenced element does\n * (possibly due to its own ‘xlink:href’ attribute), then this element inherits\n * the gradient stop from the referenced element. Inheritance can be indirect\n * to an arbitrary level; thus, if the referenced element inherits attribute\n * or gradient stops due to its own ‘xlink:href’ attribute, then the current\n * element can inherit those attributes or gradient stops.\n *\n * Documentation: https://www.w3.org/TR/SVG11/pservers.html\n *\n */\nfunction tuiSvgLinearGradientProcessor(svg, salt) {\n    if (tuiIsString(svg)) {\n        const uniqueIds = extractLinearGradientIdsFromSvg(svg);\n        return uniqueIds.reduce((newSvg, previousId) => {\n            const escapedId = escapeRegExp(previousId);\n            const newId = `${previousId}_${salt || makeRandomSalt()}`;\n            return newSvg\n                .replace(new RegExp(`\"${escapedId}\"`, `g`), `\"${newId}\"`)\n                .replace(new RegExp(`'${escapedId}'`, `g`), `'${newId}'`)\n                .replace(new RegExp(`url\\\\('#${escapedId}'\\\\)`, `g`), `url('#${newId}')`)\n                .replace(new RegExp(`url\\\\(\"#${escapedId}\"\\\\)`, `g`), `url(\"#${newId}\")`)\n                .replace(new RegExp(`url\\\\(#${escapedId}\\\\)`, `g`), `url(#${newId})`);\n        }, svg);\n    }\n    return svg;\n}\nfunction makeRandomSalt() {\n    return Math.floor(Math.random() * Date.now());\n}\nfunction escapeRegExp(search) {\n    return search.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, `\\\\$&`);\n}\nfunction extractLinearGradientIdsFromSvg(svg) {\n    var _a;\n    const ids = ((_a = svg.match(/url\\((\"?)('*)#(.*?)('*)\\)/g)) !== null && _a !== void 0 ? _a : []).map(url => url.slice(4, url.length - 1).replace(/['\"#]+/g, ``));\n    return Array.from(new Set(ids));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiSvgLinearGradientProcessor };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mCAAmC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,6BAA6B,CAACC,GAAG,EAAEC,IAAI,EAAE;EAC9C,IAAIH,WAAW,CAACE,GAAG,CAAC,EAAE;IAClB,MAAME,SAAS,GAAGC,+BAA+B,CAACH,GAAG,CAAC;IACtD,OAAOE,SAAS,CAACE,MAAM,CAAC,CAACC,MAAM,EAAEC,UAAU,KAAK;MAC5C,MAAMC,SAAS,GAAGC,YAAY,CAACF,UAAU,CAAC;MAC1C,MAAMG,KAAK,GAAI,GAAEH,UAAW,IAAGL,IAAI,IAAIS,cAAc,EAAG,EAAC;MACzD,OAAOL,MAAM,CACRM,OAAO,CAAC,IAAIC,MAAM,CAAE,IAAGL,SAAU,GAAE,EAAG,GAAE,CAAC,EAAG,IAAGE,KAAM,GAAE,CAAC,CACxDE,OAAO,CAAC,IAAIC,MAAM,CAAE,IAAGL,SAAU,GAAE,EAAG,GAAE,CAAC,EAAG,IAAGE,KAAM,GAAE,CAAC,CACxDE,OAAO,CAAC,IAAIC,MAAM,CAAE,WAAUL,SAAU,MAAK,EAAG,GAAE,CAAC,EAAG,SAAQE,KAAM,IAAG,CAAC,CACxEE,OAAO,CAAC,IAAIC,MAAM,CAAE,WAAUL,SAAU,MAAK,EAAG,GAAE,CAAC,EAAG,SAAQE,KAAM,IAAG,CAAC,CACxEE,OAAO,CAAC,IAAIC,MAAM,CAAE,UAASL,SAAU,KAAI,EAAG,GAAE,CAAC,EAAG,QAAOE,KAAM,GAAE,CAAC;IAC7E,CAAC,EAAET,GAAG,CAAC;EACX;EACA,OAAOA,GAAG;AACd;AACA,SAASU,cAAc,GAAG;EACtB,OAAOG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGC,IAAI,CAACC,GAAG,EAAE,CAAC;AACjD;AACA,SAAST,YAAY,CAACU,MAAM,EAAE;EAC1B,OAAOA,MAAM,CAACP,OAAO,CAAC,0BAA0B,EAAG,MAAK,CAAC;AAC7D;AACA,SAASR,+BAA+B,CAACH,GAAG,EAAE;EAC1C,IAAImB,EAAE;EACN,MAAMC,GAAG,GAAG,CAAC,CAACD,EAAE,GAAGnB,GAAG,CAACqB,KAAK,CAAC,4BAA4B,CAAC,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,EAAEG,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,EAAED,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC,CAACd,OAAO,CAAC,SAAS,EAAG,EAAC,CAAC,CAAC;EAChK,OAAOe,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACR,GAAG,CAAC,CAAC;AACnC;;AAEA;AACA;AACA;;AAEA,SAASrB,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}