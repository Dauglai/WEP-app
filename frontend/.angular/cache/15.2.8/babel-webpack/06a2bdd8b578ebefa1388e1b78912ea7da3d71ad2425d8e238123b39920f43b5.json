{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Inject, ChangeDetectorRef, Optional, Self, ViewChild, Input, HostListener, Directive, NgModule } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { TuiIdService, AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, tuiIsNativeFocused, TuiTime, TUI_STRICT_MATCHER, tuiIsElement, tuiIsInput, TUI_IS_MOBILE, TUI_IS_IOS, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, tuiPure } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_HOST, TUI_TEXTFIELD_SIZE, tuiAsDataListHost, tuiAsOptionContent, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiDataListModule, TuiWrapperModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiSvgModule } from '@taiga-ui/core';\nimport { TUI_SELECT_OPTION, TuiSelectOptionModule } from '@taiga-ui/kit/components/select-option';\nimport { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_TIME_TEXTS } from '@taiga-ui/kit/tokens';\nimport { tuiCreateTimeMask, tuiCreateAutoCorrectedTimePipe } from '@taiga-ui/kit/utils/mask';\nimport { map } from 'rxjs/operators';\nimport { MAX_TIME_VALUES } from '@taiga-ui/kit/constants';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@taiga-ui/kit/directives';\nimport { TextMaskModule, TuiValueAccessorModule } from '@taiga-ui/kit/directives';\nimport * as i5 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as i7 from 'rxjs';\nconst _c0 = [\"tuiTime\", \"\"];\nfunction TuiNativeTimeComponent_datalist_0_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"option\", 3);\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r2);\n  }\n}\nfunction TuiNativeTimeComponent_datalist_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"datalist\", 1);\n    i0.ɵɵtemplate(1, TuiNativeTimeComponent_datalist_0_option_1_Template, 1, 1, \"option\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r0.autoIdString);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.items);\n  }\n}\nfunction TuiInputTimeComponent_ng_template_5_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disabledItemHandler(item_r5))(\"value\", item_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r5, \" \");\n  }\n}\nfunction TuiInputTimeComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-data-list\", 5);\n    i0.ɵɵtemplate(1, TuiInputTimeComponent_ng_template_5_button_1_Template, 2, 3, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r1.itemSize);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.filtered);\n  }\n}\nfunction TuiInputTimeComponent_ng_template_7_tui_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-svg\", 10);\n  }\n  if (rf & 2) {\n    const src_r8 = ctx.polymorpheusOutlet;\n    i0.ɵɵproperty(\"src\", src_r8);\n  }\n}\nfunction TuiInputTimeComponent_ng_template_7_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 11);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction TuiInputTimeComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiInputTimeComponent_ng_template_7_tui_svg_0_Template, 1, 1, \"tui-svg\", 8);\n    i0.ɵɵtemplate(1, TuiInputTimeComponent_ng_template_7_input_1_Template, 1, 0, \"input\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r3.icon)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(3, _c1, ctx_r3.size));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showNativePicker);\n  }\n}\nconst _c2 = [\"*\"];\nconst TUI_INPUT_TIME_DEFAULT_OPTIONS = {\n  icon: ({\n    $implicit\n  }) => $implicit === `s` ? `tuiIconClock` : `tuiIconClockLarge`,\n  mode: `HH:MM`,\n  postfix: ``,\n  maxValues: MAX_TIME_VALUES,\n  itemSize: `m`,\n  nativePicker: false\n};\n/**\n * Default parameters for InputTime component\n */\nconst TUI_INPUT_TIME_OPTIONS = new InjectionToken(`[TUI_INPUT_TIME_OPTIONS]`, {\n  factory: () => TUI_INPUT_TIME_DEFAULT_OPTIONS\n});\nconst tuiInputTimeOptionsProvider = options => ({\n  provide: TUI_INPUT_TIME_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_INPUT_TIME_DEFAULT_OPTIONS), options)\n});\nclass TuiNativeTimeComponent {\n  constructor(host, idService) {\n    this.host = host;\n    this.autoIdString = idService.generate();\n  }\n  get items() {\n    return this.host.items.map(item => item.toString(this.host.mode));\n  }\n  get value() {\n    return this.host.value.length === this.host.mode.length ? this.host.value : '';\n  }\n  get step() {\n    switch (this.host.mode) {\n      case 'HH:MM:SS':\n        return 1;\n      case 'HH:MM:SS.MSS':\n        return 0.001;\n      default:\n        return 60;\n    }\n  }\n  onChange(value) {\n    this.host.onValueChange(value);\n  }\n}\nTuiNativeTimeComponent.ɵfac = function TuiNativeTimeComponent_Factory(t) {\n  return new (t || TuiNativeTimeComponent)(i0.ɵɵdirectiveInject(TUI_TEXTFIELD_HOST), i0.ɵɵdirectiveInject(TuiIdService));\n};\nTuiNativeTimeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiNativeTimeComponent,\n  selectors: [[\"input\", \"tuiTime\", \"\"]],\n  hostAttrs: [\"type\", \"time\"],\n  hostVars: 4,\n  hostBindings: function TuiNativeTimeComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change.stop\", function TuiNativeTimeComponent_change_stop_HostBindingHandler($event) {\n        return ctx.onChange($event.target.value);\n      })(\"click.stop.silent\", function TuiNativeTimeComponent_click_stop_silent_HostBindingHandler() {\n        return 0;\n      })(\"mousedown.stop.silent\", function TuiNativeTimeComponent_mousedown_stop_silent_HostBindingHandler() {\n        return 0;\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", -1)(\"value\", ctx.value)(\"step\", ctx.step);\n      i0.ɵɵattribute(\"list\", ctx.autoIdString);\n    }\n  },\n  attrs: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"id\", 4, \"ngIf\"], [3, \"id\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function TuiNativeTimeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TuiNativeTimeComponent_datalist_0_Template, 2, 2, \"datalist\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.items.length);\n    }\n  },\n  dependencies: [i4.NgIf, i4.NgForOf],\n  styles: [\"[_nghost-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;pointer-events:auto;font-size:2rem}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiNativeTimeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'input[tuiTime]',\n      template: `\n        <datalist\n            *ngIf=\"items.length\"\n            [id]=\"autoIdString\"\n        >\n            <option\n                *ngFor=\"let item of items\"\n                value=\"{{ item }}\"\n            ></option>\n        </datalist>\n    `,\n      host: {\n        type: 'time',\n        '[attr.list]': 'autoIdString',\n        '[tabIndex]': '-1',\n        '[value]': 'value',\n        '[step]': 'step',\n        '(change.stop)': 'onChange($event.target.value)',\n        '(click.stop.silent)': '0',\n        '(mousedown.stop.silent)': '0'\n      },\n      styleUrls: ['./native-time.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TEXTFIELD_HOST]\n      }]\n    }, {\n      type: i2.TuiIdService,\n      decorators: [{\n        type: Inject,\n        args: [TuiIdService]\n      }]\n    }];\n  }, null);\n})();\nclass TuiInputTimeComponent extends AbstractTuiNullableControl {\n  constructor(control, cdr, timeTexts$, options, isMobile, textfieldSize, isIos) {\n    super(control, cdr);\n    this.timeTexts$ = timeTexts$;\n    this.options = options;\n    this.isMobile = isMobile;\n    this.textfieldSize = textfieldSize;\n    this.isIos = isIos;\n    this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n    this.items = [];\n    this.itemSize = this.options.itemSize;\n    this.strict = false;\n    this.mode = this.options.mode;\n    /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n    this.postfix = this.options.postfix;\n    this.open = false;\n  }\n  get nativeFocusableElement() {\n    return this.textfield ? this.textfield.nativeFocusableElement : null;\n  }\n  get focused() {\n    return tuiIsNativeFocused(this.nativeFocusableElement);\n  }\n  get canOpen() {\n    return this.interactive && !!this.filtered.length;\n  }\n  get filtered() {\n    return this.filter(this.items, this.mode, this.computedSearch);\n  }\n  get showNativePicker() {\n    return this.nativePicker && (!this.isIos || this.mode === 'HH:MM' && !this.items.length);\n  }\n  get nativeDatalist() {\n    return this.nativePicker && !this.isIos;\n  }\n  get size() {\n    return this.textfieldSize.size;\n  }\n  get textMaskOptions() {\n    return this.calculateMask(this.mode);\n  }\n  get computedValue() {\n    return this.value ? this.value.toString(this.mode) : this.nativeValue;\n  }\n  get computedSearch() {\n    return this.computedValue.length !== this.mode.length ? this.computedValue : '';\n  }\n  get innerPseudoFocused() {\n    if (this.pseudoFocus === false) {\n      return false;\n    }\n    if (this.open && this.canOpen || this.computedFocused) {\n      return true;\n    }\n    return null;\n  }\n  get icon() {\n    return this.options.icon;\n  }\n  get nativeValue() {\n    return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n  }\n  set nativeValue(value) {\n    if (!this.nativeFocusableElement) {\n      return;\n    }\n    this.nativeFocusableElement.value = value;\n  }\n  getFiller$(mode) {\n    return this.timeTexts$.pipe(map(texts => texts[mode]));\n  }\n  onClick() {\n    this.open = !this.open;\n  }\n  onValueChange(value) {\n    this.open = !!this.items.length;\n    if (this.control) {\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    const match = this.getMatch(value);\n    if (match !== undefined) {\n      this.value = match;\n      return;\n    }\n    if (value.length !== this.mode.length) {\n      this.value = null;\n      return;\n    }\n    const time = TuiTime.fromString(value);\n    this.value = this.strict ? this.findNearestTimeFromItems(time) : time;\n  }\n  onFocused(focused) {\n    this.updateFocused(focused);\n    if (focused || this.value !== null || this.nativeValue === '' || this.mode === 'HH:MM') {\n      return;\n    }\n    this.value = TuiTime.fromString(this.nativeValue);\n    setTimeout(() => {\n      if (this.nativeValue.endsWith('.') || this.nativeValue.endsWith(':')) {\n        this.nativeValue = this.nativeValue.slice(0, -1);\n      }\n    });\n  }\n  onArrowUp(event) {\n    if (this.items.length) {\n      return;\n    }\n    this.processArrow(event, 1);\n  }\n  onArrowDown(event) {\n    if (this.items.length) {\n      return;\n    }\n    this.processArrow(event, -1);\n  }\n  handleOption(item) {\n    this.focusInput();\n    this.value = item;\n  }\n  onOpen(open) {\n    this.open = open;\n  }\n  writeValue(value) {\n    super.writeValue(value);\n    this.nativeValue = value ? this.computedValue : '';\n  }\n  get nativePicker() {\n    return !!this.options.nativePicker && this.isMobile;\n  }\n  calculateMask(mode) {\n    return {\n      mask: tuiCreateTimeMask(mode, this.options.maxValues),\n      pipe: tuiCreateAutoCorrectedTimePipe(mode, this.options.maxValues),\n      guide: false\n    };\n  }\n  filter(items, mode, search) {\n    return items.filter(item => item.toString(mode).includes(search));\n  }\n  findNearestTimeFromItems(value) {\n    return this.items.reduce((previous, current) => Math.abs(current.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) < Math.abs(previous.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) ? current : previous);\n  }\n  getMatch(value) {\n    return this.items.find(item => TUI_STRICT_MATCHER(item, value));\n  }\n  close() {\n    this.open = false;\n  }\n  processArrow(event, shift) {\n    const {\n      target\n    } = event;\n    if (this.readOnly || !tuiIsElement(target) || !tuiIsInput(target)) {\n      return;\n    }\n    const selectionStart = target.selectionStart || 0;\n    this.shiftTime(this.calculateShift(selectionStart, shift));\n    target.setSelectionRange(selectionStart, selectionStart);\n    event.preventDefault();\n  }\n  calculateShift(selectionStart, shift) {\n    if (selectionStart <= 2) {\n      return {\n        hours: shift\n      };\n    }\n    if (selectionStart <= 5) {\n      return {\n        minutes: shift\n      };\n    }\n    if (selectionStart <= 8) {\n      return {\n        seconds: shift\n      };\n    }\n    return {\n      ms: shift\n    };\n  }\n  shiftTime(shift) {\n    if (this.value === null) {\n      return;\n    }\n    const increasedTime = this.value.shift(shift);\n    // Manual update so we can set caret position properly\n    this.nativeValue = increasedTime.toString(this.mode);\n    this.value = increasedTime;\n  }\n  focusInput(preventScroll = false) {\n    if (this.nativeFocusableElement) {\n      this.nativeFocusableElement.focus({\n        preventScroll\n      });\n      this.close();\n    }\n  }\n}\nTuiInputTimeComponent.ɵfac = function TuiInputTimeComponent_Factory(t) {\n  return new (t || TuiInputTimeComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_TIME_TEXTS), i0.ɵɵdirectiveInject(TUI_INPUT_TIME_OPTIONS), i0.ɵɵdirectiveInject(TUI_IS_MOBILE), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE), i0.ɵɵdirectiveInject(TUI_IS_IOS));\n};\nTuiInputTimeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiInputTimeComponent,\n  selectors: [[\"tui-input-time\"]],\n  viewQuery: function TuiInputTimeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n    }\n  },\n  hostBindings: function TuiInputTimeComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function TuiInputTimeComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    disabledItemHandler: \"disabledItemHandler\",\n    items: \"items\",\n    itemSize: \"itemSize\",\n    strict: \"strict\",\n    mode: \"mode\",\n    postfix: \"postfix\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputTimeComponent), tuiAsControl(TuiInputTimeComponent), tuiAsDataListHost(TuiInputTimeComponent), tuiAsOptionContent(TUI_SELECT_OPTION)], [FIXED_DROPDOWN_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 9,\n  vars: 18,\n  consts: [[1, \"t-wrapper\", 3, \"canOpen\", \"content\", \"open\", \"openChange\", \"focusedChange\"], [\"tuiValueAccessor\", \"\", 1, \"t-textfield\", 3, \"tuiTextfieldFiller\", \"nativeId\", \"pseudoFocus\", \"pseudoHover\", \"pseudoActive\", \"invalid\", \"focusable\", \"disabled\", \"readOnly\", \"textMask\", \"tuiTextfieldIcon\", \"value\", \"postfix\", \"valueChange\", \"keydown.arrowUp\", \"keydown.arrowDown\"], [\"tuiTextfield\", \"\", \"inputmode\", \"numeric\"], [\"dropdownContent\", \"\"], [\"iconContent\", \"\"], [\"automation-id\", \"tui-input-time__dropdown\", 3, \"size\"], [\"tuiOption\", \"\", \"automation-id\", \"tui-input-time__item\", 3, \"disabled\", \"value\", 4, \"ngFor\", \"ngForOf\"], [\"tuiOption\", \"\", \"automation-id\", \"tui-input-time__item\", 3, \"disabled\", \"value\"], [\"tuiWrapper\", \"\", \"appearance\", \"icon\", 3, \"src\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"tuiTime\", \"\", 4, \"ngIf\"], [\"tuiWrapper\", \"\", \"appearance\", \"icon\", 3, \"src\"], [\"tuiTime\", \"\"]],\n  template: function TuiInputTimeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 0);\n      i0.ɵɵlistener(\"openChange\", function TuiInputTimeComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n        return ctx.onOpen($event);\n      })(\"focusedChange\", function TuiInputTimeComponent_Template_tui_hosted_dropdown_focusedChange_0_listener($event) {\n        return ctx.onFocused($event);\n      });\n      i0.ɵɵelementStart(1, \"tui-primitive-textfield\", 1);\n      i0.ɵɵlistener(\"valueChange\", function TuiInputTimeComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n        return ctx.onValueChange($event);\n      })(\"keydown.arrowUp\", function TuiInputTimeComponent_Template_tui_primitive_textfield_keydown_arrowUp_1_listener($event) {\n        return ctx.onArrowUp($event);\n      })(\"keydown.arrowDown\", function TuiInputTimeComponent_Template_tui_primitive_textfield_keydown_arrowDown_1_listener($event) {\n        return ctx.onArrowDown($event);\n      });\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵprojection(3);\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, TuiInputTimeComponent_ng_template_5_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(7, TuiInputTimeComponent_ng_template_7_Template, 2, 5, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n      const _r2 = i0.ɵɵreference(8);\n      i0.ɵɵproperty(\"canOpen\", ctx.canOpen && !ctx.nativeDatalist)(\"content\", _r0)(\"open\", ctx.canOpen && ctx.open);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"tuiTextfieldFiller\", i0.ɵɵpipeBind1(2, 16, ctx.getFiller$(ctx.mode)) || \"\")(\"nativeId\", ctx.nativeId)(\"pseudoFocus\", ctx.innerPseudoFocused)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoActive\", ctx.pseudoActive)(\"invalid\", ctx.computedInvalid)(\"focusable\", ctx.focusable)(\"disabled\", ctx.disabled)(\"readOnly\", ctx.readOnly)(\"textMask\", ctx.textMaskOptions)(\"tuiTextfieldIcon\", _r2)(\"value\", ctx.computedValue)(\"postfix\", ctx.postfix);\n    }\n  },\n  dependencies: [i1.TuiHostedDropdownComponent, i1.TuiPrimitiveTextfieldComponent, i1.TuiTextfieldComponent, i1.TuiDataListComponent, i1.TuiOptionComponent, i1.TuiSvgComponent, TuiNativeTimeComponent, i1.TuiPrimitiveTextfieldDirective, i3.TuiValueAccessorDirective, i1.TuiTextfieldFillerDirective, i3.MaskedInputDirective, i1.TuiTextfieldIconDirective, i4.NgForOf, i5.PolymorpheusOutletDirective, i1.TuiWrapperDirective, i4.NgIf, i4.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}._disabled[_nghost-%COMP%]{pointer-events:none}.t-wrapper[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiInputTimeComponent.prototype, \"disabledItemHandler\", void 0);\n__decorate([tuiDefaultProp()], TuiInputTimeComponent.prototype, \"items\", void 0);\n__decorate([tuiDefaultProp()], TuiInputTimeComponent.prototype, \"itemSize\", void 0);\n__decorate([tuiDefaultProp()], TuiInputTimeComponent.prototype, \"strict\", void 0);\n__decorate([tuiDefaultProp()], TuiInputTimeComponent.prototype, \"mode\", void 0);\n__decorate([tuiDefaultProp()], TuiInputTimeComponent.prototype, \"postfix\", void 0);\n__decorate([tuiPure], TuiInputTimeComponent.prototype, \"getFiller$\", null);\n__decorate([tuiPure], TuiInputTimeComponent.prototype, \"calculateMask\", null);\n__decorate([tuiPure], TuiInputTimeComponent.prototype, \"filter\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputTimeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-input-time',\n      templateUrl: './input-time.template.html',\n      styleUrls: ['./input-time.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputTimeComponent), tuiAsControl(TuiInputTimeComponent), tuiAsDataListHost(TuiInputTimeComponent), tuiAsOptionContent(TUI_SELECT_OPTION)],\n      viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER]\n    }]\n  }], function () {\n    return [{\n      type: i6.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i7.Observable,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TIME_TEXTS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_INPUT_TIME_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_IS_MOBILE]\n      }]\n    }, {\n      type: i1.TuiTextfieldSizeDirective,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TEXTFIELD_SIZE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_IS_IOS]\n      }]\n    }];\n  }, {\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    postfix: [{\n      type: Input\n    }],\n    getFiller$: [],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    calculateMask: [],\n    filter: []\n  });\n})();\nclass TuiInputTimeDirective extends AbstractTuiTextfieldHost {\n  get value() {\n    return this.host.computedValue;\n  }\n  get mode() {\n    return this.host.mode;\n  }\n  get items() {\n    return this.host.items;\n  }\n  onValueChange(value) {\n    if (!value) {\n      this.host.nativeValue = '';\n    }\n    this.host.onValueChange(value);\n  }\n  process(input) {\n    input.inputMode = 'numeric';\n  }\n}\nTuiInputTimeDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiInputTimeDirective_BaseFactory;\n  return function TuiInputTimeDirective_Factory(t) {\n    return (ɵTuiInputTimeDirective_BaseFactory || (ɵTuiInputTimeDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputTimeDirective)))(t || TuiInputTimeDirective);\n  };\n}();\nTuiInputTimeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiInputTimeDirective,\n  selectors: [[\"tui-input-time\"]],\n  features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputTimeDirective)]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputTimeDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tui-input-time',\n      providers: [tuiAsTextfieldHost(TuiInputTimeDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiInputTimeModule {}\nTuiInputTimeModule.ɵfac = function TuiInputTimeModule_Factory(t) {\n  return new (t || TuiInputTimeModule)();\n};\nTuiInputTimeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiInputTimeModule\n});\nTuiInputTimeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TextMaskModule, TuiSelectOptionModule, TuiDataListModule, TuiWrapperModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiValueAccessorModule, TuiTextfieldControllerModule, TuiSvgModule, PolymorpheusModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputTimeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TextMaskModule, TuiSelectOptionModule, TuiDataListModule, TuiWrapperModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiValueAccessorModule, TuiTextfieldControllerModule, TuiSvgModule, PolymorpheusModule],\n      declarations: [TuiInputTimeComponent, TuiNativeTimeComponent, TuiInputTimeDirective],\n      exports: [TuiInputTimeComponent, TuiInputTimeDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_TIME_DEFAULT_OPTIONS, TUI_INPUT_TIME_OPTIONS, TuiInputTimeComponent, TuiInputTimeDirective, TuiInputTimeModule, tuiInputTimeOptionsProvider };","map":{"version":3,"names":["__decorate","i0","InjectionToken","Component","ChangeDetectionStrategy","Inject","ChangeDetectorRef","Optional","Self","ViewChild","Input","HostListener","Directive","NgModule","i6","NgControl","i2","TuiIdService","AbstractTuiNullableControl","ALWAYS_FALSE_HANDLER","tuiIsNativeFocused","TuiTime","TUI_STRICT_MATCHER","tuiIsElement","tuiIsInput","TUI_IS_MOBILE","TUI_IS_IOS","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","tuiPure","i1","TUI_TEXTFIELD_HOST","TUI_TEXTFIELD_SIZE","tuiAsDataListHost","tuiAsOptionContent","TuiPrimitiveTextfieldComponent","AbstractTuiTextfieldHost","tuiAsTextfieldHost","TuiDataListModule","TuiWrapperModule","TuiHostedDropdownModule","TuiPrimitiveTextfieldModule","TuiTextfieldControllerModule","TuiSvgModule","TUI_SELECT_OPTION","TuiSelectOptionModule","FIXED_DROPDOWN_CONTROLLER_PROVIDER","TUI_TIME_TEXTS","tuiCreateTimeMask","tuiCreateAutoCorrectedTimePipe","map","MAX_TIME_VALUES","i4","CommonModule","i3","TextMaskModule","TuiValueAccessorModule","i5","PolymorpheusModule","i7","TUI_INPUT_TIME_DEFAULT_OPTIONS","icon","$implicit","mode","postfix","maxValues","itemSize","nativePicker","TUI_INPUT_TIME_OPTIONS","factory","tuiInputTimeOptionsProvider","options","provide","useValue","Object","assign","TuiNativeTimeComponent","constructor","host","idService","autoIdString","generate","items","item","toString","value","length","step","onChange","onValueChange","ɵfac","ɵcmp","NgIf","NgForOf","type","args","selector","template","styleUrls","changeDetection","OnPush","undefined","decorators","TuiInputTimeComponent","control","cdr","timeTexts$","isMobile","textfieldSize","isIos","disabledItemHandler","strict","open","nativeFocusableElement","textfield","focused","canOpen","interactive","filtered","filter","computedSearch","showNativePicker","nativeDatalist","size","textMaskOptions","calculateMask","computedValue","nativeValue","innerPseudoFocused","pseudoFocus","computedFocused","getFiller$","pipe","texts","onClick","updateValueAndValidity","emitEvent","match","getMatch","time","fromString","findNearestTimeFromItems","onFocused","updateFocused","setTimeout","endsWith","slice","onArrowUp","event","processArrow","onArrowDown","handleOption","focusInput","onOpen","writeValue","mask","guide","search","includes","reduce","previous","current","Math","abs","toAbsoluteMilliseconds","find","close","shift","target","readOnly","selectionStart","shiftTime","calculateShift","setSelectionRange","preventDefault","hours","minutes","seconds","ms","increasedTime","preventScroll","focus","TuiHostedDropdownComponent","TuiTextfieldComponent","TuiDataListComponent","TuiOptionComponent","TuiSvgComponent","TuiPrimitiveTextfieldDirective","TuiValueAccessorDirective","TuiTextfieldFillerDirective","MaskedInputDirective","TuiTextfieldIconDirective","PolymorpheusOutletDirective","TuiWrapperDirective","AsyncPipe","prototype","templateUrl","providers","viewProviders","Observable","TuiTextfieldSizeDirective","TuiInputTimeDirective","process","input","inputMode","ɵdir","TuiInputTimeModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-input-time.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Inject, ChangeDetectorRef, Optional, Self, ViewChild, Input, HostListener, Directive, NgModule } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { TuiIdService, AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, tuiIsNativeFocused, TuiTime, TUI_STRICT_MATCHER, tuiIsElement, tuiIsInput, TUI_IS_MOBILE, TUI_IS_IOS, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, tuiPure } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_HOST, TUI_TEXTFIELD_SIZE, tuiAsDataListHost, tuiAsOptionContent, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiDataListModule, TuiWrapperModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiSvgModule } from '@taiga-ui/core';\nimport { TUI_SELECT_OPTION, TuiSelectOptionModule } from '@taiga-ui/kit/components/select-option';\nimport { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_TIME_TEXTS } from '@taiga-ui/kit/tokens';\nimport { tuiCreateTimeMask, tuiCreateAutoCorrectedTimePipe } from '@taiga-ui/kit/utils/mask';\nimport { map } from 'rxjs/operators';\nimport { MAX_TIME_VALUES } from '@taiga-ui/kit/constants';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@taiga-ui/kit/directives';\nimport { TextMaskModule, TuiValueAccessorModule } from '@taiga-ui/kit/directives';\nimport * as i5 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as i7 from 'rxjs';\n\nconst TUI_INPUT_TIME_DEFAULT_OPTIONS = {\n    icon: ({ $implicit }) => ($implicit === `s` ? `tuiIconClock` : `tuiIconClockLarge`),\n    mode: `HH:MM`,\n    postfix: ``,\n    maxValues: MAX_TIME_VALUES,\n    itemSize: `m`,\n    nativePicker: false,\n};\n/**\n * Default parameters for InputTime component\n */\nconst TUI_INPUT_TIME_OPTIONS = new InjectionToken(`[TUI_INPUT_TIME_OPTIONS]`, {\n    factory: () => TUI_INPUT_TIME_DEFAULT_OPTIONS,\n});\nconst tuiInputTimeOptionsProvider = (options) => ({\n    provide: TUI_INPUT_TIME_OPTIONS,\n    useValue: Object.assign(Object.assign({}, TUI_INPUT_TIME_DEFAULT_OPTIONS), options),\n});\n\nclass TuiNativeTimeComponent {\n    constructor(host, idService) {\n        this.host = host;\n        this.autoIdString = idService.generate();\n    }\n    get items() {\n        return this.host.items.map(item => item.toString(this.host.mode));\n    }\n    get value() {\n        return this.host.value.length === this.host.mode.length ? this.host.value : '';\n    }\n    get step() {\n        switch (this.host.mode) {\n            case 'HH:MM:SS':\n                return 1;\n            case 'HH:MM:SS.MSS':\n                return 0.001;\n            default:\n                return 60;\n        }\n    }\n    onChange(value) {\n        this.host.onValueChange(value);\n    }\n}\nTuiNativeTimeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiNativeTimeComponent, deps: [{ token: TUI_TEXTFIELD_HOST }, { token: TuiIdService }], target: i0.ɵɵFactoryTarget.Component });\nTuiNativeTimeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiNativeTimeComponent, selector: \"input[tuiTime]\", host: { attributes: { \"type\": \"time\" }, listeners: { \"change.stop\": \"onChange($event.target.value)\", \"click.stop.silent\": \"0\", \"mousedown.stop.silent\": \"0\" }, properties: { \"attr.list\": \"autoIdString\", \"tabIndex\": \"-1\", \"value\": \"value\", \"step\": \"step\" } }, ngImport: i0, template: `\n        <datalist\n            *ngIf=\"items.length\"\n            [id]=\"autoIdString\"\n        >\n            <option\n                *ngFor=\"let item of items\"\n                value=\"{{ item }}\"\n            ></option>\n        </datalist>\n    `, isInline: true, styles: [\":host{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;pointer-events:auto;font-size:2rem}\\n\"], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiNativeTimeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'input[tuiTime]',\n                    template: `\n        <datalist\n            *ngIf=\"items.length\"\n            [id]=\"autoIdString\"\n        >\n            <option\n                *ngFor=\"let item of items\"\n                value=\"{{ item }}\"\n            ></option>\n        </datalist>\n    `,\n                    host: {\n                        type: 'time',\n                        '[attr.list]': 'autoIdString',\n                        '[tabIndex]': '-1',\n                        '[value]': 'value',\n                        '[step]': 'step',\n                        '(change.stop)': 'onChange($event.target.value)',\n                        '(click.stop.silent)': '0',\n                        '(mousedown.stop.silent)': '0',\n                    },\n                    styleUrls: ['./native-time.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_TEXTFIELD_HOST]\n                }] }, { type: i2.TuiIdService, decorators: [{\n                    type: Inject,\n                    args: [TuiIdService]\n                }] }]; } });\n\nclass TuiInputTimeComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, timeTexts$, options, isMobile, textfieldSize, isIos) {\n        super(control, cdr);\n        this.timeTexts$ = timeTexts$;\n        this.options = options;\n        this.isMobile = isMobile;\n        this.textfieldSize = textfieldSize;\n        this.isIos = isIos;\n        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n        this.items = [];\n        this.itemSize = this.options.itemSize;\n        this.strict = false;\n        this.mode = this.options.mode;\n        /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n        this.postfix = this.options.postfix;\n        this.open = false;\n    }\n    get nativeFocusableElement() {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n    get focused() {\n        return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get canOpen() {\n        return this.interactive && !!this.filtered.length;\n    }\n    get filtered() {\n        return this.filter(this.items, this.mode, this.computedSearch);\n    }\n    get showNativePicker() {\n        return (this.nativePicker &&\n            (!this.isIos || (this.mode === 'HH:MM' && !this.items.length)));\n    }\n    get nativeDatalist() {\n        return this.nativePicker && !this.isIos;\n    }\n    get size() {\n        return this.textfieldSize.size;\n    }\n    get textMaskOptions() {\n        return this.calculateMask(this.mode);\n    }\n    get computedValue() {\n        return this.value ? this.value.toString(this.mode) : this.nativeValue;\n    }\n    get computedSearch() {\n        return this.computedValue.length !== this.mode.length ? this.computedValue : '';\n    }\n    get innerPseudoFocused() {\n        if (this.pseudoFocus === false) {\n            return false;\n        }\n        if ((this.open && this.canOpen) || this.computedFocused) {\n            return true;\n        }\n        return null;\n    }\n    get icon() {\n        return this.options.icon;\n    }\n    get nativeValue() {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n    set nativeValue(value) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n        this.nativeFocusableElement.value = value;\n    }\n    getFiller$(mode) {\n        return this.timeTexts$.pipe(map(texts => texts[mode]));\n    }\n    onClick() {\n        this.open = !this.open;\n    }\n    onValueChange(value) {\n        this.open = !!this.items.length;\n        if (this.control) {\n            this.control.updateValueAndValidity({ emitEvent: false });\n        }\n        const match = this.getMatch(value);\n        if (match !== undefined) {\n            this.value = match;\n            return;\n        }\n        if (value.length !== this.mode.length) {\n            this.value = null;\n            return;\n        }\n        const time = TuiTime.fromString(value);\n        this.value = this.strict ? this.findNearestTimeFromItems(time) : time;\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n        if (focused ||\n            this.value !== null ||\n            this.nativeValue === '' ||\n            this.mode === 'HH:MM') {\n            return;\n        }\n        this.value = TuiTime.fromString(this.nativeValue);\n        setTimeout(() => {\n            if (this.nativeValue.endsWith('.') || this.nativeValue.endsWith(':')) {\n                this.nativeValue = this.nativeValue.slice(0, -1);\n            }\n        });\n    }\n    onArrowUp(event) {\n        if (this.items.length) {\n            return;\n        }\n        this.processArrow(event, 1);\n    }\n    onArrowDown(event) {\n        if (this.items.length) {\n            return;\n        }\n        this.processArrow(event, -1);\n    }\n    handleOption(item) {\n        this.focusInput();\n        this.value = item;\n    }\n    onOpen(open) {\n        this.open = open;\n    }\n    writeValue(value) {\n        super.writeValue(value);\n        this.nativeValue = value ? this.computedValue : '';\n    }\n    get nativePicker() {\n        return !!this.options.nativePicker && this.isMobile;\n    }\n    calculateMask(mode) {\n        return {\n            mask: tuiCreateTimeMask(mode, this.options.maxValues),\n            pipe: tuiCreateAutoCorrectedTimePipe(mode, this.options.maxValues),\n            guide: false,\n        };\n    }\n    filter(items, mode, search) {\n        return items.filter(item => item.toString(mode).includes(search));\n    }\n    findNearestTimeFromItems(value) {\n        return this.items.reduce((previous, current) => Math.abs(current.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) <\n            Math.abs(previous.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds())\n            ? current\n            : previous);\n    }\n    getMatch(value) {\n        return this.items.find(item => TUI_STRICT_MATCHER(item, value));\n    }\n    close() {\n        this.open = false;\n    }\n    processArrow(event, shift) {\n        const { target } = event;\n        if (this.readOnly || !tuiIsElement(target) || !tuiIsInput(target)) {\n            return;\n        }\n        const selectionStart = target.selectionStart || 0;\n        this.shiftTime(this.calculateShift(selectionStart, shift));\n        target.setSelectionRange(selectionStart, selectionStart);\n        event.preventDefault();\n    }\n    calculateShift(selectionStart, shift) {\n        if (selectionStart <= 2) {\n            return { hours: shift };\n        }\n        if (selectionStart <= 5) {\n            return { minutes: shift };\n        }\n        if (selectionStart <= 8) {\n            return { seconds: shift };\n        }\n        return { ms: shift };\n    }\n    shiftTime(shift) {\n        if (this.value === null) {\n            return;\n        }\n        const increasedTime = this.value.shift(shift);\n        // Manual update so we can set caret position properly\n        this.nativeValue = increasedTime.toString(this.mode);\n        this.value = increasedTime;\n    }\n    focusInput(preventScroll = false) {\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.focus({ preventScroll });\n            this.close();\n        }\n    }\n}\nTuiInputTimeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputTimeComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TUI_TIME_TEXTS }, { token: TUI_INPUT_TIME_OPTIONS }, { token: TUI_IS_MOBILE }, { token: TUI_TEXTFIELD_SIZE }, { token: TUI_IS_IOS }], target: i0.ɵɵFactoryTarget.Component });\nTuiInputTimeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputTimeComponent, selector: \"tui-input-time\", inputs: { disabledItemHandler: \"disabledItemHandler\", items: \"items\", itemSize: \"itemSize\", strict: \"strict\", mode: \"mode\", postfix: \"postfix\" }, host: { listeners: { \"click\": \"onClick()\" } }, providers: [\n        tuiAsFocusableItemAccessor(TuiInputTimeComponent),\n        tuiAsControl(TuiInputTimeComponent),\n        tuiAsDataListHost(TuiInputTimeComponent),\n        tuiAsOptionContent(TUI_SELECT_OPTION),\n    ], viewQueries: [{ propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tui-hosted-dropdown\\n    class=\\\"t-wrapper\\\"\\n    [canOpen]=\\\"canOpen && !nativeDatalist\\\"\\n    [content]=\\\"dropdownContent\\\"\\n    [open]=\\\"canOpen && open\\\"\\n    (openChange)=\\\"onOpen($event)\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [tuiTextfieldFiller]=\\\"(getFiller$(mode) | async) || ''\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoFocus]=\\\"innerPseudoFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [pseudoActive]=\\\"pseudoActive\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [focusable]=\\\"focusable\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [textMask]=\\\"textMaskOptions\\\"\\n        [tuiTextfieldIcon]=\\\"iconContent\\\"\\n        [value]=\\\"computedValue\\\"\\n        [postfix]=\\\"postfix\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n        (keydown.arrowUp)=\\\"onArrowUp($event)\\\"\\n        (keydown.arrowDown)=\\\"onArrowDown($event)\\\"\\n    >\\n        <ng-content></ng-content>\\n        <input\\n            tuiTextfield\\n            inputmode=\\\"numeric\\\"\\n        />\\n    </tui-primitive-textfield>\\n</tui-hosted-dropdown>\\n<ng-template #dropdownContent>\\n    <tui-data-list\\n        automation-id=\\\"tui-input-time__dropdown\\\"\\n        [size]=\\\"itemSize\\\"\\n    >\\n        <button\\n            *ngFor=\\\"let item of filtered\\\"\\n            tuiOption\\n            automation-id=\\\"tui-input-time__item\\\"\\n            [disabled]=\\\"disabledItemHandler(item)\\\"\\n            [value]=\\\"item\\\"\\n        >\\n            {{ item }}\\n        </button>\\n    </tui-data-list>\\n</ng-template>\\n\\n<ng-template #iconContent>\\n    <tui-svg\\n        *polymorpheusOutlet=\\\"icon as src; context: {$implicit: size}\\\"\\n        tuiWrapper\\n        appearance=\\\"icon\\\"\\n        [src]=\\\"src\\\"\\n    ></tui-svg>\\n    <input\\n        *ngIf=\\\"showNativePicker\\\"\\n        tuiTime\\n    />\\n</ng-template>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:left}:host._disabled{pointer-events:none}.t-wrapper{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"], components: [{ type: i1.TuiHostedDropdownComponent, selector: \"tui-hosted-dropdown\", inputs: [\"content\", \"sided\", \"canOpen\", \"open\"], outputs: [\"openChange\", \"focusedChange\"] }, { type: i1.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"filler\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"prefix\", \"postfix\", \"value\"], outputs: [\"valueChange\"] }, { type: i1.TuiTextfieldComponent, selector: \"input[tuiTextfield], textarea[tuiTextfield]\" }, { type: i1.TuiDataListComponent, selector: \"tui-data-list\", inputs: [\"role\", \"emptyContent\", \"size\"] }, { type: i1.TuiOptionComponent, selector: \"button[tuiOption], a[tuiOption]\", inputs: [\"size\", \"role\", \"disabled\", \"value\"] }, { type: i1.TuiSvgComponent, selector: \"tui-svg\", inputs: [\"src\"] }, { type: TuiNativeTimeComponent, selector: \"input[tuiTime]\" }], directives: [{ type: i1.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { type: i3.TuiValueAccessorDirective, selector: \"[tuiValueAccessor]\" }, { type: i1.TuiTextfieldFillerDirective, selector: \"[tuiTextfieldFiller]\", inputs: [\"tuiTextfieldFiller\"] }, { type: i3.MaskedInputDirective, selector: \"[textMask]\", inputs: [\"textMask\"], exportAs: [\"textMask\"] }, { type: i1.TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: [\"tuiTextfieldIcon\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.PolymorpheusOutletDirective, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { type: i1.TuiWrapperDirective, selector: \"[tuiWrapper]\", inputs: [\"disabled\", \"readOnly\", \"hover\", \"active\", \"focus\", \"invalid\", \"appearance\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"async\": i4.AsyncPipe }, viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiInputTimeComponent.prototype, \"disabledItemHandler\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputTimeComponent.prototype, \"items\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputTimeComponent.prototype, \"itemSize\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputTimeComponent.prototype, \"strict\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputTimeComponent.prototype, \"mode\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputTimeComponent.prototype, \"postfix\", void 0);\n__decorate([\n    tuiPure\n], TuiInputTimeComponent.prototype, \"getFiller$\", null);\n__decorate([\n    tuiPure\n], TuiInputTimeComponent.prototype, \"calculateMask\", null);\n__decorate([\n    tuiPure\n], TuiInputTimeComponent.prototype, \"filter\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputTimeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-input-time',\n                    templateUrl: './input-time.template.html',\n                    styleUrls: ['./input-time.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiInputTimeComponent),\n                        tuiAsControl(TuiInputTimeComponent),\n                        tuiAsDataListHost(TuiInputTimeComponent),\n                        tuiAsOptionContent(TUI_SELECT_OPTION),\n                    ],\n                    viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER],\n                }]\n        }], ctorParameters: function () { return [{ type: i6.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i7.Observable, decorators: [{\n                    type: Inject,\n                    args: [TUI_TIME_TEXTS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_INPUT_TIME_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_IS_MOBILE]\n                }] }, { type: i1.TuiTextfieldSizeDirective, decorators: [{\n                    type: Inject,\n                    args: [TUI_TEXTFIELD_SIZE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_IS_IOS]\n                }] }]; }, propDecorators: { textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }], disabledItemHandler: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], postfix: [{\n                type: Input\n            }], getFiller$: [], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], calculateMask: [], filter: [] } });\n\nclass TuiInputTimeDirective extends AbstractTuiTextfieldHost {\n    get value() {\n        return this.host.computedValue;\n    }\n    get mode() {\n        return this.host.mode;\n    }\n    get items() {\n        return this.host.items;\n    }\n    onValueChange(value) {\n        if (!value) {\n            this.host.nativeValue = '';\n        }\n        this.host.onValueChange(value);\n    }\n    process(input) {\n        input.inputMode = 'numeric';\n    }\n}\nTuiInputTimeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputTimeDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiInputTimeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputTimeDirective, selector: \"tui-input-time\", providers: [tuiAsTextfieldHost(TuiInputTimeDirective)], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputTimeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'tui-input-time',\n                    providers: [tuiAsTextfieldHost(TuiInputTimeDirective)],\n                }]\n        }] });\n\nclass TuiInputTimeModule {\n}\nTuiInputTimeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputTimeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiInputTimeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputTimeModule, declarations: [TuiInputTimeComponent, TuiNativeTimeComponent, TuiInputTimeDirective], imports: [CommonModule,\n        TextMaskModule,\n        TuiSelectOptionModule,\n        TuiDataListModule,\n        TuiWrapperModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiValueAccessorModule,\n        TuiTextfieldControllerModule,\n        TuiSvgModule,\n        PolymorpheusModule], exports: [TuiInputTimeComponent, TuiInputTimeDirective] });\nTuiInputTimeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputTimeModule, imports: [[\n            CommonModule,\n            TextMaskModule,\n            TuiSelectOptionModule,\n            TuiDataListModule,\n            TuiWrapperModule,\n            TuiHostedDropdownModule,\n            TuiPrimitiveTextfieldModule,\n            TuiValueAccessorModule,\n            TuiTextfieldControllerModule,\n            TuiSvgModule,\n            PolymorpheusModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputTimeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TextMaskModule,\n                        TuiSelectOptionModule,\n                        TuiDataListModule,\n                        TuiWrapperModule,\n                        TuiHostedDropdownModule,\n                        TuiPrimitiveTextfieldModule,\n                        TuiValueAccessorModule,\n                        TuiTextfieldControllerModule,\n                        TuiSvgModule,\n                        PolymorpheusModule,\n                    ],\n                    declarations: [TuiInputTimeComponent, TuiNativeTimeComponent, TuiInputTimeDirective],\n                    exports: [TuiInputTimeComponent, TuiInputTimeDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_TIME_DEFAULT_OPTIONS, TUI_INPUT_TIME_OPTIONS, TuiInputTimeComponent, TuiInputTimeDirective, TuiInputTimeModule, tuiInputTimeOptionsProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}