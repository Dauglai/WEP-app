{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, Optional, SkipSelf, Inject, Self, Injector, NgModule } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport * as i1 from '@angular/forms';\nimport { NgControl, ControlContainer } from '@angular/forms';\nimport { TuiValidationError, tuiIsString, tuiPure } from '@taiga-ui/cdk';\nimport { TUI_VALIDATION_ERRORS } from '@taiga-ui/kit/tokens';\nimport { of, isObservable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nconst EMPTY_RECORD = {};\nclass TuiFieldErrorPipe {\n  constructor(parent, self, container, validationErrors) {\n    this.parent = parent;\n    this.self = self;\n    this.container = container;\n    this.validationErrors = validationErrors;\n    this.order = [];\n    if (this.self && !this.self.valueAccessor) {\n      this.self.valueAccessor = this;\n    }\n  }\n  transform(order) {\n    this.order = order;\n    return this.computedError;\n  }\n  get computedError() {\n    return this.invalid && this.touched && this.error || of(null);\n  }\n  registerOnChange() {}\n  registerOnTouched() {}\n  setDisabledState() {}\n  writeValue() {}\n  get error() {\n    const {\n      errorId\n    } = this;\n    if (!errorId) {\n      return null;\n    }\n    const firstError = this.controlErrors[errorId];\n    const errorContent = this.validationErrors[errorId];\n    return this.getError(firstError, errorContent);\n  }\n  get invalid() {\n    var _a;\n    return !!((_a = this.control) === null || _a === void 0 ? void 0 : _a.invalid);\n  }\n  get touched() {\n    var _a;\n    return !!((_a = this.control) === null || _a === void 0 ? void 0 : _a.touched);\n  }\n  get control() {\n    var _a, _b, _c;\n    return ((_a = this.self) === null || _a === void 0 ? void 0 : _a.control) || ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.control) || ((_c = this.container) === null || _c === void 0 ? void 0 : _c.control);\n  }\n  get errorId() {\n    return this.getErrorId(this.order, this.controlErrors);\n  }\n  get controlErrors() {\n    var _a;\n    return ((_a = this.control) === null || _a === void 0 ? void 0 : _a.errors) || EMPTY_RECORD;\n  }\n  getErrorId(order, controlErrors) {\n    const id = order === null || order === void 0 ? void 0 : order.find(errorId => controlErrors[errorId]);\n    const fallback = Object.keys(controlErrors)[0];\n    return id || fallback || ``;\n  }\n  getError(context, content) {\n    if (context instanceof TuiValidationError) {\n      return of(context);\n    }\n    if (content === undefined && tuiIsString(context)) {\n      return of(new TuiValidationError(context));\n    }\n    if (isObservable(content)) {\n      return unwrapObservable(content, context);\n    }\n    if (content instanceof Function) {\n      const message = content(context);\n      return isObservable(message) ? unwrapObservable(message, context) : defaultError(message, context);\n    }\n    return defaultError(content, context);\n  }\n}\nTuiFieldErrorPipe.ɵfac = function TuiFieldErrorPipe_Factory(t) {\n  return new (t || TuiFieldErrorPipe)(i0.ɵɵdirectiveInject(NgControl, 28), i0.ɵɵdirectiveInject(NgControl, 26), i0.ɵɵdirectiveInject(ControlContainer, 24), i0.ɵɵdirectiveInject(TUI_VALIDATION_ERRORS, 16));\n};\nTuiFieldErrorPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"tuiFieldError\",\n  type: TuiFieldErrorPipe,\n  pure: false\n});\n__decorate([tuiPure], TuiFieldErrorPipe.prototype, \"getErrorId\", null);\n__decorate([tuiPure], TuiFieldErrorPipe.prototype, \"getError\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiFieldErrorPipe, [{\n    type: Pipe,\n    args: [{\n      name: `tuiFieldError`,\n      pure: false\n    }]\n  }], function () {\n    return [{\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i1.ControlContainer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ControlContainer]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_VALIDATION_ERRORS]\n      }]\n    }];\n  }, {\n    getErrorId: [],\n    getError: []\n  });\n})();\nfunction unwrapObservable(content, context) {\n  return content.pipe(map(error => new TuiValidationError(error || ``, context)));\n}\nfunction defaultError(content, context) {\n  return of(new TuiValidationError(content || ``, context));\n}\nclass TuiFieldErrorContentPipe {\n  constructor(injector) {\n    this.injector = injector;\n    this.localInjector = Injector.create({\n      providers: [{\n        provide: AsyncPipe\n      }, {\n        provide: TuiFieldErrorPipe\n      }],\n      parent: this.injector\n    });\n    this.asyncPipe = this.localInjector.get(AsyncPipe);\n    this.fieldErrorPipe = this.localInjector.get(TuiFieldErrorPipe);\n  }\n  transform(order) {\n    return this.getErrorContent(order);\n  }\n  ngOnDestroy() {\n    this.asyncPipe.ngOnDestroy();\n  }\n  getErrorContent(order) {\n    const error = this.asyncPipe.transform(this.fieldErrorPipe.transform(order));\n    if (!error) {\n      return ``;\n    }\n    return typeof error.message === `function` ? error.message(error.context) : error.message;\n  }\n}\nTuiFieldErrorContentPipe.ɵfac = function TuiFieldErrorContentPipe_Factory(t) {\n  return new (t || TuiFieldErrorContentPipe)(i0.ɵɵdirectiveInject(Injector, 16));\n};\nTuiFieldErrorContentPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"tuiFieldErrorContent\",\n  type: TuiFieldErrorContentPipe,\n  pure: false\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiFieldErrorContentPipe, [{\n    type: Pipe,\n    args: [{\n      name: `tuiFieldErrorContent`,\n      pure: false\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector,\n      decorators: [{\n        type: Inject,\n        args: [Injector]\n      }]\n    }];\n  }, null);\n})();\nclass TuiFieldErrorPipeModule {}\nTuiFieldErrorPipeModule.ɵfac = function TuiFieldErrorPipeModule_Factory(t) {\n  return new (t || TuiFieldErrorPipeModule)();\n};\nTuiFieldErrorPipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiFieldErrorPipeModule\n});\nTuiFieldErrorPipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiFieldErrorPipeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TuiFieldErrorPipe, TuiFieldErrorContentPipe],\n      exports: [TuiFieldErrorPipe, TuiFieldErrorContentPipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiFieldErrorContentPipe, TuiFieldErrorPipe, TuiFieldErrorPipeModule };","map":{"version":3,"names":["i0","Pipe","Optional","SkipSelf","Inject","Self","Injector","NgModule","AsyncPipe","__decorate","i1","NgControl","ControlContainer","TuiValidationError","tuiIsString","tuiPure","TUI_VALIDATION_ERRORS","of","isObservable","map","EMPTY_RECORD","TuiFieldErrorPipe","constructor","parent","self","container","validationErrors","order","valueAccessor","transform","computedError","invalid","touched","error","registerOnChange","registerOnTouched","setDisabledState","writeValue","errorId","firstError","controlErrors","errorContent","getError","_a","control","_b","_c","getErrorId","errors","id","find","fallback","Object","keys","context","content","undefined","unwrapObservable","Function","message","defaultError","ɵfac","ɵpipe","prototype","type","args","name","pure","decorators","pipe","TuiFieldErrorContentPipe","injector","localInjector","create","providers","provide","asyncPipe","get","fieldErrorPipe","getErrorContent","ngOnDestroy","TuiFieldErrorPipeModule","ɵmod","ɵinj","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-pipes-field-error.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, Optional, SkipSelf, Inject, Self, Injector, NgModule } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport * as i1 from '@angular/forms';\nimport { NgControl, ControlContainer } from '@angular/forms';\nimport { TuiValidationError, tuiIsString, tuiPure } from '@taiga-ui/cdk';\nimport { TUI_VALIDATION_ERRORS } from '@taiga-ui/kit/tokens';\nimport { of, isObservable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst EMPTY_RECORD = {};\nclass TuiFieldErrorPipe {\n    constructor(parent, self, container, validationErrors) {\n        this.parent = parent;\n        this.self = self;\n        this.container = container;\n        this.validationErrors = validationErrors;\n        this.order = [];\n        if (this.self && !this.self.valueAccessor) {\n            this.self.valueAccessor = this;\n        }\n    }\n    transform(order) {\n        this.order = order;\n        return this.computedError;\n    }\n    get computedError() {\n        return (this.invalid && this.touched && this.error) || of(null);\n    }\n    registerOnChange() { }\n    registerOnTouched() { }\n    setDisabledState() { }\n    writeValue() { }\n    get error() {\n        const { errorId } = this;\n        if (!errorId) {\n            return null;\n        }\n        const firstError = this.controlErrors[errorId];\n        const errorContent = this.validationErrors[errorId];\n        return this.getError(firstError, errorContent);\n    }\n    get invalid() {\n        var _a;\n        return !!((_a = this.control) === null || _a === void 0 ? void 0 : _a.invalid);\n    }\n    get touched() {\n        var _a;\n        return !!((_a = this.control) === null || _a === void 0 ? void 0 : _a.touched);\n    }\n    get control() {\n        var _a, _b, _c;\n        return ((_a = this.self) === null || _a === void 0 ? void 0 : _a.control) || ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.control) || ((_c = this.container) === null || _c === void 0 ? void 0 : _c.control);\n    }\n    get errorId() {\n        return this.getErrorId(this.order, this.controlErrors);\n    }\n    get controlErrors() {\n        var _a;\n        return ((_a = this.control) === null || _a === void 0 ? void 0 : _a.errors) || EMPTY_RECORD;\n    }\n    getErrorId(order, controlErrors) {\n        const id = order === null || order === void 0 ? void 0 : order.find(errorId => controlErrors[errorId]);\n        const fallback = Object.keys(controlErrors)[0];\n        return id || fallback || ``;\n    }\n    getError(context, content) {\n        if (context instanceof TuiValidationError) {\n            return of(context);\n        }\n        if (content === undefined && tuiIsString(context)) {\n            return of(new TuiValidationError(context));\n        }\n        if (isObservable(content)) {\n            return unwrapObservable(content, context);\n        }\n        if (content instanceof Function) {\n            const message = content(context);\n            return isObservable(message)\n                ? unwrapObservable(message, context)\n                : defaultError(message, context);\n        }\n        return defaultError(content, context);\n    }\n}\nTuiFieldErrorPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorPipe, deps: [{ token: NgControl, optional: true, skipSelf: true }, { token: NgControl, optional: true, self: true }, { token: ControlContainer, optional: true }, { token: TUI_VALIDATION_ERRORS }], target: i0.ɵɵFactoryTarget.Pipe });\nTuiFieldErrorPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorPipe, name: \"tuiFieldError\", pure: false });\n__decorate([\n    tuiPure\n], TuiFieldErrorPipe.prototype, \"getErrorId\", null);\n__decorate([\n    tuiPure\n], TuiFieldErrorPipe.prototype, \"getError\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: `tuiFieldError`,\n                    pure: false,\n                }]\n        }], ctorParameters: function () { return [{ type: i1.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i1.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i1.ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ControlContainer]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_VALIDATION_ERRORS]\n                }] }]; }, propDecorators: { getErrorId: [], getError: [] } });\nfunction unwrapObservable(content, context) {\n    return content.pipe(map(error => new TuiValidationError(error || ``, context)));\n}\nfunction defaultError(content, context) {\n    return of(new TuiValidationError(content || ``, context));\n}\n\nclass TuiFieldErrorContentPipe {\n    constructor(injector) {\n        this.injector = injector;\n        this.localInjector = Injector.create({\n            providers: [{ provide: AsyncPipe }, { provide: TuiFieldErrorPipe }],\n            parent: this.injector,\n        });\n        this.asyncPipe = this.localInjector.get(AsyncPipe);\n        this.fieldErrorPipe = this.localInjector.get(TuiFieldErrorPipe);\n    }\n    transform(order) {\n        return this.getErrorContent(order);\n    }\n    ngOnDestroy() {\n        this.asyncPipe.ngOnDestroy();\n    }\n    getErrorContent(order) {\n        const error = this.asyncPipe.transform(this.fieldErrorPipe.transform(order));\n        if (!error) {\n            return ``;\n        }\n        return typeof error.message === `function`\n            ? error.message(error.context)\n            : error.message;\n    }\n}\nTuiFieldErrorContentPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorContentPipe, deps: [{ token: Injector }], target: i0.ɵɵFactoryTarget.Pipe });\nTuiFieldErrorContentPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorContentPipe, name: \"tuiFieldErrorContent\", pure: false });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorContentPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: `tuiFieldErrorContent`,\n                    pure: false,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector, decorators: [{\n                    type: Inject,\n                    args: [Injector]\n                }] }]; } });\n\nclass TuiFieldErrorPipeModule {\n}\nTuiFieldErrorPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiFieldErrorPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorPipeModule, declarations: [TuiFieldErrorPipe, TuiFieldErrorContentPipe], exports: [TuiFieldErrorPipe, TuiFieldErrorContentPipe] });\nTuiFieldErrorPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorPipeModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiFieldErrorPipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TuiFieldErrorPipe, TuiFieldErrorContentPipe],\n                    exports: [TuiFieldErrorPipe, TuiFieldErrorContentPipe],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiFieldErrorContentPipe, TuiFieldErrorPipe, TuiFieldErrorPipeModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}