{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, Inject, NgModule } from '@angular/core';\nimport { DAYS_IN_WEEK, tuiAssert, tuiInRange, TuiDay } from '@taiga-ui/cdk';\nimport { TUI_FIRST_DAY_OF_WEEK } from '@taiga-ui/core/tokens';\n\n/**\n * Computes day of week offset of the beginning of the month\n */\nconst getMonthStartDaysOffset = (month, firstDayOfWeek) => {\n  const startMonthOffsetFromSunday = new Date(month.year, month.month, 1).getDay();\n  return startMonthOffsetFromSunday >= firstDayOfWeek ? startMonthOffsetFromSunday - firstDayOfWeek : DAYS_IN_WEEK - (firstDayOfWeek - startMonthOffsetFromSunday);\n};\n/**\n * Calculated day on a calendar grid\n * @return resulting day on these coordinates (could exceed passed month)\n */\nconst getDayFromMonthRowCol = ({\n  month,\n  rowIndex,\n  colIndex,\n  firstDayOfWeek\n}) => {\n  ngDevMode && tuiAssert.assert(Number.isInteger(rowIndex));\n  ngDevMode && tuiAssert.assert(tuiInRange(rowIndex, 0, 6));\n  ngDevMode && tuiAssert.assert(Number.isInteger(colIndex));\n  ngDevMode && tuiAssert.assert(tuiInRange(colIndex, 0, DAYS_IN_WEEK));\n  let day = rowIndex * DAYS_IN_WEEK + colIndex - getMonthStartDaysOffset(month, firstDayOfWeek) + 1;\n  if (day > month.daysCount) {\n    day -= month.daysCount;\n    month = month.append({\n      month: 1\n    });\n  }\n  if (day <= 0) {\n    month = month.append({\n      month: -1\n    });\n    day = month.daysCount + day;\n  }\n  return new TuiDay(month.year, month.month, day);\n};\nconst CALENDAR_ROWS_COUNT = 6;\nclass TuiCalendarSheetPipe {\n  constructor(firstDayOfWeek) {\n    this.firstDayOfWeek = firstDayOfWeek;\n    this.currentMonth = null;\n    this.currentSheet = [];\n  }\n  transform(month, showAdjacentDays = false) {\n    var _a;\n    if ((_a = this.currentMonth) === null || _a === void 0 ? void 0 : _a.monthSame(month)) {\n      return this.currentSheet;\n    }\n    const sheet = [];\n    for (let rowIndex = 0; rowIndex < CALENDAR_ROWS_COUNT; rowIndex++) {\n      const row = [];\n      for (let colIndex = 0; colIndex < DAYS_IN_WEEK; colIndex++) {\n        const day = getDayFromMonthRowCol({\n          month,\n          rowIndex,\n          colIndex,\n          firstDayOfWeek: this.firstDayOfWeek\n        });\n        const isPrevMonthDay = (day, relativeToMonth = month) => day.year < relativeToMonth.year || day.month < relativeToMonth.month;\n        const isNextMonthDay = (day, relativeToMonth = month) => day.year > relativeToMonth.year || day.month > relativeToMonth.month;\n        if (isPrevMonthDay(day) && !showAdjacentDays) {\n          continue;\n        }\n        if (isNextMonthDay(day) && !showAdjacentDays) {\n          break;\n        }\n        row.push(day);\n      }\n      sheet.push(row);\n    }\n    this.currentSheet = sheet.filter(row => row.length);\n    this.currentMonth = month;\n    return this.currentSheet;\n  }\n}\nTuiCalendarSheetPipe.ɵfac = function TuiCalendarSheetPipe_Factory(t) {\n  return new (t || TuiCalendarSheetPipe)(i0.ɵɵdirectiveInject(TUI_FIRST_DAY_OF_WEEK, 16));\n};\nTuiCalendarSheetPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"tuiCalendarSheet\",\n  type: TuiCalendarSheetPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCalendarSheetPipe, [{\n    type: Pipe,\n    args: [{\n      name: `tuiCalendarSheet`\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_FIRST_DAY_OF_WEEK]\n      }]\n    }];\n  }, null);\n})();\nclass TuiCalendarSheetPipeModule {}\nTuiCalendarSheetPipeModule.ɵfac = function TuiCalendarSheetPipeModule_Factory(t) {\n  return new (t || TuiCalendarSheetPipeModule)();\n};\nTuiCalendarSheetPipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiCalendarSheetPipeModule\n});\nTuiCalendarSheetPipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCalendarSheetPipeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TuiCalendarSheetPipe],\n      exports: [TuiCalendarSheetPipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCalendarSheetPipe, TuiCalendarSheetPipeModule };","map":{"version":3,"names":["i0","Pipe","Inject","NgModule","DAYS_IN_WEEK","tuiAssert","tuiInRange","TuiDay","TUI_FIRST_DAY_OF_WEEK","getMonthStartDaysOffset","month","firstDayOfWeek","startMonthOffsetFromSunday","Date","year","getDay","getDayFromMonthRowCol","rowIndex","colIndex","ngDevMode","assert","Number","isInteger","day","daysCount","append","CALENDAR_ROWS_COUNT","TuiCalendarSheetPipe","constructor","currentMonth","currentSheet","transform","showAdjacentDays","_a","monthSame","sheet","row","isPrevMonthDay","relativeToMonth","isNextMonthDay","push","filter","length","ɵfac","ɵpipe","type","args","name","undefined","decorators","TuiCalendarSheetPipeModule","ɵmod","ɵinj","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-pipes-calendar-sheet.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, Inject, NgModule } from '@angular/core';\nimport { DAYS_IN_WEEK, tuiAssert, tuiInRange, TuiDay } from '@taiga-ui/cdk';\nimport { TUI_FIRST_DAY_OF_WEEK } from '@taiga-ui/core/tokens';\n\n/**\n * Computes day of week offset of the beginning of the month\n */\nconst getMonthStartDaysOffset = (month, firstDayOfWeek) => {\n    const startMonthOffsetFromSunday = new Date(month.year, month.month, 1).getDay();\n    return startMonthOffsetFromSunday >= firstDayOfWeek\n        ? startMonthOffsetFromSunday - firstDayOfWeek\n        : DAYS_IN_WEEK - (firstDayOfWeek - startMonthOffsetFromSunday);\n};\n/**\n * Calculated day on a calendar grid\n * @return resulting day on these coordinates (could exceed passed month)\n */\nconst getDayFromMonthRowCol = ({ month, rowIndex, colIndex, firstDayOfWeek, }) => {\n    ngDevMode && tuiAssert.assert(Number.isInteger(rowIndex));\n    ngDevMode && tuiAssert.assert(tuiInRange(rowIndex, 0, 6));\n    ngDevMode && tuiAssert.assert(Number.isInteger(colIndex));\n    ngDevMode && tuiAssert.assert(tuiInRange(colIndex, 0, DAYS_IN_WEEK));\n    let day = rowIndex * DAYS_IN_WEEK +\n        colIndex -\n        getMonthStartDaysOffset(month, firstDayOfWeek) +\n        1;\n    if (day > month.daysCount) {\n        day -= month.daysCount;\n        month = month.append({ month: 1 });\n    }\n    if (day <= 0) {\n        month = month.append({ month: -1 });\n        day = month.daysCount + day;\n    }\n    return new TuiDay(month.year, month.month, day);\n};\n\nconst CALENDAR_ROWS_COUNT = 6;\nclass TuiCalendarSheetPipe {\n    constructor(firstDayOfWeek) {\n        this.firstDayOfWeek = firstDayOfWeek;\n        this.currentMonth = null;\n        this.currentSheet = [];\n    }\n    transform(month, showAdjacentDays = false) {\n        var _a;\n        if ((_a = this.currentMonth) === null || _a === void 0 ? void 0 : _a.monthSame(month)) {\n            return this.currentSheet;\n        }\n        const sheet = [];\n        for (let rowIndex = 0; rowIndex < CALENDAR_ROWS_COUNT; rowIndex++) {\n            const row = [];\n            for (let colIndex = 0; colIndex < DAYS_IN_WEEK; colIndex++) {\n                const day = getDayFromMonthRowCol({\n                    month,\n                    rowIndex,\n                    colIndex,\n                    firstDayOfWeek: this.firstDayOfWeek,\n                });\n                const isPrevMonthDay = (day, relativeToMonth = month) => day.year < relativeToMonth.year || day.month < relativeToMonth.month;\n                const isNextMonthDay = (day, relativeToMonth = month) => day.year > relativeToMonth.year || day.month > relativeToMonth.month;\n                if (isPrevMonthDay(day) && !showAdjacentDays) {\n                    continue;\n                }\n                if (isNextMonthDay(day) && !showAdjacentDays) {\n                    break;\n                }\n                row.push(day);\n            }\n            sheet.push(row);\n        }\n        this.currentSheet = sheet.filter(row => row.length);\n        this.currentMonth = month;\n        return this.currentSheet;\n    }\n}\nTuiCalendarSheetPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCalendarSheetPipe, deps: [{ token: TUI_FIRST_DAY_OF_WEEK }], target: i0.ɵɵFactoryTarget.Pipe });\nTuiCalendarSheetPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCalendarSheetPipe, name: \"tuiCalendarSheet\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCalendarSheetPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: `tuiCalendarSheet`,\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_FIRST_DAY_OF_WEEK]\n                }] }]; } });\n\nclass TuiCalendarSheetPipeModule {\n}\nTuiCalendarSheetPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCalendarSheetPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiCalendarSheetPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCalendarSheetPipeModule, declarations: [TuiCalendarSheetPipe], exports: [TuiCalendarSheetPipe] });\nTuiCalendarSheetPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCalendarSheetPipeModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiCalendarSheetPipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TuiCalendarSheetPipe],\n                    exports: [TuiCalendarSheetPipe],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCalendarSheetPipe, TuiCalendarSheetPipeModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}