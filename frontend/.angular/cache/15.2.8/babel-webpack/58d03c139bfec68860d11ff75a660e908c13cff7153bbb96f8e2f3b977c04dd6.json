{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://127.0.0.1:8000/api/auth/users/';\n    this.apiBase = 'http://127.0.0.1:8000/auth-token/';\n    this.apiGetAccount = 'http://127.0.0.1:8000/api/account/user/by/token';\n  }\n  createAccount(email, password, password2) {\n    // const account = { email: email, password: password, password2: password2 };\n    const account = {\n      email: email,\n      password: password\n    };\n    return this.http.post(this.apiUrl, account);\n  }\n  getToken(email, password) {\n    const account = {\n      email: email,\n      password: password\n    };\n    return this.http.post(this.apiBase + '/token/login/', account);\n  }\n  getAccountWhithToken(Token) {\n    const body = {};\n    return this.http.post(this.apiGetAccount, body, {\n      headers: {\n        'Content-Type': ''\n      }\n    }, account);\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAChB,WAAM,GAAG,uCAAuC;IAChD,YAAO,GAAG,mCAAmC;IAC7C,kBAAa,GAAG,iDAAiD;EAHjC;EAKxCC,aAAa,CAACC,KAAa,EAAEC,QAAgB,EAAEC,SAAiB;IAC9D;IACA,MAAMC,OAAO,GAAG;MAAEH,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;IACnD,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAC,IAAI,CAACC,MAAM,EAAEF,OAAO,CAAC;EAC7C;EAEAG,QAAQ,CAACN,KAAa,EAAEC,QAAgB;IACtC,MAAME,OAAO,GAAG;MAAEH,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;IACnD,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAC,IAAI,CAACG,OAAO,GAAG,eAAe,EAAEJ,OAAO,CAAC;EAChE;EAEAK,oBAAoB,CAACC,KAAU;IAC7B,MAAMC,IAAI,GAAG,EAAE;IACf,OAAO,IAAI,CAACZ,IAAI,CAACM,IAAI,CAAC,IAAI,CAACO,aAAa,EAAED,IAAI,EAC5C;MAACE,OAAO,EAAE;QAAC,cAAc,EAAE;MAAE;IAAC,CAAC,EAC/BT,OAAO,CAAC;EACZ;;AAvBWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAiB,SAAdjB,cAAc;EAAAkB,YAFb;AAAM","names":["AccountService","constructor","http","createAccount","email","password","password2","account","post","apiUrl","getToken","apiBase","getAccountWhithToken","Token","body","apiGetAccount","headers","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\denis\\PycharmProjects\\example_project\\frontend\\src\\app\\servicies\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Group} from \"../components/groups/groups.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n  private apiUrl = 'http://127.0.0.1:8000/api/auth/users/';\n  private apiBase = 'http://127.0.0.1:8000/auth-token/';\n  private apiGetAccount = 'http://127.0.0.1:8000/api/account/user/by/token';\n\n  createAccount(email: string, password: string, password2: string ): Observable<any> {\n    // const account = { email: email, password: password, password2: password2 };\n    const account = { email: email, password: password};\n    return this.http.post(this.apiUrl, account);\n  }\n\n  getToken(email: string, password: string):Observable<any> {\n    const account = { email: email, password: password};\n    return this.http.post(this.apiBase + '/token/login/', account)\n  }\n\n  getAccountWhithToken(Token: any) {\n    const body = {}\n    return this.http.post(this.apiGetAccount, body,\n      {headers: {'Content-Type': ''}},\n      account)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}