{"ast":null,"code":"import { inject } from '@angular/core';\nimport { TUI_LANGUAGE } from '@taiga-ui/i18n/tokens';\nimport { isObservable, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nfunction tuiExtractI18n(key) {\n  return () => inject(TUI_LANGUAGE).pipe(switchMap(streamOrValue => isObservable(streamOrValue) ? streamOrValue : of(streamOrValue)), map(lang => lang[key]));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiExtractI18n };","map":{"version":3,"names":["inject","TUI_LANGUAGE","isObservable","of","switchMap","map","tuiExtractI18n","key","pipe","streamOrValue","lang"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/i18n/fesm2015/taiga-ui-i18n-tools.js"],"sourcesContent":["import { inject } from '@angular/core';\nimport { TUI_LANGUAGE } from '@taiga-ui/i18n/tokens';\nimport { isObservable, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\nfunction tuiExtractI18n(key) {\n    return () => inject(TUI_LANGUAGE).pipe(switchMap((streamOrValue) => isObservable(streamOrValue) ? streamOrValue : of(streamOrValue)), map((lang) => lang[key]));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiExtractI18n };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,YAAY,EAAEC,EAAE,QAAQ,MAAM;AACvC,SAASC,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAE/C,SAASC,cAAc,CAACC,GAAG,EAAE;EACzB,OAAO,MAAMP,MAAM,CAACC,YAAY,CAAC,CAACO,IAAI,CAACJ,SAAS,CAAEK,aAAa,IAAKP,YAAY,CAACO,aAAa,CAAC,GAAGA,aAAa,GAAGN,EAAE,CAACM,aAAa,CAAC,CAAC,EAAEJ,GAAG,CAAEK,IAAI,IAAKA,IAAI,CAACH,GAAG,CAAC,CAAC,CAAC;AACnK;;AAEA;AACA;AACA;;AAEA,SAASD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}