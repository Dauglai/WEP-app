{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, Directive, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i3 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, TuiDay, tuiDateClamp, CHAR_EN_DASH, TuiMonthRange, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, AbstractTuiControl, TuiDestroyService, TuiPreventDefaultModule, TuiActiveZoneModule, TuiMapperPipeModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TuiMonthPipe, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiSvgModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { TUI_MONTH_FORMATTER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_MONTH_FORMATTER, TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';\nimport * as i2 from '@taiga-ui/kit/components/calendar-month';\nimport { TuiCalendarMonthModule } from '@taiga-ui/kit/components/calendar-month';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'rxjs';\nimport { Subject, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nfunction TuiInputMonthRangeComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-calendar-month\", 3);\n    i0.ɵɵlistener(\"monthClick\", function TuiInputMonthRangeComponent_ng_template_8_Template_tui_calendar_month_monthClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onMonthClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r1.disabledItemHandler)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"value\", ctx_r1.value)(\"year\", ctx_r1.computedDefaultActiveYear);\n  }\n}\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nclass TuiInputMonthRangeComponent extends AbstractTuiNullableControl {\n  constructor(control, cdr, formatter, options) {\n    super(control, cdr);\n    this.formatter = formatter;\n    this.options = options;\n    this.min = this.options.min;\n    this.max = this.options.max;\n    this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n    this.defaultActiveYear = TuiDay.currentLocal();\n    this.open = false;\n  }\n  get nativeFocusableElement() {\n    return this.textfield ? this.textfield.nativeFocusableElement : null;\n  }\n  get computedDefaultActiveYear() {\n    var _a;\n    return ((_a = this.value) === null || _a === void 0 ? void 0 : _a.from) || tuiDateClamp(this.defaultActiveYear, this.min, this.max);\n  }\n  get focused() {\n    return !!this.textfield && this.textfield.focused;\n  }\n  get calendarIcon() {\n    return this.options.icon;\n  }\n  computeValue(from, to) {\n    const formattedTo = from === to && this.focused && !this.readOnly ? '' : to;\n    return `${from} ${CHAR_EN_DASH} ${formattedTo}`;\n  }\n  onValueChange(value) {\n    if (value) {\n      return;\n    }\n    this.value = null;\n    this.onOpenChange(true);\n  }\n  onMonthClick(month) {\n    if (this.value === null || !this.value.isSingleMonth) {\n      this.writeValue(new TuiMonthRange(month, month));\n      return;\n    }\n    this.value = TuiMonthRange.sort(this.value.from, month);\n    this.close();\n  }\n  onOpenChange(open) {\n    this.open = open;\n  }\n  onActiveZone(focused) {\n    var _a;\n    this.updateFocused(focused);\n    if (focused) {\n      return;\n    }\n    if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.isSingleMonth) {\n      this.value = new TuiMonthRange(this.value.from, this.value.from);\n    }\n  }\n  setDisabledState() {\n    super.setDisabledState();\n    this.close();\n  }\n  close() {\n    this.open = false;\n  }\n}\nTuiInputMonthRangeComponent.ɵfac = function TuiInputMonthRangeComponent_Factory(t) {\n  return new (t || TuiInputMonthRangeComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_MONTH_FORMATTER), i0.ɵɵdirectiveInject(TUI_INPUT_DATE_OPTIONS));\n};\nTuiInputMonthRangeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiInputMonthRangeComponent,\n  selectors: [[\"tui-input-month-range\"]],\n  viewQuery: function TuiInputMonthRangeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    disabledItemHandler: \"disabledItemHandler\",\n    defaultActiveYear: \"defaultActiveYear\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent), tuiAsControl(TuiInputMonthRangeComponent), TUI_MONTH_FORMATTER_PROVIDER, TuiMonthPipe]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 10,\n  vars: 22,\n  consts: [[1, \"t-hosted\", 3, \"canOpen\", \"content\", \"open\", \"openChange\", \"tuiActiveZoneChange\"], [1, \"t-textfield\", 3, \"editable\", \"disabled\", \"nativeId\", \"readOnly\", \"tuiTextfieldIcon\", \"pseudoFocus\", \"pseudoHover\", \"invalid\", \"value\", \"valueChange\"], [\"dropdown\", \"\"], [\"tuiPreventDefault\", \"mousedown\", 3, \"disabledItemHandler\", \"min\", \"max\", \"value\", \"year\", \"monthClick\"]],\n  template: function TuiInputMonthRangeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 0);\n      i0.ɵɵlistener(\"openChange\", function TuiInputMonthRangeComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n        return ctx.onOpenChange($event);\n      })(\"tuiActiveZoneChange\", function TuiInputMonthRangeComponent_Template_tui_hosted_dropdown_tuiActiveZoneChange_0_listener($event) {\n        return ctx.onActiveZone($event);\n      });\n      i0.ɵɵelementStart(1, \"tui-primitive-textfield\", 1);\n      i0.ɵɵlistener(\"valueChange\", function TuiInputMonthRangeComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n        return ctx.onValueChange($event);\n      });\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵpipe(3, \"tuiMapper\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"tuiMapper\");\n      i0.ɵɵprojection(6);\n      i0.ɵɵprojection(7, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, TuiInputMonthRangeComponent_ng_template_8_Template, 1, 5, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(9);\n      i0.ɵɵproperty(\"canOpen\", ctx.interactive)(\"content\", _r0)(\"open\", ctx.open && ctx.interactive);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"editable\", false)(\"disabled\", ctx.computedDisabled)(\"nativeId\", ctx.nativeId)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldIcon\", ctx.calendarIcon)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"invalid\", ctx.computedInvalid)(\"value\", ctx.value ? ctx.computeValue(i0.ɵɵpipeBind1(2, 12, i0.ɵɵpipeBind2(3, 14, ctx.value.from, ctx.formatter)), i0.ɵɵpipeBind1(4, 17, i0.ɵɵpipeBind2(5, 19, ctx.value.to, ctx.formatter))) : \"\");\n    }\n  },\n  dependencies: [i1.TuiHostedDropdownComponent, i1.TuiPrimitiveTextfieldComponent, i2.TuiCalendarMonthComponent, i3.TuiActiveZoneDirective, i1.TuiPrimitiveTextfieldDirective, i1.TuiTextfieldIconDirective, i3.TuiPreventDefaultDirective, i4.AsyncPipe, i3.TuiMapperPipe],\n  styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiInputMonthRangeComponent.prototype, \"min\", void 0);\n__decorate([tuiDefaultProp()], TuiInputMonthRangeComponent.prototype, \"max\", void 0);\n__decorate([tuiDefaultProp()], TuiInputMonthRangeComponent.prototype, \"disabledItemHandler\", void 0);\n__decorate([tuiDefaultProp()], TuiInputMonthRangeComponent.prototype, \"defaultActiveYear\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputMonthRangeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-input-month-range',\n      templateUrl: './input-month-range.template.html',\n      styleUrls: ['./input-month-range.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent), tuiAsControl(TuiInputMonthRangeComponent), TUI_MONTH_FORMATTER_PROVIDER, TuiMonthPipe]\n    }]\n  }], function () {\n    return [{\n      type: i5.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_MONTH_FORMATTER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_INPUT_DATE_OPTIONS]\n      }]\n    }];\n  }, {\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    defaultActiveYear: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiInputMonthRangeDirective extends AbstractTuiTextfieldHost {\n  constructor(host, formatter, destroy$) {\n    super(host);\n    this.value$ = new Subject();\n    this.localizedValue = ['', ''];\n    this.value$.pipe(distinctUntilChanged(), switchMap(value => combineLatest([formatter((value === null || value === void 0 ? void 0 : value.from) || null), formatter((value === null || value === void 0 ? void 0 : value.to) || null)])), takeUntil(destroy$)).subscribe(localizedValue => {\n      this.localizedValue = localizedValue;\n    });\n  }\n  get readOnly() {\n    return true;\n  }\n  get value() {\n    return this.localizedValue[0] ? this.host.computeValue(...this.localizedValue) : '';\n  }\n  ngDoCheck() {\n    this.value$.next(this.host.value);\n  }\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n}\nTuiInputMonthRangeDirective.ɵfac = function TuiInputMonthRangeDirective_Factory(t) {\n  return new (t || TuiInputMonthRangeDirective)(i0.ɵɵdirectiveInject(AbstractTuiControl), i0.ɵɵdirectiveInject(TUI_MONTH_FORMATTER), i0.ɵɵdirectiveInject(TuiDestroyService, 2));\n};\nTuiInputMonthRangeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiInputMonthRangeDirective,\n  selectors: [[\"tui-input-month-range\"]],\n  features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputMonthRangeDirective), TuiDestroyService]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputMonthRangeDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tui-input-month-range',\n      providers: [tuiAsTextfieldHost(TuiInputMonthRangeDirective), TuiDestroyService]\n    }]\n  }], function () {\n    return [{\n      type: TuiInputMonthRangeComponent,\n      decorators: [{\n        type: Inject,\n        args: [AbstractTuiControl]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_MONTH_FORMATTER]\n      }]\n    }, {\n      type: i2$1.Observable,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [TuiDestroyService]\n      }]\n    }];\n  }, null);\n})();\nclass TuiInputMonthRangeModule {}\nTuiInputMonthRangeModule.ɵfac = function TuiInputMonthRangeModule_Factory(t) {\n  return new (t || TuiInputMonthRangeModule)();\n};\nTuiInputMonthRangeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiInputMonthRangeModule\n});\nTuiInputMonthRangeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TuiCalendarMonthModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiSvgModule, TuiPreventDefaultModule, TuiActiveZoneModule, TuiMapperPipeModule, TuiTextfieldControllerModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputMonthRangeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiCalendarMonthModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiSvgModule, TuiPreventDefaultModule, TuiActiveZoneModule, TuiMapperPipeModule, TuiTextfieldControllerModule],\n      declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective],\n      exports: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective, TuiTextfieldComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputMonthRangeComponent, TuiInputMonthRangeDirective, TuiInputMonthRangeModule };","map":{"version":3,"names":["__decorate","i0","ChangeDetectorRef","Component","ChangeDetectionStrategy","Optional","Self","Inject","ViewChild","Input","Directive","NgModule","i5","NgControl","i3","AbstractTuiNullableControl","ALWAYS_FALSE_HANDLER","TuiDay","tuiDateClamp","CHAR_EN_DASH","TuiMonthRange","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","AbstractTuiControl","TuiDestroyService","TuiPreventDefaultModule","TuiActiveZoneModule","TuiMapperPipeModule","i1","TuiMonthPipe","TuiPrimitiveTextfieldComponent","AbstractTuiTextfieldHost","tuiAsTextfieldHost","TuiHostedDropdownModule","TuiPrimitiveTextfieldModule","TuiSvgModule","TuiTextfieldControllerModule","TuiTextfieldComponent","TUI_MONTH_FORMATTER_PROVIDER","TUI_MONTH_FORMATTER","TUI_INPUT_DATE_OPTIONS","i2","TuiCalendarMonthModule","i4","CommonModule","i2$1","Subject","combineLatest","distinctUntilChanged","switchMap","takeUntil","TuiInputMonthRangeComponent","constructor","control","cdr","formatter","options","min","max","disabledItemHandler","defaultActiveYear","currentLocal","open","nativeFocusableElement","textfield","computedDefaultActiveYear","_a","value","from","focused","calendarIcon","icon","computeValue","to","formattedTo","readOnly","onValueChange","onOpenChange","onMonthClick","month","isSingleMonth","writeValue","sort","close","onActiveZone","updateFocused","setDisabledState","ɵfac","ɵcmp","TuiHostedDropdownComponent","TuiCalendarMonthComponent","TuiActiveZoneDirective","TuiPrimitiveTextfieldDirective","TuiTextfieldIconDirective","TuiPreventDefaultDirective","AsyncPipe","TuiMapperPipe","prototype","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","decorators","undefined","TuiInputMonthRangeDirective","host","destroy$","value$","localizedValue","pipe","subscribe","ngDoCheck","next","ɵdir","Observable","TuiInputMonthRangeModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-input-month-range.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, Directive, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i3 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, TuiDay, tuiDateClamp, CHAR_EN_DASH, TuiMonthRange, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, AbstractTuiControl, TuiDestroyService, TuiPreventDefaultModule, TuiActiveZoneModule, TuiMapperPipeModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TuiMonthPipe, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiSvgModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { TUI_MONTH_FORMATTER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_MONTH_FORMATTER, TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';\nimport * as i2 from '@taiga-ui/kit/components/calendar-month';\nimport { TuiCalendarMonthModule } from '@taiga-ui/kit/components/calendar-month';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'rxjs';\nimport { Subject, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\n\nclass TuiInputMonthRangeComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, formatter, options) {\n        super(control, cdr);\n        this.formatter = formatter;\n        this.options = options;\n        this.min = this.options.min;\n        this.max = this.options.max;\n        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n        this.defaultActiveYear = TuiDay.currentLocal();\n        this.open = false;\n    }\n    get nativeFocusableElement() {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n    get computedDefaultActiveYear() {\n        var _a;\n        return (((_a = this.value) === null || _a === void 0 ? void 0 : _a.from) || tuiDateClamp(this.defaultActiveYear, this.min, this.max));\n    }\n    get focused() {\n        return !!this.textfield && this.textfield.focused;\n    }\n    get calendarIcon() {\n        return this.options.icon;\n    }\n    computeValue(from, to) {\n        const formattedTo = from === to && this.focused && !this.readOnly ? '' : to;\n        return `${from} ${CHAR_EN_DASH} ${formattedTo}`;\n    }\n    onValueChange(value) {\n        if (value) {\n            return;\n        }\n        this.value = null;\n        this.onOpenChange(true);\n    }\n    onMonthClick(month) {\n        if (this.value === null || !this.value.isSingleMonth) {\n            this.writeValue(new TuiMonthRange(month, month));\n            return;\n        }\n        this.value = TuiMonthRange.sort(this.value.from, month);\n        this.close();\n    }\n    onOpenChange(open) {\n        this.open = open;\n    }\n    onActiveZone(focused) {\n        var _a;\n        this.updateFocused(focused);\n        if (focused) {\n            return;\n        }\n        if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.isSingleMonth) {\n            this.value = new TuiMonthRange(this.value.from, this.value.from);\n        }\n    }\n    setDisabledState() {\n        super.setDisabledState();\n        this.close();\n    }\n    close() {\n        this.open = false;\n    }\n}\nTuiInputMonthRangeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputMonthRangeComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TUI_MONTH_FORMATTER }, { token: TUI_INPUT_DATE_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nTuiInputMonthRangeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputMonthRangeComponent, selector: \"tui-input-month-range\", inputs: { min: \"min\", max: \"max\", disabledItemHandler: \"disabledItemHandler\", defaultActiveYear: \"defaultActiveYear\" }, providers: [\n        tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent),\n        tuiAsControl(TuiInputMonthRangeComponent),\n        TUI_MONTH_FORMATTER_PROVIDER,\n        TuiMonthPipe,\n    ], viewQueries: [{ propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tui-hosted-dropdown\\n    class=\\\"t-hosted\\\"\\n    [canOpen]=\\\"interactive\\\"\\n    [content]=\\\"dropdown\\\"\\n    [open]=\\\"open && interactive\\\"\\n    (openChange)=\\\"onOpenChange($event)\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        class=\\\"t-textfield\\\"\\n        [editable]=\\\"false\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon\\\"\\n        [pseudoFocus]=\\\"pseudoFocus\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [value]=\\\"\\n            value\\n                ? computeValue(value.from | tuiMapper : formatter | async, value.to | tuiMapper : formatter | async)\\n                : ''\\n        \\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content></ng-content>\\n        <ng-content\\n            select=\\\"input\\\"\\n            ngProjectAs=\\\"input\\\"\\n        ></ng-content>\\n    </tui-primitive-textfield>\\n\\n    <ng-template #dropdown>\\n        <tui-calendar-month\\n            tuiPreventDefault=\\\"mousedown\\\"\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [min]=\\\"min\\\"\\n            [max]=\\\"max\\\"\\n            [value]=\\\"value\\\"\\n            [year]=\\\"computedDefaultActiveYear\\\"\\n            (monthClick)=\\\"onMonthClick($event)\\\"\\n        ></tui-calendar-month>\\n    </ng-template>\\n</tui-hosted-dropdown>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"], components: [{ type: i1.TuiHostedDropdownComponent, selector: \"tui-hosted-dropdown\", inputs: [\"content\", \"sided\", \"canOpen\", \"open\"], outputs: [\"openChange\", \"focusedChange\"] }, { type: i1.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"filler\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"prefix\", \"postfix\", \"value\"], outputs: [\"valueChange\"] }, { type: i2.TuiCalendarMonthComponent, selector: \"tui-calendar-month\", inputs: [\"value\", \"year\", \"disabledItemHandler\", \"min\", \"max\"], outputs: [\"monthClick\", \"hoveredItemChange\", \"yearChange\"] }], directives: [{ type: i3.TuiActiveZoneDirective, selector: \"[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)\", inputs: [\"tuiActiveZoneParent\"], outputs: [\"tuiActiveZoneChange\"], exportAs: [\"tuiActiveZone\"] }, { type: i1.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { type: i1.TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: [\"tuiTextfieldIcon\"] }, { type: i3.TuiPreventDefaultDirective, selector: \"[tuiPreventDefault]\", inputs: [\"tuiPreventDefault\"] }], pipes: { \"async\": i4.AsyncPipe, \"tuiMapper\": i3.TuiMapperPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiInputMonthRangeComponent.prototype, \"min\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputMonthRangeComponent.prototype, \"max\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputMonthRangeComponent.prototype, \"disabledItemHandler\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiInputMonthRangeComponent.prototype, \"defaultActiveYear\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputMonthRangeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-input-month-range',\n                    templateUrl: './input-month-range.template.html',\n                    styleUrls: ['./input-month-range.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent),\n                        tuiAsControl(TuiInputMonthRangeComponent),\n                        TUI_MONTH_FORMATTER_PROVIDER,\n                        TuiMonthPipe,\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i5.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_MONTH_FORMATTER]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_INPUT_DATE_OPTIONS]\n                }] }]; }, propDecorators: { textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], disabledItemHandler: [{\n                type: Input\n            }], defaultActiveYear: [{\n                type: Input\n            }] } });\n\nclass TuiInputMonthRangeDirective extends AbstractTuiTextfieldHost {\n    constructor(host, formatter, destroy$) {\n        super(host);\n        this.value$ = new Subject();\n        this.localizedValue = ['', ''];\n        this.value$\n            .pipe(distinctUntilChanged(), switchMap((value) => combineLatest([\n            formatter((value === null || value === void 0 ? void 0 : value.from) || null),\n            formatter((value === null || value === void 0 ? void 0 : value.to) || null),\n        ])), takeUntil(destroy$))\n            .subscribe(localizedValue => {\n            this.localizedValue = localizedValue;\n        });\n    }\n    get readOnly() {\n        return true;\n    }\n    get value() {\n        return this.localizedValue[0]\n            ? this.host.computeValue(...this.localizedValue)\n            : '';\n    }\n    ngDoCheck() {\n        this.value$.next(this.host.value);\n    }\n    onValueChange(value) {\n        this.host.onValueChange(value);\n    }\n}\nTuiInputMonthRangeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputMonthRangeDirective, deps: [{ token: AbstractTuiControl }, { token: TUI_MONTH_FORMATTER }, { token: TuiDestroyService, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nTuiInputMonthRangeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiInputMonthRangeDirective, selector: \"tui-input-month-range\", providers: [tuiAsTextfieldHost(TuiInputMonthRangeDirective), TuiDestroyService], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputMonthRangeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'tui-input-month-range',\n                    providers: [tuiAsTextfieldHost(TuiInputMonthRangeDirective), TuiDestroyService],\n                }]\n        }], ctorParameters: function () { return [{ type: TuiInputMonthRangeComponent, decorators: [{\n                    type: Inject,\n                    args: [AbstractTuiControl]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_MONTH_FORMATTER]\n                }] }, { type: i2$1.Observable, decorators: [{\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [TuiDestroyService]\n                }] }]; } });\n\nclass TuiInputMonthRangeModule {\n}\nTuiInputMonthRangeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputMonthRangeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiInputMonthRangeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputMonthRangeModule, declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective], imports: [CommonModule,\n        TuiCalendarMonthModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n        TuiSvgModule,\n        TuiPreventDefaultModule,\n        TuiActiveZoneModule,\n        TuiMapperPipeModule,\n        TuiTextfieldControllerModule], exports: [TuiInputMonthRangeComponent,\n        TuiInputMonthRangeDirective,\n        TuiTextfieldComponent] });\nTuiInputMonthRangeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputMonthRangeModule, imports: [[\n            CommonModule,\n            TuiCalendarMonthModule,\n            TuiHostedDropdownModule,\n            TuiPrimitiveTextfieldModule,\n            TuiSvgModule,\n            TuiPreventDefaultModule,\n            TuiActiveZoneModule,\n            TuiMapperPipeModule,\n            TuiTextfieldControllerModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiInputMonthRangeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TuiCalendarMonthModule,\n                        TuiHostedDropdownModule,\n                        TuiPrimitiveTextfieldModule,\n                        TuiSvgModule,\n                        TuiPreventDefaultModule,\n                        TuiActiveZoneModule,\n                        TuiMapperPipeModule,\n                        TuiTextfieldControllerModule,\n                    ],\n                    declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective],\n                    exports: [\n                        TuiInputMonthRangeComponent,\n                        TuiInputMonthRangeDirective,\n                        TuiTextfieldComponent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputMonthRangeComponent, TuiInputMonthRangeDirective, TuiInputMonthRangeModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}