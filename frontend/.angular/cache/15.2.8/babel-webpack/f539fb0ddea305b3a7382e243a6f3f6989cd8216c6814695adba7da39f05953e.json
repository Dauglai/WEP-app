{"ast":null,"code":"import { tuiRound } from '@taiga-ui/cdk';\nimport { TUI_FLOATING_PRECISION } from '@taiga-ui/kit/constants';\n\n/**\n * @internal\n */\nfunction tuiHorizontalDirectionToNumber(direction) {\n  switch (direction) {\n    case `left`:\n      return -1;\n    case `right`:\n      return 1;\n  }\n}\nfunction tuiFindKeyStepsBoundariesByFn(keySteps, fn) {\n  const keyStepUpperIndex = keySteps.findIndex((keyStep, i) => i && fn(keyStep));\n  const lowerStep = keySteps[keyStepUpperIndex - 1];\n  const upperStep = keySteps[keyStepUpperIndex];\n  return [lowerStep, upperStep];\n}\nfunction tuiPercentageToKeyStepValue(valuePercentage, keySteps) {\n  const [[lowerStepPercent, lowerStepValue], [upperStepPercent, upperStepValue]] = tuiFindKeyStepsBoundariesByFn(keySteps, ([keyStepPercentage, _]) => valuePercentage <= keyStepPercentage);\n  const ratio = (valuePercentage - lowerStepPercent) / (upperStepPercent - lowerStepPercent);\n  const controlValue = (upperStepValue - lowerStepValue) * ratio + lowerStepValue;\n  return tuiRound(controlValue, TUI_FLOATING_PRECISION);\n}\nfunction tuiKeyStepValueToPercentage(value, keySteps) {\n  const [[lowerStepPercent, lowerStepValue], [upperStepPercent, upperStepValue]] = tuiFindKeyStepsBoundariesByFn(keySteps, ([_, keyStepValue]) => value <= keyStepValue);\n  const ratio = (value - lowerStepValue) / (upperStepValue - lowerStepValue) || 0;\n  return (upperStepPercent - lowerStepPercent) * ratio + lowerStepPercent;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiHorizontalDirectionToNumber, tuiKeyStepValueToPercentage, tuiPercentageToKeyStepValue };","map":{"version":3,"names":["tuiRound","TUI_FLOATING_PRECISION","tuiHorizontalDirectionToNumber","direction","tuiFindKeyStepsBoundariesByFn","keySteps","fn","keyStepUpperIndex","findIndex","keyStep","i","lowerStep","upperStep","tuiPercentageToKeyStepValue","valuePercentage","lowerStepPercent","lowerStepValue","upperStepPercent","upperStepValue","keyStepPercentage","_","ratio","controlValue","tuiKeyStepValueToPercentage","value","keyStepValue"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-utils-math.js"],"sourcesContent":["import { tuiRound } from '@taiga-ui/cdk';\nimport { TUI_FLOATING_PRECISION } from '@taiga-ui/kit/constants';\n\n/**\n * @internal\n */\nfunction tuiHorizontalDirectionToNumber(direction) {\n    switch (direction) {\n        case `left`:\n            return -1;\n        case `right`:\n            return 1;\n    }\n}\n\nfunction tuiFindKeyStepsBoundariesByFn(keySteps, fn) {\n    const keyStepUpperIndex = keySteps.findIndex((keyStep, i) => i && fn(keyStep));\n    const lowerStep = keySteps[keyStepUpperIndex - 1];\n    const upperStep = keySteps[keyStepUpperIndex];\n    return [lowerStep, upperStep];\n}\nfunction tuiPercentageToKeyStepValue(valuePercentage, keySteps) {\n    const [[lowerStepPercent, lowerStepValue], [upperStepPercent, upperStepValue]] = tuiFindKeyStepsBoundariesByFn(keySteps, ([keyStepPercentage, _]) => valuePercentage <= keyStepPercentage);\n    const ratio = (valuePercentage - lowerStepPercent) / (upperStepPercent - lowerStepPercent);\n    const controlValue = (upperStepValue - lowerStepValue) * ratio + lowerStepValue;\n    return tuiRound(controlValue, TUI_FLOATING_PRECISION);\n}\nfunction tuiKeyStepValueToPercentage(value, keySteps) {\n    const [[lowerStepPercent, lowerStepValue], [upperStepPercent, upperStepValue]] = tuiFindKeyStepsBoundariesByFn(keySteps, ([_, keyStepValue]) => value <= keyStepValue);\n    const ratio = (value - lowerStepValue) / (upperStepValue - lowerStepValue) || 0;\n    return (upperStepPercent - lowerStepPercent) * ratio + lowerStepPercent;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiHorizontalDirectionToNumber, tuiKeyStepValueToPercentage, tuiPercentageToKeyStepValue };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,sBAAsB,QAAQ,yBAAyB;;AAEhE;AACA;AACA;AACA,SAASC,8BAA8B,CAACC,SAAS,EAAE;EAC/C,QAAQA,SAAS;IACb,KAAM,MAAK;MACP,OAAO,CAAC,CAAC;IACb,KAAM,OAAM;MACR,OAAO,CAAC;EAAC;AAErB;AAEA,SAASC,6BAA6B,CAACC,QAAQ,EAAEC,EAAE,EAAE;EACjD,MAAMC,iBAAiB,GAAGF,QAAQ,CAACG,SAAS,CAAC,CAACC,OAAO,EAAEC,CAAC,KAAKA,CAAC,IAAIJ,EAAE,CAACG,OAAO,CAAC,CAAC;EAC9E,MAAME,SAAS,GAAGN,QAAQ,CAACE,iBAAiB,GAAG,CAAC,CAAC;EACjD,MAAMK,SAAS,GAAGP,QAAQ,CAACE,iBAAiB,CAAC;EAC7C,OAAO,CAACI,SAAS,EAAEC,SAAS,CAAC;AACjC;AACA,SAASC,2BAA2B,CAACC,eAAe,EAAET,QAAQ,EAAE;EAC5D,MAAM,CAAC,CAACU,gBAAgB,EAAEC,cAAc,CAAC,EAAE,CAACC,gBAAgB,EAAEC,cAAc,CAAC,CAAC,GAAGd,6BAA6B,CAACC,QAAQ,EAAE,CAAC,CAACc,iBAAiB,EAAEC,CAAC,CAAC,KAAKN,eAAe,IAAIK,iBAAiB,CAAC;EAC1L,MAAME,KAAK,GAAG,CAACP,eAAe,GAAGC,gBAAgB,KAAKE,gBAAgB,GAAGF,gBAAgB,CAAC;EAC1F,MAAMO,YAAY,GAAG,CAACJ,cAAc,GAAGF,cAAc,IAAIK,KAAK,GAAGL,cAAc;EAC/E,OAAOhB,QAAQ,CAACsB,YAAY,EAAErB,sBAAsB,CAAC;AACzD;AACA,SAASsB,2BAA2B,CAACC,KAAK,EAAEnB,QAAQ,EAAE;EAClD,MAAM,CAAC,CAACU,gBAAgB,EAAEC,cAAc,CAAC,EAAE,CAACC,gBAAgB,EAAEC,cAAc,CAAC,CAAC,GAAGd,6BAA6B,CAACC,QAAQ,EAAE,CAAC,CAACe,CAAC,EAAEK,YAAY,CAAC,KAAKD,KAAK,IAAIC,YAAY,CAAC;EACtK,MAAMJ,KAAK,GAAG,CAACG,KAAK,GAAGR,cAAc,KAAKE,cAAc,GAAGF,cAAc,CAAC,IAAI,CAAC;EAC/E,OAAO,CAACC,gBAAgB,GAAGF,gBAAgB,IAAIM,KAAK,GAAGN,gBAAgB;AAC3E;;AAEA;AACA;AACA;;AAEA,SAASb,8BAA8B,EAAEqB,2BAA2B,EAAEV,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}