{"ast":null,"code":"import { InjectionToken, inject, isDevMode, NgZone } from '@angular/core';\nimport { tuiExtractI18n } from '@taiga-ui/i18n';\nimport { tuiIconsPathFactory, tuiIsMobile } from '@taiga-ui/core/utils';\nimport { WINDOW } from '@ng-web-apis/common';\nimport { tuiTypedFromEvent, tuiZoneOptimized, tuiSvgLinearGradientProcessor } from '@taiga-ui/cdk';\nimport { share, startWith, map, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { TUI_DEFAULT_NUMBER_FORMAT } from '@taiga-ui/core/constants';\nimport { DOCUMENT } from '@angular/common';\nimport { merge, identity } from 'rxjs';\n\n/**\n * Duration of all Taiga UI animations in ms\n */\nconst TUI_ANIMATIONS_DURATION = new InjectionToken(`[TUI_ANIMATIONS_DURATION]`, {\n  factory: () => 300\n});\n\n/**\n * Options for Taiga UI animations\n */\nconst TUI_ANIMATION_OPTIONS = new InjectionToken(`[TUI_ANIMATION_OPTIONS]`, {\n  factory: () => ({\n    params: {\n      duration: inject(TUI_ANIMATIONS_DURATION)\n    }\n  })\n});\n\n/**\n * @deprecated:\n * Flag to enable assertions across Taiga UI\n *\n * The current token no longer matters as\n * it will not be provided in production\n */\nconst TUI_ASSERT_ENABLED = new InjectionToken(`[TUI_ASSERT_ENABLED]`, {\n  factory: () => isDevMode()\n});\n\n/**\n * Accessor for data-list options\n */\nconst TUI_DATA_LIST_ACCESSOR = new InjectionToken(`[TUI_DATA_LIST_ACCESSOR]`);\nfunction tuiAsDataListAccessor(useExisting) {\n  return {\n    provide: TUI_DATA_LIST_ACCESSOR,\n    useExisting\n  };\n}\n\n/**\n * DataList controller\n */\nconst TUI_DATA_LIST_HOST = new InjectionToken(`[TUI_DATA_LIST_HOST]`);\nfunction tuiAsDataListHost(useExisting) {\n  return {\n    provide: TUI_DATA_LIST_HOST,\n    useExisting\n  };\n}\n\n/**\n * Token for adding data-type attribute to calendar cell\n */\nconst TUI_DAY_TYPE_HANDLER = new InjectionToken(`[TUI_DAY_TYPE_HANDLER]`, {\n  factory: () => day => day.isWeekend ? `weekend` : `weekday`\n});\nconst TUI_DOCUMENT_OR_SHADOW_ROOT = new InjectionToken(`[TUI_DOCUMENT_OR_SHADOW_ROOT]`);\n\n/**\n * ElementRef when you cannot use @Input for single time injection\n */\nconst TUI_ELEMENT_REF = new InjectionToken(`[TUI_ELEMENT_REF]`);\n\n/**\n * The first day of the week index\n */\nconst TUI_FIRST_DAY_OF_WEEK = new InjectionToken(`[TUI_FIRST_DAY_OF_WEEK]`, {\n  factory: () => 1 /* Monday */\n});\n\n/**\n * Localized months names\n */\nconst TUI_MONTHS = new InjectionToken(`[TUI_MONTHS]`, {\n  factory: tuiExtractI18n(`months`)\n});\n/**\n * i18n 'close' word\n */\nconst TUI_CLOSE_WORD = new InjectionToken(`[TUI_CLOSE_WORD]`, {\n  factory: tuiExtractI18n(`close`)\n});\n/**\n * i18n 'Nothing found' message\n */\nconst TUI_NOTHING_FOUND_MESSAGE = new InjectionToken(`[TUI_NOTHING_FOUND_MESSAGE]`, {\n  factory: tuiExtractI18n(`nothingFoundMessage`)\n});\n/**\n * i18n of error message\n */\nconst TUI_DEFAULT_ERROR_MESSAGE = new InjectionToken(`[TUI_DEFAULT_ERROR_MESSAGE]`, {\n  factory: tuiExtractI18n(`defaultErrorMessage`)\n});\n/**\n * spin i18n texts\n */\nconst TUI_SPIN_TEXTS = new InjectionToken(`[TUI_SPIN_TEXTS]`, {\n  factory: tuiExtractI18n(`spinTexts`)\n});\n/**\n * calendars i18n texts\n */\nconst TUI_SHORT_WEEK_DAYS = new InjectionToken(`[TUI_SHORT_WEEK_DAYS]`, {\n  factory: tuiExtractI18n(`shortWeekDays`)\n});\n\n/**\n * Path to icons\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nconst TUI_ICONS_PLACE = new InjectionToken(`[TUI_ICONS_PLACE]`, {\n  factory: () => `assets/taiga-ui/icons`\n});\n\n/**\n * A key/value dictionary of icon names and src to be defined with TuiSvgService\n */\nconst TUI_ICONS = new InjectionToken(`[TUI_ICONS]`, {\n  factory: () => ({})\n});\n\n/**\n * A handler to retrieve USE id for icon by name\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nconst TUI_ICONS_PATH = new InjectionToken(`[TUI_ICONS_PATH]`, {\n  factory: () => tuiIconsPathFactory(inject(TUI_ICONS_PLACE))\n});\n\n/**\n * Token for media constant\n */\nconst TUI_MEDIA = new InjectionToken(`[TUI_MEDIA]`, {\n  factory: () => ({\n    mobile: 768,\n    desktopSmall: 1024,\n    desktopLarge: 1280\n  })\n});\n\n/**\n * @deprecated use {@link https://taiga-ui.dev/services/breakpoint-service TuiBreakpointService}\n * TODO: drop in v4.0\n * Mobile resolution stream for private providers\n */\nconst TUI_IS_MOBILE_RES = new InjectionToken(`[TUI_IS_MOBILE_RES]`, {\n  factory: () => {\n    const win = inject(WINDOW);\n    const media = inject(TUI_MEDIA);\n    return tuiTypedFromEvent(win, `resize`).pipe(share(), startWith(null), map(() => tuiIsMobile(win, media)), distinctUntilChanged(), tuiZoneOptimized(inject(NgZone)));\n  }\n});\n\n/**\n * @internal\n * @deprecated\n * Don't use it! Will be removed after changing the mask.\n */\nconst TUI_LEGACY_MASK = new InjectionToken(`[TUI_LEGACY_MASK]`);\n\n/**\n * Mode stream for private providers\n */\nconst TUI_MODE = new InjectionToken(`[TUI_MODE]`);\n\n/** Default values for the notification options. */\nconst TUI_NOTIFICATION_DEFAULT_OPTIONS = {\n  autoClose: true,\n  label: ``,\n  status: \"info\" /* Info */,\n  hasIcon: true,\n  hasCloseButton: true,\n  defaultAutoCloseTime: 3000\n};\n/**\n * Default parameters for notification alert component\n */\nconst TUI_NOTIFICATION_OPTIONS = new InjectionToken(`[TUI_NOTIFICATION_OPTIONS]`, {\n  factory: () => TUI_NOTIFICATION_DEFAULT_OPTIONS\n});\nfunction tuiNotificationOptionsProvider(options) {\n  return {\n    provide: TUI_NOTIFICATION_OPTIONS,\n    useValue: Object.assign(Object.assign({}, TUI_NOTIFICATION_DEFAULT_OPTIONS), options)\n  };\n}\n\n/**\n * Formatting configuration for displayed numbers\n */\nconst TUI_NUMBER_FORMAT = new InjectionToken(`[TUI_NUMBER_FORMAT]`, {\n  factory: () => TUI_DEFAULT_NUMBER_FORMAT\n});\nconst tuiNumberFormatProvider = options => ({\n  provide: TUI_NUMBER_FORMAT,\n  useValue: Object.assign(Object.assign({}, TUI_DEFAULT_NUMBER_FORMAT), options)\n});\n\n/**\n * Content for tuiOption component\n */\nconst TUI_OPTION_CONTENT = new InjectionToken(`[TUI_OPTION_CONTENT]`);\nfunction tuiAsOptionContent(useValue) {\n  return {\n    provide: TUI_OPTION_CONTENT,\n    useValue\n  };\n}\n\n/**\n * TODO: v4.0 delete the whole file\n */\nconst convertToSundayFirstWeekFormat = weekDaysNames => {\n  const sundayIndex = weekDaysNames.length - 1;\n  return [weekDaysNames[sundayIndex], ...weekDaysNames.slice(0, sundayIndex)];\n};\n/**\n * Ordered calendars i18n texts\n * @deprecated\n */\nconst TUI_ORDERED_SHORT_WEEK_DAYS = new InjectionToken(`[TUI_ORDERED_SHORT_WEEK_DAYS]`, {\n  factory: () => {\n    const firstDayOfWeekIndex = inject(TUI_FIRST_DAY_OF_WEEK);\n    return inject(TUI_SHORT_WEEK_DAYS).pipe(map(convertToSundayFirstWeekFormat), map(weekDays => [...weekDays.slice(firstDayOfWeekIndex), ...weekDays.slice(0, firstDayOfWeekIndex)]));\n  }\n});\n\n/**\n * A custom Sanitizer to sanitize source before inlining\n */\nconst TUI_SANITIZER = new InjectionToken(`[TUI_SANITIZER]`);\n\n/**\n * Scrollable container\n */\nconst TUI_SCROLL_REF = new InjectionToken(`[TUI_SCROLL_REF]`);\n\n/**\n * A stream of possible selection changes\n */\nconst TUI_SELECTION_STREAM = new InjectionToken(`[TUI_SELECTION_STREAM]`, {\n  factory: () => {\n    const doc = inject(DOCUMENT);\n    return merge(tuiTypedFromEvent(doc, `selectionchange`), tuiTypedFromEvent(doc, `mouseup`), tuiTypedFromEvent(doc, `mousedown`).pipe(switchMap(() => tuiTypedFromEvent(doc, `mousemove`).pipe(takeUntil(tuiTypedFromEvent(doc, `mouseup`))))), tuiTypedFromEvent(doc, `keydown`), tuiTypedFromEvent(doc, `keyup`)).pipe(share());\n  }\n});\n\n/**\n * Transform function the contents of the loaded svg file\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nconst TUI_SVG_CONTENT_PROCESSOR = new InjectionToken(`[TUI_SVG_CONTENT_PROCESSOR]`, {\n  factory: () => tuiSvgLinearGradientProcessor\n});\n\n/**\n * Source path processor for svg\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nconst TUI_SVG_SRC_PROCESSOR = new InjectionToken(`[TUI_SVG_SRC_PROCESSOR]`, {\n  factory: () => identity\n});\n\n/**\n * Appearance for inputs\n * @deprecated use {@link TUI_TEXTFIELD_APPEARANCE_DIRECTIVE} instead\n * TODO: Remove in 4.0\n */\nconst TUI_TEXTFIELD_APPEARANCE = new InjectionToken(`[TUI_TEXTFIELD_APPEARANCE]`, {\n  factory: () => \"textfield\" /* Textfield */\n});\n\n/**\n * An interface to communicate with textfield based controls\n */\nconst TUI_TEXTFIELD_HOST = new InjectionToken(`[TUI_TEXTFIELD_HOST]`);\nfunction tuiAsTextfieldHost(useExisting) {\n  return {\n    provide: TUI_TEXTFIELD_HOST,\n    useExisting\n  };\n}\nconst TUI_THEME = new InjectionToken(`[TUI_THEME]`, {\n  factory: () => `Taiga`\n});\n\n/**\n * Buffer token to pass NG_VALUE_ACCESSOR to a different Injector\n */\nconst TUI_VALUE_ACCESSOR = new InjectionToken(`[TUI_VALUE_ACCESSOR]`);\n\n/**\n * Viewport accessor\n */\nconst TUI_VIEWPORT = new InjectionToken(`[TUI_VIEWPORT]`, {\n  factory: () => {\n    const win = inject(WINDOW);\n    return {\n      type: `viewport`,\n      getClientRect() {\n        return {\n          top: 0,\n          left: 0,\n          right: win.innerWidth,\n          bottom: win.innerHeight,\n          width: win.innerWidth,\n          height: win.innerHeight\n        };\n      }\n    };\n  }\n});\nfunction tuiAsViewport(useExisting) {\n  return {\n    provide: TUI_VIEWPORT,\n    useExisting\n  };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_ANIMATIONS_DURATION, TUI_ANIMATION_OPTIONS, TUI_ASSERT_ENABLED, TUI_CLOSE_WORD, TUI_DATA_LIST_ACCESSOR, TUI_DATA_LIST_HOST, TUI_DAY_TYPE_HANDLER, TUI_DEFAULT_ERROR_MESSAGE, TUI_DOCUMENT_OR_SHADOW_ROOT, TUI_ELEMENT_REF, TUI_FIRST_DAY_OF_WEEK, TUI_ICONS, TUI_ICONS_PATH, TUI_ICONS_PLACE, TUI_IS_MOBILE_RES, TUI_LEGACY_MASK, TUI_MEDIA, TUI_MODE, TUI_MONTHS, TUI_NOTHING_FOUND_MESSAGE, TUI_NOTIFICATION_DEFAULT_OPTIONS, TUI_NOTIFICATION_OPTIONS, TUI_NUMBER_FORMAT, TUI_OPTION_CONTENT, TUI_ORDERED_SHORT_WEEK_DAYS, TUI_SANITIZER, TUI_SCROLL_REF, TUI_SELECTION_STREAM, TUI_SHORT_WEEK_DAYS, TUI_SPIN_TEXTS, TUI_SVG_CONTENT_PROCESSOR, TUI_SVG_SRC_PROCESSOR, TUI_TEXTFIELD_APPEARANCE, TUI_TEXTFIELD_HOST, TUI_THEME, TUI_VALUE_ACCESSOR, TUI_VIEWPORT, tuiAsDataListAccessor, tuiAsDataListHost, tuiAsOptionContent, tuiAsTextfieldHost, tuiAsViewport, tuiNotificationOptionsProvider, tuiNumberFormatProvider };","map":{"version":3,"names":["InjectionToken","inject","isDevMode","NgZone","tuiExtractI18n","tuiIconsPathFactory","tuiIsMobile","WINDOW","tuiTypedFromEvent","tuiZoneOptimized","tuiSvgLinearGradientProcessor","share","startWith","map","distinctUntilChanged","switchMap","takeUntil","TUI_DEFAULT_NUMBER_FORMAT","DOCUMENT","merge","identity","TUI_ANIMATIONS_DURATION","factory","TUI_ANIMATION_OPTIONS","params","duration","TUI_ASSERT_ENABLED","TUI_DATA_LIST_ACCESSOR","tuiAsDataListAccessor","useExisting","provide","TUI_DATA_LIST_HOST","tuiAsDataListHost","TUI_DAY_TYPE_HANDLER","day","isWeekend","TUI_DOCUMENT_OR_SHADOW_ROOT","TUI_ELEMENT_REF","TUI_FIRST_DAY_OF_WEEK","TUI_MONTHS","TUI_CLOSE_WORD","TUI_NOTHING_FOUND_MESSAGE","TUI_DEFAULT_ERROR_MESSAGE","TUI_SPIN_TEXTS","TUI_SHORT_WEEK_DAYS","TUI_ICONS_PLACE","TUI_ICONS","TUI_ICONS_PATH","TUI_MEDIA","mobile","desktopSmall","desktopLarge","TUI_IS_MOBILE_RES","win","media","pipe","TUI_LEGACY_MASK","TUI_MODE","TUI_NOTIFICATION_DEFAULT_OPTIONS","autoClose","label","status","hasIcon","hasCloseButton","defaultAutoCloseTime","TUI_NOTIFICATION_OPTIONS","tuiNotificationOptionsProvider","options","useValue","Object","assign","TUI_NUMBER_FORMAT","tuiNumberFormatProvider","TUI_OPTION_CONTENT","tuiAsOptionContent","convertToSundayFirstWeekFormat","weekDaysNames","sundayIndex","length","slice","TUI_ORDERED_SHORT_WEEK_DAYS","firstDayOfWeekIndex","weekDays","TUI_SANITIZER","TUI_SCROLL_REF","TUI_SELECTION_STREAM","doc","TUI_SVG_CONTENT_PROCESSOR","TUI_SVG_SRC_PROCESSOR","TUI_TEXTFIELD_APPEARANCE","TUI_TEXTFIELD_HOST","tuiAsTextfieldHost","TUI_THEME","TUI_VALUE_ACCESSOR","TUI_VIEWPORT","type","getClientRect","top","left","right","innerWidth","bottom","innerHeight","width","height","tuiAsViewport"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-tokens.js"],"sourcesContent":["import { InjectionToken, inject, isDevMode, NgZone } from '@angular/core';\nimport { tuiExtractI18n } from '@taiga-ui/i18n';\nimport { tuiIconsPathFactory, tuiIsMobile } from '@taiga-ui/core/utils';\nimport { WINDOW } from '@ng-web-apis/common';\nimport { tuiTypedFromEvent, tuiZoneOptimized, tuiSvgLinearGradientProcessor } from '@taiga-ui/cdk';\nimport { share, startWith, map, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { TUI_DEFAULT_NUMBER_FORMAT } from '@taiga-ui/core/constants';\nimport { DOCUMENT } from '@angular/common';\nimport { merge, identity } from 'rxjs';\n\n/**\n * Duration of all Taiga UI animations in ms\n */\nconst TUI_ANIMATIONS_DURATION = new InjectionToken(`[TUI_ANIMATIONS_DURATION]`, {\n    factory: () => 300,\n});\n\n/**\n * Options for Taiga UI animations\n */\nconst TUI_ANIMATION_OPTIONS = new InjectionToken(`[TUI_ANIMATION_OPTIONS]`, {\n    factory: () => ({\n        params: {\n            duration: inject(TUI_ANIMATIONS_DURATION),\n        },\n    }),\n});\n\n/**\n * @deprecated:\n * Flag to enable assertions across Taiga UI\n *\n * The current token no longer matters as\n * it will not be provided in production\n */\nconst TUI_ASSERT_ENABLED = new InjectionToken(`[TUI_ASSERT_ENABLED]`, {\n    factory: () => isDevMode(),\n});\n\n/**\n * Accessor for data-list options\n */\nconst TUI_DATA_LIST_ACCESSOR = new InjectionToken(`[TUI_DATA_LIST_ACCESSOR]`);\nfunction tuiAsDataListAccessor(useExisting) {\n    return {\n        provide: TUI_DATA_LIST_ACCESSOR,\n        useExisting,\n    };\n}\n\n/**\n * DataList controller\n */\nconst TUI_DATA_LIST_HOST = new InjectionToken(`[TUI_DATA_LIST_HOST]`);\nfunction tuiAsDataListHost(useExisting) {\n    return {\n        provide: TUI_DATA_LIST_HOST,\n        useExisting,\n    };\n}\n\n/**\n * Token for adding data-type attribute to calendar cell\n */\nconst TUI_DAY_TYPE_HANDLER = new InjectionToken(`[TUI_DAY_TYPE_HANDLER]`, {\n    factory: () => (day) => day.isWeekend ? `weekend` : `weekday`,\n});\n\nconst TUI_DOCUMENT_OR_SHADOW_ROOT = new InjectionToken(`[TUI_DOCUMENT_OR_SHADOW_ROOT]`);\n\n/**\n * ElementRef when you cannot use @Input for single time injection\n */\nconst TUI_ELEMENT_REF = new InjectionToken(`[TUI_ELEMENT_REF]`);\n\n/**\n * The first day of the week index\n */\nconst TUI_FIRST_DAY_OF_WEEK = new InjectionToken(`[TUI_FIRST_DAY_OF_WEEK]`, {\n    factory: () => 1 /* Monday */,\n});\n\n/**\n * Localized months names\n */\nconst TUI_MONTHS = new InjectionToken(`[TUI_MONTHS]`, {\n    factory: tuiExtractI18n(`months`),\n});\n/**\n * i18n 'close' word\n */\nconst TUI_CLOSE_WORD = new InjectionToken(`[TUI_CLOSE_WORD]`, {\n    factory: tuiExtractI18n(`close`),\n});\n/**\n * i18n 'Nothing found' message\n */\nconst TUI_NOTHING_FOUND_MESSAGE = new InjectionToken(`[TUI_NOTHING_FOUND_MESSAGE]`, {\n    factory: tuiExtractI18n(`nothingFoundMessage`),\n});\n/**\n * i18n of error message\n */\nconst TUI_DEFAULT_ERROR_MESSAGE = new InjectionToken(`[TUI_DEFAULT_ERROR_MESSAGE]`, {\n    factory: tuiExtractI18n(`defaultErrorMessage`),\n});\n/**\n * spin i18n texts\n */\nconst TUI_SPIN_TEXTS = new InjectionToken(`[TUI_SPIN_TEXTS]`, {\n    factory: tuiExtractI18n(`spinTexts`),\n});\n/**\n * calendars i18n texts\n */\nconst TUI_SHORT_WEEK_DAYS = new InjectionToken(`[TUI_SHORT_WEEK_DAYS]`, {\n    factory: tuiExtractI18n(`shortWeekDays`),\n});\n\n/**\n * Path to icons\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nconst TUI_ICONS_PLACE = new InjectionToken(`[TUI_ICONS_PLACE]`, {\n    factory: () => `assets/taiga-ui/icons`,\n});\n\n/**\n * A key/value dictionary of icon names and src to be defined with TuiSvgService\n */\nconst TUI_ICONS = new InjectionToken(`[TUI_ICONS]`, {\n    factory: () => ({}),\n});\n\n/**\n * A handler to retrieve USE id for icon by name\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nconst TUI_ICONS_PATH = new InjectionToken(`[TUI_ICONS_PATH]`, {\n    factory: () => tuiIconsPathFactory(inject(TUI_ICONS_PLACE)),\n});\n\n/**\n * Token for media constant\n */\nconst TUI_MEDIA = new InjectionToken(`[TUI_MEDIA]`, {\n    factory: () => ({\n        mobile: 768,\n        desktopSmall: 1024,\n        desktopLarge: 1280,\n    }),\n});\n\n/**\n * @deprecated use {@link https://taiga-ui.dev/services/breakpoint-service TuiBreakpointService}\n * TODO: drop in v4.0\n * Mobile resolution stream for private providers\n */\nconst TUI_IS_MOBILE_RES = new InjectionToken(`[TUI_IS_MOBILE_RES]`, {\n    factory: () => {\n        const win = inject(WINDOW);\n        const media = inject(TUI_MEDIA);\n        return tuiTypedFromEvent(win, `resize`).pipe(share(), startWith(null), map(() => tuiIsMobile(win, media)), distinctUntilChanged(), tuiZoneOptimized(inject(NgZone)));\n    },\n});\n\n/**\n * @internal\n * @deprecated\n * Don't use it! Will be removed after changing the mask.\n */\nconst TUI_LEGACY_MASK = new InjectionToken(`[TUI_LEGACY_MASK]`);\n\n/**\n * Mode stream for private providers\n */\nconst TUI_MODE = new InjectionToken(`[TUI_MODE]`);\n\n/** Default values for the notification options. */\nconst TUI_NOTIFICATION_DEFAULT_OPTIONS = {\n    autoClose: true,\n    label: ``,\n    status: \"info\" /* Info */,\n    hasIcon: true,\n    hasCloseButton: true,\n    defaultAutoCloseTime: 3000,\n};\n/**\n * Default parameters for notification alert component\n */\nconst TUI_NOTIFICATION_OPTIONS = new InjectionToken(`[TUI_NOTIFICATION_OPTIONS]`, {\n    factory: () => TUI_NOTIFICATION_DEFAULT_OPTIONS,\n});\nfunction tuiNotificationOptionsProvider(options) {\n    return {\n        provide: TUI_NOTIFICATION_OPTIONS,\n        useValue: Object.assign(Object.assign({}, TUI_NOTIFICATION_DEFAULT_OPTIONS), options),\n    };\n}\n\n/**\n * Formatting configuration for displayed numbers\n */\nconst TUI_NUMBER_FORMAT = new InjectionToken(`[TUI_NUMBER_FORMAT]`, {\n    factory: () => TUI_DEFAULT_NUMBER_FORMAT,\n});\nconst tuiNumberFormatProvider = (options) => ({\n    provide: TUI_NUMBER_FORMAT,\n    useValue: Object.assign(Object.assign({}, TUI_DEFAULT_NUMBER_FORMAT), options),\n});\n\n/**\n * Content for tuiOption component\n */\nconst TUI_OPTION_CONTENT = new InjectionToken(`[TUI_OPTION_CONTENT]`);\nfunction tuiAsOptionContent(useValue) {\n    return {\n        provide: TUI_OPTION_CONTENT,\n        useValue,\n    };\n}\n\n/**\n * TODO: v4.0 delete the whole file\n */\nconst convertToSundayFirstWeekFormat = (weekDaysNames) => {\n    const sundayIndex = weekDaysNames.length - 1;\n    return [\n        weekDaysNames[sundayIndex],\n        ...weekDaysNames.slice(0, sundayIndex),\n    ];\n};\n/**\n * Ordered calendars i18n texts\n * @deprecated\n */\nconst TUI_ORDERED_SHORT_WEEK_DAYS = new InjectionToken(`[TUI_ORDERED_SHORT_WEEK_DAYS]`, {\n    factory: () => {\n        const firstDayOfWeekIndex = inject(TUI_FIRST_DAY_OF_WEEK);\n        return inject(TUI_SHORT_WEEK_DAYS).pipe(map(convertToSundayFirstWeekFormat), map(weekDays => [\n            ...weekDays.slice(firstDayOfWeekIndex),\n            ...weekDays.slice(0, firstDayOfWeekIndex),\n        ]));\n    },\n});\n\n/**\n * A custom Sanitizer to sanitize source before inlining\n */\nconst TUI_SANITIZER = new InjectionToken(`[TUI_SANITIZER]`);\n\n/**\n * Scrollable container\n */\nconst TUI_SCROLL_REF = new InjectionToken(`[TUI_SCROLL_REF]`);\n\n/**\n * A stream of possible selection changes\n */\nconst TUI_SELECTION_STREAM = new InjectionToken(`[TUI_SELECTION_STREAM]`, {\n    factory: () => {\n        const doc = inject(DOCUMENT);\n        return merge(tuiTypedFromEvent(doc, `selectionchange`), tuiTypedFromEvent(doc, `mouseup`), tuiTypedFromEvent(doc, `mousedown`).pipe(switchMap(() => tuiTypedFromEvent(doc, `mousemove`).pipe(takeUntil(tuiTypedFromEvent(doc, `mouseup`))))), tuiTypedFromEvent(doc, `keydown`), tuiTypedFromEvent(doc, `keyup`)).pipe(share());\n    },\n});\n\n/**\n * Transform function the contents of the loaded svg file\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nconst TUI_SVG_CONTENT_PROCESSOR = new InjectionToken(`[TUI_SVG_CONTENT_PROCESSOR]`, {\n    factory: () => tuiSvgLinearGradientProcessor,\n});\n\n/**\n * Source path processor for svg\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nconst TUI_SVG_SRC_PROCESSOR = new InjectionToken(`[TUI_SVG_SRC_PROCESSOR]`, {\n    factory: () => identity,\n});\n\n/**\n * Appearance for inputs\n * @deprecated use {@link TUI_TEXTFIELD_APPEARANCE_DIRECTIVE} instead\n * TODO: Remove in 4.0\n */\nconst TUI_TEXTFIELD_APPEARANCE = new InjectionToken(`[TUI_TEXTFIELD_APPEARANCE]`, {\n    factory: () => \"textfield\" /* Textfield */,\n});\n\n/**\n * An interface to communicate with textfield based controls\n */\nconst TUI_TEXTFIELD_HOST = new InjectionToken(`[TUI_TEXTFIELD_HOST]`);\nfunction tuiAsTextfieldHost(useExisting) {\n    return {\n        provide: TUI_TEXTFIELD_HOST,\n        useExisting,\n    };\n}\n\nconst TUI_THEME = new InjectionToken(`[TUI_THEME]`, {\n    factory: () => `Taiga`,\n});\n\n/**\n * Buffer token to pass NG_VALUE_ACCESSOR to a different Injector\n */\nconst TUI_VALUE_ACCESSOR = new InjectionToken(`[TUI_VALUE_ACCESSOR]`);\n\n/**\n * Viewport accessor\n */\nconst TUI_VIEWPORT = new InjectionToken(`[TUI_VIEWPORT]`, {\n    factory: () => {\n        const win = inject(WINDOW);\n        return {\n            type: `viewport`,\n            getClientRect() {\n                return {\n                    top: 0,\n                    left: 0,\n                    right: win.innerWidth,\n                    bottom: win.innerHeight,\n                    width: win.innerWidth,\n                    height: win.innerHeight,\n                };\n            },\n        };\n    },\n});\nfunction tuiAsViewport(useExisting) {\n    return {\n        provide: TUI_VIEWPORT,\n        useExisting,\n    };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_ANIMATIONS_DURATION, TUI_ANIMATION_OPTIONS, TUI_ASSERT_ENABLED, TUI_CLOSE_WORD, TUI_DATA_LIST_ACCESSOR, TUI_DATA_LIST_HOST, TUI_DAY_TYPE_HANDLER, TUI_DEFAULT_ERROR_MESSAGE, TUI_DOCUMENT_OR_SHADOW_ROOT, TUI_ELEMENT_REF, TUI_FIRST_DAY_OF_WEEK, TUI_ICONS, TUI_ICONS_PATH, TUI_ICONS_PLACE, TUI_IS_MOBILE_RES, TUI_LEGACY_MASK, TUI_MEDIA, TUI_MODE, TUI_MONTHS, TUI_NOTHING_FOUND_MESSAGE, TUI_NOTIFICATION_DEFAULT_OPTIONS, TUI_NOTIFICATION_OPTIONS, TUI_NUMBER_FORMAT, TUI_OPTION_CONTENT, TUI_ORDERED_SHORT_WEEK_DAYS, TUI_SANITIZER, TUI_SCROLL_REF, TUI_SELECTION_STREAM, TUI_SHORT_WEEK_DAYS, TUI_SPIN_TEXTS, TUI_SVG_CONTENT_PROCESSOR, TUI_SVG_SRC_PROCESSOR, TUI_TEXTFIELD_APPEARANCE, TUI_TEXTFIELD_HOST, TUI_THEME, TUI_VALUE_ACCESSOR, TUI_VIEWPORT, tuiAsDataListAccessor, tuiAsDataListHost, tuiAsOptionContent, tuiAsTextfieldHost, tuiAsViewport, tuiNotificationOptionsProvider, tuiNumberFormatProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}