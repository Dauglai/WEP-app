{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { forwardRef, TemplateRef, Component, ChangeDetectionStrategy, Input, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { EMPTY_QUERY, TuiItemDirective, tuiDefaultProp, TuiItemModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TuiModeDirective, TuiSvgModule } from '@taiga-ui/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction TuiBreadcrumbsComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiBreadcrumbsComponent_ng_container_2_tui_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-svg\", 4);\n  }\n}\nfunction TuiBreadcrumbsComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 2);\n    i0.ɵɵtemplate(2, TuiBreadcrumbsComponent_ng_container_2_tui_svg_2_Template, 1, 0, \"tui-svg\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const last_r3 = ctx.last;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", item_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !last_r3);\n  }\n}\nclass TuiBreadcrumbsComponent extends TuiModeDirective {\n  constructor() {\n    super(...arguments);\n    this.size = 'm';\n    this.items = EMPTY_QUERY;\n    this.mode = 'onLight';\n  }\n}\nTuiBreadcrumbsComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiBreadcrumbsComponent_BaseFactory;\n  return function TuiBreadcrumbsComponent_Factory(t) {\n    return (ɵTuiBreadcrumbsComponent_BaseFactory || (ɵTuiBreadcrumbsComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiBreadcrumbsComponent)))(t || TuiBreadcrumbsComponent);\n  };\n}();\nTuiBreadcrumbsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiBreadcrumbsComponent,\n  selectors: [[\"tui-breadcrumbs\"]],\n  contentQueries: function TuiBreadcrumbsComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TuiItemDirective, 4, TemplateRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function TuiBreadcrumbsComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"data-size\", ctx.size);\n    }\n  },\n  inputs: {\n    size: \"size\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TuiModeDirective,\n    useExisting: forwardRef(() => TuiBreadcrumbsComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 4,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngTemplateOutlet\"], [\"src\", \"tuiIconChevronRight\", \"class\", \"t-icon\", 4, \"ngIf\"], [\"src\", \"tuiIconChevronRight\", 1, \"t-icon\"]],\n  template: function TuiBreadcrumbsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TuiBreadcrumbsComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, TuiBreadcrumbsComponent_ng_container_2_Template, 3, 2, \"ng-container\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.items.changes));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1.TuiSvgComponent, i2.NgIf, i2.NgForOf, i2.NgTemplateOutlet, i2.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{display:flex;align-items:center;height:2.5rem;font:var(--tui-font-text-s)}[data-size=l][_nghost-%COMP%]{font:var(--tui-font-text-m)}.t-icon[_ngcontent-%COMP%]{margin:0 .25rem;color:var(--tui-text-03)}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiBreadcrumbsComponent.prototype, \"size\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiBreadcrumbsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-breadcrumbs',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      templateUrl: './breadcrumbs.template.html',\n      styleUrls: ['./breadcrumbs.style.less'],\n      providers: [{\n        provide: TuiModeDirective,\n        useExisting: forwardRef(() => TuiBreadcrumbsComponent)\n      }]\n    }]\n  }], null, {\n    size: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.data-size']\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [TuiItemDirective, {\n        read: TemplateRef\n      }]\n    }]\n  });\n})();\nclass TuiBreadcrumbsModule {}\nTuiBreadcrumbsModule.ɵfac = function TuiBreadcrumbsModule_Factory(t) {\n  return new (t || TuiBreadcrumbsModule)();\n};\nTuiBreadcrumbsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiBreadcrumbsModule\n});\nTuiBreadcrumbsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TuiSvgModule, TuiItemModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiBreadcrumbsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiSvgModule, TuiItemModule],\n      declarations: [TuiBreadcrumbsComponent],\n      exports: [TuiBreadcrumbsComponent, TuiItemDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiBreadcrumbsComponent, TuiBreadcrumbsModule };","map":{"version":3,"names":["__decorate","i0","forwardRef","TemplateRef","Component","ChangeDetectionStrategy","Input","HostBinding","ContentChildren","NgModule","EMPTY_QUERY","TuiItemDirective","tuiDefaultProp","TuiItemModule","i1","TuiModeDirective","TuiSvgModule","i2","CommonModule","TuiBreadcrumbsComponent","constructor","arguments","size","items","mode","ɵfac","ɵcmp","provide","useExisting","TuiSvgComponent","NgIf","NgForOf","NgTemplateOutlet","AsyncPipe","prototype","type","args","selector","changeDetection","OnPush","templateUrl","styleUrls","providers","read","TuiBreadcrumbsModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-breadcrumbs.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { forwardRef, TemplateRef, Component, ChangeDetectionStrategy, Input, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { EMPTY_QUERY, TuiItemDirective, tuiDefaultProp, TuiItemModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TuiModeDirective, TuiSvgModule } from '@taiga-ui/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass TuiBreadcrumbsComponent extends TuiModeDirective {\n    constructor() {\n        super(...arguments);\n        this.size = 'm';\n        this.items = EMPTY_QUERY;\n        this.mode = 'onLight';\n    }\n}\nTuiBreadcrumbsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreadcrumbsComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTuiBreadcrumbsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiBreadcrumbsComponent, selector: \"tui-breadcrumbs\", inputs: { size: \"size\" }, host: { properties: { \"attr.data-size\": \"this.size\" } }, providers: [\n        {\n            provide: TuiModeDirective,\n            useExisting: forwardRef(() => TuiBreadcrumbsComponent),\n        },\n    ], queries: [{ propertyName: \"items\", predicate: TuiItemDirective, read: TemplateRef }], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"items.changes | async\\\"></ng-container>\\n<ng-container *ngFor=\\\"let item of items; let last = last\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"item\\\"></ng-container>\\n    <tui-svg\\n        *ngIf=\\\"!last\\\"\\n        src=\\\"tuiIconChevronRight\\\"\\n        class=\\\"t-icon\\\"\\n    ></tui-svg>\\n</ng-container>\\n\", styles: [\":host{display:flex;align-items:center;height:2.5rem;font:var(--tui-font-text-s)}:host[data-size=l]{font:var(--tui-font-text-m)}.t-icon{margin:0 .25rem;color:var(--tui-text-03)}\\n\"], components: [{ type: i1.TuiSvgComponent, selector: \"tui-svg\", inputs: [\"src\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"async\": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiBreadcrumbsComponent.prototype, \"size\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreadcrumbsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-breadcrumbs',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    templateUrl: './breadcrumbs.template.html',\n                    styleUrls: ['./breadcrumbs.style.less'],\n                    providers: [\n                        {\n                            provide: TuiModeDirective,\n                            useExisting: forwardRef(() => TuiBreadcrumbsComponent),\n                        },\n                    ],\n                }]\n        }], propDecorators: { size: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['attr.data-size']\n            }], items: [{\n                type: ContentChildren,\n                args: [TuiItemDirective, { read: TemplateRef }]\n            }] } });\n\nclass TuiBreadcrumbsModule {\n}\nTuiBreadcrumbsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreadcrumbsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiBreadcrumbsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreadcrumbsModule, declarations: [TuiBreadcrumbsComponent], imports: [CommonModule, TuiSvgModule, TuiItemModule], exports: [TuiBreadcrumbsComponent, TuiItemDirective] });\nTuiBreadcrumbsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreadcrumbsModule, imports: [[CommonModule, TuiSvgModule, TuiItemModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiBreadcrumbsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, TuiSvgModule, TuiItemModule],\n                    declarations: [TuiBreadcrumbsComponent],\n                    exports: [TuiBreadcrumbsComponent, TuiItemDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiBreadcrumbsComponent, TuiBreadcrumbsModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}