{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostBinding, Optional, Inject, Injectable, TemplateRef, ChangeDetectorRef, ComponentFactoryResolver, Injector, INJECTOR, ElementRef, ViewContainerRef, ViewChild } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgModel } from '@angular/forms';\nimport { tuiAssert } from '@taiga-ui/cdk/classes';\nimport { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';\nimport { tuiDefaultProp } from '@taiga-ui/cdk/decorators';\nimport { Subject, merge, Observable, BehaviorSubject } from 'rxjs';\nimport { takeUntil, ignoreElements, endWith, share } from 'rxjs/operators';\nimport { tuiIfMap } from '@taiga-ui/cdk/observables';\nimport { PolymorpheusTemplate } from '@tinkoff/ng-polymorpheus';\nimport * as i1$1 from '@taiga-ui/cdk/services';\nimport { TuiIdService } from '@taiga-ui/cdk/services';\nimport { TuiNoHostException } from '@taiga-ui/cdk/exceptions';\nimport { DOCUMENT } from '@angular/common';\nconst _c0 = [\"viewContainer\"];\nconst TUI = `tui_interactive_`;\n/**\n * The most basic class for interactive components\n */\nclass AbstractTuiInteractive {\n  constructor() {\n    this.pseudoHover = null;\n    this.pseudoActive = null;\n    this.pseudoFocus = null;\n    /**\n     * Determines if component is focusable with keyboard.\n     */\n    this.focusable = true;\n    this.nativeId = ``;\n    /**\n     * Emits 'true' on focus and 'false' on blur.\n     */\n    this.focusedChange = new EventEmitter();\n    this.focusVisibleChange = new EventEmitter();\n    this.focusVisible = false;\n    this.autoIdString = `${TUI}${AbstractTuiInteractive.autoId++}${Date.now()}`;\n  }\n  get computedDisabled() {\n    return this.disabled;\n  }\n  get computedFocusable() {\n    return !this.computedDisabled && (this.focusable || this.focused);\n  }\n  get computedFocused() {\n    var _a;\n    return !this.computedDisabled && ((_a = this.pseudoFocus) !== null && _a !== void 0 ? _a : this.focused);\n  }\n  get computedFocusVisible() {\n    var _a;\n    return !this.computedDisabled && ((_a = this.pseudoFocus) !== null && _a !== void 0 ? _a : this.focusVisible);\n  }\n  // TODO: 3.0 Consider removing since native input is exposed\n  get id() {\n    return this.nativeId || this.autoIdString;\n  }\n  updateFocused(focused) {\n    this.focusedChange.emit(focused);\n  }\n  updateFocusVisible(focusVisible) {\n    if (this.focusVisible === focusVisible) {\n      return;\n    }\n    this.focusVisible = focusVisible;\n    this.focusVisibleChange.emit(focusVisible);\n  }\n}\nAbstractTuiInteractive.autoId = 0;\nAbstractTuiInteractive.ɵfac = function AbstractTuiInteractive_Factory(t) {\n  return new (t || AbstractTuiInteractive)();\n};\nAbstractTuiInteractive.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiInteractive,\n  hostVars: 6,\n  hostBindings: function AbstractTuiInteractive_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"_disabled\", ctx.computedDisabled)(\"_focused\", ctx.computedFocused)(\"_focus-visible\", ctx.computedFocusVisible);\n    }\n  },\n  inputs: {\n    pseudoHover: \"pseudoHover\",\n    pseudoActive: \"pseudoActive\",\n    pseudoFocus: \"pseudoFocus\",\n    focusable: \"focusable\",\n    nativeId: \"nativeId\"\n  },\n  outputs: {\n    focusedChange: \"focusedChange\",\n    focusVisibleChange: \"focusVisibleChange\"\n  }\n});\n__decorate([tuiDefaultProp()], AbstractTuiInteractive.prototype, \"pseudoHover\", void 0);\n__decorate([tuiDefaultProp()], AbstractTuiInteractive.prototype, \"pseudoActive\", void 0);\n__decorate([tuiDefaultProp()], AbstractTuiInteractive.prototype, \"pseudoFocus\", void 0);\n__decorate([tuiDefaultProp()], AbstractTuiInteractive.prototype, \"focusable\", void 0);\n__decorate([tuiDefaultProp()], AbstractTuiInteractive.prototype, \"nativeId\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiInteractive, [{\n    type: Directive\n  }], function () {\n    return [];\n  }, {\n    pseudoHover: [{\n      type: Input\n    }],\n    pseudoActive: [{\n      type: Input\n    }],\n    pseudoFocus: [{\n      type: Input\n    }],\n    focusable: [{\n      type: Input\n    }],\n    nativeId: [{\n      type: Input\n    }],\n    focusedChange: [{\n      type: Output\n    }],\n    focusVisibleChange: [{\n      type: Output\n    }],\n    computedDisabled: [{\n      type: HostBinding,\n      args: [`class._disabled`]\n    }],\n    computedFocused: [{\n      type: HostBinding,\n      args: [`class._focused`]\n    }],\n    computedFocusVisible: [{\n      type: HostBinding,\n      args: [`class._focus-visible`]\n    }]\n  });\n})();\nclass AbstractTuiValueTransformer {}\n\n/**\n * Basic ControlValueAccessor class to build form components upon\n */\nclass AbstractTuiControl extends AbstractTuiInteractive {\n  constructor(ngControl, cdr, valueTransformer) {\n    super();\n    this.ngControl = ngControl;\n    this.cdr = cdr;\n    this.valueTransformer = valueTransformer;\n    this.onTouched = EMPTY_FUNCTION;\n    this.onChange = EMPTY_FUNCTION;\n    this.fallbackValue = this.getFallbackValue();\n    this.destroy$ = new Subject();\n    this.readOnly = false;\n    this.pseudoInvalid = null;\n    if (ngDevMode && this.ngControl === null) {\n      tuiAssert.assert(false, `NgControl not injected in ${this.constructor.name}!\\n`, `Use [(ngModel)] or [formControl] or formControlName for correct work.`);\n    }\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n  get computedInvalid() {\n    return this.interactive && (this.pseudoInvalid !== null ? this.pseudoInvalid : this.touched && this.invalid);\n  }\n  get value() {\n    var _a;\n    return (_a = this.previousInternalValue) !== null && _a !== void 0 ? _a : this.fallbackValue;\n  }\n  set value(value) {\n    this.updateValue(value);\n  }\n  get safeCurrentValue() {\n    var _a;\n    return (_a = this.rawValue) !== null && _a !== void 0 ? _a : this.fallbackValue;\n  }\n  get invalid() {\n    return this.safeNgControlData(({\n      invalid\n    }) => invalid, false);\n  }\n  get valid() {\n    return this.safeNgControlData(({\n      valid\n    }) => valid, false);\n  }\n  get touched() {\n    return this.safeNgControlData(({\n      touched\n    }) => touched, false);\n  }\n  get disabled() {\n    return this.safeNgControlData(({\n      disabled\n    }) => disabled, false);\n  }\n  get interactive() {\n    return !this.readOnly && !this.computedDisabled;\n  }\n  get control() {\n    return this.safeNgControlData(({\n      control\n    }) => control, null);\n  }\n  get computedName() {\n    var _a, _b;\n    return (_b = (_a = this.controlName) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : null;\n  }\n  get controlName() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = this.ngControl) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.toString()) !== null && _c !== void 0 ? _c : null;\n  }\n  get rawValue() {\n    const {\n      ngControl\n    } = this;\n    if (ngControl === null) {\n      return undefined;\n    }\n    const controlValue = ngControl instanceof NgModel && this.previousInternalValue === undefined ? ngControl.viewModel : ngControl.value;\n    return this.fromControlValue(controlValue);\n  }\n  ngOnInit() {\n    var _a, _b;\n    if (!((_a = this.ngControl) === null || _a === void 0 ? void 0 : _a.valueChanges) || !((_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.statusChanges)) {\n      return;\n    }\n    merge(this.ngControl.valueChanges, this.ngControl.statusChanges).pipe(takeUntil(this.destroy$)).subscribe(() => this.refreshLocalValue(this.safeCurrentValue));\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  checkControlUpdate() {\n    this.cdr.markForCheck();\n  }\n  registerOnChange(onChange) {\n    this.onChange = componentValue => {\n      onChange(this.toControlValue(componentValue));\n    };\n  }\n  registerOnTouched(onTouched) {\n    this.onTouched = onTouched;\n  }\n  setDisabledState() {\n    this.checkControlUpdate();\n  }\n  writeValue(value) {\n    const controlValue = this.ngControl instanceof NgModel && this.previousInternalValue === undefined ? this.ngControl.model : value;\n    this.refreshLocalValue(this.fromControlValue(controlValue));\n  }\n  updateFocused(focused) {\n    if (!focused) {\n      this.controlMarkAsTouched();\n    }\n    super.updateFocused(focused);\n  }\n  /**\n   * @deprecated use `value` setter\n   */\n  updateValue(value) {\n    if (this.disabled || this.valueIdenticalComparator(this.value, value)) {\n      return;\n    }\n    this.previousInternalValue = value;\n    this.controlSetValue(value);\n  }\n  valueIdenticalComparator(oldValue, newValue) {\n    return oldValue === newValue;\n  }\n  safeNgControlData(extractor, defaultFieldValue) {\n    var _a;\n    return (_a = this.ngControl && extractor(this.ngControl)) !== null && _a !== void 0 ? _a : defaultFieldValue;\n  }\n  controlMarkAsTouched() {\n    this.onTouched();\n    this.checkControlUpdate();\n  }\n  controlSetValue(value) {\n    this.onChange(value);\n    this.checkControlUpdate();\n  }\n  refreshLocalValue(value) {\n    this.previousInternalValue = value;\n    this.checkControlUpdate();\n  }\n  fromControlValue(controlValue) {\n    return this.valueTransformer ? this.valueTransformer.fromControlValue(controlValue) : controlValue;\n  }\n  toControlValue(componentValue) {\n    return this.valueTransformer ? this.valueTransformer.toControlValue(componentValue) : componentValue;\n  }\n}\nAbstractTuiControl.ɵfac = function AbstractTuiControl_Factory(t) {\n  return new (t || AbstractTuiControl)(i0.ɵɵdirectiveInject(i1.NgControl, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(AbstractTuiValueTransformer, 8));\n};\nAbstractTuiControl.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiControl,\n  hostVars: 4,\n  hostBindings: function AbstractTuiControl_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"_readonly\", ctx.readOnly)(\"_invalid\", ctx.computedInvalid);\n    }\n  },\n  inputs: {\n    readOnly: \"readOnly\",\n    pseudoInvalid: \"pseudoInvalid\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n__decorate([tuiDefaultProp()], AbstractTuiControl.prototype, \"readOnly\", void 0);\n__decorate([tuiDefaultProp()], AbstractTuiControl.prototype, \"pseudoInvalid\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiControl, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [AbstractTuiValueTransformer]\n      }]\n    }];\n  }, {\n    readOnly: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: [`class._readonly`]\n    }],\n    pseudoInvalid: [{\n      type: Input\n    }],\n    computedInvalid: [{\n      type: HostBinding,\n      args: [`class._invalid`]\n    }]\n  });\n})();\nfunction tuiAsControl(useExisting) {\n  return {\n    provide: AbstractTuiControl,\n    useExisting\n  };\n}\nclass AbstractTuiController {\n  constructor() {\n    this.change$ = new Subject();\n  }\n  ngOnChanges() {\n    this.change$.next();\n  }\n}\nAbstractTuiController.ɵfac = function AbstractTuiController_Factory(t) {\n  return new (t || AbstractTuiController)();\n};\nAbstractTuiController.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiController,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiController, [{\n    type: Directive\n  }], null, null);\n})();\nclass AbstractTuiDialogService extends Observable {\n  constructor(idService) {\n    super(observer => this.dialogs$.subscribe(observer));\n    this.idService = idService;\n    this.dialogs$ = new BehaviorSubject([]);\n  }\n  open(content, options = {}) {\n    return new Observable(observer => {\n      const completeWith = result => {\n        observer.next(result);\n        observer.complete();\n      };\n      const dialog = Object.assign(Object.assign(Object.assign({}, this.defaultOptions), options), {\n        content,\n        completeWith,\n        $implicit: observer,\n        component: this.component,\n        createdAt: Date.now(),\n        id: this.idService.generate()\n      });\n      this.dialogs$.next([...this.dialogs$.value, dialog]);\n      return () => {\n        this.dialogs$.next(this.dialogs$.value.filter(item => item !== dialog));\n      };\n    });\n  }\n}\nAbstractTuiDialogService.ɵfac = function AbstractTuiDialogService_Factory(t) {\n  return new (t || AbstractTuiDialogService)(i0.ɵɵinject(TuiIdService));\n};\nAbstractTuiDialogService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AbstractTuiDialogService,\n  factory: AbstractTuiDialogService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiDialogService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.TuiIdService,\n      decorators: [{\n        type: Inject,\n        args: [TuiIdService]\n      }]\n    }];\n  }, null);\n})();\nclass AbstractTuiDialogDirective extends PolymorpheusTemplate {\n  constructor(templateRef, cdr, service) {\n    super(templateRef, cdr);\n    this.service = service;\n    this.open$ = new Subject();\n    this.options = {};\n    this.openChange = this.open$.pipe(tuiIfMap(() => this.service.open(this, this.options).pipe(ignoreElements(), endWith(false))), share());\n  }\n  set open(open) {\n    this.open$.next(open);\n  }\n}\nAbstractTuiDialogDirective.ɵfac = function AbstractTuiDialogDirective_Factory(t) {\n  return new (t || AbstractTuiDialogDirective)(i0.ɵɵdirectiveInject(TemplateRef), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(AbstractTuiDialogService));\n};\nAbstractTuiDialogDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiDialogDirective,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiDialogDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Inject,\n        args: [TemplateRef]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: AbstractTuiDialogService,\n      decorators: [{\n        type: Inject,\n        args: [AbstractTuiDialogService]\n      }]\n    }];\n  }, null);\n})();\nclass AbstractTuiMultipleControl extends AbstractTuiControl {\n  clear() {\n    this.value = [];\n  }\n  getFallbackValue() {\n    return [];\n  }\n}\nAbstractTuiMultipleControl.ɵfac = /* @__PURE__ */function () {\n  let ɵAbstractTuiMultipleControl_BaseFactory;\n  return function AbstractTuiMultipleControl_Factory(t) {\n    return (ɵAbstractTuiMultipleControl_BaseFactory || (ɵAbstractTuiMultipleControl_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractTuiMultipleControl)))(t || AbstractTuiMultipleControl);\n  };\n}();\nAbstractTuiMultipleControl.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiMultipleControl,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiMultipleControl, [{\n    type: Directive\n  }], null, null);\n})();\nclass AbstractTuiNullableControl extends AbstractTuiControl {\n  getFallbackValue() {\n    return null;\n  }\n}\nAbstractTuiNullableControl.ɵfac = /* @__PURE__ */function () {\n  let ɵAbstractTuiNullableControl_BaseFactory;\n  return function AbstractTuiNullableControl_Factory(t) {\n    return (ɵAbstractTuiNullableControl_BaseFactory || (ɵAbstractTuiNullableControl_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractTuiNullableControl)))(t || AbstractTuiNullableControl);\n  };\n}();\nAbstractTuiNullableControl.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiNullableControl,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiNullableControl, [{\n    type: Directive\n  }], null, null);\n})();\n\n/**\n * Abstract service for displaying portals\n */\nclass AbstractTuiPortalService {\n  get safeHost() {\n    if (!this.host) {\n      throw new TuiNoHostException();\n    }\n    return this.host;\n  }\n  attach(host) {\n    this.host = host;\n  }\n  add(component) {\n    return this.safeHost.addComponentChild(component);\n  }\n  remove({\n    hostView\n  }) {\n    hostView.destroy();\n  }\n  addTemplate(templateRef, context) {\n    return this.safeHost.addTemplateChild(templateRef, context);\n  }\n  removeTemplate(viewRef) {\n    viewRef.destroy();\n  }\n}\nAbstractTuiPortalService.ɵfac = function AbstractTuiPortalService_Factory(t) {\n  return new (t || AbstractTuiPortalService)();\n};\nAbstractTuiPortalService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AbstractTuiPortalService,\n  factory: AbstractTuiPortalService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiPortalService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Abstract class for host element for dynamically created portals.\n */\nclass AbstractTuiPortalHostComponent {\n  constructor(injector, el, portalService) {\n    this.injector = injector;\n    this.el = el;\n    portalService.attach(this);\n  }\n  get clientRect() {\n    return this.el.nativeElement.getBoundingClientRect();\n  }\n  addComponentChild(component) {\n    const parent = component.createInjector(this.injector);\n    const resolver = parent.get(ComponentFactoryResolver);\n    const factory = resolver.resolveComponentFactory(component.component);\n    const providers = [{\n      provide: AbstractTuiPortalHostComponent,\n      useValue: this\n    }];\n    const injector = Injector.create({\n      parent,\n      providers\n    });\n    const ref = this.vcr.createComponent(factory, undefined, injector);\n    ref.changeDetectorRef.detectChanges();\n    return ref;\n  }\n  addTemplateChild(templateRef, context) {\n    return this.vcr.createEmbeddedView(templateRef, context);\n  }\n}\nAbstractTuiPortalHostComponent.ɵfac = function AbstractTuiPortalHostComponent_Factory(t) {\n  return new (t || AbstractTuiPortalHostComponent)(i0.ɵɵdirectiveInject(INJECTOR), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(AbstractTuiPortalService));\n};\nAbstractTuiPortalHostComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiPortalHostComponent,\n  viewQuery: function AbstractTuiPortalHostComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vcr = _t.first);\n    }\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiPortalHostComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.Injector,\n      decorators: [{\n        type: Inject,\n        args: [INJECTOR]\n      }]\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: AbstractTuiPortalService,\n      decorators: [{\n        type: Inject,\n        args: [AbstractTuiPortalService]\n      }]\n    }];\n  }, {\n    vcr: [{\n      type: ViewChild,\n      args: [`viewContainer`, {\n        read: ViewContainerRef\n      }]\n    }]\n  });\n})();\n\n/**\n * Use this abstract class to create your own toggleable themes.\n * A component extending this class must have CSS variables definitions\n * and have ViewEncapsulation set to NONE. A boolean input allows to\n * switch theme on or off.\n */\nclass AbstractTuiThemeSwitcher {\n  constructor(doc) {\n    this.doc = doc;\n    if (this.style !== null) {\n      this.addTheme();\n      return;\n    }\n    const styles = this.doc.head.querySelectorAll(`style`);\n    this.constructor.style = styles[styles.length - 1];\n  }\n  get style() {\n    return this.constructor.style;\n  }\n  ngOnDestroy() {\n    this.removeTheme();\n  }\n  addTheme() {\n    if (this.style) {\n      this.doc.head.appendChild(this.style);\n    }\n  }\n  removeTheme() {\n    if (this.style && this.doc.head.contains(this.style)) {\n      this.doc.head.removeChild(this.style);\n    }\n  }\n}\nAbstractTuiThemeSwitcher.style = null;\nAbstractTuiThemeSwitcher.ɵfac = function AbstractTuiThemeSwitcher_Factory(t) {\n  return new (t || AbstractTuiThemeSwitcher)(i0.ɵɵdirectiveInject(DOCUMENT));\n};\nAbstractTuiThemeSwitcher.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractTuiThemeSwitcher\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiThemeSwitcher, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractTuiControl, AbstractTuiController, AbstractTuiDialogDirective, AbstractTuiDialogService, AbstractTuiInteractive, AbstractTuiMultipleControl, AbstractTuiNullableControl, AbstractTuiPortalHostComponent, AbstractTuiPortalService, AbstractTuiThemeSwitcher, AbstractTuiValueTransformer, tuiAsControl };","map":{"version":3,"names":["__decorate","i0","EventEmitter","Directive","Input","Output","HostBinding","Optional","Inject","Injectable","TemplateRef","ChangeDetectorRef","ComponentFactoryResolver","Injector","INJECTOR","ElementRef","ViewContainerRef","ViewChild","i1","NgModel","tuiAssert","EMPTY_FUNCTION","tuiDefaultProp","Subject","merge","Observable","BehaviorSubject","takeUntil","ignoreElements","endWith","share","tuiIfMap","PolymorpheusTemplate","i1$1","TuiIdService","TuiNoHostException","DOCUMENT","TUI","AbstractTuiInteractive","constructor","pseudoHover","pseudoActive","pseudoFocus","focusable","nativeId","focusedChange","focusVisibleChange","focusVisible","autoIdString","autoId","Date","now","computedDisabled","disabled","computedFocusable","focused","computedFocused","_a","computedFocusVisible","id","updateFocused","emit","updateFocusVisible","ɵfac","ɵdir","prototype","type","args","AbstractTuiValueTransformer","AbstractTuiControl","ngControl","cdr","valueTransformer","onTouched","onChange","fallbackValue","getFallbackValue","destroy$","readOnly","pseudoInvalid","ngDevMode","assert","name","valueAccessor","computedInvalid","interactive","touched","invalid","value","previousInternalValue","updateValue","safeCurrentValue","rawValue","safeNgControlData","valid","control","computedName","_b","controlName","toString","_c","undefined","controlValue","viewModel","fromControlValue","ngOnInit","valueChanges","statusChanges","pipe","subscribe","refreshLocalValue","ngOnDestroy","next","complete","checkControlUpdate","markForCheck","registerOnChange","componentValue","toControlValue","registerOnTouched","setDisabledState","writeValue","model","controlMarkAsTouched","valueIdenticalComparator","controlSetValue","oldValue","newValue","extractor","defaultFieldValue","NgControl","decorators","tuiAsControl","useExisting","provide","AbstractTuiController","change$","ngOnChanges","AbstractTuiDialogService","idService","observer","dialogs$","open","content","options","completeWith","result","dialog","Object","assign","defaultOptions","$implicit","component","createdAt","generate","filter","item","ɵprov","AbstractTuiDialogDirective","templateRef","service","open$","openChange","AbstractTuiMultipleControl","clear","AbstractTuiNullableControl","AbstractTuiPortalService","safeHost","host","attach","add","addComponentChild","remove","hostView","destroy","addTemplate","context","addTemplateChild","removeTemplate","viewRef","AbstractTuiPortalHostComponent","injector","el","portalService","clientRect","nativeElement","getBoundingClientRect","parent","createInjector","resolver","get","factory","resolveComponentFactory","providers","useValue","create","ref","vcr","createComponent","changeDetectorRef","detectChanges","createEmbeddedView","read","AbstractTuiThemeSwitcher","doc","style","addTheme","styles","head","querySelectorAll","length","removeTheme","appendChild","contains","removeChild","Document"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/cdk/fesm2015/taiga-ui-cdk-abstract.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostBinding, Optional, Inject, Injectable, TemplateRef, ChangeDetectorRef, ComponentFactoryResolver, Injector, INJECTOR, ElementRef, ViewContainerRef, ViewChild } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgModel } from '@angular/forms';\nimport { tuiAssert } from '@taiga-ui/cdk/classes';\nimport { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';\nimport { tuiDefaultProp } from '@taiga-ui/cdk/decorators';\nimport { Subject, merge, Observable, BehaviorSubject } from 'rxjs';\nimport { takeUntil, ignoreElements, endWith, share } from 'rxjs/operators';\nimport { tuiIfMap } from '@taiga-ui/cdk/observables';\nimport { PolymorpheusTemplate } from '@tinkoff/ng-polymorpheus';\nimport * as i1$1 from '@taiga-ui/cdk/services';\nimport { TuiIdService } from '@taiga-ui/cdk/services';\nimport { TuiNoHostException } from '@taiga-ui/cdk/exceptions';\nimport { DOCUMENT } from '@angular/common';\n\nconst TUI = `tui_interactive_`;\n/**\n * The most basic class for interactive components\n */\nclass AbstractTuiInteractive {\n    constructor() {\n        this.pseudoHover = null;\n        this.pseudoActive = null;\n        this.pseudoFocus = null;\n        /**\n         * Determines if component is focusable with keyboard.\n         */\n        this.focusable = true;\n        this.nativeId = ``;\n        /**\n         * Emits 'true' on focus and 'false' on blur.\n         */\n        this.focusedChange = new EventEmitter();\n        this.focusVisibleChange = new EventEmitter();\n        this.focusVisible = false;\n        this.autoIdString = `${TUI}${AbstractTuiInteractive.autoId++}${Date.now()}`;\n    }\n    get computedDisabled() {\n        return this.disabled;\n    }\n    get computedFocusable() {\n        return !this.computedDisabled && (this.focusable || this.focused);\n    }\n    get computedFocused() {\n        var _a;\n        return !this.computedDisabled && ((_a = this.pseudoFocus) !== null && _a !== void 0 ? _a : this.focused);\n    }\n    get computedFocusVisible() {\n        var _a;\n        return !this.computedDisabled && ((_a = this.pseudoFocus) !== null && _a !== void 0 ? _a : this.focusVisible);\n    }\n    // TODO: 3.0 Consider removing since native input is exposed\n    get id() {\n        return this.nativeId || this.autoIdString;\n    }\n    updateFocused(focused) {\n        this.focusedChange.emit(focused);\n    }\n    updateFocusVisible(focusVisible) {\n        if (this.focusVisible === focusVisible) {\n            return;\n        }\n        this.focusVisible = focusVisible;\n        this.focusVisibleChange.emit(focusVisible);\n    }\n}\nAbstractTuiInteractive.autoId = 0;\nAbstractTuiInteractive.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiInteractive, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiInteractive.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiInteractive, inputs: { pseudoHover: \"pseudoHover\", pseudoActive: \"pseudoActive\", pseudoFocus: \"pseudoFocus\", focusable: \"focusable\", nativeId: \"nativeId\" }, outputs: { focusedChange: \"focusedChange\", focusVisibleChange: \"focusVisibleChange\" }, host: { properties: { \"class._disabled\": \"this.computedDisabled\", \"class._focused\": \"this.computedFocused\", \"class._focus-visible\": \"this.computedFocusVisible\" } }, ngImport: i0 });\n__decorate([\n    tuiDefaultProp()\n], AbstractTuiInteractive.prototype, \"pseudoHover\", void 0);\n__decorate([\n    tuiDefaultProp()\n], AbstractTuiInteractive.prototype, \"pseudoActive\", void 0);\n__decorate([\n    tuiDefaultProp()\n], AbstractTuiInteractive.prototype, \"pseudoFocus\", void 0);\n__decorate([\n    tuiDefaultProp()\n], AbstractTuiInteractive.prototype, \"focusable\", void 0);\n__decorate([\n    tuiDefaultProp()\n], AbstractTuiInteractive.prototype, \"nativeId\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiInteractive, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return []; }, propDecorators: { pseudoHover: [{\n                type: Input\n            }], pseudoActive: [{\n                type: Input\n            }], pseudoFocus: [{\n                type: Input\n            }], focusable: [{\n                type: Input\n            }], nativeId: [{\n                type: Input\n            }], focusedChange: [{\n                type: Output\n            }], focusVisibleChange: [{\n                type: Output\n            }], computedDisabled: [{\n                type: HostBinding,\n                args: [`class._disabled`]\n            }], computedFocused: [{\n                type: HostBinding,\n                args: [`class._focused`]\n            }], computedFocusVisible: [{\n                type: HostBinding,\n                args: [`class._focus-visible`]\n            }] } });\n\nclass AbstractTuiValueTransformer {\n}\n\n/**\n * Basic ControlValueAccessor class to build form components upon\n */\nclass AbstractTuiControl extends AbstractTuiInteractive {\n    constructor(ngControl, cdr, valueTransformer) {\n        super();\n        this.ngControl = ngControl;\n        this.cdr = cdr;\n        this.valueTransformer = valueTransformer;\n        this.onTouched = EMPTY_FUNCTION;\n        this.onChange = EMPTY_FUNCTION;\n        this.fallbackValue = this.getFallbackValue();\n        this.destroy$ = new Subject();\n        this.readOnly = false;\n        this.pseudoInvalid = null;\n        if (ngDevMode && this.ngControl === null) {\n            tuiAssert.assert(false, `NgControl not injected in ${this.constructor.name}!\\n`, `Use [(ngModel)] or [formControl] or formControlName for correct work.`);\n        }\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    get computedInvalid() {\n        return (this.interactive &&\n            (this.pseudoInvalid !== null\n                ? this.pseudoInvalid\n                : this.touched && this.invalid));\n    }\n    get value() {\n        var _a;\n        return (_a = this.previousInternalValue) !== null && _a !== void 0 ? _a : this.fallbackValue;\n    }\n    set value(value) {\n        this.updateValue(value);\n    }\n    get safeCurrentValue() {\n        var _a;\n        return (_a = this.rawValue) !== null && _a !== void 0 ? _a : this.fallbackValue;\n    }\n    get invalid() {\n        return this.safeNgControlData(({ invalid }) => invalid, false);\n    }\n    get valid() {\n        return this.safeNgControlData(({ valid }) => valid, false);\n    }\n    get touched() {\n        return this.safeNgControlData(({ touched }) => touched, false);\n    }\n    get disabled() {\n        return this.safeNgControlData(({ disabled }) => disabled, false);\n    }\n    get interactive() {\n        return !this.readOnly && !this.computedDisabled;\n    }\n    get control() {\n        return this.safeNgControlData(({ control }) => control, null);\n    }\n    get computedName() {\n        var _a, _b;\n        return (_b = (_a = this.controlName) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : null;\n    }\n    get controlName() {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this.ngControl) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.toString()) !== null && _c !== void 0 ? _c : null;\n    }\n    get rawValue() {\n        const { ngControl } = this;\n        if (ngControl === null) {\n            return undefined;\n        }\n        const controlValue = ngControl instanceof NgModel && this.previousInternalValue === undefined\n            ? ngControl.viewModel\n            : ngControl.value;\n        return this.fromControlValue(controlValue);\n    }\n    ngOnInit() {\n        var _a, _b;\n        if (!((_a = this.ngControl) === null || _a === void 0 ? void 0 : _a.valueChanges) || !((_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.statusChanges)) {\n            return;\n        }\n        merge(this.ngControl.valueChanges, this.ngControl.statusChanges)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.refreshLocalValue(this.safeCurrentValue));\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    checkControlUpdate() {\n        this.cdr.markForCheck();\n    }\n    registerOnChange(onChange) {\n        this.onChange = (componentValue) => {\n            onChange(this.toControlValue(componentValue));\n        };\n    }\n    registerOnTouched(onTouched) {\n        this.onTouched = onTouched;\n    }\n    setDisabledState() {\n        this.checkControlUpdate();\n    }\n    writeValue(value) {\n        const controlValue = this.ngControl instanceof NgModel && this.previousInternalValue === undefined\n            ? this.ngControl.model\n            : value;\n        this.refreshLocalValue(this.fromControlValue(controlValue));\n    }\n    updateFocused(focused) {\n        if (!focused) {\n            this.controlMarkAsTouched();\n        }\n        super.updateFocused(focused);\n    }\n    /**\n     * @deprecated use `value` setter\n     */\n    updateValue(value) {\n        if (this.disabled || this.valueIdenticalComparator(this.value, value)) {\n            return;\n        }\n        this.previousInternalValue = value;\n        this.controlSetValue(value);\n    }\n    valueIdenticalComparator(oldValue, newValue) {\n        return oldValue === newValue;\n    }\n    safeNgControlData(extractor, defaultFieldValue) {\n        var _a;\n        return (_a = (this.ngControl && extractor(this.ngControl))) !== null && _a !== void 0 ? _a : defaultFieldValue;\n    }\n    controlMarkAsTouched() {\n        this.onTouched();\n        this.checkControlUpdate();\n    }\n    controlSetValue(value) {\n        this.onChange(value);\n        this.checkControlUpdate();\n    }\n    refreshLocalValue(value) {\n        this.previousInternalValue = value;\n        this.checkControlUpdate();\n    }\n    fromControlValue(controlValue) {\n        return this.valueTransformer\n            ? this.valueTransformer.fromControlValue(controlValue)\n            : controlValue;\n    }\n    toControlValue(componentValue) {\n        return this.valueTransformer\n            ? this.valueTransformer.toControlValue(componentValue)\n            : componentValue;\n    }\n}\nAbstractTuiControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiControl, deps: [{ token: i1.NgControl, optional: true }, { token: i0.ChangeDetectorRef }, { token: AbstractTuiValueTransformer, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiControl, inputs: { readOnly: \"readOnly\", pseudoInvalid: \"pseudoInvalid\" }, host: { properties: { \"class._readonly\": \"this.readOnly\", \"class._invalid\": \"this.computedInvalid\" } }, usesInheritance: true, ngImport: i0 });\n__decorate([\n    tuiDefaultProp()\n], AbstractTuiControl.prototype, \"readOnly\", void 0);\n__decorate([\n    tuiDefaultProp()\n], AbstractTuiControl.prototype, \"pseudoInvalid\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiControl, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.NgControl, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [AbstractTuiValueTransformer]\n                }] }]; }, propDecorators: { readOnly: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: [`class._readonly`]\n            }], pseudoInvalid: [{\n                type: Input\n            }], computedInvalid: [{\n                type: HostBinding,\n                args: [`class._invalid`]\n            }] } });\nfunction tuiAsControl(useExisting) {\n    return {\n        provide: AbstractTuiControl,\n        useExisting,\n    };\n}\n\nclass AbstractTuiController {\n    constructor() {\n        this.change$ = new Subject();\n    }\n    ngOnChanges() {\n        this.change$.next();\n    }\n}\nAbstractTuiController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiController, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiController.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiController, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiController, decorators: [{\n            type: Directive\n        }] });\n\nclass AbstractTuiDialogService extends Observable {\n    constructor(idService) {\n        super(observer => this.dialogs$.subscribe(observer));\n        this.idService = idService;\n        this.dialogs$ = new BehaviorSubject([]);\n    }\n    open(content, options = {}) {\n        return new Observable(observer => {\n            const completeWith = (result) => {\n                observer.next(result);\n                observer.complete();\n            };\n            const dialog = Object.assign(Object.assign(Object.assign({}, this.defaultOptions), options), { content,\n                completeWith, $implicit: observer, component: this.component, createdAt: Date.now(), id: this.idService.generate() });\n            this.dialogs$.next([...this.dialogs$.value, dialog]);\n            return () => {\n                this.dialogs$.next(this.dialogs$.value.filter(item => item !== dialog));\n            };\n        });\n    }\n}\nAbstractTuiDialogService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiDialogService, deps: [{ token: TuiIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nAbstractTuiDialogService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiDialogService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiDialogService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.TuiIdService, decorators: [{\n                    type: Inject,\n                    args: [TuiIdService]\n                }] }]; } });\n\nclass AbstractTuiDialogDirective extends PolymorpheusTemplate {\n    constructor(templateRef, cdr, service) {\n        super(templateRef, cdr);\n        this.service = service;\n        this.open$ = new Subject();\n        this.options = {};\n        this.openChange = this.open$.pipe(tuiIfMap(() => this.service.open(this, this.options).pipe(ignoreElements(), endWith(false))), share());\n    }\n    set open(open) {\n        this.open$.next(open);\n    }\n}\nAbstractTuiDialogDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiDialogDirective, deps: [{ token: TemplateRef }, { token: ChangeDetectorRef }, { token: AbstractTuiDialogService }], target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiDialogDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiDialogDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiDialogDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Inject,\n                    args: [TemplateRef]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: AbstractTuiDialogService, decorators: [{\n                    type: Inject,\n                    args: [AbstractTuiDialogService]\n                }] }]; } });\n\nclass AbstractTuiMultipleControl extends AbstractTuiControl {\n    clear() {\n        this.value = [];\n    }\n    getFallbackValue() {\n        return [];\n    }\n}\nAbstractTuiMultipleControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiMultipleControl, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiMultipleControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiMultipleControl, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiMultipleControl, decorators: [{\n            type: Directive\n        }] });\n\nclass AbstractTuiNullableControl extends AbstractTuiControl {\n    getFallbackValue() {\n        return null;\n    }\n}\nAbstractTuiNullableControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiNullableControl, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiNullableControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiNullableControl, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiNullableControl, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * Abstract service for displaying portals\n */\nclass AbstractTuiPortalService {\n    get safeHost() {\n        if (!this.host) {\n            throw new TuiNoHostException();\n        }\n        return this.host;\n    }\n    attach(host) {\n        this.host = host;\n    }\n    add(component) {\n        return this.safeHost.addComponentChild(component);\n    }\n    remove({ hostView }) {\n        hostView.destroy();\n    }\n    addTemplate(templateRef, context) {\n        return this.safeHost.addTemplateChild(templateRef, context);\n    }\n    removeTemplate(viewRef) {\n        viewRef.destroy();\n    }\n}\nAbstractTuiPortalService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiPortalService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nAbstractTuiPortalService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiPortalService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiPortalService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Abstract class for host element for dynamically created portals.\n */\nclass AbstractTuiPortalHostComponent {\n    constructor(injector, el, portalService) {\n        this.injector = injector;\n        this.el = el;\n        portalService.attach(this);\n    }\n    get clientRect() {\n        return this.el.nativeElement.getBoundingClientRect();\n    }\n    addComponentChild(component) {\n        const parent = component.createInjector(this.injector);\n        const resolver = parent.get(ComponentFactoryResolver);\n        const factory = resolver.resolveComponentFactory(component.component);\n        const providers = [{ provide: AbstractTuiPortalHostComponent, useValue: this }];\n        const injector = Injector.create({ parent, providers });\n        const ref = this.vcr.createComponent(factory, undefined, injector);\n        ref.changeDetectorRef.detectChanges();\n        return ref;\n    }\n    addTemplateChild(templateRef, context) {\n        return this.vcr.createEmbeddedView(templateRef, context);\n    }\n}\nAbstractTuiPortalHostComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiPortalHostComponent, deps: [{ token: INJECTOR }, { token: ElementRef }, { token: AbstractTuiPortalService }], target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiPortalHostComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiPortalHostComponent, viewQueries: [{ propertyName: \"vcr\", first: true, predicate: [\"viewContainer\"], descendants: true, read: ViewContainerRef }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiPortalHostComponent, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Injector, decorators: [{\n                    type: Inject,\n                    args: [INJECTOR]\n                }] }, { type: i0.ElementRef, decorators: [{\n                    type: Inject,\n                    args: [ElementRef]\n                }] }, { type: AbstractTuiPortalService, decorators: [{\n                    type: Inject,\n                    args: [AbstractTuiPortalService]\n                }] }]; }, propDecorators: { vcr: [{\n                type: ViewChild,\n                args: [`viewContainer`, { read: ViewContainerRef }]\n            }] } });\n\n/**\n * Use this abstract class to create your own toggleable themes.\n * A component extending this class must have CSS variables definitions\n * and have ViewEncapsulation set to NONE. A boolean input allows to\n * switch theme on or off.\n */\nclass AbstractTuiThemeSwitcher {\n    constructor(doc) {\n        this.doc = doc;\n        if (this.style !== null) {\n            this.addTheme();\n            return;\n        }\n        const styles = this.doc.head.querySelectorAll(`style`);\n        this.constructor.style =\n            styles[styles.length - 1];\n    }\n    get style() {\n        return this.constructor.style;\n    }\n    ngOnDestroy() {\n        this.removeTheme();\n    }\n    addTheme() {\n        if (this.style) {\n            this.doc.head.appendChild(this.style);\n        }\n    }\n    removeTheme() {\n        if (this.style && this.doc.head.contains(this.style)) {\n            this.doc.head.removeChild(this.style);\n        }\n    }\n}\nAbstractTuiThemeSwitcher.style = null;\nAbstractTuiThemeSwitcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiThemeSwitcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nAbstractTuiThemeSwitcher.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AbstractTuiThemeSwitcher, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AbstractTuiThemeSwitcher, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractTuiControl, AbstractTuiController, AbstractTuiDialogDirective, AbstractTuiDialogService, AbstractTuiInteractive, AbstractTuiMultipleControl, AbstractTuiNullableControl, AbstractTuiPortalHostComponent, AbstractTuiPortalService, AbstractTuiThemeSwitcher, AbstractTuiValueTransformer, tuiAsControl };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}