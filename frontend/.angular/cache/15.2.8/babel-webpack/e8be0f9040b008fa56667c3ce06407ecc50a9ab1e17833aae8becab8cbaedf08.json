{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Directive, Input, NgModule } from '@angular/core';\nimport { Validators, NG_VALIDATORS } from '@angular/forms';\nimport { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';\nimport { tuiDefaultProp } from '@taiga-ui/cdk/decorators';\nclass TuiValidatorDirective {\n  constructor() {\n    this.onChange = EMPTY_FUNCTION;\n    this.tuiValidator = Validators.nullValidator;\n  }\n  validate(control) {\n    return this.tuiValidator(control);\n  }\n  registerOnValidatorChange(onChange) {\n    this.onChange = onChange;\n  }\n  ngOnChanges() {\n    this.onChange();\n  }\n  ngOnDestroy() {\n    this.tuiValidator = Validators.nullValidator;\n    this.onChange();\n  }\n}\nTuiValidatorDirective.ɵfac = function TuiValidatorDirective_Factory(t) {\n  return new (t || TuiValidatorDirective)();\n};\nTuiValidatorDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiValidatorDirective,\n  selectors: [[\"\", \"tuiValidator\", \"\"]],\n  inputs: {\n    tuiValidator: \"tuiValidator\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TuiValidatorDirective),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature]\n});\n__decorate([tuiDefaultProp()], TuiValidatorDirective.prototype, \"tuiValidator\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiValidatorDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiValidator]',\n      providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => TuiValidatorDirective),\n        multi: true\n      }]\n    }]\n  }], null, {\n    tuiValidator: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiValidatorModule {}\nTuiValidatorModule.ɵfac = function TuiValidatorModule_Factory(t) {\n  return new (t || TuiValidatorModule)();\n};\nTuiValidatorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiValidatorModule\n});\nTuiValidatorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiValidatorModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TuiValidatorDirective],\n      exports: [TuiValidatorDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiValidatorDirective, TuiValidatorModule };","map":{"version":3,"names":["__decorate","i0","forwardRef","Directive","Input","NgModule","Validators","NG_VALIDATORS","EMPTY_FUNCTION","tuiDefaultProp","TuiValidatorDirective","constructor","onChange","tuiValidator","nullValidator","validate","control","registerOnValidatorChange","ngOnChanges","ngOnDestroy","ɵfac","ɵdir","provide","useExisting","multi","prototype","type","args","selector","providers","TuiValidatorModule","ɵmod","ɵinj","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/cdk/fesm2015/taiga-ui-cdk-directives-validator.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Directive, Input, NgModule } from '@angular/core';\nimport { Validators, NG_VALIDATORS } from '@angular/forms';\nimport { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';\nimport { tuiDefaultProp } from '@taiga-ui/cdk/decorators';\n\nclass TuiValidatorDirective {\n    constructor() {\n        this.onChange = EMPTY_FUNCTION;\n        this.tuiValidator = Validators.nullValidator;\n    }\n    validate(control) {\n        return this.tuiValidator(control);\n    }\n    registerOnValidatorChange(onChange) {\n        this.onChange = onChange;\n    }\n    ngOnChanges() {\n        this.onChange();\n    }\n    ngOnDestroy() {\n        this.tuiValidator = Validators.nullValidator;\n        this.onChange();\n    }\n}\nTuiValidatorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiValidatorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nTuiValidatorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiValidatorDirective, selector: \"[tuiValidator]\", inputs: { tuiValidator: \"tuiValidator\" }, providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => TuiValidatorDirective),\n            multi: true,\n        },\n    ], usesOnChanges: true, ngImport: i0 });\n__decorate([\n    tuiDefaultProp()\n], TuiValidatorDirective.prototype, \"tuiValidator\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiValidatorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiValidator]',\n                    providers: [\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: forwardRef(() => TuiValidatorDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { tuiValidator: [{\n                type: Input\n            }] } });\n\nclass TuiValidatorModule {\n}\nTuiValidatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiValidatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiValidatorModule, declarations: [TuiValidatorDirective], exports: [TuiValidatorDirective] });\nTuiValidatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiValidatorModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TuiValidatorDirective],\n                    exports: [TuiValidatorDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiValidatorDirective, TuiValidatorModule };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AACtE,SAASC,UAAU,EAAEC,aAAa,QAAQ,gBAAgB;AAC1D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,MAAMC,qBAAqB,CAAC;EACxBC,WAAW,GAAG;IACV,IAAI,CAACC,QAAQ,GAAGJ,cAAc;IAC9B,IAAI,CAACK,YAAY,GAAGP,UAAU,CAACQ,aAAa;EAChD;EACAC,QAAQ,CAACC,OAAO,EAAE;IACd,OAAO,IAAI,CAACH,YAAY,CAACG,OAAO,CAAC;EACrC;EACAC,yBAAyB,CAACL,QAAQ,EAAE;IAChC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EACAM,WAAW,GAAG;IACV,IAAI,CAACN,QAAQ,EAAE;EACnB;EACAO,WAAW,GAAG;IACV,IAAI,CAACN,YAAY,GAAGP,UAAU,CAACQ,aAAa;IAC5C,IAAI,CAACF,QAAQ,EAAE;EACnB;AACJ;AACAF,qBAAqB,CAACU,IAAI;EAAA,iBAAyFV,qBAAqB;AAAA,CAAmD;AAC3LA,qBAAqB,CAACW,IAAI,kBAD+EpB,EAAE;EAAA,MACJS,qBAAqB;EAAA;EAAA;IAAA;EAAA;EAAA,WADnBT,EAAE,oBACoG,CACvM;IACIqB,OAAO,EAAEf,aAAa;IACtBgB,WAAW,EAAErB,UAAU,CAAC,MAAMQ,qBAAqB,CAAC;IACpDc,KAAK,EAAE;EACX,CAAC,CACJ,GAPoGvB,EAAE;AAAA,EAOhE;AAC3CD,UAAU,CAAC,CACPS,cAAc,EAAE,CACnB,EAAEC,qBAAqB,CAACe,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAC3D;EAAA,mDAXyGxB,EAAE,mBAWfS,qBAAqB,EAAc,CAAC;IACpHgB,IAAI,EAAEvB,SAAS;IACfwB,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,gBAAgB;MAC1BC,SAAS,EAAE,CACP;QACIP,OAAO,EAAEf,aAAa;QACtBgB,WAAW,EAAErB,UAAU,CAAC,MAAMQ,qBAAqB,CAAC;QACpDc,KAAK,EAAE;MACX,CAAC;IAET,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEX,YAAY,EAAE,CAAC;MAC7Ba,IAAI,EAAEtB;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM0B,kBAAkB,CAAC;AAEzBA,kBAAkB,CAACV,IAAI;EAAA,iBAAyFU,kBAAkB;AAAA,CAAkD;AACpLA,kBAAkB,CAACC,IAAI,kBA9BkF9B,EAAE;EAAA,MA8BM6B;AAAkB,EAA4E;AAC/MA,kBAAkB,CAACE,IAAI,kBA/BkF/B,EAAE,qBA+B2B;AACtI;EAAA,mDAhCyGA,EAAE,mBAgCf6B,kBAAkB,EAAc,CAAC;IACjHJ,IAAI,EAAErB,QAAQ;IACdsB,IAAI,EAAE,CAAC;MACCM,YAAY,EAAE,CAACvB,qBAAqB,CAAC;MACrCwB,OAAO,EAAE,CAACxB,qBAAqB;IACnC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASA,qBAAqB,EAAEoB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}