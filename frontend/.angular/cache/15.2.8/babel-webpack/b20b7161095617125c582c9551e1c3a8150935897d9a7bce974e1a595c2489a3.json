{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { AbstractTuiController, TuiDestroyService, tuiWatch } from '@taiga-ui/cdk';\nimport { TUI_TEXTFIELD_APPEARANCE } from '@taiga-ui/core/tokens';\nimport { merge, NEVER } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nclass TuiTextfieldController {\n  constructor(change$, options, legacyAppearance, appearanceDirective, cleanerDirective, customContentDirective, iconDirective, iconLeftDirective, labelOutsideDirective, sizeDirective, prefixDirective, postfixDirective, fillerDirective) {\n    this.change$ = change$;\n    this.options = options;\n    this.legacyAppearance = legacyAppearance;\n    this.appearanceDirective = appearanceDirective;\n    this.cleanerDirective = cleanerDirective;\n    this.customContentDirective = customContentDirective;\n    this.iconDirective = iconDirective;\n    this.iconLeftDirective = iconLeftDirective;\n    this.labelOutsideDirective = labelOutsideDirective;\n    this.sizeDirective = sizeDirective;\n    this.prefixDirective = prefixDirective;\n    this.postfixDirective = postfixDirective;\n    this.fillerDirective = fillerDirective;\n  }\n  get appearance() {\n    return this.appearanceDirective.appearance || this.legacyAppearance;\n  }\n  get cleaner() {\n    return this.cleanerDirective.cleaner;\n  }\n  get customContent() {\n    return this.customContentDirective.customContent || ``;\n  }\n  get icon() {\n    return this.iconDirective.icon;\n  }\n  get iconLeft() {\n    return this.iconLeftDirective.iconLeft;\n  }\n  get labelOutside() {\n    return this.labelOutsideDirective.labelOutside;\n  }\n  get size() {\n    return this.sizeDirective.size;\n  }\n  get prefix() {\n    return this.prefixDirective.prefix;\n  }\n  get postfix() {\n    return this.postfixDirective.postfix;\n  }\n  get filler() {\n    return this.fillerDirective.filler;\n  }\n}\n\n// TODO: rename to TUI_TEXTFIELD_APPEARANCE in v4\nconst TUI_TEXTFIELD_APPEARANCE_DIRECTIVE = new InjectionToken('[TUI_TEXTFIELD_APPEARANCE_DIRECTIVE]', {\n  factory: () => new TuiTextfieldAppearanceDirective()\n});\nclass TuiTextfieldAppearanceDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    // it's an empty string by default for backward compatibility\n    // (see comment https://github.com/Tinkoff/taiga-ui/pull/3007#issuecomment-1315179508)\n    this.appearance = '';\n  }\n}\nTuiTextfieldAppearanceDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldAppearanceDirective_BaseFactory;\n  return function TuiTextfieldAppearanceDirective_Factory(t) {\n    return (ɵTuiTextfieldAppearanceDirective_BaseFactory || (ɵTuiTextfieldAppearanceDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldAppearanceDirective)))(t || TuiTextfieldAppearanceDirective);\n  };\n}();\nTuiTextfieldAppearanceDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldAppearanceDirective,\n  selectors: [[\"\", \"tuiTextfieldAppearance\", \"\"]],\n  inputs: {\n    appearance: [\"tuiTextfieldAppearance\", \"appearance\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_APPEARANCE_DIRECTIVE,\n    useExisting: forwardRef(() => TuiTextfieldAppearanceDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldAppearanceDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldAppearance]',\n      providers: [{\n        provide: TUI_TEXTFIELD_APPEARANCE_DIRECTIVE,\n        useExisting: forwardRef(() => TuiTextfieldAppearanceDirective)\n      }]\n    }]\n  }], null, {\n    appearance: [{\n      type: Input,\n      args: ['tuiTextfieldAppearance']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_CLEANER = new InjectionToken('[TUI_TEXTFIELD_CLEANER]', {\n  factory: () => new TuiTextfieldCleanerDirective()\n});\nclass TuiTextfieldCleanerDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.cleaner = false;\n  }\n}\nTuiTextfieldCleanerDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldCleanerDirective_BaseFactory;\n  return function TuiTextfieldCleanerDirective_Factory(t) {\n    return (ɵTuiTextfieldCleanerDirective_BaseFactory || (ɵTuiTextfieldCleanerDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldCleanerDirective)))(t || TuiTextfieldCleanerDirective);\n  };\n}();\nTuiTextfieldCleanerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldCleanerDirective,\n  selectors: [[\"\", \"tuiTextfieldCleaner\", \"\"]],\n  inputs: {\n    cleaner: [\"tuiTextfieldCleaner\", \"cleaner\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_CLEANER,\n    useExisting: forwardRef(() => TuiTextfieldCleanerDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldCleanerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldCleaner]',\n      providers: [{\n        provide: TUI_TEXTFIELD_CLEANER,\n        useExisting: forwardRef(() => TuiTextfieldCleanerDirective)\n      }]\n    }]\n  }], null, {\n    cleaner: [{\n      type: Input,\n      args: ['tuiTextfieldCleaner']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_CUSTOM_CONTENT = new InjectionToken('[TUI_TEXTFIELD_CUSTOM_CONTENT]', {\n  factory: () => new TuiTextfieldCustomContentDirective()\n});\nclass TuiTextfieldCustomContentDirective extends AbstractTuiController {}\nTuiTextfieldCustomContentDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldCustomContentDirective_BaseFactory;\n  return function TuiTextfieldCustomContentDirective_Factory(t) {\n    return (ɵTuiTextfieldCustomContentDirective_BaseFactory || (ɵTuiTextfieldCustomContentDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldCustomContentDirective)))(t || TuiTextfieldCustomContentDirective);\n  };\n}();\nTuiTextfieldCustomContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldCustomContentDirective,\n  selectors: [[\"\", \"tuiTextfieldCustomContent\", \"\"]],\n  inputs: {\n    customContent: [\"tuiTextfieldCustomContent\", \"customContent\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_CUSTOM_CONTENT,\n    useExisting: forwardRef(() => TuiTextfieldCustomContentDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldCustomContentDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldCustomContent]',\n      providers: [{\n        provide: TUI_TEXTFIELD_CUSTOM_CONTENT,\n        useExisting: forwardRef(() => TuiTextfieldCustomContentDirective)\n      }]\n    }]\n  }], null, {\n    customContent: [{\n      type: Input,\n      args: ['tuiTextfieldCustomContent']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_FILLER = new InjectionToken('[TUI_TEXTFIELD_FILLER]', {\n  factory: () => new TuiTextfieldFillerDirective()\n});\nclass TuiTextfieldFillerDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.filler = '';\n  }\n}\nTuiTextfieldFillerDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldFillerDirective_BaseFactory;\n  return function TuiTextfieldFillerDirective_Factory(t) {\n    return (ɵTuiTextfieldFillerDirective_BaseFactory || (ɵTuiTextfieldFillerDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldFillerDirective)))(t || TuiTextfieldFillerDirective);\n  };\n}();\nTuiTextfieldFillerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldFillerDirective,\n  selectors: [[\"\", \"tuiTextfieldFiller\", \"\"]],\n  inputs: {\n    filler: [\"tuiTextfieldFiller\", \"filler\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_FILLER,\n    useExisting: forwardRef(() => TuiTextfieldFillerDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldFillerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldFiller]',\n      providers: [{\n        provide: TUI_TEXTFIELD_FILLER,\n        useExisting: forwardRef(() => TuiTextfieldFillerDirective)\n      }]\n    }]\n  }], null, {\n    filler: [{\n      type: Input,\n      args: ['tuiTextfieldFiller']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_ICON = new InjectionToken('[TUI_TEXTFIELD_ICON]', {\n  factory: tuiIconDirectiveFactory\n});\nclass TuiTextfieldIconDirective extends AbstractTuiController {}\nTuiTextfieldIconDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldIconDirective_BaseFactory;\n  return function TuiTextfieldIconDirective_Factory(t) {\n    return (ɵTuiTextfieldIconDirective_BaseFactory || (ɵTuiTextfieldIconDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldIconDirective)))(t || TuiTextfieldIconDirective);\n  };\n}();\nTuiTextfieldIconDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldIconDirective,\n  selectors: [[\"\", \"tuiTextfieldIcon\", \"\"]],\n  inputs: {\n    icon: [\"tuiTextfieldIcon\", \"icon\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_ICON,\n    useExisting: forwardRef(() => TuiTextfieldIconDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldIconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldIcon]',\n      providers: [{\n        provide: TUI_TEXTFIELD_ICON,\n        useExisting: forwardRef(() => TuiTextfieldIconDirective)\n      }]\n    }]\n  }], null, {\n    icon: [{\n      type: Input,\n      args: ['tuiTextfieldIcon']\n    }]\n  });\n})();\nfunction tuiIconDirectiveFactory() {\n  return new TuiTextfieldIconDirective();\n}\nconst TUI_TEXTFIELD_ICON_LEFT = new InjectionToken('[TUI_TEXTFIELD_ICON_LEFT]', {\n  factory: tuiIconLeftDirectiveFactory\n});\nclass TuiTextfieldIconLeftDirective extends AbstractTuiController {}\nTuiTextfieldIconLeftDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldIconLeftDirective_BaseFactory;\n  return function TuiTextfieldIconLeftDirective_Factory(t) {\n    return (ɵTuiTextfieldIconLeftDirective_BaseFactory || (ɵTuiTextfieldIconLeftDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldIconLeftDirective)))(t || TuiTextfieldIconLeftDirective);\n  };\n}();\nTuiTextfieldIconLeftDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldIconLeftDirective,\n  selectors: [[\"\", \"tuiTextfieldIconLeft\", \"\"]],\n  inputs: {\n    iconLeft: [\"tuiTextfieldIconLeft\", \"iconLeft\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_ICON_LEFT,\n    useExisting: forwardRef(() => TuiTextfieldIconLeftDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldIconLeftDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldIconLeft]',\n      providers: [{\n        provide: TUI_TEXTFIELD_ICON_LEFT,\n        useExisting: forwardRef(() => TuiTextfieldIconLeftDirective)\n      }]\n    }]\n  }], null, {\n    iconLeft: [{\n      type: Input,\n      args: ['tuiTextfieldIconLeft']\n    }]\n  });\n})();\nfunction tuiIconLeftDirectiveFactory() {\n  return new TuiTextfieldIconLeftDirective();\n}\nconst TUI_TEXTFIELD_LABEL_OUTSIDE = new InjectionToken('[TUI_TEXTFIELD_LABEL_OUTSIDE]', {\n  factory: () => new TuiTextfieldLabelOutsideDirective()\n});\nclass TuiTextfieldLabelOutsideDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.labelOutside = false;\n  }\n}\nTuiTextfieldLabelOutsideDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldLabelOutsideDirective_BaseFactory;\n  return function TuiTextfieldLabelOutsideDirective_Factory(t) {\n    return (ɵTuiTextfieldLabelOutsideDirective_BaseFactory || (ɵTuiTextfieldLabelOutsideDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldLabelOutsideDirective)))(t || TuiTextfieldLabelOutsideDirective);\n  };\n}();\nTuiTextfieldLabelOutsideDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldLabelOutsideDirective,\n  selectors: [[\"\", \"tuiTextfieldLabelOutside\", \"\"]],\n  inputs: {\n    labelOutside: [\"tuiTextfieldLabelOutside\", \"labelOutside\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_LABEL_OUTSIDE,\n    useExisting: forwardRef(() => TuiTextfieldLabelOutsideDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldLabelOutsideDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldLabelOutside]',\n      providers: [{\n        provide: TUI_TEXTFIELD_LABEL_OUTSIDE,\n        useExisting: forwardRef(() => TuiTextfieldLabelOutsideDirective)\n      }]\n    }]\n  }], null, {\n    labelOutside: [{\n      type: Input,\n      args: ['tuiTextfieldLabelOutside']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_POSTFIX = new InjectionToken('[TUI_TEXTFIELD_POSTFIX]', {\n  factory: () => new TuiTextfieldPostfixDirective()\n});\nclass TuiTextfieldPostfixDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.postfix = '';\n  }\n}\nTuiTextfieldPostfixDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldPostfixDirective_BaseFactory;\n  return function TuiTextfieldPostfixDirective_Factory(t) {\n    return (ɵTuiTextfieldPostfixDirective_BaseFactory || (ɵTuiTextfieldPostfixDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldPostfixDirective)))(t || TuiTextfieldPostfixDirective);\n  };\n}();\nTuiTextfieldPostfixDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldPostfixDirective,\n  selectors: [[\"\", \"tuiTextfieldPostfix\", \"\"]],\n  inputs: {\n    postfix: [\"tuiTextfieldPostfix\", \"postfix\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_POSTFIX,\n    useExisting: forwardRef(() => TuiTextfieldPostfixDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldPostfixDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldPostfix]',\n      providers: [{\n        provide: TUI_TEXTFIELD_POSTFIX,\n        useExisting: forwardRef(() => TuiTextfieldPostfixDirective)\n      }]\n    }]\n  }], null, {\n    postfix: [{\n      type: Input,\n      args: ['tuiTextfieldPostfix']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_PREFIX = new InjectionToken('[TUI_TEXTFIELD_PREFIX]', {\n  factory: () => new TuiTextfieldPrefixDirective()\n});\nclass TuiTextfieldPrefixDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.prefix = '';\n  }\n}\nTuiTextfieldPrefixDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldPrefixDirective_BaseFactory;\n  return function TuiTextfieldPrefixDirective_Factory(t) {\n    return (ɵTuiTextfieldPrefixDirective_BaseFactory || (ɵTuiTextfieldPrefixDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldPrefixDirective)))(t || TuiTextfieldPrefixDirective);\n  };\n}();\nTuiTextfieldPrefixDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldPrefixDirective,\n  selectors: [[\"\", \"tuiTextfieldPrefix\", \"\"]],\n  inputs: {\n    prefix: [\"tuiTextfieldPrefix\", \"prefix\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_PREFIX,\n    useExisting: forwardRef(() => TuiTextfieldPrefixDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldPrefixDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldPrefix]',\n      providers: [{\n        provide: TUI_TEXTFIELD_PREFIX,\n        useExisting: forwardRef(() => TuiTextfieldPrefixDirective)\n      }]\n    }]\n  }], null, {\n    prefix: [{\n      type: Input,\n      args: ['tuiTextfieldPrefix']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_SIZE = new InjectionToken('[TUI_TEXTFIELD_SIZE]', {\n  factory: () => new TuiTextfieldSizeDirective()\n});\nclass TuiTextfieldSizeDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.size = 'l';\n  }\n}\nTuiTextfieldSizeDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTuiTextfieldSizeDirective_BaseFactory;\n  return function TuiTextfieldSizeDirective_Factory(t) {\n    return (ɵTuiTextfieldSizeDirective_BaseFactory || (ɵTuiTextfieldSizeDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldSizeDirective)))(t || TuiTextfieldSizeDirective);\n  };\n}();\nTuiTextfieldSizeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiTextfieldSizeDirective,\n  selectors: [[\"\", \"tuiTextfieldSize\", \"\"]],\n  inputs: {\n    size: [\"tuiTextfieldSize\", \"size\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_SIZE,\n    useExisting: forwardRef(() => TuiTextfieldSizeDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldSizeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiTextfieldSize]',\n      providers: [{\n        provide: TUI_TEXTFIELD_SIZE,\n        useExisting: forwardRef(() => TuiTextfieldSizeDirective)\n      }]\n    }]\n  }], null, {\n    size: [{\n      type: Input,\n      args: ['tuiTextfieldSize']\n    }]\n  });\n})();\nclass TuiTextfieldControllerModule {}\nTuiTextfieldControllerModule.ɵfac = function TuiTextfieldControllerModule_Factory(t) {\n  return new (t || TuiTextfieldControllerModule)();\n};\nTuiTextfieldControllerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiTextfieldControllerModule\n});\nTuiTextfieldControllerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldControllerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldCustomContentDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldSizeDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldPrefixDirective, TuiTextfieldPostfixDirective, TuiTextfieldFillerDirective],\n      exports: [TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldCustomContentDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldSizeDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldPrefixDirective, TuiTextfieldPostfixDirective, TuiTextfieldFillerDirective]\n    }]\n  }], null, null);\n})();\n\n/** Default values for primitive textfield options */\nconst TUI_TEXTFIELD_DEFAULT_OPTIONS = {\n  iconCleaner: `tuiIconClose`\n};\n/**\n * Default parameters for textfield\n */\nconst TUI_TEXTFIELD_OPTIONS = new InjectionToken(`[TUI_TEXTFIELD_OPTIONS]`, {\n  factory: () => TUI_TEXTFIELD_DEFAULT_OPTIONS\n});\nconst tuiTextfieldOptionsProvider = options => ({\n  provide: TUI_TEXTFIELD_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_TEXTFIELD_DEFAULT_OPTIONS), options)\n});\nconst TUI_TEXTFIELD_WATCHED_CONTROLLER = new InjectionToken(`[TUI_TEXTFIELD_WATCHED_CONTROLLER]`);\nconst TEXTFIELD_CONTROLLER_PROVIDER = [TuiDestroyService, {\n  provide: TUI_TEXTFIELD_WATCHED_CONTROLLER,\n  deps: [ChangeDetectorRef, TuiDestroyService, TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_APPEARANCE, TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_ICON, TUI_TEXTFIELD_ICON_LEFT, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_PREFIX, TUI_TEXTFIELD_POSTFIX, TUI_TEXTFIELD_FILLER],\n  useFactory: (cdr, destroy$, options, legacyAppearance, ...controllers) => {\n    const change$ = merge(...controllers.map(({\n      change$\n    }) => change$ || NEVER)).pipe(tuiWatch(cdr), takeUntil(destroy$));\n    change$.subscribe();\n    return new TuiTextfieldController(change$, options, legacyAppearance, ...controllers);\n  }\n}];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_DEFAULT_OPTIONS, TUI_TEXTFIELD_FILLER, TUI_TEXTFIELD_ICON, TUI_TEXTFIELD_ICON_LEFT, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_POSTFIX, TUI_TEXTFIELD_PREFIX, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldController, TuiTextfieldControllerModule, TuiTextfieldCustomContentDirective, TuiTextfieldFillerDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldPostfixDirective, TuiTextfieldPrefixDirective, TuiTextfieldSizeDirective, tuiIconDirectiveFactory, tuiIconLeftDirectiveFactory, tuiTextfieldOptionsProvider };","map":{"version":3,"names":["i0","InjectionToken","forwardRef","Directive","Input","NgModule","ChangeDetectorRef","AbstractTuiController","TuiDestroyService","tuiWatch","TUI_TEXTFIELD_APPEARANCE","merge","NEVER","takeUntil","TuiTextfieldController","constructor","change$","options","legacyAppearance","appearanceDirective","cleanerDirective","customContentDirective","iconDirective","iconLeftDirective","labelOutsideDirective","sizeDirective","prefixDirective","postfixDirective","fillerDirective","appearance","cleaner","customContent","icon","iconLeft","labelOutside","size","prefix","postfix","filler","TUI_TEXTFIELD_APPEARANCE_DIRECTIVE","factory","TuiTextfieldAppearanceDirective","arguments","ɵfac","ɵdir","provide","useExisting","type","args","selector","providers","TUI_TEXTFIELD_CLEANER","TuiTextfieldCleanerDirective","TUI_TEXTFIELD_CUSTOM_CONTENT","TuiTextfieldCustomContentDirective","TUI_TEXTFIELD_FILLER","TuiTextfieldFillerDirective","TUI_TEXTFIELD_ICON","tuiIconDirectiveFactory","TuiTextfieldIconDirective","TUI_TEXTFIELD_ICON_LEFT","tuiIconLeftDirectiveFactory","TuiTextfieldIconLeftDirective","TUI_TEXTFIELD_LABEL_OUTSIDE","TuiTextfieldLabelOutsideDirective","TUI_TEXTFIELD_POSTFIX","TuiTextfieldPostfixDirective","TUI_TEXTFIELD_PREFIX","TuiTextfieldPrefixDirective","TUI_TEXTFIELD_SIZE","TuiTextfieldSizeDirective","TuiTextfieldControllerModule","ɵmod","ɵinj","declarations","exports","TUI_TEXTFIELD_DEFAULT_OPTIONS","iconCleaner","TUI_TEXTFIELD_OPTIONS","tuiTextfieldOptionsProvider","useValue","Object","assign","TUI_TEXTFIELD_WATCHED_CONTROLLER","TEXTFIELD_CONTROLLER_PROVIDER","deps","useFactory","cdr","destroy$","controllers","map","pipe","subscribe"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-directives-textfield-controller.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { AbstractTuiController, TuiDestroyService, tuiWatch } from '@taiga-ui/cdk';\nimport { TUI_TEXTFIELD_APPEARANCE } from '@taiga-ui/core/tokens';\nimport { merge, NEVER } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nclass TuiTextfieldController {\n    constructor(change$, options, legacyAppearance, appearanceDirective, cleanerDirective, customContentDirective, iconDirective, iconLeftDirective, labelOutsideDirective, sizeDirective, prefixDirective, postfixDirective, fillerDirective) {\n        this.change$ = change$;\n        this.options = options;\n        this.legacyAppearance = legacyAppearance;\n        this.appearanceDirective = appearanceDirective;\n        this.cleanerDirective = cleanerDirective;\n        this.customContentDirective = customContentDirective;\n        this.iconDirective = iconDirective;\n        this.iconLeftDirective = iconLeftDirective;\n        this.labelOutsideDirective = labelOutsideDirective;\n        this.sizeDirective = sizeDirective;\n        this.prefixDirective = prefixDirective;\n        this.postfixDirective = postfixDirective;\n        this.fillerDirective = fillerDirective;\n    }\n    get appearance() {\n        return this.appearanceDirective.appearance || this.legacyAppearance;\n    }\n    get cleaner() {\n        return this.cleanerDirective.cleaner;\n    }\n    get customContent() {\n        return this.customContentDirective.customContent || ``;\n    }\n    get icon() {\n        return this.iconDirective.icon;\n    }\n    get iconLeft() {\n        return this.iconLeftDirective.iconLeft;\n    }\n    get labelOutside() {\n        return this.labelOutsideDirective.labelOutside;\n    }\n    get size() {\n        return this.sizeDirective.size;\n    }\n    get prefix() {\n        return this.prefixDirective.prefix;\n    }\n    get postfix() {\n        return this.postfixDirective.postfix;\n    }\n    get filler() {\n        return this.fillerDirective.filler;\n    }\n}\n\n// TODO: rename to TUI_TEXTFIELD_APPEARANCE in v4\nconst TUI_TEXTFIELD_APPEARANCE_DIRECTIVE = new InjectionToken('[TUI_TEXTFIELD_APPEARANCE_DIRECTIVE]', {\n    factory: () => new TuiTextfieldAppearanceDirective(),\n});\nclass TuiTextfieldAppearanceDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        // it's an empty string by default for backward compatibility\n        // (see comment https://github.com/Tinkoff/taiga-ui/pull/3007#issuecomment-1315179508)\n        this.appearance = '';\n    }\n}\nTuiTextfieldAppearanceDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldAppearanceDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldAppearanceDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldAppearanceDirective, selector: \"[tuiTextfieldAppearance]\", inputs: { appearance: [\"tuiTextfieldAppearance\", \"appearance\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_APPEARANCE_DIRECTIVE,\n            useExisting: forwardRef(() => TuiTextfieldAppearanceDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldAppearanceDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldAppearance]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_APPEARANCE_DIRECTIVE,\n                            useExisting: forwardRef(() => TuiTextfieldAppearanceDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { appearance: [{\n                type: Input,\n                args: ['tuiTextfieldAppearance']\n            }] } });\n\nconst TUI_TEXTFIELD_CLEANER = new InjectionToken('[TUI_TEXTFIELD_CLEANER]', {\n    factory: () => new TuiTextfieldCleanerDirective(),\n});\nclass TuiTextfieldCleanerDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.cleaner = false;\n    }\n}\nTuiTextfieldCleanerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldCleanerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldCleanerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldCleanerDirective, selector: \"[tuiTextfieldCleaner]\", inputs: { cleaner: [\"tuiTextfieldCleaner\", \"cleaner\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_CLEANER,\n            useExisting: forwardRef(() => TuiTextfieldCleanerDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldCleanerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldCleaner]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_CLEANER,\n                            useExisting: forwardRef(() => TuiTextfieldCleanerDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { cleaner: [{\n                type: Input,\n                args: ['tuiTextfieldCleaner']\n            }] } });\n\nconst TUI_TEXTFIELD_CUSTOM_CONTENT = new InjectionToken('[TUI_TEXTFIELD_CUSTOM_CONTENT]', {\n    factory: () => new TuiTextfieldCustomContentDirective(),\n});\nclass TuiTextfieldCustomContentDirective extends AbstractTuiController {\n}\nTuiTextfieldCustomContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldCustomContentDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldCustomContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldCustomContentDirective, selector: \"[tuiTextfieldCustomContent]\", inputs: { customContent: [\"tuiTextfieldCustomContent\", \"customContent\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_CUSTOM_CONTENT,\n            useExisting: forwardRef(() => TuiTextfieldCustomContentDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldCustomContentDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldCustomContent]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_CUSTOM_CONTENT,\n                            useExisting: forwardRef(() => TuiTextfieldCustomContentDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { customContent: [{\n                type: Input,\n                args: ['tuiTextfieldCustomContent']\n            }] } });\n\nconst TUI_TEXTFIELD_FILLER = new InjectionToken('[TUI_TEXTFIELD_FILLER]', {\n    factory: () => new TuiTextfieldFillerDirective(),\n});\nclass TuiTextfieldFillerDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.filler = '';\n    }\n}\nTuiTextfieldFillerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldFillerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldFillerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldFillerDirective, selector: \"[tuiTextfieldFiller]\", inputs: { filler: [\"tuiTextfieldFiller\", \"filler\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_FILLER,\n            useExisting: forwardRef(() => TuiTextfieldFillerDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldFillerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldFiller]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_FILLER,\n                            useExisting: forwardRef(() => TuiTextfieldFillerDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { filler: [{\n                type: Input,\n                args: ['tuiTextfieldFiller']\n            }] } });\n\nconst TUI_TEXTFIELD_ICON = new InjectionToken('[TUI_TEXTFIELD_ICON]', {\n    factory: tuiIconDirectiveFactory,\n});\nclass TuiTextfieldIconDirective extends AbstractTuiController {\n}\nTuiTextfieldIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldIconDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: { icon: [\"tuiTextfieldIcon\", \"icon\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_ICON,\n            useExisting: forwardRef(() => TuiTextfieldIconDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldIconDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldIcon]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_ICON,\n                            useExisting: forwardRef(() => TuiTextfieldIconDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { icon: [{\n                type: Input,\n                args: ['tuiTextfieldIcon']\n            }] } });\nfunction tuiIconDirectiveFactory() {\n    return new TuiTextfieldIconDirective();\n}\n\nconst TUI_TEXTFIELD_ICON_LEFT = new InjectionToken('[TUI_TEXTFIELD_ICON_LEFT]', {\n    factory: tuiIconLeftDirectiveFactory,\n});\nclass TuiTextfieldIconLeftDirective extends AbstractTuiController {\n}\nTuiTextfieldIconLeftDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldIconLeftDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldIconLeftDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldIconLeftDirective, selector: \"[tuiTextfieldIconLeft]\", inputs: { iconLeft: [\"tuiTextfieldIconLeft\", \"iconLeft\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_ICON_LEFT,\n            useExisting: forwardRef(() => TuiTextfieldIconLeftDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldIconLeftDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldIconLeft]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_ICON_LEFT,\n                            useExisting: forwardRef(() => TuiTextfieldIconLeftDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { iconLeft: [{\n                type: Input,\n                args: ['tuiTextfieldIconLeft']\n            }] } });\nfunction tuiIconLeftDirectiveFactory() {\n    return new TuiTextfieldIconLeftDirective();\n}\n\nconst TUI_TEXTFIELD_LABEL_OUTSIDE = new InjectionToken('[TUI_TEXTFIELD_LABEL_OUTSIDE]', {\n    factory: () => new TuiTextfieldLabelOutsideDirective(),\n});\nclass TuiTextfieldLabelOutsideDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.labelOutside = false;\n    }\n}\nTuiTextfieldLabelOutsideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldLabelOutsideDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldLabelOutsideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldLabelOutsideDirective, selector: \"[tuiTextfieldLabelOutside]\", inputs: { labelOutside: [\"tuiTextfieldLabelOutside\", \"labelOutside\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_LABEL_OUTSIDE,\n            useExisting: forwardRef(() => TuiTextfieldLabelOutsideDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldLabelOutsideDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldLabelOutside]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_LABEL_OUTSIDE,\n                            useExisting: forwardRef(() => TuiTextfieldLabelOutsideDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { labelOutside: [{\n                type: Input,\n                args: ['tuiTextfieldLabelOutside']\n            }] } });\n\nconst TUI_TEXTFIELD_POSTFIX = new InjectionToken('[TUI_TEXTFIELD_POSTFIX]', {\n    factory: () => new TuiTextfieldPostfixDirective(),\n});\nclass TuiTextfieldPostfixDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.postfix = '';\n    }\n}\nTuiTextfieldPostfixDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldPostfixDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldPostfixDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldPostfixDirective, selector: \"[tuiTextfieldPostfix]\", inputs: { postfix: [\"tuiTextfieldPostfix\", \"postfix\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_POSTFIX,\n            useExisting: forwardRef(() => TuiTextfieldPostfixDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldPostfixDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldPostfix]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_POSTFIX,\n                            useExisting: forwardRef(() => TuiTextfieldPostfixDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { postfix: [{\n                type: Input,\n                args: ['tuiTextfieldPostfix']\n            }] } });\n\nconst TUI_TEXTFIELD_PREFIX = new InjectionToken('[TUI_TEXTFIELD_PREFIX]', {\n    factory: () => new TuiTextfieldPrefixDirective(),\n});\nclass TuiTextfieldPrefixDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.prefix = '';\n    }\n}\nTuiTextfieldPrefixDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldPrefixDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldPrefixDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldPrefixDirective, selector: \"[tuiTextfieldPrefix]\", inputs: { prefix: [\"tuiTextfieldPrefix\", \"prefix\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_PREFIX,\n            useExisting: forwardRef(() => TuiTextfieldPrefixDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldPrefixDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldPrefix]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_PREFIX,\n                            useExisting: forwardRef(() => TuiTextfieldPrefixDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { prefix: [{\n                type: Input,\n                args: ['tuiTextfieldPrefix']\n            }] } });\n\nconst TUI_TEXTFIELD_SIZE = new InjectionToken('[TUI_TEXTFIELD_SIZE]', {\n    factory: () => new TuiTextfieldSizeDirective(),\n});\nclass TuiTextfieldSizeDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.size = 'l';\n    }\n}\nTuiTextfieldSizeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldSizeDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTuiTextfieldSizeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiTextfieldSizeDirective, selector: \"[tuiTextfieldSize]\", inputs: { size: [\"tuiTextfieldSize\", \"size\"] }, providers: [\n        {\n            provide: TUI_TEXTFIELD_SIZE,\n            useExisting: forwardRef(() => TuiTextfieldSizeDirective),\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldSizeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiTextfieldSize]',\n                    providers: [\n                        {\n                            provide: TUI_TEXTFIELD_SIZE,\n                            useExisting: forwardRef(() => TuiTextfieldSizeDirective),\n                        },\n                    ],\n                }]\n        }], propDecorators: { size: [{\n                type: Input,\n                args: ['tuiTextfieldSize']\n            }] } });\n\nclass TuiTextfieldControllerModule {\n}\nTuiTextfieldControllerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldControllerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiTextfieldControllerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldControllerModule, declarations: [TuiTextfieldAppearanceDirective,\n        TuiTextfieldCleanerDirective,\n        TuiTextfieldCustomContentDirective,\n        TuiTextfieldLabelOutsideDirective,\n        TuiTextfieldSizeDirective,\n        TuiTextfieldIconDirective,\n        TuiTextfieldIconLeftDirective,\n        TuiTextfieldPrefixDirective,\n        TuiTextfieldPostfixDirective,\n        TuiTextfieldFillerDirective], exports: [TuiTextfieldAppearanceDirective,\n        TuiTextfieldCleanerDirective,\n        TuiTextfieldCustomContentDirective,\n        TuiTextfieldLabelOutsideDirective,\n        TuiTextfieldSizeDirective,\n        TuiTextfieldIconDirective,\n        TuiTextfieldIconLeftDirective,\n        TuiTextfieldPrefixDirective,\n        TuiTextfieldPostfixDirective,\n        TuiTextfieldFillerDirective] });\nTuiTextfieldControllerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldControllerModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiTextfieldControllerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TuiTextfieldAppearanceDirective,\n                        TuiTextfieldCleanerDirective,\n                        TuiTextfieldCustomContentDirective,\n                        TuiTextfieldLabelOutsideDirective,\n                        TuiTextfieldSizeDirective,\n                        TuiTextfieldIconDirective,\n                        TuiTextfieldIconLeftDirective,\n                        TuiTextfieldPrefixDirective,\n                        TuiTextfieldPostfixDirective,\n                        TuiTextfieldFillerDirective,\n                    ],\n                    exports: [\n                        TuiTextfieldAppearanceDirective,\n                        TuiTextfieldCleanerDirective,\n                        TuiTextfieldCustomContentDirective,\n                        TuiTextfieldLabelOutsideDirective,\n                        TuiTextfieldSizeDirective,\n                        TuiTextfieldIconDirective,\n                        TuiTextfieldIconLeftDirective,\n                        TuiTextfieldPrefixDirective,\n                        TuiTextfieldPostfixDirective,\n                        TuiTextfieldFillerDirective,\n                    ],\n                }]\n        }] });\n\n/** Default values for primitive textfield options */\nconst TUI_TEXTFIELD_DEFAULT_OPTIONS = {\n    iconCleaner: `tuiIconClose`,\n};\n/**\n * Default parameters for textfield\n */\nconst TUI_TEXTFIELD_OPTIONS = new InjectionToken(`[TUI_TEXTFIELD_OPTIONS]`, { factory: () => TUI_TEXTFIELD_DEFAULT_OPTIONS });\nconst tuiTextfieldOptionsProvider = (options) => ({\n    provide: TUI_TEXTFIELD_OPTIONS,\n    useValue: Object.assign(Object.assign({}, TUI_TEXTFIELD_DEFAULT_OPTIONS), options),\n});\n\nconst TUI_TEXTFIELD_WATCHED_CONTROLLER = new InjectionToken(`[TUI_TEXTFIELD_WATCHED_CONTROLLER]`);\nconst TEXTFIELD_CONTROLLER_PROVIDER = [\n    TuiDestroyService,\n    {\n        provide: TUI_TEXTFIELD_WATCHED_CONTROLLER,\n        deps: [\n            ChangeDetectorRef,\n            TuiDestroyService,\n            TUI_TEXTFIELD_OPTIONS,\n            TUI_TEXTFIELD_APPEARANCE,\n            TUI_TEXTFIELD_APPEARANCE_DIRECTIVE,\n            TUI_TEXTFIELD_CLEANER,\n            TUI_TEXTFIELD_CUSTOM_CONTENT,\n            TUI_TEXTFIELD_ICON,\n            TUI_TEXTFIELD_ICON_LEFT,\n            TUI_TEXTFIELD_LABEL_OUTSIDE,\n            TUI_TEXTFIELD_SIZE,\n            TUI_TEXTFIELD_PREFIX,\n            TUI_TEXTFIELD_POSTFIX,\n            TUI_TEXTFIELD_FILLER,\n        ],\n        useFactory: (cdr, destroy$, options, legacyAppearance, ...controllers) => {\n            const change$ = merge(...controllers.map(({ change$ }) => change$ || NEVER)).pipe(tuiWatch(cdr), takeUntil(destroy$));\n            change$.subscribe();\n            return new TuiTextfieldController(change$, options, legacyAppearance, ...controllers);\n        },\n    },\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_DEFAULT_OPTIONS, TUI_TEXTFIELD_FILLER, TUI_TEXTFIELD_ICON, TUI_TEXTFIELD_ICON_LEFT, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_POSTFIX, TUI_TEXTFIELD_PREFIX, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldController, TuiTextfieldControllerModule, TuiTextfieldCustomContentDirective, TuiTextfieldFillerDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldPostfixDirective, TuiTextfieldPrefixDirective, TuiTextfieldSizeDirective, tuiIconDirectiveFactory, tuiIconLeftDirectiveFactory, tuiTextfieldOptionsProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}