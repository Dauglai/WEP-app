{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GroupService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8000/api/groups/';\n  }\n  getGroups() {\n    const body = {};\n    return this.http.get(this.apiUrl, localStorage.getItem('my-token'));\n  }\n  createTask(newTask) {\n    this.http.post(this.apiUrl, newTask);\n  }\n}\nGroupService.ɵfac = function GroupService_Factory(t) {\n  return new (t || GroupService)(i0.ɵɵinject(i1.HttpClient));\n};\nGroupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GroupService,\n  factory: GroupService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,YAAY;EACzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACd,WAAM,GAAG,mCAAmC;EADd;EAGtCC,SAAS;IACP,MAAMC,IAAI,GAAG,EAAE;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACC,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;EAC9E;EAEAC,UAAU,CAACC,OAAY;IACnB,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACL,MAAM,EAAEI,OAAO,CAAC;EACxC;;AAXWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["GroupService","constructor","http","getGroups","body","get","apiUrl","localStorage","getItem","createTask","newTask","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\denis\\PycharmProjects\\example_project\\frontend\\src\\app\\servicies\\group.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Task} from \"../components/task-list/task-list.component\";\nimport {Group} from \"../components/groups/groups.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\nconstructor(private http: HttpClient) { }\n  private apiUrl = 'http://localhost:8000/api/groups/';\n\n  getGroups(): Observable<Group[]> {\n    const body = {}\n    return this.http.get<Group[]>(this.apiUrl, localStorage.getItem('my-token'));\n  }\n\n  createTask(newTask: any) {\n      this.http.post(this.apiUrl, newTask);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}