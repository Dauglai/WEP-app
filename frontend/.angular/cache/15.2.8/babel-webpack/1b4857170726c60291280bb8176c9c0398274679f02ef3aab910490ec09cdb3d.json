{"ast":null,"code":"/**\n * @description:\n * All Chrome / Chromium-based browsers will return MacIntel on macOS,\n * no matter what the hardware architecture is. See the source code here:\n * https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/frame/navigator_id.cc;l=64;drc=703d3c472cf27470dad21a3f2c8972aca3732cd6\n * But maybe in future years, it will be changed to MacM1\n *\n * Documentation:\n * https://developer.mozilla.org/en-US/docs/Web/API/Navigator/platform\n */\nfunction tuiIsApplePlatform(navigator) {\n  return navigator.platform.startsWith(`Mac`) || navigator.platform === `iPhone`;\n}\nconst IOS_REG_EXP = /ipad|iphone|ipod/;\nfunction tuiIsIos(navigator) {\n  return IOS_REG_EXP.test(navigator.userAgent.toLowerCase()) || tuiIsApplePlatform(navigator) && navigator.maxTouchPoints > 1;\n}\nconst SAFARI_REG_EXP = /^((?!chrome|android).)*safari/i;\nfunction tuiIsApple(navigator) {\n  return tuiIsIos(navigator) || SAFARI_REG_EXP.test(navigator.userAgent.toLowerCase());\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiIsApple, tuiIsApplePlatform, tuiIsIos };","map":{"version":3,"names":["tuiIsApplePlatform","navigator","platform","startsWith","IOS_REG_EXP","tuiIsIos","test","userAgent","toLowerCase","maxTouchPoints","SAFARI_REG_EXP","tuiIsApple"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/cdk/fesm2015/taiga-ui-cdk-utils-os.js"],"sourcesContent":["/**\n * @description:\n * All Chrome / Chromium-based browsers will return MacIntel on macOS,\n * no matter what the hardware architecture is. See the source code here:\n * https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/frame/navigator_id.cc;l=64;drc=703d3c472cf27470dad21a3f2c8972aca3732cd6\n * But maybe in future years, it will be changed to MacM1\n *\n * Documentation:\n * https://developer.mozilla.org/en-US/docs/Web/API/Navigator/platform\n */\nfunction tuiIsApplePlatform(navigator) {\n    return navigator.platform.startsWith(`Mac`) || navigator.platform === `iPhone`;\n}\n\nconst IOS_REG_EXP = /ipad|iphone|ipod/;\nfunction tuiIsIos(navigator) {\n    return (IOS_REG_EXP.test(navigator.userAgent.toLowerCase()) ||\n        (tuiIsApplePlatform(navigator) && navigator.maxTouchPoints > 1));\n}\n\nconst SAFARI_REG_EXP = /^((?!chrome|android).)*safari/i;\nfunction tuiIsApple(navigator) {\n    return tuiIsIos(navigator) || SAFARI_REG_EXP.test(navigator.userAgent.toLowerCase());\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiIsApple, tuiIsApplePlatform, tuiIsIos };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,CAACC,SAAS,EAAE;EACnC,OAAOA,SAAS,CAACC,QAAQ,CAACC,UAAU,CAAE,KAAI,CAAC,IAAIF,SAAS,CAACC,QAAQ,KAAM,QAAO;AAClF;AAEA,MAAME,WAAW,GAAG,kBAAkB;AACtC,SAASC,QAAQ,CAACJ,SAAS,EAAE;EACzB,OAAQG,WAAW,CAACE,IAAI,CAACL,SAAS,CAACM,SAAS,CAACC,WAAW,EAAE,CAAC,IACtDR,kBAAkB,CAACC,SAAS,CAAC,IAAIA,SAAS,CAACQ,cAAc,GAAG,CAAE;AACvE;AAEA,MAAMC,cAAc,GAAG,gCAAgC;AACvD,SAASC,UAAU,CAACV,SAAS,EAAE;EAC3B,OAAOI,QAAQ,CAACJ,SAAS,CAAC,IAAIS,cAAc,CAACJ,IAAI,CAACL,SAAS,CAACM,SAAS,CAACC,WAAW,EAAE,CAAC;AACxF;;AAEA;AACA;AACA;;AAEA,SAASG,UAAU,EAAEX,kBAAkB,EAAEK,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}