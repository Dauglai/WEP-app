{"ast":null,"code":"import { EMPTY_ARRAY, tuiZonefull } from '@taiga-ui/cdk';\nimport { debounceTime, scan, distinctUntilChanged, switchMap, startWith, map } from 'rxjs/operators';\nimport { pipe } from 'rxjs';\nfunction tuiSmartSearch(getSearchFunction, searchDebounceTimeMs = 400) {\n  return source => source.pipe(debounceTime(searchDebounceTimeMs), scan((previousSearched, current) => {\n    return previousSearched !== `` && current.startsWith(previousSearched) ? previousSearched : current;\n  }, ``), distinctUntilChanged(), switchMap(value => getSearchFunction(value).pipe(startWith(null))), startWith(EMPTY_ARRAY));\n}\n\n/**\n * Works like regular map + distinctUntilChanged\n * and only returns to NgZone if value has changed\n *\n * @param project mapping function\n * @param ngZone NgZone instance\n */\nfunction tuiZonefulMap(project, ngZone) {\n  return pipe(map(project), distinctUntilChanged(), tuiZonefull(ngZone));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiSmartSearch, tuiZonefulMap };","map":{"version":3,"names":["EMPTY_ARRAY","tuiZonefull","debounceTime","scan","distinctUntilChanged","switchMap","startWith","map","pipe","tuiSmartSearch","getSearchFunction","searchDebounceTimeMs","source","previousSearched","current","startsWith","value","tuiZonefulMap","project","ngZone"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-observables.js"],"sourcesContent":["import { EMPTY_ARRAY, tuiZonefull } from '@taiga-ui/cdk';\nimport { debounceTime, scan, distinctUntilChanged, switchMap, startWith, map } from 'rxjs/operators';\nimport { pipe } from 'rxjs';\n\nfunction tuiSmartSearch(getSearchFunction, searchDebounceTimeMs = 400) {\n    return source => source.pipe(debounceTime(searchDebounceTimeMs), scan((previousSearched, current) => {\n        return previousSearched !== `` && current.startsWith(previousSearched)\n            ? previousSearched\n            : current;\n    }, ``), distinctUntilChanged(), switchMap(value => getSearchFunction(value).pipe(startWith(null))), startWith(EMPTY_ARRAY));\n}\n\n/**\n * Works like regular map + distinctUntilChanged\n * and only returns to NgZone if value has changed\n *\n * @param project mapping function\n * @param ngZone NgZone instance\n */\nfunction tuiZonefulMap(project, ngZone) {\n    return pipe(map(project), distinctUntilChanged(), tuiZonefull(ngZone));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiSmartSearch, tuiZonefulMap };\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,eAAe;AACxD,SAASC,YAAY,EAAEC,IAAI,EAAEC,oBAAoB,EAAEC,SAAS,EAAEC,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AACpG,SAASC,IAAI,QAAQ,MAAM;AAE3B,SAASC,cAAc,CAACC,iBAAiB,EAAEC,oBAAoB,GAAG,GAAG,EAAE;EACnE,OAAOC,MAAM,IAAIA,MAAM,CAACJ,IAAI,CAACN,YAAY,CAACS,oBAAoB,CAAC,EAAER,IAAI,CAAC,CAACU,gBAAgB,EAAEC,OAAO,KAAK;IACjG,OAAOD,gBAAgB,KAAM,EAAC,IAAIC,OAAO,CAACC,UAAU,CAACF,gBAAgB,CAAC,GAChEA,gBAAgB,GAChBC,OAAO;EACjB,CAAC,EAAG,EAAC,CAAC,EAAEV,oBAAoB,EAAE,EAAEC,SAAS,CAACW,KAAK,IAAIN,iBAAiB,CAACM,KAAK,CAAC,CAACR,IAAI,CAACF,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAEA,SAAS,CAACN,WAAW,CAAC,CAAC;AAC/H;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiB,aAAa,CAACC,OAAO,EAAEC,MAAM,EAAE;EACpC,OAAOX,IAAI,CAACD,GAAG,CAACW,OAAO,CAAC,EAAEd,oBAAoB,EAAE,EAAEH,WAAW,CAACkB,MAAM,CAAC,CAAC;AAC1E;;AAEA;AACA;AACA;;AAEA,SAASV,cAAc,EAAEQ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}