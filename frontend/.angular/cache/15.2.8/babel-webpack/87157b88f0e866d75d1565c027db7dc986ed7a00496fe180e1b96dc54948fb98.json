{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ElementRef, NgZone, Directive, Inject, Self, Input, HostBinding, NgModule } from '@angular/core';\nimport { tuiTypedFromEvent, tuiZonefree } from '@taiga-ui/cdk/observables';\nimport { TuiDestroyService } from '@taiga-ui/cdk/services';\nimport { tuiIsElement, tuiGetScrollParent, tuiCanScroll } from '@taiga-ui/cdk/utils/dom';\nimport { filter, takeUntil, switchMap, tap } from 'rxjs/operators';\nimport * as i1 from 'rxjs';\n\n/**\n * Directive to isolate scrolling, i.e. prevent body scroll behind modal dialog\n */\nclass TuiOverscrollDirective {\n  constructor({\n    nativeElement\n  }, ngZone, destroy$) {\n    this.mode = 'scroll';\n    tuiTypedFromEvent(nativeElement, 'wheel', {\n      passive: false\n    }).pipe(filter(() => this.enabled), tuiZonefree(ngZone), takeUntil(destroy$)).subscribe(event => {\n      this.processEvent(event, !!event.deltaY, event.deltaY ? event.deltaY < 0 : event.deltaX < 0);\n    });\n    tuiTypedFromEvent(nativeElement, 'touchstart', {\n      passive: true\n    }).pipe(switchMap(({\n      touches\n    }) => {\n      let {\n        clientX,\n        clientY\n      } = touches[0];\n      let deltaX = 0;\n      let deltaY = 0;\n      let vertical;\n      return tuiTypedFromEvent(nativeElement, 'touchmove', {\n        passive: false\n      }).pipe(filter(() => this.enabled), tap(event => {\n        // We have to have it in tap instead of subscribe due to variables in closure\n        const changedTouch = event.changedTouches[0];\n        deltaX = clientX - changedTouch.clientX;\n        deltaY = clientY - changedTouch.clientY;\n        clientX = changedTouch.clientX;\n        clientY = changedTouch.clientY;\n        if (vertical === undefined) {\n          vertical = Math.abs(deltaY) > Math.abs(deltaX);\n        }\n        this.processEvent(event, vertical, vertical ? deltaY < 0 : deltaX < 0);\n      }));\n    }), tuiZonefree(ngZone), takeUntil(destroy$)).subscribe();\n  }\n  get enabled() {\n    return this.mode !== 'none';\n  }\n  get overscrollBehavior() {\n    return this.enabled ? 'contain' : null;\n  }\n  processEvent(event, vertical, negative) {\n    var _a;\n    const {\n      target,\n      currentTarget,\n      cancelable\n    } = event;\n    if (!cancelable || !tuiIsElement(target) || ((_a = target) === null || _a === void 0 ? void 0 : _a.type) === 'range') {\n      return;\n    }\n    // This is all what's needed in Chrome/Firefox thanks to CSS overscroll-behavior\n    if (this.mode === 'all' && (vertical && !currentTarget.contains(tuiGetScrollParent(target)) || !vertical && !currentTarget.contains(tuiGetScrollParent(target, false)))) {\n      event.preventDefault();\n      return;\n    }\n    // This is Safari/IE/Edge fallback\n    if (vertical && (negative && !tuiCanScroll(target, currentTarget, true, false) || !negative && !tuiCanScroll(target, currentTarget, true, true))) {\n      event.preventDefault();\n      return;\n    }\n    if (!vertical && (negative && !tuiCanScroll(target, currentTarget, false, false) || !negative && !tuiCanScroll(target, currentTarget, false, true))) {\n      event.preventDefault();\n    }\n  }\n}\nTuiOverscrollDirective.ɵfac = function TuiOverscrollDirective_Factory(t) {\n  return new (t || TuiOverscrollDirective)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(NgZone), i0.ɵɵdirectiveInject(TuiDestroyService, 2));\n};\nTuiOverscrollDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TuiOverscrollDirective,\n  selectors: [[\"\", \"tuiOverscroll\", \"\"]],\n  hostVars: 2,\n  hostBindings: function TuiOverscrollDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"overscroll-behavior\", ctx.overscrollBehavior);\n    }\n  },\n  inputs: {\n    mode: [\"tuiOverscroll\", \"mode\"]\n  },\n  features: [i0.ɵɵProvidersFeature([TuiDestroyService])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiOverscrollDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tuiOverscroll]',\n      providers: [TuiDestroyService]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: i0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: i1.Observable,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [TuiDestroyService]\n      }]\n    }];\n  }, {\n    mode: [{\n      type: Input,\n      args: ['tuiOverscroll']\n    }],\n    overscrollBehavior: [{\n      type: HostBinding,\n      args: ['style.overscrollBehavior']\n    }]\n  });\n})();\nclass TuiOverscrollModule {}\nTuiOverscrollModule.ɵfac = function TuiOverscrollModule_Factory(t) {\n  return new (t || TuiOverscrollModule)();\n};\nTuiOverscrollModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiOverscrollModule\n});\nTuiOverscrollModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiOverscrollModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TuiOverscrollDirective],\n      exports: [TuiOverscrollDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiOverscrollDirective, TuiOverscrollModule };","map":{"version":3,"names":["i0","ElementRef","NgZone","Directive","Inject","Self","Input","HostBinding","NgModule","tuiTypedFromEvent","tuiZonefree","TuiDestroyService","tuiIsElement","tuiGetScrollParent","tuiCanScroll","filter","takeUntil","switchMap","tap","i1","TuiOverscrollDirective","constructor","nativeElement","ngZone","destroy$","mode","passive","pipe","enabled","subscribe","event","processEvent","deltaY","deltaX","touches","clientX","clientY","vertical","changedTouch","changedTouches","undefined","Math","abs","overscrollBehavior","negative","_a","target","currentTarget","cancelable","type","contains","preventDefault","ɵfac","ɵdir","args","selector","providers","decorators","Observable","TuiOverscrollModule","ɵmod","ɵinj","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/cdk/fesm2015/taiga-ui-cdk-directives-overscroll.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { ElementRef, NgZone, Directive, Inject, Self, Input, HostBinding, NgModule } from '@angular/core';\nimport { tuiTypedFromEvent, tuiZonefree } from '@taiga-ui/cdk/observables';\nimport { TuiDestroyService } from '@taiga-ui/cdk/services';\nimport { tuiIsElement, tuiGetScrollParent, tuiCanScroll } from '@taiga-ui/cdk/utils/dom';\nimport { filter, takeUntil, switchMap, tap } from 'rxjs/operators';\nimport * as i1 from 'rxjs';\n\n/**\n * Directive to isolate scrolling, i.e. prevent body scroll behind modal dialog\n */\nclass TuiOverscrollDirective {\n    constructor({ nativeElement }, ngZone, destroy$) {\n        this.mode = 'scroll';\n        tuiTypedFromEvent(nativeElement, 'wheel', { passive: false })\n            .pipe(filter(() => this.enabled), tuiZonefree(ngZone), takeUntil(destroy$))\n            .subscribe(event => {\n            this.processEvent(event, !!event.deltaY, event.deltaY ? event.deltaY < 0 : event.deltaX < 0);\n        });\n        tuiTypedFromEvent(nativeElement, 'touchstart', { passive: true })\n            .pipe(switchMap(({ touches }) => {\n            let { clientX, clientY } = touches[0];\n            let deltaX = 0;\n            let deltaY = 0;\n            let vertical;\n            return tuiTypedFromEvent(nativeElement, 'touchmove', {\n                passive: false,\n            }).pipe(filter(() => this.enabled), tap(event => {\n                // We have to have it in tap instead of subscribe due to variables in closure\n                const changedTouch = event.changedTouches[0];\n                deltaX = clientX - changedTouch.clientX;\n                deltaY = clientY - changedTouch.clientY;\n                clientX = changedTouch.clientX;\n                clientY = changedTouch.clientY;\n                if (vertical === undefined) {\n                    vertical = Math.abs(deltaY) > Math.abs(deltaX);\n                }\n                this.processEvent(event, vertical, vertical ? deltaY < 0 : deltaX < 0);\n            }));\n        }), tuiZonefree(ngZone), takeUntil(destroy$))\n            .subscribe();\n    }\n    get enabled() {\n        return this.mode !== 'none';\n    }\n    get overscrollBehavior() {\n        return this.enabled ? 'contain' : null;\n    }\n    processEvent(event, vertical, negative) {\n        var _a;\n        const { target, currentTarget, cancelable } = event;\n        if (!cancelable ||\n            !tuiIsElement(target) ||\n            ((_a = target) === null || _a === void 0 ? void 0 : _a.type) === 'range') {\n            return;\n        }\n        // This is all what's needed in Chrome/Firefox thanks to CSS overscroll-behavior\n        if (this.mode === 'all' &&\n            ((vertical && !currentTarget.contains(tuiGetScrollParent(target))) ||\n                (!vertical && !currentTarget.contains(tuiGetScrollParent(target, false))))) {\n            event.preventDefault();\n            return;\n        }\n        // This is Safari/IE/Edge fallback\n        if (vertical &&\n            ((negative && !tuiCanScroll(target, currentTarget, true, false)) ||\n                (!negative && !tuiCanScroll(target, currentTarget, true, true)))) {\n            event.preventDefault();\n            return;\n        }\n        if (!vertical &&\n            ((negative && !tuiCanScroll(target, currentTarget, false, false)) ||\n                (!negative && !tuiCanScroll(target, currentTarget, false, true)))) {\n            event.preventDefault();\n        }\n    }\n}\nTuiOverscrollDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiOverscrollDirective, deps: [{ token: ElementRef }, { token: NgZone }, { token: TuiDestroyService, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nTuiOverscrollDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiOverscrollDirective, selector: \"[tuiOverscroll]\", inputs: { mode: [\"tuiOverscroll\", \"mode\"] }, host: { properties: { \"style.overscrollBehavior\": \"this.overscrollBehavior\" } }, providers: [TuiDestroyService], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiOverscrollDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tuiOverscroll]',\n                    providers: [TuiDestroyService],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{\n                    type: Inject,\n                    args: [ElementRef]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Inject,\n                    args: [NgZone]\n                }] }, { type: i1.Observable, decorators: [{\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [TuiDestroyService]\n                }] }]; }, propDecorators: { mode: [{\n                type: Input,\n                args: ['tuiOverscroll']\n            }], overscrollBehavior: [{\n                type: HostBinding,\n                args: ['style.overscrollBehavior']\n            }] } });\n\nclass TuiOverscrollModule {\n}\nTuiOverscrollModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiOverscrollModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiOverscrollModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiOverscrollModule, declarations: [TuiOverscrollDirective], exports: [TuiOverscrollDirective] });\nTuiOverscrollModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiOverscrollModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiOverscrollModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TuiOverscrollDirective],\n                    exports: [TuiOverscrollDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiOverscrollDirective, TuiOverscrollModule };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,eAAe;AACzG,SAASC,iBAAiB,EAAEC,WAAW,QAAQ,2BAA2B;AAC1E,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,YAAY,EAAEC,kBAAkB,EAAEC,YAAY,QAAQ,yBAAyB;AACxF,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAClE,OAAO,KAAKC,EAAE,MAAM,MAAM;;AAE1B;AACA;AACA;AACA,MAAMC,sBAAsB,CAAC;EACzBC,WAAW,CAAC;IAAEC;EAAc,CAAC,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IAC7C,IAAI,CAACC,IAAI,GAAG,QAAQ;IACpBhB,iBAAiB,CAACa,aAAa,EAAE,OAAO,EAAE;MAAEI,OAAO,EAAE;IAAM,CAAC,CAAC,CACxDC,IAAI,CAACZ,MAAM,CAAC,MAAM,IAAI,CAACa,OAAO,CAAC,EAAElB,WAAW,CAACa,MAAM,CAAC,EAAEP,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAC1EK,SAAS,CAACC,KAAK,IAAI;MACpB,IAAI,CAACC,YAAY,CAACD,KAAK,EAAE,CAAC,CAACA,KAAK,CAACE,MAAM,EAAEF,KAAK,CAACE,MAAM,GAAGF,KAAK,CAACE,MAAM,GAAG,CAAC,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC,CAAC;IAChG,CAAC,CAAC;IACFxB,iBAAiB,CAACa,aAAa,EAAE,YAAY,EAAE;MAAEI,OAAO,EAAE;IAAK,CAAC,CAAC,CAC5DC,IAAI,CAACV,SAAS,CAAC,CAAC;MAAEiB;IAAQ,CAAC,KAAK;MACjC,IAAI;QAAEC,OAAO;QAAEC;MAAQ,CAAC,GAAGF,OAAO,CAAC,CAAC,CAAC;MACrC,IAAID,MAAM,GAAG,CAAC;MACd,IAAID,MAAM,GAAG,CAAC;MACd,IAAIK,QAAQ;MACZ,OAAO5B,iBAAiB,CAACa,aAAa,EAAE,WAAW,EAAE;QACjDI,OAAO,EAAE;MACb,CAAC,CAAC,CAACC,IAAI,CAACZ,MAAM,CAAC,MAAM,IAAI,CAACa,OAAO,CAAC,EAAEV,GAAG,CAACY,KAAK,IAAI;QAC7C;QACA,MAAMQ,YAAY,GAAGR,KAAK,CAACS,cAAc,CAAC,CAAC,CAAC;QAC5CN,MAAM,GAAGE,OAAO,GAAGG,YAAY,CAACH,OAAO;QACvCH,MAAM,GAAGI,OAAO,GAAGE,YAAY,CAACF,OAAO;QACvCD,OAAO,GAAGG,YAAY,CAACH,OAAO;QAC9BC,OAAO,GAAGE,YAAY,CAACF,OAAO;QAC9B,IAAIC,QAAQ,KAAKG,SAAS,EAAE;UACxBH,QAAQ,GAAGI,IAAI,CAACC,GAAG,CAACV,MAAM,CAAC,GAAGS,IAAI,CAACC,GAAG,CAACT,MAAM,CAAC;QAClD;QACA,IAAI,CAACF,YAAY,CAACD,KAAK,EAAEO,QAAQ,EAAEA,QAAQ,GAAGL,MAAM,GAAG,CAAC,GAAGC,MAAM,GAAG,CAAC,CAAC;MAC1E,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,EAAEvB,WAAW,CAACa,MAAM,CAAC,EAAEP,SAAS,CAACQ,QAAQ,CAAC,CAAC,CACxCK,SAAS,EAAE;EACpB;EACA,IAAID,OAAO,GAAG;IACV,OAAO,IAAI,CAACH,IAAI,KAAK,MAAM;EAC/B;EACA,IAAIkB,kBAAkB,GAAG;IACrB,OAAO,IAAI,CAACf,OAAO,GAAG,SAAS,GAAG,IAAI;EAC1C;EACAG,YAAY,CAACD,KAAK,EAAEO,QAAQ,EAAEO,QAAQ,EAAE;IACpC,IAAIC,EAAE;IACN,MAAM;MAAEC,MAAM;MAAEC,aAAa;MAAEC;IAAW,CAAC,GAAGlB,KAAK;IACnD,IAAI,CAACkB,UAAU,IACX,CAACpC,YAAY,CAACkC,MAAM,CAAC,IACrB,CAAC,CAACD,EAAE,GAAGC,MAAM,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,IAAI,MAAM,OAAO,EAAE;MAC1E;IACJ;IACA;IACA,IAAI,IAAI,CAACxB,IAAI,KAAK,KAAK,KACjBY,QAAQ,IAAI,CAACU,aAAa,CAACG,QAAQ,CAACrC,kBAAkB,CAACiC,MAAM,CAAC,CAAC,IAC5D,CAACT,QAAQ,IAAI,CAACU,aAAa,CAACG,QAAQ,CAACrC,kBAAkB,CAACiC,MAAM,EAAE,KAAK,CAAC,CAAE,CAAC,EAAE;MAChFhB,KAAK,CAACqB,cAAc,EAAE;MACtB;IACJ;IACA;IACA,IAAId,QAAQ,KACNO,QAAQ,IAAI,CAAC9B,YAAY,CAACgC,MAAM,EAAEC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,IAC1D,CAACH,QAAQ,IAAI,CAAC9B,YAAY,CAACgC,MAAM,EAAEC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC,EAAE;MACtEjB,KAAK,CAACqB,cAAc,EAAE;MACtB;IACJ;IACA,IAAI,CAACd,QAAQ,KACPO,QAAQ,IAAI,CAAC9B,YAAY,CAACgC,MAAM,EAAEC,aAAa,EAAE,KAAK,EAAE,KAAK,CAAC,IAC3D,CAACH,QAAQ,IAAI,CAAC9B,YAAY,CAACgC,MAAM,EAAEC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC,EAAE;MACvEjB,KAAK,CAACqB,cAAc,EAAE;IAC1B;EACJ;AACJ;AACA/B,sBAAsB,CAACgC,IAAI;EAAA,iBAAyFhC,sBAAsB,EAAhCpB,EAAE,mBAAgDC,UAAU,GAA5DD,EAAE,mBAAuEE,MAAM,GAA/EF,EAAE,mBAA0FW,iBAAiB;AAAA,CAAwD;AAC/QS,sBAAsB,CAACiC,IAAI,kBAD+ErD,EAAE;EAAA,MACJoB,sBAAsB;EAAA;EAAA;EAAA;IAAA;MADpBpB,EAAE;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAAFA,EAAE,oBAC0L,CAACW,iBAAiB,CAAC;AAAA,EAAiB;AAC1U;EAAA,mDAF0GX,EAAE,mBAEhBoB,sBAAsB,EAAc,CAAC;IACrH6B,IAAI,EAAE9C,SAAS;IACfmD,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,iBAAiB;MAC3BC,SAAS,EAAE,CAAC7C,iBAAiB;IACjC,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEsC,IAAI,EAAEjD,EAAE,CAACC,UAAU;MAAEwD,UAAU,EAAE,CAAC;QAClER,IAAI,EAAE7C,MAAM;QACZkD,IAAI,EAAE,CAACrD,UAAU;MACrB,CAAC;IAAE,CAAC,EAAE;MAAEgD,IAAI,EAAEjD,EAAE,CAACE,MAAM;MAAEuD,UAAU,EAAE,CAAC;QAClCR,IAAI,EAAE7C,MAAM;QACZkD,IAAI,EAAE,CAACpD,MAAM;MACjB,CAAC;IAAE,CAAC,EAAE;MAAE+C,IAAI,EAAE9B,EAAE,CAACuC,UAAU;MAAED,UAAU,EAAE,CAAC;QACtCR,IAAI,EAAE5C;MACV,CAAC,EAAE;QACC4C,IAAI,EAAE7C,MAAM;QACZkD,IAAI,EAAE,CAAC3C,iBAAiB;MAC5B,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEc,IAAI,EAAE,CAAC;MACnCwB,IAAI,EAAE3C,KAAK;MACXgD,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC,CAAC;IAAEX,kBAAkB,EAAE,CAAC;MACrBM,IAAI,EAAE1C,WAAW;MACjB+C,IAAI,EAAE,CAAC,0BAA0B;IACrC,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMK,mBAAmB,CAAC;AAE1BA,mBAAmB,CAACP,IAAI;EAAA,iBAAyFO,mBAAmB;AAAA,CAAkD;AACtLA,mBAAmB,CAACC,IAAI,kBA9BkF5D,EAAE;EAAA,MA8BM2D;AAAmB,EAA8E;AACnNA,mBAAmB,CAACE,IAAI,kBA/BkF7D,EAAE,qBA+B4B;AACxI;EAAA,mDAhC0GA,EAAE,mBAgChB2D,mBAAmB,EAAc,CAAC;IAClHV,IAAI,EAAEzC,QAAQ;IACd8C,IAAI,EAAE,CAAC;MACCQ,YAAY,EAAE,CAAC1C,sBAAsB,CAAC;MACtC2C,OAAO,EAAE,CAAC3C,sBAAsB;IACpC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASA,sBAAsB,EAAEuC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}