{"ast":null,"code":"import { TUI_CACHE_BUSTING_PAYLOAD, DEFAULT_ICONS_PATH, tuiEditingKeys } from '@taiga-ui/core/constants';\nconst ITEM_SIZE = 1.5;\nconst CONTENT_SIZE = 2.5;\nfunction tuiGetBorder(hasIcon, hasCleaner = false, hasTooltip = false, hasContent = false) {\n  let border = 0;\n  if (hasIcon) {\n    border += ITEM_SIZE;\n  }\n  if (hasCleaner) {\n    border += ITEM_SIZE;\n  }\n  if (hasTooltip) {\n    border += ITEM_SIZE;\n  }\n  if (hasContent) {\n    border += CONTENT_SIZE;\n  }\n  return border;\n}\nfunction tuiIconsPathFactory(staticPath) {\n  const base = staticPath.endsWith(`/`) ? staticPath : `${staticPath}/`;\n  return name => {\n    if (name.startsWith(`tuiIcon`)) {\n      return `${base}${name}.svg${TUI_CACHE_BUSTING_PAYLOAD}#${name}`;\n    }\n    return DEFAULT_ICONS_PATH(name);\n  };\n}\n\n/**\n * Check if pressed key is interactive in terms of input field\n */\nfunction tuiIsEditingKey(key) {\n  return key.length === 1 || tuiEditingKeys.includes(key);\n}\nfunction tuiIsPresumedHTMLString(candidate) {\n  const trimmed = candidate.trim();\n  return trimmed.startsWith(`<`) && trimmed.endsWith(`>`);\n}\nfunction tuiOverrideOptions(override) {\n  return (directive, options) => {\n    const result = directive || Object.assign({}, options);\n    Object.keys(override).forEach(key => {\n      // Update directive props with new defaults before inputs are processed\n      result[key] = override[key];\n    });\n    return result;\n  };\n}\nconst SIZES = {\n  xxs: 0,\n  xs: 1,\n  s: 2,\n  m: 3,\n  l: 4,\n  xl: 5,\n  xxl: 6\n};\n/**\n * Compares size constants to determine if first size is bigger than the second\n *\n * @param size size that we need to compare\n * @param biggerThanSize size to compare with, 's' by default\n */\nfunction tuiSizeBigger(size, biggerThanSize = `s`) {\n  return SIZES[size] > SIZES[biggerThanSize];\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiGetBorder, tuiIconsPathFactory, tuiIsEditingKey, tuiIsPresumedHTMLString, tuiOverrideOptions, tuiSizeBigger };","map":{"version":3,"names":["TUI_CACHE_BUSTING_PAYLOAD","DEFAULT_ICONS_PATH","tuiEditingKeys","ITEM_SIZE","CONTENT_SIZE","tuiGetBorder","hasIcon","hasCleaner","hasTooltip","hasContent","border","tuiIconsPathFactory","staticPath","base","endsWith","name","startsWith","tuiIsEditingKey","key","length","includes","tuiIsPresumedHTMLString","candidate","trimmed","trim","tuiOverrideOptions","override","directive","options","result","Object","assign","keys","forEach","SIZES","xxs","xs","s","m","l","xl","xxl","tuiSizeBigger","size","biggerThanSize"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/core/fesm2015/taiga-ui-core-utils-miscellaneous.js"],"sourcesContent":["import { TUI_CACHE_BUSTING_PAYLOAD, DEFAULT_ICONS_PATH, tuiEditingKeys } from '@taiga-ui/core/constants';\n\nconst ITEM_SIZE = 1.5;\nconst CONTENT_SIZE = 2.5;\nfunction tuiGetBorder(hasIcon, hasCleaner = false, hasTooltip = false, hasContent = false) {\n    let border = 0;\n    if (hasIcon) {\n        border += ITEM_SIZE;\n    }\n    if (hasCleaner) {\n        border += ITEM_SIZE;\n    }\n    if (hasTooltip) {\n        border += ITEM_SIZE;\n    }\n    if (hasContent) {\n        border += CONTENT_SIZE;\n    }\n    return border;\n}\n\nfunction tuiIconsPathFactory(staticPath) {\n    const base = staticPath.endsWith(`/`) ? staticPath : `${staticPath}/`;\n    return name => {\n        if (name.startsWith(`tuiIcon`)) {\n            return `${base}${name}.svg${TUI_CACHE_BUSTING_PAYLOAD}#${name}`;\n        }\n        return DEFAULT_ICONS_PATH(name);\n    };\n}\n\n/**\n * Check if pressed key is interactive in terms of input field\n */\nfunction tuiIsEditingKey(key) {\n    return key.length === 1 || tuiEditingKeys.includes(key);\n}\n\nfunction tuiIsPresumedHTMLString(candidate) {\n    const trimmed = candidate.trim();\n    return trimmed.startsWith(`<`) && trimmed.endsWith(`>`);\n}\n\nfunction tuiOverrideOptions(override) {\n    return (directive, options) => {\n        const result = directive || Object.assign({}, options);\n        Object.keys(override).forEach(key => {\n            // Update directive props with new defaults before inputs are processed\n            result[key] = override[key];\n        });\n        return result;\n    };\n}\n\nconst SIZES = {\n    xxs: 0,\n    xs: 1,\n    s: 2,\n    m: 3,\n    l: 4,\n    xl: 5,\n    xxl: 6,\n};\n/**\n * Compares size constants to determine if first size is bigger than the second\n *\n * @param size size that we need to compare\n * @param biggerThanSize size to compare with, 's' by default\n */\nfunction tuiSizeBigger(size, biggerThanSize = `s`) {\n    return SIZES[size] > SIZES[biggerThanSize];\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiGetBorder, tuiIconsPathFactory, tuiIsEditingKey, tuiIsPresumedHTMLString, tuiOverrideOptions, tuiSizeBigger };\n"],"mappings":"AAAA,SAASA,yBAAyB,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ,0BAA0B;AAExG,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,YAAY,GAAG,GAAG;AACxB,SAASC,YAAY,CAACC,OAAO,EAAEC,UAAU,GAAG,KAAK,EAAEC,UAAU,GAAG,KAAK,EAAEC,UAAU,GAAG,KAAK,EAAE;EACvF,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIJ,OAAO,EAAE;IACTI,MAAM,IAAIP,SAAS;EACvB;EACA,IAAII,UAAU,EAAE;IACZG,MAAM,IAAIP,SAAS;EACvB;EACA,IAAIK,UAAU,EAAE;IACZE,MAAM,IAAIP,SAAS;EACvB;EACA,IAAIM,UAAU,EAAE;IACZC,MAAM,IAAIN,YAAY;EAC1B;EACA,OAAOM,MAAM;AACjB;AAEA,SAASC,mBAAmB,CAACC,UAAU,EAAE;EACrC,MAAMC,IAAI,GAAGD,UAAU,CAACE,QAAQ,CAAE,GAAE,CAAC,GAAGF,UAAU,GAAI,GAAEA,UAAW,GAAE;EACrE,OAAOG,IAAI,IAAI;IACX,IAAIA,IAAI,CAACC,UAAU,CAAE,SAAQ,CAAC,EAAE;MAC5B,OAAQ,GAAEH,IAAK,GAAEE,IAAK,OAAMf,yBAA0B,IAAGe,IAAK,EAAC;IACnE;IACA,OAAOd,kBAAkB,CAACc,IAAI,CAAC;EACnC,CAAC;AACL;;AAEA;AACA;AACA;AACA,SAASE,eAAe,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,CAACC,MAAM,KAAK,CAAC,IAAIjB,cAAc,CAACkB,QAAQ,CAACF,GAAG,CAAC;AAC3D;AAEA,SAASG,uBAAuB,CAACC,SAAS,EAAE;EACxC,MAAMC,OAAO,GAAGD,SAAS,CAACE,IAAI,EAAE;EAChC,OAAOD,OAAO,CAACP,UAAU,CAAE,GAAE,CAAC,IAAIO,OAAO,CAACT,QAAQ,CAAE,GAAE,CAAC;AAC3D;AAEA,SAASW,kBAAkB,CAACC,QAAQ,EAAE;EAClC,OAAO,CAACC,SAAS,EAAEC,OAAO,KAAK;IAC3B,MAAMC,MAAM,GAAGF,SAAS,IAAIG,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,OAAO,CAAC;IACtDE,MAAM,CAACE,IAAI,CAACN,QAAQ,CAAC,CAACO,OAAO,CAACf,GAAG,IAAI;MACjC;MACAW,MAAM,CAACX,GAAG,CAAC,GAAGQ,QAAQ,CAACR,GAAG,CAAC;IAC/B,CAAC,CAAC;IACF,OAAOW,MAAM;EACjB,CAAC;AACL;AAEA,MAAMK,KAAK,GAAG;EACVC,GAAG,EAAE,CAAC;EACNC,EAAE,EAAE,CAAC;EACLC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,CAAC,EAAE,CAAC;EACJC,EAAE,EAAE,CAAC;EACLC,GAAG,EAAE;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAa,CAACC,IAAI,EAAEC,cAAc,GAAI,GAAE,EAAE;EAC/C,OAAOV,KAAK,CAACS,IAAI,CAAC,GAAGT,KAAK,CAACU,cAAc,CAAC;AAC9C;;AAEA;AACA;AACA;;AAEA,SAASvC,YAAY,EAAEM,mBAAmB,EAAEM,eAAe,EAAEI,uBAAuB,EAAEI,kBAAkB,EAAEiB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}