{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i4 from '@taiga-ui/cdk';\nimport { AbstractTuiControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiFocusedModule, TuiFocusableModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TuiModeDirective, TuiWrapperModule, TuiSvgModule, TuiLoaderModule } from '@taiga-ui/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n\n/** Default values for the toggle options. */\nconst _c0 = [\"focusableElement\"];\nfunction TuiToggleComponent_tui_loader_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-loader\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r0.loaderSize)(\"inheritColor\", true)(\"showLoader\", ctx_r0.value);\n  }\n}\nfunction TuiToggleComponent_span_3_tui_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-svg\", 10);\n  }\n  if (rf & 2) {\n    const src_r6 = ctx.polymorpheusOutlet;\n    i0.ɵɵproperty(\"src\", src_r6);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction TuiToggleComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, TuiToggleComponent_span_3_tui_svg_1_Template, 1, 1, \"tui-svg\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.iconOn)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.size));\n  }\n}\nfunction TuiToggleComponent_tui_loader_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-loader\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r2.loaderSize)(\"inheritColor\", true)(\"showLoader\", !ctx_r2.value);\n  }\n}\nfunction TuiToggleComponent_span_6_tui_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-svg\", 12);\n  }\n  if (rf & 2) {\n    const src_r8 = ctx.polymorpheusOutlet;\n    i0.ɵɵproperty(\"src\", src_r8);\n  }\n}\nfunction TuiToggleComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, TuiToggleComponent_span_6_tui_svg_1_Template, 1, 1, \"tui-svg\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r3.iconOff)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r3.size));\n  }\n}\nconst TUI_TOGGLE_DEFAULT_OPTIONS = {\n  icons: {\n    toggleOff({\n      $implicit\n    }) {\n      return $implicit === `m` ? `tuiIconToggleOff` : `tuiIconToggleOffLarge`;\n    },\n    toggleOn({\n      $implicit\n    }) {\n      return $implicit === `m` ? `tuiIconToggleOn` : `tuiIconToggleOnLarge`;\n    }\n  },\n  singleColor: false,\n  showIcons: false,\n  size: `m`\n};\n/**\n * Default parameters for Toggle component\n */\nconst TUI_TOGGLE_OPTIONS = new InjectionToken(`[TUI_TOGGLE_OPTIONS]`, {\n  factory: () => TUI_TOGGLE_DEFAULT_OPTIONS\n});\nconst tuiToggleOptionsProvider = options => ({\n  provide: TUI_TOGGLE_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_TOGGLE_DEFAULT_OPTIONS), options)\n});\nclass TuiToggleComponent extends AbstractTuiControl {\n  constructor(control, cdr, modeDirective, options) {\n    super(control, cdr);\n    this.modeDirective = modeDirective;\n    this.options = options;\n    this.singleColor = this.options.singleColor;\n    this.showIcons = this.options.showIcons;\n    this.showLoader = false;\n    this.size = this.options.size;\n  }\n  get iconOn() {\n    return this.options.icons.toggleOn;\n  }\n  get iconOff() {\n    return this.options.icons.toggleOff;\n  }\n  get nativeFocusableElement() {\n    return this.focusableElement ? this.focusableElement.nativeElement : null;\n  }\n  get focused() {\n    return tuiIsNativeFocused(this.nativeFocusableElement);\n  }\n  get appearance() {\n    return this.singleColor || this.value ? \"primary\" /* Primary */ : \"secondary\" /* Secondary */;\n  }\n\n  get sizeM() {\n    return this.size === 'm';\n  }\n  get loaderSize() {\n    return this.sizeM ? 'xs' : 's';\n  }\n  get hostMode() {\n    return this.modeDirective ? this.modeDirective.mode : null;\n  }\n  /** @deprecated use 'value' setter */\n  onChecked(checked) {\n    this.value = checked;\n  }\n  onFocused(focused) {\n    this.updateFocused(focused);\n  }\n  onFocusVisible(focusVisible) {\n    this.updateFocusVisible(focusVisible);\n  }\n  getFallbackValue() {\n    return false;\n  }\n}\nTuiToggleComponent.ɵfac = function TuiToggleComponent_Factory(t) {\n  return new (t || TuiToggleComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TuiModeDirective, 8), i0.ɵɵdirectiveInject(TUI_TOGGLE_OPTIONS));\n};\nTuiToggleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TuiToggleComponent,\n  selectors: [[\"tui-toggle\"]],\n  viewQuery: function TuiToggleComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusableElement = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function TuiToggleComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"data-size\", ctx.size)(\"data-mode\", ctx.hostMode);\n      i0.ɵɵclassProp(\"_checked\", ctx.value);\n    }\n  },\n  inputs: {\n    singleColor: \"singleColor\",\n    showIcons: \"showIcons\",\n    showLoader: \"showLoader\",\n    size: \"size\"\n  },\n  features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiToggleComponent), tuiAsControl(TuiToggleComponent)]), i0.ɵɵInheritDefinitionFeature],\n  decls: 9,\n  vars: 16,\n  consts: [[\"tuiWrapper\", \"\", 3, \"appearance\", \"readOnly\", \"disabled\", \"focus\", \"hover\", \"active\", \"invalid\"], [1, \"t-toggle\"], [\"class\", \"t-loader\", 3, \"size\", \"inheritColor\", \"showLoader\", 4, \"ngIf\"], [\"class\", \"t-icon-wrapper\", 4, \"ngIf\"], [1, \"t-circle\"], [\"type\", \"checkbox\", \"role\", \"switch\", \"automation-id\", \"tui-toggle__checkbox\", 1, \"t-checkbox\", 3, \"id\", \"disabled\", \"tuiFocusable\", \"tuiChecked\", \"tuiCheckedChange\", \"tuiFocusedChange\", \"tuiFocusVisibleChange\"], [\"focusableElement\", \"\"], [1, \"t-loader\", 3, \"size\", \"inheritColor\", \"showLoader\"], [1, \"t-icon-wrapper\"], [\"automation-id\", \"tui-toggle__check-icon\", \"class\", \"t-icon\", 3, \"src\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"automation-id\", \"tui-toggle__check-icon\", 1, \"t-icon\", 3, \"src\"], [\"automation-id\", \"tui-toggle__cancel-icon\", \"class\", \"t-icon t-icon_off\", 3, \"src\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"automation-id\", \"tui-toggle__cancel-icon\", 1, \"t-icon\", \"t-icon_off\", 3, \"src\"]],\n  template: function TuiToggleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, TuiToggleComponent_tui_loader_2_Template, 1, 3, \"tui-loader\", 2);\n      i0.ɵɵtemplate(3, TuiToggleComponent_span_3_Template, 2, 4, \"span\", 3);\n      i0.ɵɵelement(4, \"div\", 4);\n      i0.ɵɵtemplate(5, TuiToggleComponent_tui_loader_5_Template, 1, 3, \"tui-loader\", 2);\n      i0.ɵɵtemplate(6, TuiToggleComponent_span_6_Template, 2, 4, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 5, 6);\n      i0.ɵɵlistener(\"tuiCheckedChange\", function TuiToggleComponent_Template_input_tuiCheckedChange_7_listener($event) {\n        return ctx.value = $event;\n      })(\"tuiFocusedChange\", function TuiToggleComponent_Template_input_tuiFocusedChange_7_listener($event) {\n        return ctx.onFocused($event);\n      })(\"tuiFocusVisibleChange\", function TuiToggleComponent_Template_input_tuiFocusVisibleChange_7_listener($event) {\n        return ctx.onFocusVisible($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"appearance\", ctx.appearance)(\"readOnly\", ctx.readOnly)(\"disabled\", ctx.computedDisabled)(\"focus\", ctx.computedFocusVisible)(\"hover\", ctx.pseudoHover)(\"active\", ctx.pseudoActive)(\"invalid\", ctx.computedInvalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLoader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showIcons && !ctx.showLoader);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLoader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showIcons && !ctx.showLoader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx.id)(\"disabled\", ctx.disabled)(\"tuiFocusable\", ctx.focusable)(\"tuiChecked\", ctx.value);\n      i0.ɵɵattribute(\"aria-checked\", ctx.value);\n    }\n  },\n  dependencies: [i1.TuiLoaderComponent, i1.TuiSvgComponent, i1.TuiWrapperDirective, i2.NgIf, i3.PolymorpheusOutletDirective, i4.TuiCheckedDirective, i4.TuiFocusableDirective, i4.TuiFocusedDirective, i4.TuiFocusVisibleDirective],\n  styles: [\"[_nghost-%COMP%]{position:relative;display:inline-block;vertical-align:middle;overflow:hidden;border-radius:6.25rem}[data-size=m][_nghost-%COMP%]{width:2rem;height:1rem}[data-size=l][_nghost-%COMP%]{width:3rem;height:1.5rem}.t-checkbox[_ngcontent-%COMP%]{padding:0;margin:0;border:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer}.t-checkbox[_ngcontent-%COMP%]:-webkit-autofill, .t-checkbox[_ngcontent-%COMP%]:-webkit-autofill:hover, .t-checkbox[_ngcontent-%COMP%]:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}._disabled[_nghost-%COMP%]   .t-checkbox[_ngcontent-%COMP%]{pointer-events:none;cursor:default}.t-toggle[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;align-items:center;justify-content:center}[data-size=m][_nghost-%COMP%]   .t-toggle[_ngcontent-%COMP%]{width:3rem;height:1rem;transform:translate(-1rem)}[data-size=l][_nghost-%COMP%]   .t-toggle[_ngcontent-%COMP%]{width:4.5rem;height:1.5rem;transform:translate(-1.5rem)}._checked[_nghost-%COMP%]   .t-toggle[_ngcontent-%COMP%]{transform:translate(0)}.t-circle[_ngcontent-%COMP%]{margin:.125rem 0;flex-shrink:0;border-radius:100%;background-color:var(--tui-base-01)}._disabled[_nghost-%COMP%]   .t-circle_light[_ngcontent-%COMP%]{opacity:.24}[data-size=m][_nghost-%COMP%]   .t-circle[_ngcontent-%COMP%]{width:.75rem;height:.75rem}[data-size=l][_nghost-%COMP%]   .t-circle[_ngcontent-%COMP%]{width:1rem;height:1rem}._disabled[_nghost-%COMP%]   .t-circle[_ngcontent-%COMP%]{background-color:var(--tui-base-01)}[_nghost-%COMP%]:not(._checked)   .t-loader[_ngcontent-%COMP%]{color:var(--tui-base-06)}[_nghost-%COMP%]:not(._checked)._disabled   .t-loader[_ngcontent-%COMP%]{color:var(--tui-base-05)}[_nghost-%COMP%]:not(._checked)[data-mode=onDark]   .t-loader[_ngcontent-%COMP%]{color:var(--tui-text-03-night)}[_nghost-%COMP%]:not(._checked)[data-mode=onDark]._disabled   .t-loader[_ngcontent-%COMP%]{color:var(--tui-clear-inverse-active)}[_nghost-%COMP%]:not(._checked)[data-mode=onLight]   .t-loader[_ngcontent-%COMP%]{color:var(--tui-text-03)}[_nghost-%COMP%]:not(._checked)[data-mode=onLight]._disabled   .t-loader[_ngcontent-%COMP%]{color:var(--tui-clear-active)}[data-size=m][_nghost-%COMP%]   .t-loader[_ngcontent-%COMP%]{width:.75rem;margin:0 .2rem;transform:scale(.75)}[data-size=l][_nghost-%COMP%]   .t-loader[_ngcontent-%COMP%]{width:1rem;margin:0 .25rem}.t-icon-wrapper[_ngcontent-%COMP%]{display:flex}.t-icon[_ngcontent-%COMP%]{opacity:.8}.t-icon_off[_ngcontent-%COMP%]{color:var(--tui-base-06)}._disabled[_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-base-05)}[data-mode=onDark][_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-text-03-night)}[data-mode=onDark]._disabled[_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-clear-inverse-active)}[data-mode=onLight][_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-text-03)}[data-mode=onLight]._disabled[_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-clear-active)}[data-size=m][_nghost-%COMP%]   .t-icon[_ngcontent-%COMP%]{width:1rem;height:1rem;transform:scale(.75)}[data-size=l][_nghost-%COMP%]   .t-icon[_ngcontent-%COMP%]{margin:0 .125rem;width:1.5rem;height:1.5rem}[_nghost-%COMP%]:hover   .t-icon[_ngcontent-%COMP%]{opacity:1}\"],\n  changeDetection: 0\n});\n__decorate([tuiDefaultProp()], TuiToggleComponent.prototype, \"singleColor\", void 0);\n__decorate([tuiDefaultProp()], TuiToggleComponent.prototype, \"showIcons\", void 0);\n__decorate([tuiDefaultProp()], TuiToggleComponent.prototype, \"showLoader\", void 0);\n__decorate([tuiDefaultProp()], TuiToggleComponent.prototype, \"size\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiToggleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tui-toggle',\n      templateUrl: './toggle.template.html',\n      styleUrls: ['./toggle.style.less'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiToggleComponent), tuiAsControl(TuiToggleComponent)],\n      host: {\n        '[class._checked]': 'value'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i5.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }, {\n        type: Inject,\n        args: [NgControl]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i1.TuiModeDirective,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TuiModeDirective]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TUI_TOGGLE_OPTIONS]\n      }]\n    }];\n  }, {\n    focusableElement: [{\n      type: ViewChild,\n      args: ['focusableElement']\n    }],\n    singleColor: [{\n      type: Input\n    }],\n    showIcons: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.data-size']\n    }],\n    hostMode: [{\n      type: HostBinding,\n      args: ['attr.data-mode']\n    }]\n  });\n})();\nclass TuiToggleModule {}\nTuiToggleModule.ɵfac = function TuiToggleModule_Factory(t) {\n  return new (t || TuiToggleModule)();\n};\nTuiToggleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TuiToggleModule\n});\nTuiToggleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TuiFocusedModule, TuiFocusableModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule, TuiWrapperModule, TuiSvgModule, TuiLoaderModule, PolymorpheusModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiToggleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiFocusedModule, TuiFocusableModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule, TuiWrapperModule, TuiSvgModule, TuiLoaderModule, PolymorpheusModule],\n      declarations: [TuiToggleComponent],\n      exports: [TuiToggleComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_TOGGLE_DEFAULT_OPTIONS, TUI_TOGGLE_OPTIONS, TuiToggleComponent, TuiToggleModule, tuiToggleOptionsProvider };","map":{"version":3,"names":["__decorate","i0","InjectionToken","ChangeDetectorRef","Component","ChangeDetectionStrategy","Optional","Self","Inject","ViewChild","Input","HostBinding","NgModule","i5","NgControl","i4","AbstractTuiControl","tuiIsNativeFocused","tuiAsFocusableItemAccessor","tuiAsControl","tuiDefaultProp","TuiFocusedModule","TuiFocusableModule","TuiPressedModule","TuiFocusVisibleModule","TuiCheckedModule","i1","TuiModeDirective","TuiWrapperModule","TuiSvgModule","TuiLoaderModule","i2","CommonModule","i3","PolymorpheusModule","TUI_TOGGLE_DEFAULT_OPTIONS","icons","toggleOff","$implicit","toggleOn","singleColor","showIcons","size","TUI_TOGGLE_OPTIONS","factory","tuiToggleOptionsProvider","options","provide","useValue","Object","assign","TuiToggleComponent","constructor","control","cdr","modeDirective","showLoader","iconOn","iconOff","nativeFocusableElement","focusableElement","nativeElement","focused","appearance","value","sizeM","loaderSize","hostMode","mode","onChecked","checked","onFocused","updateFocused","onFocusVisible","focusVisible","updateFocusVisible","getFallbackValue","ɵfac","ɵcmp","TuiLoaderComponent","TuiSvgComponent","TuiWrapperDirective","NgIf","PolymorpheusOutletDirective","TuiCheckedDirective","TuiFocusableDirective","TuiFocusedDirective","TuiFocusVisibleDirective","prototype","type","args","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","host","decorators","undefined","TuiToggleModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/denis/PycharmProjects/example_project/frontend/node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-toggle.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i4 from '@taiga-ui/cdk';\nimport { AbstractTuiControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, tuiDefaultProp, TuiFocusedModule, TuiFocusableModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TuiModeDirective, TuiWrapperModule, TuiSvgModule, TuiLoaderModule } from '@taiga-ui/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n\n/** Default values for the toggle options. */\nconst TUI_TOGGLE_DEFAULT_OPTIONS = {\n    icons: {\n        toggleOff({ $implicit }) {\n            return $implicit === `m` ? `tuiIconToggleOff` : `tuiIconToggleOffLarge`;\n        },\n        toggleOn({ $implicit }) {\n            return $implicit === `m` ? `tuiIconToggleOn` : `tuiIconToggleOnLarge`;\n        },\n    },\n    singleColor: false,\n    showIcons: false,\n    size: `m`,\n};\n/**\n * Default parameters for Toggle component\n */\nconst TUI_TOGGLE_OPTIONS = new InjectionToken(`[TUI_TOGGLE_OPTIONS]`, {\n    factory: () => TUI_TOGGLE_DEFAULT_OPTIONS,\n});\nconst tuiToggleOptionsProvider = (options) => ({\n    provide: TUI_TOGGLE_OPTIONS,\n    useValue: Object.assign(Object.assign({}, TUI_TOGGLE_DEFAULT_OPTIONS), options),\n});\n\nclass TuiToggleComponent extends AbstractTuiControl {\n    constructor(control, cdr, modeDirective, options) {\n        super(control, cdr);\n        this.modeDirective = modeDirective;\n        this.options = options;\n        this.singleColor = this.options.singleColor;\n        this.showIcons = this.options.showIcons;\n        this.showLoader = false;\n        this.size = this.options.size;\n    }\n    get iconOn() {\n        return this.options.icons.toggleOn;\n    }\n    get iconOff() {\n        return this.options.icons.toggleOff;\n    }\n    get nativeFocusableElement() {\n        return this.focusableElement ? this.focusableElement.nativeElement : null;\n    }\n    get focused() {\n        return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get appearance() {\n        return this.singleColor || this.value\n            ? \"primary\" /* Primary */\n            : \"secondary\" /* Secondary */;\n    }\n    get sizeM() {\n        return this.size === 'm';\n    }\n    get loaderSize() {\n        return this.sizeM ? 'xs' : 's';\n    }\n    get hostMode() {\n        return this.modeDirective ? this.modeDirective.mode : null;\n    }\n    /** @deprecated use 'value' setter */\n    onChecked(checked) {\n        this.value = checked;\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n    }\n    onFocusVisible(focusVisible) {\n        this.updateFocusVisible(focusVisible);\n    }\n    getFallbackValue() {\n        return false;\n    }\n}\nTuiToggleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiToggleComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TuiModeDirective, optional: true }, { token: TUI_TOGGLE_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nTuiToggleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TuiToggleComponent, selector: \"tui-toggle\", inputs: { singleColor: \"singleColor\", showIcons: \"showIcons\", showLoader: \"showLoader\", size: \"size\" }, host: { properties: { \"class._checked\": \"value\", \"attr.data-size\": \"this.size\", \"attr.data-mode\": \"this.hostMode\" } }, providers: [\n        tuiAsFocusableItemAccessor(TuiToggleComponent),\n        tuiAsControl(TuiToggleComponent),\n    ], viewQueries: [{ propertyName: \"focusableElement\", first: true, predicate: [\"focusableElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n    tuiWrapper\\n    [appearance]=\\\"appearance\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [focus]=\\\"computedFocusVisible\\\"\\n    [hover]=\\\"pseudoHover\\\"\\n    [active]=\\\"pseudoActive\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n>\\n    <div class=\\\"t-toggle\\\">\\n        <tui-loader\\n            *ngIf=\\\"showLoader\\\"\\n            class=\\\"t-loader\\\"\\n            [size]=\\\"loaderSize\\\"\\n            [inheritColor]=\\\"true\\\"\\n            [showLoader]=\\\"value\\\"\\n        ></tui-loader>\\n        <span\\n            *ngIf=\\\"showIcons && !showLoader\\\"\\n            class=\\\"t-icon-wrapper\\\"\\n        >\\n            <tui-svg\\n                *polymorpheusOutlet=\\\"iconOn as src; context: {$implicit: size}\\\"\\n                automation-id=\\\"tui-toggle__check-icon\\\"\\n                class=\\\"t-icon\\\"\\n                [src]=\\\"src\\\"\\n            ></tui-svg>\\n        </span>\\n        <div class=\\\"t-circle\\\"></div>\\n        <tui-loader\\n            *ngIf=\\\"showLoader\\\"\\n            class=\\\"t-loader\\\"\\n            [size]=\\\"loaderSize\\\"\\n            [inheritColor]=\\\"true\\\"\\n            [showLoader]=\\\"!value\\\"\\n        ></tui-loader>\\n        <span\\n            *ngIf=\\\"showIcons && !showLoader\\\"\\n            class=\\\"t-icon-wrapper\\\"\\n        >\\n            <tui-svg\\n                *polymorpheusOutlet=\\\"iconOff as src; context: {$implicit: size}\\\"\\n                automation-id=\\\"tui-toggle__cancel-icon\\\"\\n                class=\\\"t-icon t-icon_off\\\"\\n                [src]=\\\"src\\\"\\n            ></tui-svg>\\n        </span>\\n    </div>\\n    <input\\n        #focusableElement\\n        type=\\\"checkbox\\\"\\n        role=\\\"switch\\\"\\n        automation-id=\\\"tui-toggle__checkbox\\\"\\n        class=\\\"t-checkbox\\\"\\n        [attr.aria-checked]=\\\"value\\\"\\n        [id]=\\\"id\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tuiFocusable]=\\\"focusable\\\"\\n        [(tuiChecked)]=\\\"value\\\"\\n        (tuiFocusedChange)=\\\"onFocused($event)\\\"\\n        (tuiFocusVisibleChange)=\\\"onFocusVisible($event)\\\"\\n    />\\n</div>\\n\", styles: [\":host{position:relative;display:inline-block;vertical-align:middle;overflow:hidden;border-radius:6.25rem}:host[data-size=m]{width:2rem;height:1rem}:host[data-size=l]{width:3rem;height:1.5rem}.t-checkbox{padding:0;margin:0;border:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer}.t-checkbox:-webkit-autofill,.t-checkbox:-webkit-autofill:hover,.t-checkbox:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}:host._disabled .t-checkbox{pointer-events:none;cursor:default}.t-toggle{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;align-items:center;justify-content:center}:host[data-size=m] .t-toggle{width:3rem;height:1rem;transform:translate(-1rem)}:host[data-size=l] .t-toggle{width:4.5rem;height:1.5rem;transform:translate(-1.5rem)}:host._checked .t-toggle{transform:translate(0)}.t-circle{margin:.125rem 0;flex-shrink:0;border-radius:100%;background-color:var(--tui-base-01)}:host._disabled .t-circle_light{opacity:.24}:host[data-size=m] .t-circle{width:.75rem;height:.75rem}:host[data-size=l] .t-circle{width:1rem;height:1rem}:host._disabled .t-circle{background-color:var(--tui-base-01)}:host:not(._checked) .t-loader{color:var(--tui-base-06)}:host:not(._checked)._disabled .t-loader{color:var(--tui-base-05)}:host:not(._checked)[data-mode=onDark] .t-loader{color:var(--tui-text-03-night)}:host:not(._checked)[data-mode=onDark]._disabled .t-loader{color:var(--tui-clear-inverse-active)}:host:not(._checked)[data-mode=onLight] .t-loader{color:var(--tui-text-03)}:host:not(._checked)[data-mode=onLight]._disabled .t-loader{color:var(--tui-clear-active)}:host[data-size=m] .t-loader{width:.75rem;margin:0 .2rem;transform:scale(.75)}:host[data-size=l] .t-loader{width:1rem;margin:0 .25rem}.t-icon-wrapper{display:flex}.t-icon{opacity:.8}.t-icon_off{color:var(--tui-base-06)}:host._disabled .t-icon_off{color:var(--tui-base-05)}:host[data-mode=onDark] .t-icon_off{color:var(--tui-text-03-night)}:host[data-mode=onDark]._disabled .t-icon_off{color:var(--tui-clear-inverse-active)}:host[data-mode=onLight] .t-icon_off{color:var(--tui-text-03)}:host[data-mode=onLight]._disabled .t-icon_off{color:var(--tui-clear-active)}:host[data-size=m] .t-icon{width:1rem;height:1rem;transform:scale(.75)}:host[data-size=l] .t-icon{margin:0 .125rem;width:1.5rem;height:1.5rem}:host:hover .t-icon{opacity:1}\\n\"], components: [{ type: i1.TuiLoaderComponent, selector: \"tui-loader\", inputs: [\"size\", \"inheritColor\", \"overlay\", \"textContent\", \"showLoader\"] }, { type: i1.TuiSvgComponent, selector: \"tui-svg\", inputs: [\"src\"] }], directives: [{ type: i1.TuiWrapperDirective, selector: \"[tuiWrapper]\", inputs: [\"disabled\", \"readOnly\", \"hover\", \"active\", \"focus\", \"invalid\", \"appearance\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.PolymorpheusOutletDirective, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { type: i4.TuiCheckedDirective, selector: \"input[tuiChecked], input[tuiCheckedChange]\", inputs: [\"tuiChecked\"], outputs: [\"tuiCheckedChange\"] }, { type: i4.TuiFocusableDirective, selector: \"[tuiFocusable]\", inputs: [\"tuiFocusable\"] }, { type: i4.TuiFocusedDirective, selector: \"[tuiFocusedChange]\", outputs: [\"tuiFocusedChange\"] }, { type: i4.TuiFocusVisibleDirective, selector: \"[tuiFocusVisibleChange]\", outputs: [\"tuiFocusVisibleChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    tuiDefaultProp()\n], TuiToggleComponent.prototype, \"singleColor\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiToggleComponent.prototype, \"showIcons\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiToggleComponent.prototype, \"showLoader\", void 0);\n__decorate([\n    tuiDefaultProp()\n], TuiToggleComponent.prototype, \"size\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiToggleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tui-toggle',\n                    templateUrl: './toggle.template.html',\n                    styleUrls: ['./toggle.style.less'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiAsFocusableItemAccessor(TuiToggleComponent),\n                        tuiAsControl(TuiToggleComponent),\n                    ],\n                    host: { '[class._checked]': 'value' },\n                }]\n        }], ctorParameters: function () { return [{ type: i5.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NgControl]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i1.TuiModeDirective, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TuiModeDirective]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TUI_TOGGLE_OPTIONS]\n                }] }]; }, propDecorators: { focusableElement: [{\n                type: ViewChild,\n                args: ['focusableElement']\n            }], singleColor: [{\n                type: Input\n            }], showIcons: [{\n                type: Input\n            }], showLoader: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['attr.data-size']\n            }], hostMode: [{\n                type: HostBinding,\n                args: ['attr.data-mode']\n            }] } });\n\nclass TuiToggleModule {\n}\nTuiToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTuiToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiToggleModule, declarations: [TuiToggleComponent], imports: [CommonModule,\n        TuiFocusedModule,\n        TuiFocusableModule,\n        TuiPressedModule,\n        TuiFocusVisibleModule,\n        TuiCheckedModule,\n        TuiWrapperModule,\n        TuiSvgModule,\n        TuiLoaderModule,\n        PolymorpheusModule], exports: [TuiToggleComponent] });\nTuiToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiToggleModule, imports: [[\n            CommonModule,\n            TuiFocusedModule,\n            TuiFocusableModule,\n            TuiPressedModule,\n            TuiFocusVisibleModule,\n            TuiCheckedModule,\n            TuiWrapperModule,\n            TuiSvgModule,\n            TuiLoaderModule,\n            PolymorpheusModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TuiToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TuiFocusedModule,\n                        TuiFocusableModule,\n                        TuiPressedModule,\n                        TuiFocusVisibleModule,\n                        TuiCheckedModule,\n                        TuiWrapperModule,\n                        TuiSvgModule,\n                        TuiLoaderModule,\n                        PolymorpheusModule,\n                    ],\n                    declarations: [TuiToggleComponent],\n                    exports: [TuiToggleComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_TOGGLE_DEFAULT_OPTIONS, TUI_TOGGLE_OPTIONS, TuiToggleComponent, TuiToggleModule, tuiToggleOptionsProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}